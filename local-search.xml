<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>人工智能基础 | 机器学习入门：Python机器学习算法基础</title>
    <link href="/post/bc418503/"/>
    <url>/post/bc418503/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>讲的很不错，还简单的分析了一下源码，很有收获</p><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=1">P1. 1 人工智能概述</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=2">P2. 2 人工智能发展历程</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=3">P3. 3 人工智能主要分支</a><br><img src="https://image.glwsq.cn/img/202210032253805.png"></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=4">P4. 4 人工智能必备三要素</a></p><ul><li>三要素：数据、算法、计算力</li><li>gpu-计算密集型，cpu-IO密集型</li></ul></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=5">P5. 5 人工智能工作流程概述</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=6">P6. 6 数据集的介绍.</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=7">P7. 7 特征工程介绍</a></p><ul><li>特征工程：把我们的数据转换成机器更容易识别的东西</li></ul></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=8">P8. 8 机器学习算法分类</a></p><ul><li>监督学习<ul><li>定义：输入数据是由输入特征值和目标值所组成的<ul><li>函数的输出可以是一个连续的值（成为回归）</li><li>输出的是有限个离散值（成为分类）</li></ul></li><li>回归问题<ul><li>预测放假</li></ul></li><li>分类问题<ul><li>预测肿瘤是良性的还是劣性的</li></ul></li></ul></li><li>无监督学习<ul><li>定义：输入数据有特征值没有目标值也就是标签</li></ul></li><li>监督学习和无监督的区别<ul><li><img src="https://image.glwsq.cn/img/202210041601727.png"></li></ul></li><li>半监督学习<ul><li>定义：训练集同时包含有标记样本和未标记样本数据</li></ul></li><li>强化学习<ul><li>定义：动态过程，上一步护具的输出是下一步数据的输入</li><li>四要素：agent，action，environment，Reward</li><li><img src="https://image.glwsq.cn/img/202210041606926.png"></li><li><img src="https://image.glwsq.cn/img/202210041607916.png"></li></ul></li></ul></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=9">P9. 9 分类模型评估介绍</a></p><ul><li>准确率<ul><li>预测正确的数占样本总数的比例</li></ul></li><li>精确率<ul><li>正确预测为正占全部预测为正的比例</li></ul></li><li>召回率<ul><li>正确预测为正占全部正样本的比例</li></ul></li><li>F1-score<ul><li>主要用于评估模型的稳健性</li></ul></li><li>AUC指标<ul><li>主要用于评估样本不均衡的情况</li></ul></li></ul></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=10">P10. 10 回归模型评估和拟合问题</a></p><ul><li>均方根误差（Root Mean Squared Error， RMSE）</li><li>相对平方误差（Relative Squared Error， RSE）</li><li>平均绝对误差（Mean Absolute Error， MAE）</li><li>相对绝对误差（Relative Absolute Error, RAE）</li><li>决定系数（Coefficient of Determination）</li><li>拟合<ul><li>过拟合</li><li>欠拟合</li></ul></li></ul></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=11">P11. 11 azure平台实验演示</a></p><ul><li>这个演示还是很好的，能整体把握一下机器学习能干什么</li></ul></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=12">P12. 12 深度学习简介</a></p><ul><li><a href="https://playground.tensorflow.org/">https://playground.tensorflow.org/</a></li><li>什么叫深度学习：就是神经元的层数和节点数不断的增加</li></ul></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=13">P13. 1 机器学习基础环境库的安装</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=14">P14. 2 jupyter基本使用介绍</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=15">P15. 3 jupytermarkdown功能演示</a></p><ul><li>讲的很详细</li></ul></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=16">P16. 1 matplotlin基本简介</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=17">P17. 2 基础绘图功能演示 图像保存 xy轴刻度 添加网格</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=18">P18. 3 多次plot和显示图例</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=19">P19. 4 多个坐标系显示图像</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=20">P20. 5 折线图的应用场景</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=21">P21. 6 今日总结</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=22">P22. 1 昨日复习</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=23">P23. 2 常见图形绘制</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=24">P24. 3 numpy基本介绍</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=25">P25. 4 ndarray介绍</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=26">P26. 5 生成数组</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=27">P27. 6 正态分布和均匀分布</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=28">P28. 7 切片和形状修改</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=29">P29. 8 类型修改和数组去重</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=30">P30. 9 ndarray运算</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=31">P31. 10 矩阵介绍（一）</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=32">P32. 11 矩阵介绍（二）</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=33">P33. 12 数组间运算</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=34">P34. 1 pandas介绍和DataFrame使用</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=35">P35. 2.案例_电影数据分析2.ev4</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=36">P36. 2.索引操作.ev4</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=37">P37. 3 今日总结</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=38">P38. 4 昨日复习</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=39">P39. 5 索引操作</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=40">P40. 6 赋值和排序</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=41">P41. 7 算术运算和逻辑运算</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=42">P42. 8 统计运算</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=43">P43. 9 自定义函数运算</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=44">P44. 10 pandas画图</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=45">P45. 11 csv文件读取和存储</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=46">P46. 12 hdf,json数据的读取和存储</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=47">P47. 13 缺失值的判断</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=48">P48. 14 缺失值删除和替换</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=49">P49. 15 缺失值不是NaN的处理情况</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=50">P50. 16 数据离散化</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=51">P51. 17 数据合并</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=52">P52. 18 交叉表和透视表</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=53">P53. 19 分组和聚合</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=54">P54. 20 今日总结</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=55">P55. 21 科学计算库三天内容复习</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=56">P56. 22 电影数据分析案例</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=57">P57. 23 昨日复习</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=58">P58. 24 案例-电影数据分析</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=59">P59. 1 k近邻算法简介</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=60">P60. 2 k近邻算的初步使用</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=61">P61. 3 距离度量（一）</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=62">P62. 4 距离度量（二）</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=63">P63. 5 距离度量（三）</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=64">P64. 6 k值的选择</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=65">P65. 7 kd树构造</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=66">P66. 8 kd树搜索(2.1,3.1)</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=67">P67. 9 kd树搜索(2,4.5)</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=68">P68. 10 数据集介绍</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=69">P69. 11 鸢尾花数据可视化</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=70">P70. 12 数据集划分</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=71">P71. 13 特征预处理</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=72">P72. 14 鸢尾花案例实现</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=73">P73. 15 今日总结</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=74">P74. 16 昨日复习</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=75">P75. 17 knn算法总结</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=76">P76. 18 交叉验证</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=77">P77. 19 网格搜索</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=78">P78. 20 facebook案例预测流程分析</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=79">P79. 1 线性回归简介</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=80">P80. 2 线性回归api初步使用</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=81">P81. 3 数学求导复习（一）</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=82">P82. 4 数学求导复习（二）</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=83">P83. 5 线性回归损失和正规方程推导（一）</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=84">P84. 6 正规方程推导（二）</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=85">P85. 1 梯度下降法初步简介</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=86">P86. 2 梯度下降法介绍</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=87">P87. 3 正规方程api使用</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=88">P88. 4 今日总结</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=89">P89. 5 昨日复习</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=90">P90. 6 梯度下降法案例介绍</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=91">P91. 1 欠拟合过拟合简介</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=92">P92. 2 岭回归和lasso回归</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=93">P93. 3 弹性网络和early stopping</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=94">P94. 4 岭回归案例实现</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=95">P95. 5 模型保存和加载</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=96">P96. 1 逻辑回归介绍</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=97">P97. 2 逻辑回归案例实现</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=98">P98. 3 精确率和召回率介绍</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=99">P99. 4 精确率和召回率api实现</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=100">P100. 5 roc和auc案例实现</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=101">P101. 6 roc曲线绘制（一）</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=102">P102. 7 roc曲线绘制（二）</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=103">P103. 8 roc曲线绘制（三）</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=104">P104. 1 决策树算法简介</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=105">P105. 2 信息熵的介绍</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=106">P106. 3 今日总结</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=107">P107. 4 昨日复习</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=108">P108. 5 信息增益（一）</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=109">P109. 6 信息增益（二）</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=110">P110. 7 信息增益比</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=111">P111. 8 基尼增益（一）</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=112">P112. 9 基尼增益（二）</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=113">P113. 10 cart剪枝介绍</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=114">P114. 11 特征提取介绍和字典特征提取</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=115">P115. 12 英文文本特征提取</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=116">P116. 13 中文文本特征提取</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=117">P117. 14 tfidf介绍</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=118">P118. 15 决策树api介绍</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=119">P119. 16 决策树案例实现</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=120">P120. 17 决策树可视化</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=121">P121. 1 集成学习介绍</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=122">P122. 2 bagging集成过程简介</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=123">P123. 3 随机森林介绍</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=124">P124. 4 今日总结</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=125">P125. 5 昨日复习</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=126">P126. 6 boosting实现流程分析</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=127">P127. 7 bagging和boosting对比</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=128">P128. 8 GBDT介绍</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=129">P129. 9 XGBoost介绍</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=130">P130. 1 聚类算法简介</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=131">P131. 2 聚类算法api初步使用</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=132">P132. 3 聚类算法实现流程简介</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=133">P133. 4 聚类算法实现流程案例介绍</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=134">P134. 5 模型评估</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=135">P135. 6 算法优化（一）</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=136">P136. 7 算法优化（二）</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=137">P137. 8 特征降维介绍和地低方差特征过滤</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=138">P138. 9 相关系数介绍</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=139">P139. 10 pca降维</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=140">P140. 11 案例-探究用户对物品类别喜好</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=141">P141. 12 今日总结</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=142">P142. 13 机器学习阶段整体内容复习</a></p></li><li><p><a href="https://www.bilibili.com/video/BV1824y1Z7B1?p=143">P143. 14 pubg项目竞赛说明</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>英语短文入门200篇</title>
    <link href="/post/cd6df654/"/>
    <url>/post/cd6df654/</url>
    
    <content type="html"><![CDATA[<p>200<br>Some people stood on the small pier. They saw a boat approach. The boat was approaching fast. The boat was approaching the small pier. Was the boat going to stop? People started running. They started running off the pier. They were worried. They were worried about the boat. The boat kept coming. It didn’t slow down. One man stood on the pier. He didn’t run. He yelled at the boat. He waved his arms. He yelled, “Stop! Stop! You’re going to crash!” But the boat didn’t stop. It kept coming. The man kept yelling. The boat kept coming. Is the driver drunk, the man wondered. He ran as fast as he could. He ran off the pier. The boat crashed into the pier.<br>一些人站在小码头。他们看到一条船靠近。该船即将快速来临。该艇驶近小码头。船会停下来吗？人们开始奔跑。他们开始逃离码头。他们担心。他们担心船。船保持靠近。它并没有放慢。一名男子站在码头。他没有跑。他冲向船。他挥舞着双臂。他喊道：“住手！ 停止！你要撞上了！”但船上没有停止。它不断靠近。该男子不停地吆喝着。船不断靠近。是司机喝醉了，那人想。他尽可能的跑快。他逃离了码头。船撞进码头。</p><p>199<br>He dropped his toothbrush. It fell on the floor. He picked up his toothbrush. He rinsed it off. He brushed his teeth. He rinsed his mouth. He walked out of the bathroom. He sat on his bed. He felt something. It was under the sheet. He took the sheet off the bed. Something was in his mattress. It was a brand new mattress. He had bought it yesterday. What is in the mattress, he wondered. He went to the kitchen. He took a knife from the kitchen drawer. He cut open the mattress. What could it be, he wondered. It was small. It was black. It was a book. It was the New Testament. Is God trying to tell me something, he wondered.<br>他掉了他的牙刷。它摔在地板上。他拿起牙刷。他冲洗它。他刷了牙。他清洗他的嘴。他走出浴室。他坐在自己的床上。他感觉到了什么。它在被单下面。他把被单从床上拿开。有什么东西在他的床垫里。这是一个全新的床垫。他昨天买的它。什么在床垫里，他不知道。他去了厨房。他从厨房的抽屉里拿了一把刀。他剖开的床垫。 可能是什么，他在想。它是小的。它是黑色的。这是一本书。它是新约全书。是上帝想告诉我什么，他在想。</p><p>198<br>He called up the post office. “Where is my package?” he asked. “What is the tracking number?” the postal worker asked. He told her the tracking number. She said, “Your package is at the main post office. You can pick it up anytime.” He said, “I don’t want to pick it up. Can you deliver it?” She said yes. “We will deliver it on Monday,” she said. “Will you be home?” He said, “What time on Monday?” She said, “Anytime between 8 a.m. and 5 p.m.” He said, “I have to work. I can’t stay home all day.” She said, “That’s okay. We can deliver it on Tuesday.” He said, “I have to work on Tuesday, too. Please deliver it on Saturday.”<br>他打电话给邮局。“我的包裹在哪里?”他问道。“什么是跟踪号码吗?”邮政工人问。他告诉她的跟踪号码。她说,“你的包裹在主要邮局。你可以随时把它取回去。”他说,“我不想把它取回来。你能送它吗?她说,是的。“我们将在周一送。”她说。”“你会在家吗?”他说,“周一什么时候?”她说,“在上午8点到下午5点。”他说,“我得工作。我不能整天呆在家里。”她说,“没关系。我们可以周二送。”他说:“我周二必须工作。请周六送。”</p><p>197<br>He couldn’t find his pen. Where is my pen, he wondered. He looked for his pen. It was on top of the microwave. He couldn’t find his cell phone. Where is my cell phone, he wondered. He looked for his cell phone. It was on top of the TV. He couldn’t find his glasses. Where are my glasses, he wondered. He looked for his glasses. They were on top of his head. I’m tired of looking for everything, he thought. He invented a tiny video recorder. It recorded everything he did. It recorded everywhere he went. He couldn’t find his toothbrush. Where is my toothbrush, he wondered. He played his tiny video recorder. He found his toothbrush. He didn’t have to look for it.<br>他找不到他的钢笔。我的钢笔在哪里,他不知道。他寻找他的钢笔。他在微波炉上面。他找不到他的手机。我的手机在哪里,他不知道。他找他的手机。它在电视上面。他不能找到他的眼镜。我的眼镜在哪里,他不知道。他寻找他的眼镜。他在他的头上。我厌倦了寻找一切,他想。他发明了一种微型录像机。它记录了他所做的一切。它所到之处都记录下来。他找不到他的牙刷。我的牙刷在哪里,他不知道。他打开微型录像机。他发现他的牙刷。他没有一定去寻找它。</p><p>196<br>The days were hot. The nights were hot. He turned on the living room fan. He turned on the dining room fan. Both fans were on high speed. They made a lot of noise. But they didn’t blow cool air. They blew hot air. They blew hot air everywhere. He turned off the fans. He turned on the air conditioner. He closed all the windows. He closed the front door. The apartment began to cool down. It got cooler and cooler. Then he heard a bang. It was a loud bang. He thought a plane had crashed onto the roof. But it wasn’t a plane. It was the air conditioner compressor. It had broken down. He opened the door. He opened the windows.<br>天是热的。晚上都热。他打开了客厅的风扇。他打开了餐厅的风扇。所有的风扇都在高速运作。他们发出很大的噪音。但是他们没有吹凉风。他们吹热气。他们吹的热空气无处不在。他关掉风扇。他打开了空调。 他关闭了所有的窗口。他关上了前门。公寓开始降温。它更凉快，更凉快。然后他听到砰的一声。这是一声巨响。他认为一架飞机坠毁在屋顶上。但是不是一个飞机。这是空调压缩机。它坏了。他打开了门。他打开窗户。</p><p>195<br>His laptop sat on his desk. His laptop always overheated. It always overheated quickly. How could he keep it cool? He turned on his living room fan. It cooled his laptop. But the fan blew dust around. It blew paper around. He turned off his living room fan. He thought. He thought some more. How could he keep his laptop cool? He had an idea. He bought little plastic blocks. Each block was one inch square. He put the laptop on top of the blocks. One block was under each corner of the laptop. Now the laptop sat a little above the desk. There was space under the laptop. There was space for cool air to flow. The cool air prevented overheating.<br>他的笔记本电脑在他的办公桌上。他的笔记本电脑总是过热。它总是很快就热了。怎么能保持他凉呢?他打开客厅的风扇。它吹着他的笔记本电脑。但风扇吹得到处是灰尘。它吹得到处是纸。他关掉了客厅的风扇。他想，他想了好多。怎么能使他的笔记本电脑降温呢?他有了一个主意。他买了小塑料块。每一块是一英寸。他把笔记本放在塑料块上。一个塑料块在笔记本电脑的一个脚上。 现在笔记本电脑上坐着一个小桌子上。笔记本电脑下面有了空间。空气在空间中流动。凉爽的空气防止过热。<br>194<br>Alex wanted to become a citizen. He signed up for a citizenship class. He went to the first class. The teacher spoke only Spanish. All the other students spoke only Spanish. Alex spoke Spanish, too. He asked the teacher, “Why are you speaking Spanish? We need to speak English. We need to understand English. We need to read English. We need to write English.” The teacher said, “Don’t worry. English isn’t important anymore. My students never fail the interview. Can you say Yes in English? Can you say No in English? Then your English is good enough. You want to become a citizen. That is more important than your English.” Alex dropped out. He signed up for another citizenship class. The teacher spoke only English.<br>亚历克斯想成为公民。他报名参加了一个公民课。他去了第一节课。老师只讲西班牙语。所有其他的学生只会说西班牙语。亚历克斯也说西班牙语。他问老师,你为什么说西班牙语吗?我们需要讲英语。我们需要懂英语。 我们需要读英语。我们需要写英语。老师说,别担心。英语并不重要了。我的学生从不会在面试中失败。你可以用英语说是吗?你能用英语说“不”吗?那么你的英语就足够好了。你想成为公民。这是比你的英语更重要。亚历克斯辍学。他报名了另一个公民班。老师只讲英语。<br>193<br>The man walked into a bank. He wore a hoody. He wore gloves. It was summertime. It was hot outside. No one else was wearing a hoody. No one else was wearing gloves. The bank guard looked at the man. “Why are you wearing a hoody?” the bank guard asked. “Why are you wearing gloves?” The man said he had a disease. He had a contagious disease. He coughed. He coughed again. The bank guard backed away. He did not want to get a disease. He stopped watching the man. He watched other people enter the bank. He forgot about the man with the contagious disease. A few minutes later, the man ran out of the bank. He was carrying a money bag.<br>那人走进了银行。他穿着一套头衫。他戴手套。 这是夏季。外面很热。没有其他的人穿着一套头衫。没有其他的人戴着手套。银行保安看着那个男人。“你为什么穿套头衫?”银行保安问道。 “你为什么戴手套?”那人说他病了。他有一种传染性疾病。 他咳嗽。他又咳嗽。银行保安后退走开了。 他不想得到疾病。他停止看这个人。他看着别人进入银行。他忘记了传染性疾病的人。 几分钟后,那人跑出了银行。他带着装钱的袋子。<br>192</p><p>The police chief said CRIme was down. “CRIme is down,” said police chief Braddon. He talked to TV reporters. He talked to newspaper reporters. He talked to radio reporters. He was proud. “I’m proud,” he said. “Our police are doing a good job. I’m proud of our police.” He said CRIme was down 50 percent. “What kinds of crime?” asked a reporter. “All kinds of crime,” said Braddon. “Bicycle theft is down 60 percent. Cell phone theft is down 55 percent. Computer theft is down 50 percent.” He didn’t say anything about other crimes. “What about other crimes?” asked a reporter. “What other crimes?” asked Braddon. “You should be happy with this news. Report it to the public. The public will be happy, too.”<br>警察局长说犯罪下降了。“犯罪在下降，”警察局长布拉德说。他跟电视记者说。他跟报纸记者说。他对电台记者说。他感到自豪。“我感到自豪,”他说。我们的警察正在做一份好工作。 我为我们的警察感到骄傲。他说犯罪下降了50%。“什么类型的犯罪?”记者问。 “各种各样的犯罪,”位于说。自行车盗窃是下降了60%。手机盗窃是下降了55%。计算机盗窃是下降了50%。他没有说任何关于其他罪行。 “其他罪行呢?”记者问。“其他罪行什么?”布拉德问道。 你应该满意这个消息。 向公众报告。公众会很高兴。<br>191<br>“I’m not coming to this art fair again,” said Molly. “Why aren’t you coming to this art fair again?” asked Teri. “There aren’t enough visitors,” Molly said. “That’s for sure,” said Teri. “There aren’t enough visitors spending money.” “That’s for sure,” said Molly. Visitors stopped and looked at Molly’s paintings. Visitors stopped and looked at Teri’s paintings. Visitors said Molly’s paintings were very nice. Visitors said Teri’s paintings were very nice. But no one bought anything. “No one buys anything,” said Molly. “They stop. They look. They say, ‘Oh, how pretty.’ Then they walk on.” Molly and Teri had not sold one painting. They lowered their prices. They put “Sale! 50% Off!” tags on all their paintings. But no one bought a single painting.<br>“我不会再来这艺术博览会,”莫利说。“你为什么不再来这个艺术博览会了?”泰瑞问道。“没有足够的游客,”莫利说。 “那是肯定的,”泰瑞说。“没有足够的游客花钱。” “那是肯定的,”莫利说。游客停下来看着莫莉的绘画。游客停下来看着泰瑞的绘画。游客说,莫莉的画非常好。游客说泰瑞的画非常好。但是没有人买任何东西。“没有人购买任何东西,”莫利说。“他们停止。他们看起来。他们说,‘哦,真漂亮。然后他们走。”莫莉,泰瑞没有卖出一幅画。他们降低了价格。他们把“出售50% !”标签在所有他们的画作上。但是没有人买一幅画。<br>190<br>It was time for the annual blood drive. He told his girlfriend, “I’m going to give blood tomorrow.” She said, “Don’t do that. You could get a disease.” He asked, “I could get a disease? How could I get a disease?” She said, “You never know. What if a nurse trips and stabs you with a dirty needle?” He said that was ridiculous. Nurses don’t trip. Nurses don’t stab blood donors with dirty needles. He went to the blood drive the next day. He watched the nurses carefully. None of them tripped. None of them stabbed a blood donor with a dirty needle. He gave blood. He told his girlfriend that no one had tripped and stabbed him. She said he was lucky this time.<br>这是年度献血运动的时间。他对他的女朋友说:“我明天去献血。”她说,“不要这样做。你会得一种疾病。”他问:“我可以得一种疾病?我怎么能得一种疾病?”她说,你永远不会知道的。比如护士犯错以及刺穿你用脏的针头?他说这是荒谬的。护士不会弄错。护士不会用肮脏的针头刺伤献血者。第二天他去了献血运动。他仔细地看着护士。没有一个人犯错。没有人用脏的针头刺伤一个献血者。他献了血。他告诉他的女朋友,没有人犯错刺伤他。她说他这次是幸运的。<br>189<br>He stopped at the motel. It was late at night. It was almost midnight. He asked the motel clerk, “Do you have a vacant room?” She said she had a vacant room. He asked how much it was. She said it was $100 for the night. “But the night is half over,” he said. “Can I pay half price for the room?” She said yes. “But there is one condition,” she said. “If we only get half, you only get half. You must sleep on only one-half of the bed. You can use only one of the two pillows. The bathroom has hot and cold water faucets. You can use only one faucet. The cable TV has 100 channels. You can watch only 50 channels.”<br>他停在旅馆。这是深夜。 它几乎是午夜了。他问旅馆的售货员,“你有空房吗?”她说她有一个空房间。他问多少钱。她说一晚上是100美元。“但是晚上还剩下一半,”他说。“我可以支付一半价格的房间吗?”她说可以。“但有一个条件,”她说。如果我们只得到一半,你只有一半。你必须睡在只有一半的床上。您可以使用两个枕头中的一个。浴室有冷热水龙头。您可以使用一个水龙头。有线电视有100个频道。你只能看到50频道。<br>188<br>Brad was angry. He was angry at the apartment building manager. The apartment building manager had kicked him out. “If you can’t pay the rent,” the manager said, “I have to kick you out.” “But I always pay the rent on time,” Brad said. “That’s nice, but you’re supposed to always pay the rent on time,” said the manager. One evening Brad drove to the gas station. He bought a gallon of gas. He put the gas into a gas can. He waited until 11 p.m. The manager lived in a corner apartment. His apartment was on the ground floor. Brad waited until the manager’s lights went out. He poured all the gas in the hall near the manager’s door. He lit a match.<br>布拉德很生气。他对公寓经理很生气。公寓经理把他踢了出去。“如果你付不出房租，”经理说，“我就会把你赶出去。”“但是我一直按时付房租，”布拉德说。“这很好,但你应该总是按时支付租金,”经理说。一天晚上布拉德开车到了加油站。他买了一升汽油。他把汽油放进油罐里。他一直等到晚上11点。 经理住在公寓的角落里。他的房间在一楼。布拉德一直等到经理的灯关掉。他把所有的汽油倒在经理房间附近的大厅里。他点燃了一根火柴。<br>187<br>Many homeless people were sitting on the sidewalk. A young man walked up to each homeless person. He gave each person a flier. The flier was from a trade school. The flier desCRIbed a class. The trade school was offering a barber class. The class was free for homeless people. Matt read the flier. He talked to the man. Matt said he wanted to take the class. The man wrote down Matt’s name. He told Matt to go to the school on Monday. “How long does the class last?” Matt asked. “The class lasts eight weeks,” the man said. “Will the school find me a job?” Matt asked. “No, you have to find your own job,” the man said. “We can only do so much.”<br>许多无家可归的人坐在人行道上。一个年轻人走向每一个无家可归的人。他给了每个人一个传单。这传单来自一所贸易学校。这传单描述一个课程。这所贸易学校提供一个理发师的培训班。这个课程对无家可归的人是免费的。马特读了传单，他走向这个人。马特说他想去参加这个课程。这个人写下了马特的姓名。他告诉马特周一去学校。“这个课程持续多长时间？”马特问。“这个课程持续八周，”这人说。“这学校能给我找到一个工作吗？”马特问。“不能，有必须自己去找工作，”这人说。“我们能做的只有这么多。”<br>186’<br>He lived in a nursing home. “I don’t have anything to do,” he told the nurse. “Why don’t you watch TV?” she asked. “I hate watching TV. TV is nothing but reruns,” he said. “Why don’t you play chess?” she asked. “I hate playing chess,” he said. “I always lose.” “Why don’t you play cards?” she asked. “I hate playing cards. The others always cheat,” he said. “Why don’t you read a book?” she asked. “I hate reading books,” he said. “They give me a headache.” “Why don’t you take a nice walk?” she asked. “I hate taking walks,” he said. “It’s always too hot outside.” “Why don’t you take a nap?” she asked. “That’s a good idea,” he said. “I like taking naps.”<br>他住在一个疗养院。“我没有任何事情去做，”他对护士说。“你为什么不看电视呢？”她问。“我讨厌看电视。电视没什么不过是重播，”他说。“你为什么不下棋呢？”她问。“我讨厌下棋，”他说。“我总是输。”“你为什么不打牌？”她问。我讨厌打牌。其他人总是欺骗，“他说。“为什么你不读书呢？”她问。“我讨厌读书，”他说。“他们让我头疼。”“你为什么不进行一个美好的散步呢？”她问。“我讨厌散步，”他说。“外面总是太热了。”“你为什么不小憩一下呢？”她问。“那是一个好主意，”他说。“我喜欢睡午觉。”<br>185<br>It was summer. Swim classes were beginning. She didn’t know how to swim. She wanted to learn. She called up the pool. “Do you teach adults how to swim?” she asked. The instructor said, “Yes, we teach adults how to swim. We teach kids how to swim. We teach everyone how to swim.” She asked how much. “How much do you charge?” she asked. “We charge only $25 for adults,” the instructor said. She gave him her name. He put her name on the swim class list. “You are on the swim class list,” he said. “Your first lesson is Saturday at noon. Bring $25 and a towel.” She asked, “That’s all I need to bring?” He said, “I’m sorry. Bring your swimsuit, too.”<br>正是夏天。游泳班开始了。她不知道怎么去游泳。她想去学。她打电话给游泳池。“你们教成人怎么去游泳吗？”她问。老师说，是的，我们教成人怎么游泳。我们教小孩怎么游泳。我们教每个人怎么游泳。她问多少钱。“你们收费多少？”她问。“我们每个成人仅收费25美元，”老师说。她给了他她的姓名。他把她的姓名写在了游泳班名单上。“你现在在游泳班名单上，”他说。“你的第一节课在周六中午。带25美元和一条毛巾。”她问，“这就是我需要带的全部？”他说，“我很抱歉。请也带来你的泳衣。”<br>184<br>They drove to the park. They got in line. Many cars were in front of them. They should have gotten up earlier. “We should have gotten up earlier,” said Mom. “I know,” said Dad. “We should not have slept in.” “I know,” said Mom. “But sometimes it’s nice to sleep in, especially on the weekend. Weekends are for sleeping in.” The line moved slowly. Finally they were at the front of the line. “I’m sorry,” said the park ranger. “We’re closed.” “What?” said Dad. “It’s not even noon. How can you be closed?” The ranger said the parking lot was full. There was no place to park. He said to come back tomorrow. “Don’t sleep in,” said the ranger. “The early bird gets the worm.”<br>他们开车去公园。他们在排队。许多车在他们的前面。他们应该早点起床的。“我们应该早点起床的，”妈妈说。“我知道，”爸爸说。“我们不该睡的。”“我知道，”妈妈说。但是有时候睡觉很美好，尤其在周末。周末就是用来睡觉的。车队慢慢移动。最后他们在车队的最前面。“我很抱歉，”公园管理员说。“我们关门了。”“什么？”爸爸说。“甚至还没有到中午。你们怎么能关门呢？”管理员说停车场已经满了。没有地方去停车了。他说明天再回来吧。“不要睡觉了，”管理员说。“早期的鸟有虫吃。”<br>183<br>It was New Year’s Day. He lived in Las Vegas. He drove over to a casino. He walked over to a roulette table. He bought one chip for $100. He flipped a coin. He caught the coin. It was heads. He put the $100 chip on red. The dealer spun the roulette wheel. The wheel went round and round. The dealer pushed the silver ball. The ball went round and round. The wheel slowed down. The ball slowed down. The ball dropped into a red slot. He won! The dealer gave him a $100 chip. He gave the dealer a $10 tip. He cashed in both his chips. He went home. He felt good. It was going to be a good year.<br>这是春节。他住在洛杉矶。他开车去了一家赌场。他走到一个轮盘赌桌旁。他花100美元买了一个筹码。他轻弹了一下筹码。他抓住了这个筹码。它是头像。他放了100美元筹码在红色上面。庄家旋转轮盘。轮盘转啊转啊。庄家推了银球。银球转啊转啊。轮盘减速。银球减速。球掉进了红色的位置。他赢了！庄家给他100美元筹码。他给了庄家10美元小费。他兑现了所有的筹码。他回家了。他感觉很好。这将是一个很好的一年。<br>182<br>“You have to chop down those two trees,” said the fire control agent. “Why do I have to chop down those two trees?” asked Diane. “Because those two trees are a fire hazard,” said the fire control agent. “All trees are a fire hazard,” said Diane. “Yes, but those two trees are a super fire hazard,” said the agent. “Why are those two trees a super fire hazard?” Diane asked. “Because those two trees are right next to your house. Chop them down,” he said. Diane was poor. She couldn’t afford to pay someone to chop the trees down. The agent said, “Chop them down, or I will fine you.” The next day, she poured gasoline on both trees. Then she set them on fire.<br>“你必须砍下那两棵树，”消防特工说。“我为什么要砍下那两棵树呢？”戴安娜问。“因为那两棵树是火灾危害，”消防特工说。“所有的树都是火灾危害，”戴安娜说。“是的，但是那两棵树是一个超级火灾危害，”消防特工说。“为什么那两棵树是超级火灾危害呢？”戴安娜问。“因为那两棵树正好靠近你的房子。砍下他们，”他说。戴安娜很穷。她付不起钱让别人把树砍下来。特工说，“砍下他们，或者我将处罚你。”第二天，她把汽油浇在所有的树上。然后她把他们都点上火了。<br>181<br>“I’m calling the police,” Barry said. “I’m glad you’re calling the police,” Ruth said. Barry and Ruth had a nice house. They had a nice, quiet house. They had nice neighbors. They had nice, quiet neighbors. But tonight, their neighbors were not quiet. They were having a pool party. Everyone was drinking. Everyone was talking loud. Everyone was jumping into the pool. Loud music was playing. Car horns were honking. Barry and Ruth closed all their windows. But they still heard the party. Barry called the police. The policeman said, “We’ll be there in an hour or two.” Barry asked, “Why not sooner?” “The mayor’s having a big party,” the policeman said. “Most of our officers are protecting the mayor and his guests.”<br>“我要叫警察，”巴里说。“我很高兴你打电话给警察，”鲁思说。包里和鲁思有一个漂亮的房子。他们有一个漂亮的，安静的房子。他们有友好的邻居。他们有友好的，安静的邻居。但是今晚，他们的邻居不安静。他们在进行一个游泳池派对。每个人都在喝酒。每个人都在大声讲话。每个人都跳进游泳池。吵闹的音乐正在演奏。汽车喇叭一直在响。包里和鲁思关闭了他们所有的窗户。但是他们依然能听到这个派对。巴里打电话给警察。警察说，“我们将在一到两个小时到达那里。”巴里说，“为什么不能马上？”“市长正在举办一个大的派对，”警察说。“我们的大多数警察都在保护市长和他的客人。”<br>180<br>Lucy had a cat. His name was Pirate. Pirate was 14 years old. Fourteen is old for a cat. “What can I do?” Lucy asked her dad. “Pirate is old. He will die soon. I will miss him so much.” Dad said, “Why don’t you clone him? They will make a brand new Pirate for you. It will look like Pirate. It will walk like Pirate. It will meow like Pirate. It will love you like Pirate. But it will be a kitten. It won’t be an old cat. It will be a new kitten. You can have a new Pirate for 14 more years.” “Dad,” said Lucy, “that’s a great idea. Then, when my new Pirate is 14, I can get another new Pirate!”<br>露西有一只猫。他的名字是海盗。海盗14岁了。14岁对于猫来说很老了。“我能做什么呢？”露西问她的爸爸。海盗老了。他不久就会死了。我会非常想念他的，爸爸说。你为什么不克隆他？他们将为你做一个全新的海盗。他会看起来像海盗。他会走路像海盗。他会喵呜像海盗。他会像海盗爱你。但他会是一只小猫。他不会成为一只老的猫。他会是一只新的小猫。你可以超过14年拥有一只新的海盗。“爸爸，”露西说，那是一个很好的主意。然后，当我的海盗14了，我能再得到另外一个新海盗。<br>179</p><p>Each September volunteers clean up the beach. Hundreds of volunteers clean up the beach. They carry empty trash bags. They pick up trash. They fill up the trash bags. They fill up hundreds of trash bags. They put all the trash bags into trucks. The trucks take the trash bags to a landfill. The trash goes from the beach to the landfill. Every year there is more beach trash. Every year there is more landfill trash. Jill picked up trash for three years. Finally she said, “People leave trash here every year. They know we will pick it up. We shouldn’t pick it up. In a few years, trash will cover this beach. People will stop coming here. They will stop leaving trash here.”<br>每年九月份志愿者清理海滩。几百名志愿者们清理海滩。他们带着空垃圾袋。他们捡起垃圾。他们装满了垃圾袋。他们装满几百个垃圾袋。他们把所有的垃圾袋放到卡车上。卡车把垃圾袋带到垃圾场。这垃圾就从海滩到了垃圾场。每年都有更多的海滩垃圾。每年有更多的垃圾场。吉尔捡了3年垃圾。最后她说，人们每年都留下垃圾。他们知道我们会捡起来。我们将不会捡起来。一些年后，垃圾会覆盖这个海滩。人们会停止来这里。他们将会停止在这里留下垃圾。<br>178<br>A new neighbor moved in. Will the new neighbor be quiet, Liz wondered. The new neighbor wasn’t quiet. The new neighbor was loud. He played his TV loud. He played his music loud. He talked on the phone loud. Loud, loud, loud! He slammed the door when he left his apartment. He slammed the door when he entered his apartment. Slam, slam, slam! He had a basketball. He bounced the basketball everywhere. He bounced it on his apartment floor. He bounced it against his apartment wall. He bounced it off his apartment ceiling. Bounce, bounce, bounce! Liz asked him to be quiet. “Please be quiet,” she asked. “I will not be quiet,” he said. Liz wanted to kill the new neighbor. Kill, kill, kill!<br>一个新邻居搬进来了。新邻居会不会安静呢，丽兹想。新邻居不安静。新邻居很吵。他看电视很大声音。他听音乐很大声音。他通电话很大声音。很吵，很吵，很吵！当他离开公寓的时候，砰的一声关上了门。当他走进他的公寓时，砰的一声关上了门。大满贯，满贯，满贯！他有一个篮球。他到处打篮球。他把它弹在他的公寓地板上。他把它弹起来，弹到他的公寓墙上。他把它弹到公寓的天花板上掉了下来。弹跳，弹跳，弹跳！丽兹让他安静点。“请安静点，”她说。“我不会安静的，”他说。 丽兹想去杀了这个新邻居。杀，杀，杀！<br>177</p><p>Jack paid $100,000 for his house. He had bought his house 30 years ago. It was a big house. It had four bedrooms. It had four bathrooms. Jack was alone. His wife had died. His children had moved out. His house was too big for one man. He decided to sell his house. He called up a real estate agent. She visited Jack. She looked at his house. She looked at all the rooms. She looked at the front yard. She looked at the back yard. She looked at the garage. “This is a beautiful house,” she said. “I think this house will sell for $500,000.” Jack said, “That’s great. I will give $300,000 to my children. I will buy a small house for $200,000.”<br>杰克花了100000美元买他的房子。他是30年前买的他的房子。 它是一个大房子。它有4个卧室。它有四个浴室。杰克孤单一人。他的妻子去世了。他的孩子们搬出去了。他的房子对一个人来说太大了。他决定卖掉他的房子。他召集了一个房地产经纪人。她拜访了了杰克。她看了看他的房子。她看了所有的房间。她看了前面的庭院。她看了后花园。她看了车库。“这是一个漂亮的房子，”她说。“我认为这个房子将会卖500000美元。”杰克说。那太好了。我会给我的孩子们300000美元。我会花200000美元买一个小房子。<br>176<br>He was a famous cartoonist. He drew political cartoons. His cartoons made fun of presidents. His cartoons made fun of vice presidents. His cartoons made fun of Congress. Politicians hated him. Ordinary people loved him. His name was Paul. He put 400 of his cartoons in a book. He sold the book at a book fair. Many people bought the book. He signed the book for everyone. He autographed the book for everyone. “Why are you selling this book? Do you need extra money?” Becky asked. “Yes, I need extra money,” Paul said. “The newspaper laid me off. They said my cartoons are mean. My cartoons make the politicians cry.” “But your cartoons tell the truth,” Becky said. “Yes, and the truth hurts,” said Paul.<br>他是一个著名的漫画家。他画政治漫画。他的漫画以总统们为趣。他的漫画以副总统们为趣。他的漫画以过会为趣。政客们讨厌他。平民爱他。他的名字叫保罗。他把他的400个漫画放在一本书上。他在一个图书展销会卖了这书。许多人买这书。他为每个人在书上签了名。他为每个人在书上亲笔签名。你为什么卖这书？你需要额外的钱吗？贝基问。“是的，我需要额外的钱，”保罗说。报社解雇了我。他们说我的漫画是有意味的。我的漫画让政客们很生气。“但是你的漫画讲出了事实，”贝基说。保罗说：“是的，真相会受到伤害。”<br>175<br>Doug went to the gas station. “Can I have a job?” he asked. The owner said, “Maybe you can have a job. Can you count money? Can you put gas in a car?” “Yes,” said Doug. “I can count money. I can put gas in a car. So, can I have a job?” “There is just one problem,” said the owner. “I cannot pay you with money.” “You cannot pay me with money?” asked Doug. “What good is that? What will you pay me with—bananas?” “No,” said the owner. “I won’t pay you with bananas. You aren’t a monkey, are you? No, I will pay you with gasoline. I have lots of gasoline.” “It’s a deal. My car uses lots of gasoline,” said Doug.<br>道格去加油站。“我能有一份工作吗？“他问。老板说，也许你可以有一个工作。你能数钱吗？你能给车加油吗？“是的，”道格说。我会数钱。我能给汽车加汽油。 所以，我能有这份工作吗？“还仅仅有一个问题，”老板说。“我不能付给你钱。”“你不能付给我钱？”道格问。“那是什么好处？你要付我香蕉？”“不，”老板说。我不会付给你香蕉。你不是一只猴子，对吧？不，我将会付给你汽油。我有很多的汽油。“这是一个交易。我的车用很多汽油，”道格说。<br>174<br>The mayor was in a hurry. He was late. He drove his car faster. He didn’t want to miss his plane. The traffic light was red. He went through the red traffic light. I’m glad no police are around, he thought. He heard a siren. He saw a red light behind him. The red light was on top of a police car. The mayor didn’t stop. He was in a hurry. He was late. He was the mayor. He drove his car faster. The police car followed the mayor. It followed the mayor to the airport. The mayor got out of his car. The policeman got out of his car. “You’re under arrest,” he said. “You can’t arrest me. I’m the mayor,” said the mayor.<br>市长匆匆忙忙。他迟到了。他开车更快了些。他不想错过他的飞机。信号灯是红灯。他通过红路灯。我很幸运周边没有警察，他想。他听到了一声警报。他看到了一个红色的灯在他身后。红色的灯在一辆警车上。市长没有停车，他很着急。他迟到了。他是市长。他把车开个更快了！警车跟着市长。他跟着市长到了机场。市长从车里走出来。警察从他的车里出来。“你被捕了，”他说。“你不能逮捕我，我是市长，”市长说。<br>173<br>It was a new pet store. Brian walked into the new pet store. He said hello to Paul, the owner. Paul said hello to Brian. Brian said, “This is a clean pet store. This is a quiet pet store. This pet store doesn’t smell.” Brian looked around the store. Brian walked around the store. He didn’t see any pets. He didn’t see one pet. “Where are the pets?” he asked. “The pets are right here,” said Paul. Paul opened a catalog. The catalog was full of pictures. It was full of pictures of pets. “Just pick any pet you like,” said Paul. “We will mail it to you.” “What if I don’t like it?” asked Brian. “Just mail it back,” said Paul.<br>这是一个新的宠物店。布瑞恩走进新宠物店。他对店主说你好。保罗对布瑞恩说你好。布瑞恩说：“这是一个干净的宠物店。这是一个安静的宠物店。这个宠物店没有异味。”布瑞恩看了看商店。布瑞恩在商店里走来走去。他没有看到任何宠物。他没有看到一只宠物。“宠物在哪里？“他问。“宠物在这里，”保罗说。保罗打开一个目录册。目录里满是图画。它充满了宠物的照片。“随便挑你喜欢的宠物，”保罗说。“我们会把它寄给你的。”“如果我不喜欢呢？布瑞恩问道。“只要寄回来就可以了，”保罗说。<br>172<br>Nick was old. Nick was old and sick. His wife was Sherry. Sherry was younger than Nick. Nick was older than Sherry. Nick was 81. Sherry was 61. They had been married for 41 years. They loved each other. “Kill me,” Nick said. “You say you love me. If you really love me, you will kill me.” “I will not kill you,” Sherry said. “You will get better. The pain will go away.” Nick had cancer. He had lung cancer. He used to smoke. He used to smoke cigarettes. He used to smoke two packs of cigarettes a day. Nick was in pain every day. “This cancer is killing me,” he said. Sherry said, “If the cancer is killing you, it doesn’t need my help.”<br>尼克老了。尼克老了，还病了。他的妻子是雪莉。雪莉比尼克年轻。尼克比雪莉老。尼克81岁。雪莉61岁。他们结婚41年了。他们很爱彼此。“杀了我，”尼克说。“你说你爱我。如果你真的爱我，就杀了我。”“我不会杀你，”雪莉说。“你会好起来。痛苦会消失。”尼克得了癌症。他得了肺癌。他过去常常吸烟。他过去常常吸香烟。他过去一天吸2盒香烟。尼克每天都很疼。“癌症会杀了我，”他说。雪莉说，“如果癌症会杀了你，那就不需要我的帮忙了。”<br>171<br>The fox was brown. The fox was quick. The dog was brown. The dog was lazy. “You are a lazy dog,” said the fox. “Yes, I am a lazy dog,” said the dog. “Why are you a lazy dog?” asked the fox. “Why not?” asked the dog. “My owner feeds me. My owner takes me out for walks. My owner loves me. I eat. I go out for walks. I sleep. I’m a lazy, happy dog.” “But don’t you have any ambition?” asked the fox. “Ambition? Ambition to do what? I’m just a dog,” said the dog. “Lassie was a dog. She saved people’s lives,” said the fox. “I’m too lazy to save people’s lives,” said the dog. “Let Lassie save people’s lives.”<br>狐狸是棕色的。狐狸很敏捷。狗是棕色的。狗很懒。“你是一条懒狗，”狐狸说。“是的，我是条懒狗，”狗说。“你为什么做条懒狗呢？”狐狸问。“为什么不呢？”狗问。“我的主人饲养我。我的主人带我出去散步。我的主人很喜欢我。我吃饭。我出去散步。我睡觉。我是条懒惰幸福的狗。”“你没有任何志向吗？”狐狸问。“志向？什么志向？我只是条狗，”狗说。“莱西是条狗。她救人，”狐狸说。“我太懒不能救人，”狗说。“就让莱西去救人吧。”<br>170<br>She wanted to go for a drive. She told her husband. He said that was a good idea. “Where do you want to go?” he asked. She wanted to drive to the mountains. She wanted to go to Big Bear Lake. Big Bear Lake is high in the mountains. It is 7,000 feet high. It is a two-hour drive from their home. It takes two hours to get there. The lake is big and beautiful. They could park their car next to the lake. They could sit next to the lake. They could watch the boats. They could watch the fishermen. They could watch the squirrels and deer. It is a beautiful drive to Big Bear Lake. The road goes through a big forest full of tall trees.<br>她想去兜风。她告诉了她丈夫。他说主意不错。“你想去哪儿？”他问。她想开车去山上。她想去大熊湖。大熊湖在高山上。它海拔7000英尺。从他们家开车要2个小时。去那里得需要两个小时。湖很大很美。他们可以把车停在湖边。他们可以在湖边坐着。他们可以看船。他们可以看渔人。他们可以看松鼠和鹿。开车去大熊湖是一次很美的旅行。有一条路穿过一个大森林，森林长满了很高的树。<br>169<br>She got into her car. She hoped it would start. Sometimes it started immediately. Sometimes it started after five minutes. Sometimes it didn’t start for 20 minutes. She had taken it to a mechanic. He couldn’t fix the problem. He didn’t know what the problem was. She had taken it to another mechanic. He knew what the problem was. She needed new spark plugs. He put in the new spark plugs. She paid him. She thanked him. Now her worries were over. She didn’t have to worry anymore. Every time she turned the key, her car started immediately. But a week later, her car didn’t start immediately. It started after five minutes. She called up the mechanic. He said to bring the car in. He would look at it again.<br>她坐进车里。她希望车可以启动。有时它可以立刻启动。有时它5分钟后启动。有时20分钟它也不会启动。她请修理师修过她的汽车。他解决不了车的问题。他找不到问题在哪里。她不得不把车给另一个修车工修理。他直到问题在哪里。 她需要新的火花塞。他把新火花塞放进去。她把钱付给他。她感谢了他。现在她不用担心了。她再也不用担心了。每次她拧一下钥匙，她的车就立刻发动。但是一周后，她的车没有立刻发动。它5分钟后才发动。她给修理师打了电话。他说把车带过去。他需要再看下它。<br>168<br>He drove to the supermarket. He was out of food. He had no food in his refrigerator. He had no food in his cupboards. He needed to buy some food. He hoped he would find a sale. A sale would save him money. He walked into the supermarket. He walked over to the produce section. The apples were on sale. The bananas were on sale. It was his lucky day. He loved apples. He loved bananas. The apples were only one dollar a pound. The regular price was $2.50 a pound. The bananas were only 49 cents a pound. The regular price was 89 cents a pound. He bought four pounds of apples. He bought four pounds of bananas. Then he walked over to the dairy section. Maybe the milk was on sale, too.<br>他开车去了超市。他没有食物了。他冰箱里没有任何食物。他的碗橱里没有任何食物。他需要买些食物。他希望可以找到打折商品。打折可以让他省很多钱。他走进超市。他走到农产品区。苹果在打折。香蕉在打折。那是他的幸运日。他爱吃苹果。他爱吃香蕉。苹果一磅只要一美元。平时的价格是2.5美元一磅。香蕉一磅只要49美分。平时的价格是89美分一磅。他买了4磅苹果。他买了4磅香蕉。然后他走向奶制品区。也许牛奶也在打折。<br>167<br>She used to eat meat. She used to eat a lot of meat. She used to eat beef. She used to eat pork. She used to eat ham. She used to eat chicken. She ate meat every day. She ate bacon for breakfast. She ate a hamburger or hot dog for lunch. She ate meat loaf for dinner. She ate vegetables sometimes. She ate fruit sometimes. She ate salad sometimes. But she ate meat all the time. One day she walked by a dumpster. She smelled something. It smelled bad. It smelled really bad. She opened the dumpster lid. She looked in. She saw an opened package of raw hamburger meat. It was covered with flies and ants. It stunk. She closed the lid. She stopped eating meat.<br>她以前常吃肉。她以前常吃很多肉。她以前唱吃牛肉。她以前常吃猪肉。她以前常吃火腿。她以前常吃鸡肉。她每天都吃肉。 她早饭吃熏肉。她午饭吃一个汉堡或者热狗。她晚饭吃肉糕。她有时吃蔬菜。她有时吃水果。她有时吃沙拉。但是她一直吃肉。有一天她有过一个垃圾箱。她闻到什么。很难闻。真的很难闻。她打开垃圾箱盖。她看看里面。她看到一袋打开的生汉堡肉。它被蝇子蚂蚁包围了。它散发着臭味。她关上盖子。她停止了吃肉。<br>166<br>Emily sat down on the sofa. She had a big, soft sofa. It was comfortable. It was a comfortable sofa. She took off her shoes. She put her feet on the coffee table. The TV remote was on the coffee table. She picked up the remote. She pointed it at the TV. She turned on the TV. The news was on. The reporter said that a plane had crashed. More than 100 people died. The reporter said that a bridge had collapsed. More than 20 people died. She turned off the TV. She had enough problems at home. She didn’t need to hear about more problems in the world. She had money problems. She had health problems. She had family problems. Who needed to hear about more problems?<br>艾米丽坐在沙发上。她有个很大很柔软的沙发。它让人感觉很舒服。它是个让人感到舒服的沙发。她脱掉鞋。她把双脚放到咖啡桌上。电视遥控器放在咖啡桌上。她拿起遥控器。她把遥控器对着电视。她打开电视。在播放新闻。广播员说有架飞机坠毁了。100多人死亡。广播员说一座桥坍塌了。20多人死亡。她关掉电视。她在家已经有太多问题了。她不想再听到世界上任何不好的消息。她有经济问题。她有健康问题。她有家庭问题。谁还会需要了解更多的问题呢？<br>165<br>She wanted to have a baby. She wanted to have a baby girl. He wanted to have a baby. He wanted to have a baby boy. He loved her. He said, “Okay, we will have a baby girl.” She loved him. She said, “Okay, we will have a baby boy.” They both loved each other. They both wanted to make each other happy. He talked to his parents. He asked them what to do. She talked to her parents. She asked them what to do. His parents said, “No problem. Have two babies. Have a baby girl and a baby boy.” Her parents said the same thing! So they had two babies. They had a baby girl. Then they had a baby boy.<br>她想生个宝宝。她想生个女宝宝。他想生个宝宝。他想生个男宝宝。他很爱她。他说，“好的，我们生个女宝宝。”她很爱他。她说，“好的，我们生个男宝宝。” 他们深爱着彼此。他们都想让对方幸福。他告诉了他的父母。他问他们怎么办。她告诉了她父母。她问他们怎么办。他父母说，“没问题。生两个宝宝。一个女宝宝和一个男宝宝。”她父母说了同样的话！所以他们要了两个宝宝。他们生了个女宝宝。然后他们又生了个男宝宝。<br>164<br>He had a beautiful car. It was a Cadillac. It was a 1993 Cadillac. It was a four-door Cadillac. It was light brown. It had a big engine. The big engine didn’t leak oil. The big engine didn’t leak water. He drove his car only five miles a day. He took good care of his car. He washed it every week. He washed it by himself. He washed it with dishwashing soap and water. He dried it with paper towels. He vacuumed inside the car every week. He vacuumed it with a small vacuum cleaner. The outside of his car was clean. The inside of his car was clean. He never ate anything inside his car. He never drank anything inside his car.<br>他有辆漂亮的车。那是辆凯迪拉克。那是一辆1993年的凯迪拉克。那是辆四开门凯迪拉克。车是浅棕色。它有个很大的发动机。这个大发动机不漏油。这个大发动机不漏水。他每天只开5公里的车。他很小心地照料他的车。他每周洗车。他自己洗车。他用洗碗皂和水洗车。他用厕纸擦干车。他每周用吸尘器清理车内部。他用一个小吸尘器来打扫。他的车外部很干净。他的车内部很干净。他从来不在他的车里吃东西。他从来不在他的车里喝饮料。<br>163<br>May called her mom. Her mom lived in China. China was far away. Her mom was 50 years old. Her mom had many friends. But she missed her daughter. May lived in America. She was a waitress. She was a waitress in a restaurant. It was a Chinese restaurant. “Guess what, Mama?” May asked. “I met a nice man.” Her mom said she was happy. “Will you marry him?” she asked. She wanted May to marry. She wanted a grandson. She wanted a granddaughter. She wanted May to bring her children back to China. “Be patient,” May said. “I only met him last month. But he’s very nice.” Her mom said, “Okay, I will be patient. But hurry up!”<br>梅给妈妈打了电话。她妈妈住在中国。中国很远。她妈妈50岁了。她妈妈有很多朋友。但是她很想念女儿。梅住在美国。她是个服务生。她是一名饭店服务生。那是个中餐饭店。“猜猜看，妈妈？”梅说。“我遇见了一个优秀的男人。”她妈妈说她很高兴。“你要和他结婚吗？”她问。她想让梅结婚。她想有个外孙。她想有个外孙女。她想让梅把她的孩子们送回中国。“有耐心点，”梅说。“上个月我才遇到他。但是他很不错。”她妈妈说，“好，我会很有耐心的。但是快点！”<br>162<br>He was homeless. He was cold. He was shivering. He was in the park. He was sitting on a bench. A sign was next to him. The sign said, “Please hire me. I am homeless.” People walked by. They looked at him. He looked dirty. He looked old. How could this man work? He was too old to work. He was too dirty to work. He needed a bath. He needed some food. One lady stopped. She sat down next to him. She said she belonged to a church. She said to come with her. They both got up. He walked with her to the church. The church was warm. He smelled hot food. She said, “Our church will help you.”<br>他无家可归。他很冷。他在颤抖。他在公园里。他正坐在长凳上。他旁边有个指示牌。指示牌写着，“请雇用我。我无家可归。”人们走过。他们看着他。他看起来很脏。他看起来很老。这个男的怎么工作呢？他太老了，不能工作。他太脏了，不能工作。他需要洗个澡。他需要一些食物。一位女士停下来。她挨着他坐下。她说她来自教堂。她让他跟着她。他俩站起来。他跟着她走进了教堂。教堂里很暖和。他问到了热饭的香味。她说，“我们的教堂将帮助你。”<br>161<br>The brothers don’t speak to each other. They had a fight. They had a fight a long time ago. The fight was about money. Money can make people happy. Money can make people unhappy. Money can bring people together. Money can tear people apart. It doesn’t take a lot of money to tear people apart. Sometimes it takes only a little money. The two brothers were angry about $100. Only $100. But they both said, “It’s not the money. It’s the principle.” A principle is a way of life. To tell the truth is a principle. To work hard is a principle. But both brothers lied. It wasn’t the principle. It was the money.<br>兄弟俩彼此之间不说话。他们打了一架。很久前他们打了一架。打架的原因是钱。钱能使人高兴。钱能使人悲伤。钱能让人聚在一起。钱能把人分开。把人分开并不需要很多钱。有时只需要一点钱。两兄弟是为了100美元而生的气。只是为了100美元。但是他们都说，“不是钱的问题。是原则问题。”原则是一种生活方式。讲真话是一种原则。努力工作是一种原则。但是兄弟俩都撒谎了。不是原则的问题。是钱的问题。<br>160<br>God takes good people to heaven. He wants good people to be with Him. He leaves bad people on Earth. He doesn’t want bad people near Him. He lets them do bad things on Earth. When they die, He sends them to the devil. The devil makes them work every day. They work next to a big fire. They are always right next to the fire. They are always hot from the fire. They carry coal. The devil makes them carry heavy buckets of black coal. They carry the coal to the fire. They pour the coal on the big fire. Then they refill the big buckets with more coal. They never get a drink of water. They never get to rest.<br>上帝选择好人去天堂。他想让好人和他在一起。他把坏人放到地球上。他不想让坏人接近他。他让他们在地球上做坏事。当他们死后，他把他们送给魔鬼。魔鬼让他们每天工作。他们在炉火旁工作。他们总是紧挨着炉火。挨着火他们总是很热。他们搬煤。魔鬼让他们搬沉沉的煤桶。他们把煤搬到炉火上。他们把煤倒在大火上。然后他们用更多的煤来装满大桶。他们从来喝不到一滴水。他们从来得不到休息。<br>159<br>He looked at the bird. It was a blackbird. It was walking on the grass. It was looking for food. Birds have a funny walk. Why do they walk so funny? Because they don’t have arms. Arms help people walk. People walk well. Birds don’t have arms. They don’t walk well. They look funny when they walk. Birds have wings. Wings help birds fly. They use their wings to fly. They fly very well. They are beautiful to watch when they fly. They belong in the sky. They don’t belong on the ground. The blackbird found something to eat. It flew up into a tree. It ate the food in the tree. Then it flew away.<br>他看看这只鸟。这是只黑鸟。它在草地上走着。它在寻找食物。鸟走起来很搞笑。为什么它们走起来这么搞笑呢？因为它们没有胳膊。胳膊帮助人走路。人走的很好。鸟没有胳膊。它们走不好。当它们走路时看起来很搞笑。鸟有翅膀。翅膀帮助鸟飞翔。它们用翅膀来飞。它们飞的很好。它们飞翔时很好看。它们属于天空。它们不属于大地。黑鸟找到了吃的。它飞到一棵树上。它在树上吃了食物。然后它飞走了。<br>158<br>He looked at the rising moon. It was rising above the houses. It was big and orange. It looked bigger than the rising sun. How could it be so big? How could it be so orange? Several hours later, he looked at the moon again. Now it was high in the sky. Now it was smaller. It wasn’t orange anymore. Now it was white. What happened? It changed size. It changed color. Before, it was big and orange. It was like a big pumpkin. Now, it was smaller and white. It was like a light bulb. But it was still pretty. It was still bright. It was the brightest light in the sky.<br>他看着初升的月亮。它正在升到房子上面。它很大，桔黄色。看起来它比初升的太阳大。它怎么会这么大？它怎么会是桔黄色？几个小时后，他再次看看月亮。现在它在高高的天空上。现在它变小了。它不再是桔黄色。现在它是白色。发生了什么？它的大小变了。它的颜色变了。之前，它是大大的橘黄色的。像一个大大的南瓜。现在，它是变小了，成了白色的。它像一个灯泡。但是它还是很漂亮。它还是那么亮。它是天空中最亮的光。<br>157<br>She had watched the news last night. The weatherman had said it was going to rain today. It was going to rain all day today. She got dressed. She put on her rain boots. She put on her raincoat. She grabbed her umbrella. She was ready for the rain. She was wearing her rain boots. She was wearing her raincoat. She had an umbrella in her hand. She walked outside. Something was wrong. What was wrong? It wasn’t raining. Where was the rain? She looked up. She looked at the blue sky. She went back inside. She took off her raincoat. She took off her rain boots. She went back outside. She still had her umbrella. You never know about the weather, she thought.<br>她昨晚看了新闻。天气预报员说今天会下雨。今天一整天要下雨。她穿好衣服。她穿上雨靴。她穿上雨衣。她拿上雨伞。她已经做好了下雨的准备。她正穿着雨靴。她正穿着雨衣。她手里拿着一把雨伞。她走到外面。事情不对劲儿。怎么回事？没有下雨。雨在哪儿？她抬头看看。她看看蓝天。她回到里面。她脱下雨衣。她脱下雨靴。她回到外面。她手里还拿着雨伞。你永远不会知道天气将会怎样，她想。<br>156<br>She was sitting in a bar. She was drinking beer. She was getting drunk. She started to talk. She started to talk too much. She talked about her cash. She talked about a lot of cash. She had thousands of dollars in her purse. She said she had $20,000 in her purse. She said it out loud. Everyone in the bar heard her. Everyone looked at her. She took some cash out of her purse. She held the money in the air. “Look,” she said, “here’s $1,000 cash.” She waved it around. She laughed. She put the money back in her purse. She had another beer. A man was watching her. She finished her beer. She left the bar. He followed her.<br>她坐在酒吧里。她在喝啤酒。她喝醉了。她开始说话。她开始说很多话。她谈论她的现金。她谈论她的大量现金。她钱包里有成千张美元。她说她钱包里有2万美元。她大声说了这些。酒吧里每个人都听见了她说的话。每个人都在看着她。她从钱包里取出一些现金。她把钱拿在空中。“看，”她说，“这是1000美元现金。”她挥着手转。她大笑。她把钱放回钱包。她又喝了一杯啤酒。一个男的在盯着她。她喝完啤酒。她离开酒吧。他跟着她。<br>155<br>It rains a lot in the jungle. The rain helps trees grow. The jungle has many trees. Trees are home for many jungle animals. Many animals live in the trees. Monkeys are jungle animals. Monkeys love trees. They love to swing from tree to tree. They climb down from the trees. They climb back up into the trees. They sit in the trees. They eat their food in the trees. They eat the plants in the trees. They eat the fruit in the trees. They live in the trees with the birds. They live in the trees with the lizards. They live in the trees with the snakes. They live in the trees with the ants. The trees in the jungle are full of animals.<br>丛林里下雨很多。雨水有助于大树生长。丛林里有很多树。树是很多丛林动物的家。很多动物生活在树上。猴子是丛林动物。猴子喜欢树。 它们喜欢在树间游荡。它们从树上爬下来。它们爬回树上。它们坐在树上。它们在树上吃食物。它们在树上吃植物。它们在树上吃水果。它们和鸟一起住在树上。它们和蜥蜴一起住在树上。它们和蛇一起住在树上。它们和蚂蚁一起住在树上。丛林里的树上有很多动物。<br>154<br>A baby has arms and legs. It has a mouth and eyes. It looks at everything. It eats everything. It smiles a lot. It CRIes a lot. It eats a lot. It drools a lot. It pees a lot. It poops a lot. It sleeps a lot. It tries to talk. It makes funny sounds. It says “Googoo” and “Gaga.” It waves its arms and legs. It doesn’t do much else. It doesn’t sit up. It doesn’t stand up. It doesn’t talk. It lies on its back. It lies on its stomach. After a year, it will do many things. It will crawl. It will stand up. It will walk. It will talk. But in the beginning, it just grows. It grows bigger and bigger.<br>婴儿有胳膊和腿。他有嘴和眼睛。他看所有东西。他什么都吃。他爱笑。 他爱哭。他吃很多。他流好多口水。他尿好多。他拉好多便便。他觉很多。他试图说话。他发出很多有趣的声音。他说“咕咕”和“嘎嘎。”他挥动手臂和踢腿。他不做别的。他不坐着。他不站着。他不说话。他平躺着。他趴着。一年后，他会做很多事情。他会爬。他会站立。他会走路。他会说话。但是刚开始，他只是长啊长。他长的越来越大。<br>153<br>Soccer is a fun game. It is very popular. It is popular all over the world. It is fun to watch. It is fun to play. It is a simple game. There are two teams. They play on a big grassy field. There is one ball. There are two goals with nets. Each team tries to kick the ball into the other team’s net. The players cannot use their hands. They cannot touch the ball with their hands. They use their feet to move the ball. They use their chests to move the ball. They use their heads to move the ball. The players run back and forth. They slide on the grass. They crash into one another. They play to win.<br>足球是一种很有趣的比赛。它很盛行。它在全世界都很盛行。观看足球比赛很有趣。踢足球很有趣。这事项简单的比赛。比赛分两队。他们在很大的草地上踢足球。只有一个球。 有两个进球网。每组都试图把球踢到另一对的球网里。运动员不能用手。他们不能用手碰球。他们用脚运球。他们用胸运球。他们用头运球。运动员跑来跑去。他们在草地上飞跑。他们互相撞击。他们为了赢得比赛。<br>152<br>The big room is air-conditioned. But it smells. Dead bodies are in metal drawers. The bodies have no clothes. The bodies are naked. A white sheet covers each dead body. The drawers slide in. The drawers slide out. A doctor works in the big room with the dead bodies. He works there almost every day. He cuts the bodies open. He cuts them open with a knife. He cuts them open with a saw. He looks at the bodies. He looks inside the bodies. Why did these people die? Why did this young man die, he wonders. He tries to answer the question. Every dead body is a puzzle. The doctor tries to solve the puzzle. Then he tells the police why the people died.<br>这个大屋子开着空调。但是很难闻。尸体放在金属抽屉里。这些尸体都没穿衣服。这些都是裸体尸体。每个尸体上盖着一块白单子。抽屉推进去。抽屉拉出来。一个医生在这个有尸体的大屋子里工作。几乎每天他都在那里工作。他切开尸体。他用一把刀把他们切开。他用锯把他们切开。他看看这些尸体。他看看尸体里面。为什么这些人死掉了？为什么这个年轻人死了，他在纳闷。他试着去找到问题的答案。每个尸体都是一个谜。这个医生试图去解决这个谜。然后他告诉警察这些人为什么死掉了。<br>151<br>Betty was excited. It was December 1. Christmas Day was only 24 days away. She was looking at a magazine. It was a magazine for little girls. There were many pictures in the magazine. There were many pictures of dolls. The dolls were from many countries. There were dolls from Mexico. There were dolls from China. There were dolls from France. There were dolls from everywhere. There were so many dolls. She showed the pictures to her mom. “Mommy, will Santa bring me all these dolls?” she asked. “No, honey,” her mom said, “Santa will bring you only one doll. So pick the one you like best.” “But, Mommy,” she said, “I like them ALL the best.”<br>贝蒂很兴奋。这是12月1号。圣诞节还有24天就到了。她在看一本杂志。那是一本专为小女孩儿出版的杂志。杂志上有好多图片。有很多洋娃娃的图片。洋娃娃来自很多国家。有来自墨西哥的洋娃娃。有来自中国的洋娃娃。 有来自法国的洋娃娃。有来自各个地方的洋娃娃。有太多的洋娃娃。她给妈妈看看这些图片。“妈妈，圣诞老人会把所有这些洋娃娃都带给我吗？”她问。“不会的，甜心，”她妈妈说，“圣诞老人只能给你带一个洋娃娃。所以挑一个你最喜欢的。”“但是，妈妈，”她说，“所有的我都喜欢”<br>150<br>Prisons today have too many prisoners. The prisoners sleep in bunk beds. They sleep in triple bunk beds. Triple bunk beds are for three prisoners. One prisoner sleeps in the bottom bunk bed. Another prisoner sleeps in the middle bunk bed. Another prisoner sleeps in the top bunk bed. They sleep on top of one another. They sleep beneath one another. Prisoners complain about the triple bunk beds. They don’t like the triple bunk beds. Prisons didn’t use to have bunk beds. Prisons didn’t use to have any beds. Prisoners used to sleep on a cold floor. Prisoners today get three meals a day. They get three hot meals. Prisoners used to get one meal a day. They used to get one cold meal.<br>监狱里有太多犯人。犯人睡在多层床上。他们睡三层床。三层床睡3个犯人。一个犯人睡三层床底层。另一个犯人睡三层床中间那层。另一个犯人睡三层床顶层。他们一个比一个睡得高一层。他们一个比一个睡得低一层。犯人都在抱怨这三层床。他们不喜欢三层床。过去监狱就没有多层床。犯人就没有床睡。犯人睡在冰冷的地板上。现在犯人一天可以吃到3顿饭。他们吃到3顿热饭。过去犯人只能一天吃一顿饭。他们只能吃到一顿冷饭。<br>149<br>It is winter. The sky is usually gray. The sun is not big. The sun is not warm. The sun is never high in the sky. It’s always low in the sky. The shadows are long. In the morning they are long. In the afternoon they are long. The shadows are cold. The wind blows. The wind blows almost every day. Sometimes it is a strong wind. Paper blows everywhere. It is always a cold wind. People wear heavy jackets. People stand with their hands in their pockets. People blow on their hands to keep their hands warm. You can see people’s warm breath. When they breathe, you can see their warm breath. Their breath is like steam from a teapot. Everyone is cold in the winter.<br>这是冬天。天空经常灰蒙蒙的。太阳不大。阳光不暖和。太阳从来不高高挂在天上。它总是低低的挂在天上。影子很长。早上影子很长。下午影子很长。阴影里很冷。风刮着。风几乎每天都刮。有时风很大。纸屑到处飞。总是刮冷风。人们穿着厚厚的夹克。人们站着时双手插兜里。人们在手上吹起来让手保持暖和。你可以看见人们呼出的热气。当人们呼吸时，你可以看见他们呼出的热气。他们呼出的热气像茶壶里喷出来的蒸汽。在冬天每个人都很冷。<br>148<br>She was angry. She was angry with her brother. Her brother didn’t help her. She needed to borrow $1,000. She had asked her brother to lend her $1,000. He said no. Her brother said he didn’t have $1,000. Her brother was lying. Her brother had $10,000. He had ten times $1,000. Why did he lie to her? Why didn’t he tell her the truth? Why didn’t he lend her $1,000? She said, “I know you have $10,000. All I want is $1,000. I will pay you back next year. You will get your money back next year.” He said no. He said people shouldn’t borrow money. He said people shouldn’t lend money. “But I’m not ‘people,’” she said. “I’m your sister!”<br>她很生气。她很生哥哥的气。她哥哥不帮她。她需要借1000美元。她向她哥哥借1000美元。他没答应。他哥哥说他没有1000美元。他哥哥在撒谎。他哥哥有1000美元。他有10000美元。他为什么对她撒谎呢？为什么他不告诉她真相？为什么他不借给她1000美元？她说，“我知道你有10000美元。我只需要1000美元。明年我会还给你。你明年就会拿到我还你的钱。”他还是不借。他说人们不应该借钱。他说人们不应给借给别人钱。“但是我不是所谓的‘人们,’”她说。“我是你妹妹！”<br>147<br>The janitor cleaned the church every day. He swept the floor with a broom. He mopped the floor with a mop. He vacuumed the carpet with a vacuum cleaner. He cleaned all the windows with a wet cloth. He cleaned the men’s bathroom. He cleaned the women’s bathroom. He cleaned the sinks in the bathrooms. He cleaned the toilets in the bathrooms. He cleaned the mirrors in the bathrooms. He scrubbed the steps outside the church. He scrubbed the steps with soapy water and a brush. He kept the steps clean. He kept the windows clean. He kept the bathrooms clean. He kept the floors clean. The steps were clean. The windows were clean. The bathrooms were clean. The floors were clean. It was a clean church.<br>看门人每天都打扫教堂。他用笤帚扫地。他用拖把拖地。他用真空吸尘器清理地毯。他用一块湿布擦净所有窗户。他打扫男士卫生间。他打扫女士卫生间。他打扫水槽。他打扫卫生间里的马桶。他打扫卫生间里的镜子。他擦洗教堂外的台阶。他用肥皂水和刷子擦洗台阶。他使台阶保持干净。他使窗户保持干净。他使卫生间保持干净。他使地板保持干净。台阶很干净。窗户很干净。卫生间很干净。地板很干净。那是个很干净的教堂。<br>146<br>He loved his job. He had a good job. He was a teacher. He loved to teach. He loved his students. He loved to teach his students. His students listened to him. His students listened to almost every word he said. His students learned from him. They learned how to spell words. They learned how to pronounce words. They learned how to ask questions. They learned how to answer questions. They learned how to think. He taught them how to think. “Don’t believe everything you hear,” he said. “Don’t believe everything you read,” he said. “Don’t believe everything you see,” he said. “Use your head. If something sounds too good to be true, it usually is,” he said.<br>他喜欢自己的工作。他有个好工作。他是个老师。他喜欢教书。他喜欢他的学生们。他喜欢教学生。他的学生很听他的话。他的学生几乎每句话都听他的。他的学生向他学习。他们学习如何拼写。他们学习如何发音。他们学习如何问问题。他们学习如何回答问题。他们学习怎样思考。他教他们怎样思考。“不要相认你听到的任何事情，”他说。“不要相信你读的任何事情，”他说。“不要相信你看到的任何事情，”他说。“动动脑筋。倘若某件事听起来好得难以置信，那或许不是真的，”他说。<br>145<br>She looked at the moon. It was big. It was round. It was white. It was big and round and white. It was much bigger than all the stars. The stars were little lights. The moon was a big, bright light. She looked around. She could see other houses. She could see the sidewalk. She could see the street. The moon was bright. It was not as bright as the sun. But it was much brighter than the stars. She looked at the moon. Her dad said there is a man in the moon. She looked for the man in the moon. She looked for his eyes. She looked for his nose. She looked for his mouth. She did not see the man in the moon.<br>她看着月亮。它很大。它是圆的。它是白色的。它大大的，圆圆的，白白的。它比所有其它星星都大。星星都是微微光。月亮有大大的明亮的光。她看看四周。她能看到其它房子。她能看到人行道。她能看到街道。月亮很亮。它不像太阳那么亮。但它比其它星星亮的多。她看看月亮。她爸爸说月亮上有个男人。她在月亮上找这个男人。她找他的眼睛。她找他的鼻子。她找他的嘴巴。她看不见月亮上的男人。<br>144<br>She walked along the sidewalk. She wasn’t paying attention. She was thinking about her boyfriend. He made her angry. He said he didn’t want to marry her now. He wanted to marry her later. She wanted to get married now. She didn’t want to get married later. Why didn’t he want to marry her now? Maybe he didn’t want to marry her later, either. Maybe he didn’t want to marry her ever. Maybe he wanted to meet someone else. Maybe he wanted to marry someone else. She walked straight into a bench. She hurt her leg. Her leg started bleeding. She sat down on the bench. Her leg hurt so much. She tried to stop the bleeding.<br>她沿着人行道走着。她心不在焉。她正在想着她男朋友。他让她很生气。他说他现在不想和她结婚。他想晚些和她结婚。她现在想结婚。她不想晚点结婚。他为什么不想和她现在结婚？也许晚点他也不想和她结婚。也许他压根就不想和她结婚。或许他想和别人结交。或许他想和别人结婚。她径直撞到一个长凳上。她的腿受伤了。 她的腿开始流血。她在长凳上坐下来。她的腿疼的厉害。她试着去止血。<br>143<br>Flu shots cost $20 at the drugstore. Only a few people are buying the flu shots. There are no long lines. No one is waiting in line. If you want the flu shot, pay $20. You don’t have to wait in line. You can get the flu shot immediately. The mayor announced free flu shots. He said, “We will give free flu shots to everyone. Come to the library on Saturday.” On Saturday 2,000 people went to the library. They stood in line for four hours. After four hours, there were no more free flu shots. They ran out of free flu shots. The drugstore still has many flu shots. But the flu shots at the drugstore aren’t free. They cost $20.<br>在药店疫苗要花费20美元。只有少数人买疫苗。没有排的长长的队。没有人排队。如果你想打疫苗，要付20美元。你不需要排队。你可以马上打疫苗。市长宣布了打免费疫苗的通知。他说，“我们将给每个人免费打疫苗。周六来图书馆打。”周六2000人去了图书馆。他们排队排了4个小时。四个小时候，免费疫苗打完了。他们已经用完了免费疫苗。药店还有很多疫苗。但是药店的疫苗不是免费的。它们要花费20美元。<br>142<br>She was a fast eater. She liked to eat fast. She ate like a wolf. “I am like a wolf,” she said. He was a slow eater. He liked to eat slow. He ate like a turtle. “You are like a turtle,” she said. She didn’t talk at the dinner table. All she did was eat. He liked to talk at the dinner table. He talked about the news. He talked about the weather. He talked about sports. She listened to him talk. She nodded her head. That meant yes. She shook her head. That meant no. He talked. She listened. She never said yes. She never said no. She never said anything. All she did was eat.<br>她吃饭很快。她喜欢很快地吃饭。她吃饭像一只狼。“我像一只狼，”她说。他吃饭很慢。他喜欢很慢地吃饭。他吃饭像一只乌龟。“你像一只乌龟，”她说。饭桌上她不说话。她只管吃饭。他喜欢在饭桌上说话。他谈论新闻。他谈论天气。他谈论运动。她听他谈论。她点点头。那就代表赞同。她摇摇头。那就代表不赞同。他一直说。她一直听。她从不说是。她从不说不是。她从不说话。她只是吃饭。<br>141<br>She was a nurse. It was flu season. But she didn’t get a flu shot. All the other nurses got a flu shot. All the doctors got a flu shot. But she didn’t get a flu shot. Flu shots made her sick. She got a flu shot when she was a little girl. The flu shot made her very sick. She spent a week in the hospital. Then she came home. She spent three weeks in bed. She was sick for about a month. After that, no more flu shots for her. She never got a flu shot again. She never got the flu, either. “I never get a flu shot, but I never get the flu,” she told her friend.<br>她是一个护士。这是流感的季节。但是她没有注射疫苗。所有的护士都注射疫苗了。所有的医生也都注射疫苗了。但是她没有注射疫苗。流感疫苗让她不舒服。当她小的时候注射过一次流感疫苗。疫苗注射让她生病了。 她住了一星期医院。然后她就回家了。她在床上躺了3个星期。 她生了大概一个月的病。此后，她不再打流感疫苗。她再也不会打疫苗了。她再也没有得过感冒。“我从来不打流感疫苗，但是我也从来没得过感冒，”她告诉她朋友。<br>140<br>She went into the laundry room. She was in a hurry. She needed to wash and dry her clothes. Then she needed to go to work. The washer was running. Someone was using the washer. The washer stopped. She opened the lid. She took the damp clothes out of the washer. The damp clothes belonged to someone else. She put their clothes on top of the dryer. She put her own clothes into the washer. She started the washer. Half an hour later, she took her clothes out of the washer. She put her clothes into the dryer. An hour later, she took her clothes out of the dryer. Then she went to work. She left the damp clothes on top of the dryer.<br>她去了洗衣房。她去的很匆忙。她需要洗洗并甩干她的衣服。然后她得去上班。洗衣机在运转。有人在用洗衣机。洗衣机停了。她打开盖子。她把湿衣服从洗衣机里拿出来。这些湿衣服是别人的。她把他们的衣服放到烘干机上面。她把自己的衣服放进洗衣机。她启动洗衣机。半小时后，她把她的衣服从洗衣机里拿出来。她把自己的衣服放进烘干机。一个小时候，她把她的衣服从烘干机里拿出来。然后她去上班。她把湿衣服留在了烘干机上面。<br>139<br>She was a babysitter in her home. She took care of 10 little children. They were not her little children. They were the sons and daughters of other people. She did not have a son. She did not have a daughter. She was not a mother. She was a babysitter. The children were 1 to 4 years old. She babysat them all. She kept them in her house all day. They all stayed in her living room. She gave them toys to play with. She gave them books to look at. She gave them pillows and blankets. Some kids played with the toys. Some kids looked at the books. Some kids slept. She usually didn’t watch the kids. She usually watched the TV.<br>她在她家做保姆。她负责照顾是个小孩儿。他们不是她的孩子。他们是别人的儿子和女儿。她没有儿子。她没有女儿。她不是一位妈妈。她是一个保姆。孩子都是1岁到4岁那么大。她一起照顾他们。她一整天都把他们关在家里。他们都呆在她的客厅。她给他们玩具玩。她给他们书读。她给他们枕头和毯子。一些孩子玩玩具。一些孩子看书。一些孩子睡着了。她经常不看着孩子。她经常看电视。<br>138</p><p>She offered her car to her brother. He said he would think about it. “Let me think about it,” he said. She called him up a week later. “Do you want my car for free?” she asked. He said, “I’m thinking about it.” She asked, “How long do you have to think about it?” He said he didn’t know. “Let me think about it some more,” he said. She called up a charity. She said, “Do you want my car for free?” The man at the charity said yes. She asked, “You don’t have to think about it?” He said, “No, I don’t have to think about it. Who has to think about a free car?” He picked up her car the next day.<br>她给哥哥提供了辆车。他说他会考虑一下。他说：“让我想想。”一周后，她给他打了电话。她问道：“你想免费拥有我的座驾吗？”他说：“我还在考虑。”她问：“你需要考虑多久？”他说他不知道。他说：“让我再想一想。”她给慈善机构打了电话。她说：“你想无偿拥有我的汽车吗？”该男子说想。她问：“你不需要再考虑一下了？”他说：“不用，谁会为一辆免费车考虑。”第二天，他把车提走了。<br>137<br>He was talking on the phone. The phone was on the table in the dining room. He was talking to his friend. They were talking about the weather. It was raining. There was a knock on his door. Someone was knocking on his door. He went to the door. He opened the door. No one was there. He went back to the phone. The doorbell rang. Someone was ringing his doorbell. He went to the door. He opened the door. No one was there. He went back to the phone. There was another knock on his door. He kept talking. The doorbell rang again. He kept talking. Fool me once, shame on you, he thought. Fool me twice, shame on me, he thought.<br>他在打电话。电话在厨房的桌子上。他在和他朋友聊天。他们在谈论天气。当时正在下雨。有人在敲他的门。有人在敲他的门。他走向门。他打开门。没有人在那。他回来接着打电话。门铃响了。有人按他的门铃。他走向门。他打开门。没有人在那。他回来接着打电话。又有人敲门。他继续聊天。门铃又响了。他继续聊天。你愚弄了我一次，可耻的使你，他想。愚弄我两次，可耻的是我，他想。<br>136<br>Nancy took her daughter Donna to the park. The park had lots of trees. It had lots of squirrels and birds. The squirrels ran up and down the trees. The squirrels chased one another. The squirrels played with one another. The birds flew around. They flew down to the ground. They flew up into the trees. The squirrels and birds were good neighbors. Nancy sat down on a bench. She took a magazine out of her purse. She turned the pages of the magazine. Donna ran over to a squirrel. She tried to catch the squirrel. Then she tried to catch a bird. Donna chased the squirrels and birds. She never caught one squirrel. She never caught one bird. But she had a lot of fun.<br>135<br>Debby was in the first grade. Her brother Tommy was in the second grade. They lived in Florida. They lived in a small town in Florida. They walked to school in the morning. They walked home from school in the afternoon. On Monday Debby and Tommy were walking home. They were walking with a couple of Tommy’s friends. Tommy told his friends that Debby still sucked her thumb. “She still sucks her thumb,” he said. His friends laughed. Debby started to cry. She ran away from Tommy and his friends. When Tommy got home, his mom asked, “Where’s Debby?” Tommy said he didn’t know. He thought she was already home. “No, she’s not home,” his mom said. She called the neighbors. Then she called the police.<br>134<br>Dad took his son Chris to the baseball game. The Los Angeles Dodgers were playing the San Francisco Giants. The Dodgers were the home team. The Giants were the visiting team. Dad and Chris walked into Dodger Stadium. Many people were there. Most of them wanted to see the Dodgers win. They wanted to see the Giants lose. Dad and Chris found their seats. They sat down. The game had already started. Chris told his dad he was hungry. His dad bought two bags of peanuts for Chris. He bought two hot dogs for Chris. He bought a big soda for Chris. A foul ball came their way. People dived for the foul ball. They knocked Chris’ soda over. His dad bought him another soda.<br>133<br>She was thinking about her boyfriend. Why did she stay with him? Why didn’t she leave him? She didn’t trust him. He said that he loved her. But he was mean to her. He said bad things. He said she was too fat. He said she should eat less. He did bad things. He gave her a cheap card from the 99 Cents store for her birthday. He gave her a bag of apples for Christmas. Then he ate all the apples. He said things that made her cry. He did things that made her cry. Then he said he was sorry. He always said he was sorry. She wanted to leave him. She wanted to find another boyfriend. But she didn’t leave him. She loved him too much.<br>她在想她的男朋友。她为什么要和他在一起？为什么她没有离开他？她不信任他。他说他爱她。但是他对她很小气。他说坏话。他说她太胖。他说她应该少吃点。他做坏事。他在她生日时给他买了一个从99分商店里买的便宜贺卡。他在圣诞节时给了她一袋苹果。 然后他把苹果全吃完了。他总是说一些惹她哭的话。他总是做一些惹她哭的事。然后他会说抱歉。他总是说自己很抱歉。她想离开他。她想另找个男朋友。但是她没有离开他。她太爱他了。</p><p>132<br>His ear had a tiny air bubble in it. It bothered him a lot. He could hear an echo when he talked. The echo bothered him a lot. He tried to get rid of the tiny air bubble. He squeezed his nose, closed his mouth, and blew really hard. Nothing happened. He shook his head like a wet dog. Nothing happened. He stood on his head for 10 minutes. Nothing happened. He stuck his finger deep in his ear and pulled it out quickly. Nothing happened. The doctor gave him nose drops. Nothing happened. The doctor gave him ear drops. Nothing happened. He took a walk on a winter day. He slipped on the ice. He hit his head on the sidewalk. The bubble was gone!<br>他耳朵里有个小泡沫。这个气泡让他很苦恼。当他说话时他能听见回声。回声让他很烦恼。他试图去除掉这个小泡沫。他挤挤鼻子，合上嘴，并且使劲儿吹。什么也没发生。他像一条被淋湿的狗那样摇头。什么也没发生。他倒立了10分钟。什么也没发生。他用手指深挖耳朵并很快把手拿出来。什么也没发生。医生给了他滴鼻剂。什么也没发生。医生给他滴耳剂。什么也没发生。他在一个冬日里散步。他滑到在冰上。他的头撞到人行道。泡沫没有了！<br>131<br>She liked to feed popcorn to the pigeons. The pigeons liked to eat her popcorn. She put popcorn in her hand. A pigeon ate the popcorn in her hand. She put popcorn on her shoulder. A pigeon ate the popcorn on her shoulder. She put popcorn in her hair. A pigeon ate the popcorn in her hair. She sat down on a bench. It was a wooden bench in the park. She put popcorn all over the bench. She put popcorn all over her clothes. She put popcorn on her head. She put popcorn on her lap. Many pigeons landed on the bench. Many pigeons landed on her. Nobody could see her. Nobody could see the bench.<br>她喜欢喂鸽子爆米花吃。鸽子都喜欢吃她的爆米花。她把爆米花放到手里。一只鸽子吃了她手里的爆米花。她把爆米花放到肩上。一只鸽子吃了她肩上的爆米花。她把爆米花放到她头发里。一只鸽子吃了她头发里的爆米花。她坐在长凳上。那是公园里的木制长凳。她把爆米花放满长凳。她在衣服上撒满爆米花。她把爆米花放到头上。她把爆米花放到膝盖上。很多鸽子落到长凳上。很多鸽子落到她身上。没人能看出她。没人能看出长凳。<br>130<br>It was late at night. The plane flew through the air. It flew through the air very fast. It flew through the air at 500 miles per hour. Five hundred miles per hour is very fast. A train does not go 500 miles per hour. A bus does not go 500 miles per hour. A ship does not go 500 miles per hour. Both the pilot and copilot were very sleepy. They both fell asleep. The plane flew past the city. Then the pilot and copilot woke up. They turned the plane around. They went back to the city. They landed at the airport. Their boss was angry. He asked, “Why is the plane late? Did you two fall asleep?” They both said, “Of course not, boss!”<br>已近是深夜了。飞机在空中飞着。它在空中飞的很快。他在空中的飞行速度是每小时500公里。1小时500公里的速度很快。火车速度达不到每小时500公里。汽车速度达不到每小时500公里。轮船速度达不到每小时500公里。驾驶员和副驾驶都很困。他们都睡着了。飞机飞过城市。然后驾驶员和副驾驶都醒了。他们把飞机转个方向。然后他们飞回了这个城市。他们在机场着陆。他们的老板很生气。他问，“”为什么飞机晚点了？你们是不是睡着了？他们两个都说，“当然不是，老板！”<br>129<br>Up, down. Up, down. Billy was doing pushups. His arms were bent. His palms were on the ground. His toes were on the ground. His back was straight. His belly was close to the ground. His nose was close to the ground. Then he straightened his arms. Now his nose was almost two feet above the ground. His back was straight. His arms were straight. His head was higher than his feet. His feet were lower than his head. That was one pushup. Then Billy bent his arms. His nose and belly almost touched the ground. Then he straightened his arms again. That was another pushup. Billy did eight more pushups. He did ten pushups. He did ten pushups every day.<br>上，下，上，下。 比利在做俯卧撑。他的胳膊弯着。他的手掌在地上。他的脚趾在地上。他的背很直。他的肚子离地面很近。他的鼻子离地面很近。然后他给挺直胳膊。现在他的鼻子离地面2英尺。他的背挺直。 他胳膊挺直。他的头比脚高。他的脚比头低。做了一个俯卧撑。然后比利弯曲双臂。他的鼻子和肚子几乎要挨到地面。然后他再次挺直胳膊。又一个俯卧撑。比利又做了8个俯卧撑。他一共做了10个俯卧撑。他每天做10个俯卧撑。<br>128<br>Jane called Lisa. Lisa said she was eating. She was eating dinner. Lisa asked Jane to call her back. Jane said she would call Lisa back. She called Lisa back the next day. Lisa said she was eating. She was eating lunch. Lisa asked Jane to call her back. Jane said she would call Lisa back. She called Lisa back the next day. Lisa said she was eating. She was eating breakfast. Lisa asked Jane to call her back. Jane said she would call Lisa back. The next day Jane called Lisa back. Lisa was eating. She was eating a snack. Lisa asked Jane to call her back. Jane said, “No. You call me back. You call me back when you aren’t eating.”<br>简给丽萨打电话。丽萨说她在吃饭。她在吃晚饭。丽萨让简给她回电话。简说她回头给丽萨打电话。第二天她给丽萨打了电话。丽萨说她在吃饭。她在吃午饭。丽萨让简给她回电话。简说她回头给丽萨打电话。第二天她给丽萨打了电话。丽萨说她在吃饭。她在吃早饭。丽萨让简给她回电话。简说她回头给丽萨打电话。第二天简给丽萨打了电话。丽萨在吃饭。她在吃快餐。丽萨让简给她回电话。简说，“不。你给我回电话吧。你不吃饭的时候给我回电话。”<br>127</p><p>Don had a pistol. It was a small pistol. He offered it to his brother Tony. Tony looked at the pistol. It was a beautiful pistol. It was black. It had a silver trigger. Tony put his finger on the silver trigger. He put the pistol in his pocket. He took it out of his pocket. He walked outside. He saw a bird on a wire. He aimed the pistol at the bird. He pulled the trigger. He said, “If the gun was loaded, I would have killed the bird.” Don said, “I’m glad it wasn’t loaded. You shouldn’t kill birds.” Tony thanked Don for the pistol. “I like this pistol. Thank you,” Tony said. He took the pistol home with him.<br>唐有把手枪。那是一把小手枪。他把它送给了他弟弟托尼。托尼看着这把手枪。手枪很漂亮。它是黑色的。它有个银色的扳机。托尼把手指放到银色扳机上。他把手枪放到衣兜里。他把它拿出衣兜。他走到外面。他看见电线上有只鸟。他用手枪对准这只鸟。他扣动扳机。他说，“如果手枪上了子弹，我能打死这只鸟。”唐说，“我很高兴它没有子弹。你不应该打死鸟。”托尼谢谢唐给了他把枪。“我喜欢这把枪。谢谢你，”托尼说。他把枪带回了家。<br>126<br>Carol and Mary are friends. Carol said she would call Mary at 7 o’clock. Carol didn’t call at 7:00. She didn’t call at 7:15. She finally called at 7:30. She apologized for calling so late. Mary said it was ok. But it wasn’t ok. Mary didn’t like people to lie. This wasn’t the first time Carol had lied. This was the fourth time Carol had lied. Mary did not trust Carol. Carol would never be her best friend. A best friend tells the truth. A best friend doesn’t lie. A best friend does not call late. A best friend does not arrive late. A best friend is always on time.<br>卡罗尔和玛丽是好朋友。卡罗尔说她将在7点给玛丽打电话。7点卡罗尔没有打电话。7点15她没有打电话。她终于在7点半打了电话。她对自己打电话这么晚道了歉。玛丽说没事。但并不是没事。玛丽不喜欢人撒谎。这不是卡罗尔第一次撒谎了。这是卡罗尔第四次撒谎。玛丽不信任卡罗尔。 卡罗尔再也不是她最好的朋友。最好的朋友会把真相说出来。最好的朋友不会说谎。最好的朋友不会打电话打晚了。最好的朋友不会迟到。最好的朋友总是很准时。</p><p>125<br>It is flu season. You must be careful. It is very easy to catch the flu. You should wash your hands often. You should get a flu shot. A flu shot will help protect you. But there is a problem with a flu shot. The problem is the needle. The nurse will stick a needle in your arm. Your arm will be sore for a day. Maybe two days. Nobody likes to have a sore arm. But which is worse—a sore arm, or a sore body? A sore body is worse than a sore arm. Do you want your arm to hurt, or do you want your whole body to hurt? Your body will hurt for a week. Maybe it will hurt for two weeks.<br>这是流感季节。你要小心。很容易就会得流感。你应该经常洗手。你应该注射流感疫苗。流感疫苗能保护你。但是注射流感疫苗有个问题。问题是针头。护士会在你胳膊上打一针。你的胳膊会疼几天。可能会是2天。没人喜欢胳膊疼。但是哪种更糟糕-胳膊疼，还是全身疼？全身疼要比胳膊疼厉害多了。你想你的胳膊疼，还是你想整个身体疼？你的身体会疼一周。或许还会疼两周。<br>124<br>Jack was angry. Joe owed him money. Joe owed him $100. Joe had borrowed $100 a month ago. He had borrowed the money 30 days ago. He said he would pay Jack back the next week. He said that he would pay Jack back in seven days. But he didn’t pay Jack back in seven days. He didn’t pay Jack back in 14 days, or 21 days, or 28 days. After 30 days, Jack was very angry. He called up Joe. “You owe me $100. You borrowed $100 from me 30 days ago. Where is my money? I want my money now,” Jack said. Joe said, “Oh, I’m so sorry. You’re right. I borrowed $100 from you. I owe you $100. Can I pay you back next week?”<br>杰克很生气。乔欠他钱。乔欠他100美元。乔在一个月前借了100美元。他30天前借的钱。他当时说下周会把钱还给杰克。他说他会7天后还杰克钱。但是7天后他没有还杰克钱。他没有在14天，或者21天，或者28天以后还杰克钱。30天后，杰克很生气。他给乔打电话。“你欠我100美元。你30天前向我借了100美元。我的钱在哪儿？我现在想要我的钱，”杰克说。桥说，“哦，真是对不起。你说的对。我从你那里借了100美元。我欠你100美元。我能下周还你吗？”<br>123<br>It was September. People were getting sick all over the world. They were getting sick from the flu. The flu was called H1N1. Some people called it swine flu. The swine farmers did not like that. They said, “Stop calling it swine flu. Swine don’t have the flu. You can’t get the flu from eating swine.” Swine are also called pigs. We get bacon and ham from pigs. We get pork from pigs. But we don’t get the flu from pigs. We get the flu from a virus. The H1N1 virus was making everyone sick. In October they distributed a new vaccine. The new vaccine protected most people from the virus. The people were happy. The swine farmers were happy.<br>那是在9月。全世界的人都在生病。他们都得了流感。流感叫H1N1。有些人叫它猪流感。养猪的农民不喜欢那种叫法。他们说，“不要叫它猪流感。猪不得感冒。吃猪肉不会得流感。”swine和pigs都是猪的意思。我们用猪肉制作腊肉和香肠。我们从猪身上得到猪肉。但是我们不会从猪身上得到流感。我们是通过病毒得的流感。H1N1病毒让每个人都生病。在10月它们研制出一种新疫苗。新疫苗保护人们免于被病毒传染。人们都很高兴。养猪的农民也都很高兴。<br>122<br>She looked at the man. He was walking on the sidewalk. She did not know this man. He was a stranger. She did not trust this man. He did not live in this neighborhood. She was driving her car slowly. She was almost home. She drove past the man. She watched him in her rear-view mirror. He stopped walking on the sidewalk. He walked up her neighbor’s driveway. A car was in the driveway. He walked up to the driver’s door. He stopped. Then he walked back to the sidewalk. What was he doing, she wondered. Then she realized what he was doing. He was testing the driver’s door. He was testing it to see if it was locked. She called the police.<br>她看看那个男的。他正走在人行道上。她不认识这个男的。 他是个陌生人。他不信任这个男的。他没在这附近住。她开车很慢。她快到家了。她开车超过这个男的。 她通过后视镜看着他。他在人行道上停下来。他走向她邻居的私人车道。一辆车在私人车道上。他走向驾驶员门。他停下来。然后他走回人行道。她想知道他在干什么。然后她意识到他在干什么。他在测试驾驶员门。他在测试这门是否锁着。她给警察打了电话。<br>121<br>He had to clean out his apartment. There was so much to clean out. He had hundreds of books. What was he going to do with them? He couldn’t keep all of them. He was moving to a smaller apartment. There was no room for all his books in his new apartment. There was no room for his bicycle. What was he going to do with his bicycle? He had a big TV. The TV was too big for his new apartment. What was he going to do with his big TV? He called up his brother. “Do you want my books, my bike, and my TV?” he asked. His brother said, “You should have a yard sale.”<br>他不得不打扫他的公寓。有太多地方需要打扫了。他有几百本书。他打算怎么处理它们呢？他不能把它们全部留下来。他要搬去一个小点的公寓。他的新公寓没有足够空间来放他所有的书。也没有足够空间放他的自行车。他打算怎么处理他的自行车呢？他有个大电视。对于他的新公寓来说，电视太大了。他打算怎么处理他的电视呢？他给他弟弟打了电话。“你想要我的书，自行车和电视吗？”他问。他弟弟说，“你应该举行一次庭院出售”<br>120<br>His dad was reading one section of the newspaper. His mom was reading another section of the newspaper. His older sister was reading another section of the newspaper. He had the comics section of the newspaper. That was the best part of the newspaper. He didn’t understand the words. He wasn’t able to read. But he liked the comics. He liked the drawings. They were all different. All the animals were different. All the people were different. All the drawings were black and white. He colored the drawings with his crayons. He showed the colored drawings to his mom. She liked them. “Those are beautiful colors,” his mom said. “Someday you will be a famous painter.”<br>他爸爸在读一部分报纸。他妈妈在读另一部分。他姐姐在另一部分报纸。他在读漫画部分的报纸。那是报纸最有意思的部分。他看不懂写的什么。他还不识字。但是他喜欢漫画。他喜欢画画。它们都不同。所有的动物都不相同。所有的人也不相同。所有的画都是黑白的。她用画笔把这些画染染色。他把涂好的画给妈妈看。她很喜欢这些画。“这些颜色真好看，”他妈妈说。“有一天你会成为一位著名的画家。”<br>119<br>She went to the circus with her parents. She was excited. She had never been to a circus. There were many clowns at the circus. She liked the clowns. They had funny faces. They had big, red noses. They wore funny hats. They wore big shoes. Their shoes were much bigger than her dad’s shoes. They were twice as big as her dad’s shoes. The clowns had loud horns. They honked their horns at each other. They didn’t talk. They used their horns to talk. Honk, honk! She laughed at the clowns. They were so funny. They made her laugh. She told her dad, “Daddy, guess what? When I grow up, I’m going to be a clown!”<br>她和爸妈去了马戏团。她很兴奋。她从来没去过马戏团。在马戏团有很多小丑。她喜欢小丑。他们的脸很滑稽。他们有大大的红鼻子。他们戴搞笑的帽子。他们穿很大的鞋子。他们穿的鞋比她爸爸穿的大好多。有她爸爸鞋子的两倍那么大。小丑有很响的喇叭。他们对彼此吹喇叭。他们不说话。他们用喇叭说话。喇叭，喇叭！她朝着小丑笑。他们是那么好玩。他们逗得她一直笑。她告诉爸爸，“爸爸，猜猜看是什么？”当我长大了，我也要做一个小丑！<br>118<br>He was driving home. He couldn’t wait to get home. He was hungry. He hadn’t eaten in eight hours. Eight hours ago he had eaten two hot dogs. The hot dogs were delicious. He had put lots of mustard, onions, and relish on the hot dogs. They were so delicious. He got home. He walked upstairs. He walked into his apartment. He opened his refrigerator. He took a package out of the refrigerator. It was a package of hot dogs. He took two hot dogs out of the package. He put them into the microwave. He took mustard, onions, and relish out of his refrigerator. He grabbed two hot dog buns. He was ready to eat two more delicious hot dogs!<br>他正在开车回家。他迫不及待回家。他很饿。他已经8个小时没吃饭了。8小时前他吃了2个热狗。那两个热狗很好吃。他在热狗上放了很多芥末，洋葱和小菜。都很好吃。他回到家。他上了楼。他走进自己的公寓。他打开冰箱。他从冰箱里拿出来一个袋子。那是一袋热狗。他从袋子里拿出两个热狗。他们它们放进微波炉。他从冰箱里拿出芥末，洋葱和小菜。他匆忙错了两个热狗面包。他已经准备好再吃两个热狗了！<br>117<br>He was bored. He wanted to do something fun. He wanted to do something fun with his friend. He called up his friend. “I’m bored. Let’s do something fun!” he said. His friend said, “That sounds great. I’m glad you called. I’m bored, too. What do you want to do?” He said he wanted to go to the beach. His friend said that sounded great. He picked up his friend in his car. They went to the beach. They threw a Frisbee to each other. They swam in the ocean. They built a big sand castle. They watched the sailboats. They watched the sea gulls. He drove his friend home. “That was fun! Let’s do it again sometime,” his friend said.<br>他很烦。他想做些有趣的事情。他想和他的朋友做些有趣的事情。他给他朋友打电话。“我很烦。让我们做些有趣的事吧！”他说。他朋友说，“听起来很棒。很高兴你打电话过来。我也很烦。你想做什么？”他说他想去海边。他朋友说听起来不错。他开车接上他朋友。他们去了海边。他们扔飞盘玩。他们在大海里游泳。他们建造了一座很大的沙子城堡。他们着帆船。他们看海鸥。他开车把朋友送回家。“很有趣！抽个时间咱们再做一次，”他朋友说。<br>116<br>Patty needed help with her computer. She asked a coworker to help her. Patty said she would treat her coworker to a nice dinner. Her coworker asked, “What kind of dinner?” Patty said a nice Chinese dinner. Her coworker said that sounded good. She would come over to Patty’s apartment at 7 o’clock. Patty went home after work. She made a delicious Chinese dinner. But her coworker didn’t show up at 7 o’clock. Her coworker didn’t show up at 7:30. Her coworker didn’t call. Patty called her coworker. No one answered. At 9:30 Patty went to bed. The phone rang. It was her coworker. Patty didn’t answer the phone. Tomorrow she would ask someone else to help her.<br>帕蒂需要人帮她整电脑。她让一个同事帮她。帕蒂说她会请她同事吃顿大餐。她同事说，“什么大餐？”帕蒂说是一顿丰盛的中国晚餐。她同事说听起来很不错。她会在7点到达帕蒂的公寓。帕蒂下班后回到家。 她制作了一顿很好吃的中国晚餐。但是她同事7点没有出现。她同事7点半还没出现。她同事没有打电话。她给她同事打了电话。没有人接听。9点半帕蒂要睡觉了。电话响了。是她的同事。帕蒂没有接电话。明天她会找别人帮她。<br>115<br>He loved his new jacket. It was his favorite jacket. He loved the color. It was tan. He loved the weight. It was medium weight. It was not too light. It was not too heavy. He loved the fit. It fit him well. He put the jacket on. He looked at the jacket in the mirror. It looked good. What a good-looking jacket, he thought. He went to the doctor’s office. The office was warm. He took his jacket off. He put it on the chair next to him. A nurse called his name. He stood up. He went to the examination room. He forgot that his jacket was on the chair. But it wasn’t on the chair for long. Another patient took it home.<br>他很喜欢自己的新夹克衫。 那是他最喜欢的夹克衫。他喜欢它的颜色。它是茶色的。他喜欢它的重量。它是中等重量。它不是很轻。它不是很重。他喜欢它的大小。它穿起来很合身。他穿上夹克衫。他在镜子里看看夹克衫。它看起来很棒。多么好看的夹克衫啊，他想。他去了医生办公室。办公室很暖和。他脱掉夹克衫。他把夹克衫放到他旁边的椅子上。一个护士叫他的名字。他站起来。他去了检查室。他忘记了夹克衫还在椅子上。但是它在椅子上没有待太久。另一个病人把它带回了家。<br>114<br>They walked onto the dock. They got into the boat. They had all their fishing gear. They were going fishing. They loved to go fishing. Sometimes they caught a lot of fish. Sometimes they caught a couple of fish. Sometimes they caught no fish. But fishing was fun even if they caught no fish. The boat left the dock. The boat stopped in the middle of the lake. Everyone put worms on their hooks. Some people put live worms on their hooks. Some people put dead worms on their hooks. Some people put rubber worms on their hooks. Everyone dropped their hooks into the water. Then they waited. They waited for the fish to bite the worms.<br>他们走上码头。他们走上船。他们准备好了所有的钓鱼工具。他们要去钓鱼。他们喜欢钓鱼。有时他们钓到很多鱼。有时他们钓到几条鱼。有时他们钓不到鱼。虽然钓不到鱼，但是钓鱼本身很有乐趣。船驶出了码头。船在湖中心停下。每个人都在鱼钩上放上鱼饵。有些人在鱼钩上放上活虫子。有些人在鱼钩上放上死虫子。有些人在鱼钩上放上橡胶虫子。所有人都把鱼钩甩到水里。然后他们等着。他们等着鱼来咬虫子。<br>113<br>He had very little money. It was cold outside. It was winter. But he was inside. He was inside his apartment. Right now he was okay, because he was inside his apartment. But next month he would not be okay. Next month he would be outside his apartment. He had lost his job. He couldn’t pay his rent. He had called his landlord. He asked his landlord if he could stay an extra month for free. His landlord said no. His landlord said, “If you can’t pay the rent, you must go.” Where could he go? He would sleep in his car. But a car is a cold place in the winter. He was very sad.<br>他没多少钱。外面很冷。那是冬天。但是他在里面。他在他的公寓里面。现在他很好，因为他在他的公寓里面。但是下个月他就不会这么好了。下个月他将离开他的公寓。他失业了。他付不起房租。他给房东打了电话。他问房东自己是否可以免费多住一个月。他的房东拒绝了。他的房东说，“你如果付不起房租，你就离开。”他能去哪里呢？他可以睡在车里。但是在冬天睡车里很冷。他很难过。<br>112<br>There was something wrong with his leg. It burned. But it burned in one spot only. He didn’t know what was wrong. The spot was smaller than a dime. It was on the back of his leg. He picked up a hand mirror. He used the hand mirror to look at the back of his leg. He saw a small lump. He put his finger on the lump. The lump was hard. It wasn’t a soft lump. The lump felt like a small stone. It was like a small stone under his skin. But it was like a small stone that was on fire. It burned. Something was wrong. He needed to see a doctor.<br>他的腿出了毛病。它被烧伤了。但是它只被烧了一块。他不知道怎么回事。烧伤面小于一个硬币。烧伤的地方在他的腿背侧。他拿起一个手镜。他用手镜看看腿背侧。他看到一个小肿块。他把手指放到肿块上。肿块很硬。那不是个软肿块。肿块摸起来像是个小石头。像是个小石头在他的皮肤下面。但是它像是个正在燃烧的小石头。它被烧到了。有些不对劲儿。他需要看医生。<br>111<br>Susan didn’t like the color of her hair. Her hair was changing color. It used to be all black. But now it was turning gray. She didn’t like the gray hair. Gray hair made her look older. She didn’t want to look older. She made an appointment with the beauty salon. A week later, she went to the beauty salon. The hairdresser colored Susan’s hair. She added a little bit of purple color to Susan’s hair. When the hairdresser finished, Susan looked at her hair. She liked it. She couldn’t see any gray hair. All she could see was black hair with a little bit of purple tint. The purple tint looked nice. Susan hoped her boyfriend would like it.<br>苏珊不喜欢她头发的颜色。她的头发在变色。过去都是黑色的。但是现在开始变成灰色。她不喜欢灰色头发。灰色头发让她看起来更老。她不想看起来很老。她约了美容院。一周后，她去了美容院。理发师给苏珊的头发染染色。她给苏珊的头发染了一点紫色。当理发师染完后，苏珊看看自己的头发。她很喜欢这个颜色。她看不到任何灰色头发了。她能看到的就只有黑色头发带一点点紫色。紫色头发很好看。苏珊希望她的男朋友会喜欢这个颜色。<br>110<br>The bathroom wall had a nail in it. He pulled the nail out of the wall. It was a big nail. When he pulled the nail out, a hole was in the wall. It was a big hole. He wanted to repair the hole. He went to Wal-Mart. Wal-Mart has everything for sale. Wal-Mart is a very popular store. He asked a clerk, “How can I fix a nail hole in my bathroom wall?” The clerk said it was very simple. A nail hole was easy to fix. “Just buy this tube of Nail Hole Filler. Then squeeze it into the hole,” the clerk said. He took the filler home. He squeezed it into the hole. He let the filler dry overnight. The next day, there was no hole!<br>卫生间墙上有个钉子。他把钉子从墙上拔出来。那是个大钉子。当他把钉子拔出来时，墙上出现了一个洞。那是个大洞。他想把洞堵上。他去了沃尔玛。沃尔玛出售各类商品。沃尔玛是个很受欢迎的商店。他问一个职员，“我怎么才能把我卫生间上的钉子洞补上？”职员说很简单。一个钉子洞很容易补上。“买管这种钉孔填料。然后把它挤进洞里，”这个职员说。他把填料带回家。他把它挤进洞里。他让填料整晚干透。第二天，洞没有了！<br>109<br>The woman had eight babies at one time. She was famous. Nobody could believe it. It was a world record. How could anyone have eight babies at one time? Her doctor had given her special drugs. The special drugs made her have eight babies. She was happy to have eight babies. “I grew up all alone,” she told the reporters. “I did not like being alone. I decided that I would have many babies when I grew up. So now I have many babies. I am so happy. I am a lucky woman to have eight babies. I will love them all, and they will all love me.”<br>这个女人一下生了8个孩子。她出名了。没人相信这件事。这是个世界纪录。一个人怎么能一下生8个孩子呢？她的医生给她开了特殊的药品。这种特殊药品使她一下生了8个孩子。她很开心自己有8个孩子。“我自己孤单地长大，”她告诉记者。“我不喜欢孤单。我决定当我长大后我会生很多孩子。所以现在我有很多宝宝。我很幸福。我是一个有8个宝宝的幸福女人。我会爱他们，他们也都会爱我。”<br>108<br>The country is full of CRIminals. CRIminals are in every city. CRIminals are on every block. They break all the laws. They don’t care about the laws. There are thousands of laws. The criminals break all the laws. They laugh when they break the laws. The police watch the criminals. They try to arrest the criminals. The criminals shoot at the police. They kill the police. Last week they shot down a police helicopter. The helicopter crashed to the ground. The criminals ran over to the helicopter. All the policemen on the helicopter were dead. The criminals stole the guns from the dead policemen. They walked away from the helicopter. They were laughing.<br>这个国家到处都是罪犯。每个城市都有罪犯。每个街区都有罪犯。他们违反各项法律。他们不理会法律。法律有成千上万种。这些罪犯违反各种法律。当他们违法时他们会笑。警察监视这些罪犯。他们试图去抓住这些罪犯。这些罪犯朝警察开枪。他们打死警察。上周他们打掉一架警用直升机。直升机在地上坠毁。这些罪犯跑向直升机。直升机上所有警察都牺牲了。罪犯们从牺牲的警察身上偷来枪。他们步行离开了直升机。他们在笑。<br>107<br>He played the piano. He played it very well. He started playing the piano when he was six years old. That was seven years ago. Now he was 13 years old. He was very good. He won one piano contest after another. A famous piano teacher heard him play the piano. The teacher said, “I want to bring you to New York. I will teach you how to be even better. I will teach you how to be the best piano player in the whole world.” He didn’t like that idea. He wanted to stay at home. He wanted to stay with his parents and his friends. His parents wanted him to go. They said they would visit him in New York every weekend.<br>他弹钢琴。他弹得非常好。他6岁开始弹钢琴。那是7年前。现在他13岁了。他很厉害。他赢得了一个有一个钢琴比赛。一个著名的钢琴老师听见他弹钢琴。老师说，“我想把你带到纽约。我将教你如何弹得更好。我将教你如何成为世界上最厉害的钢琴演奏家。”他不喜欢那个主意。他想呆在家。他想和他的父母还有朋友呆在一起。他父母想让他去。他们会每周末都去纽约看他。</p><p>106<br>She won the contest. She won the Rose Queen contest. She was the new queen for the Rose Parade. She was so happy. She would be in the parade on New Year’s Day. She was so excited. She would be on TV. Millions of people would see her. She would wave to people on the sidewalks in Pasadena. Pasadena was the home of the Rose Parade. Every year, thousands of people spent New Year’s Eve on the sidewalks of Pasadena. They wanted to see the Rose Parade. Almost 50 floats are in the Rose Parade every year. All the floats are beautiful. They have lots of beautiful flowers. She would ride on a beautiful float. She would wave to everyone. Her parents and friends were so happy for her.<br>她赢得了竞赛。她赢得了玫瑰女王大赛。她是这次玫瑰花车游行的新任女王。她很高兴。在新年那天他会参加阅兵。她很兴奋。她将会上电视。数百万人会看到她。她会向帕萨迪纳人行道上的人们挥手。帕萨迪纳是玫瑰花车游行的家乡。每年，成千上万的人们都会在帕萨迪纳的人行道上度过新年。她们想看玫瑰花车游行。每年大概会有50辆花车参加玫瑰花车游行。所有花车都很漂亮。花车上有很多漂亮的花。她会乘上一辆漂亮的花车。她将给每个人挥手。她父母和朋友将会为她感到高兴。<br>105<br>He looked in the mirror. What were all those red spots on his face? Every morning he had fresh red spots on his face. Were they insect bites? Were insects biting him at night? What were those red spots? They would usually disappear in a few hours. Then his face would look normal. It would look like a normal face. It would have no red spots. But every morning, he had an ugly face. All those red spots! What was happening at night? Was it his pillow? Was something in his pillow? Was something in his pillow making the red spots? He would buy a new pillow. Maybe his pillow was the problem.<br>他照照镜子。他脸上的红点是什么？每天早上他脸上都会出一些红点。是昆虫咬的？是昆虫晚上咬的他？那些红点是什么？一般它们几个小时后会消失。然后他的脸就恢复正常。他的脸看起来很正常。那时候就会没有红点。 但是每天早上，他的脸就很丑。都是那些红点惹的祸！晚上发生了什么？是他的枕头有问题？是他枕头里有什么东西？是他枕头里有什么东西才导致的红点？他要买一个新枕头。也许是枕头的问题。<br>104<br>Davy was 10. His dad was driving the car. The radio was on. His dad was listening to the radio. The man on the radio was talking about an accident. The accident was on the freeway. Two people were dead. The accident had just happened 30 minutes ago. His dad told him that life can be short. Accidents happen everywhere. They happen to everyone. “You must always be careful, Davy,” his dad said. “Never be in a hurry. Always pay attention to other drivers.” Davy said he would be a careful driver. He would never be in a hurry. He would always pay attention. “Can I drive the car now?” he asked his dad.<br>戴维10岁了。他爸爸在开车。收音机开着。他爸爸正在听收音机。收音机上的男的正在谈论一起事故。事故发生在告诉公路上。死了两个人。事故发生在30分钟前。他爸爸告诉他生命很短暂。到处都会发生事故。事故会发生在任何人身上。“你必须时刻小心，戴维，”他爸爸说。“永远不要着急。要一直注意其他司机。”戴维说他会成为一个很小心的司机。他永远都不会着急。他也会一直很注意。“我现在能开车吗？”他问爸爸。<br>103<br>His dad liked to fly balloons. His dad bought big balloons and filled them with helium. Helium is a gas. It is a gas that makes balloons float into the sky. One day his dad brought home a new balloon. He took it out of the box. He took it outside. He tied the balloon to spikes with ropes. The spikes were in the ground. The ropes and spikes kept the balloon on the ground. He filled the balloon with helium. He asked Junior what the new balloon looked like. “It looks like a flying saucer!” said Junior. “It looks like a real flying saucer! Is there an alien inside?”<br>他爸爸喜欢放飞气球。他爸爸买打气球并充上氦气。氦气是一种气体。那是一种可以让气球飘上天的气体。一天他爸爸买回家一个打气球。他把它从盒子里拿出来。他把它拿到外面。他用锥子上的绳子绑住气球。锥子都在土里。这些绳子和锥子可以让气球停在地上。他把气球充上氦气。他问朱尼尔这个新气球什么样。“它看起来像一个飞碟！”朱尼尔说。“它看起来像一个真正的飞碟！里面有外星人吗？”<br>102<br>The cat was not moving. It was lying in the grass. The cat was black and white. It was a pretty black and white cat. It was cold outside. The cat was lying on its stomach. It was dark outside. The porch light shined on the cat. The cat looked at Sissy. “Mom, can I have the cat?” she asked her mom. Her mom came outside on the porch. She looked at the cat. “That is a pretty cat,” her mom said. “Can I have it?” Sissy asked. Her mom said no. Maybe the cat belonged to another family. Maybe the cat was wild. If it was wild, it might bite Sissy.<br>猫没有动。它躺在草地上。这是只黑白色的猫。这是只很漂亮的黑白色猫。外面很冷。猫压着肚子躺着。外面已经黑了。走廊灯照在猫身上。猫看看茜茜。“妈妈，我能养这只猫吗？”她问妈妈。她妈妈从走廊出来。她看看这只猫。“很漂亮的猫，”她妈妈说。“我能要了它吗？”茜茜问。她妈妈说不行。也许这只猫是别人家的。也许这是只野猫。如果它是野猫，它可能会咬茜茜。<br>101<br>Dotty looked at the door. It was a closet door. The door had a silver handle. The silver handle was round. The round, silver handle was a doorknob. One day she tried to turn the doorknob. She tried to open the closet door. But the doorknob didn’t turn. She couldn’t open the closet door. The closet door wouldn’t open. The door was locked. “Why is the door locked?” Dotty asked her mom. Her mom said it was locked for her safety. “What’s behind the door?” she asked her mom. Her mom said a rifle was behind the locked door. Daddy kept a rifle in the closet.<br>多蒂看看门。那是个壁橱门。门有银色把手。银色把手是圆形的。这个圆形的，银色手柄是个门把手。一天她试图打开门把手。她试图打开壁橱门。但是壁橱门拧不开。她打不开壁橱门。壁橱门打不开。壁橱门是锁着的。“为什么壁橱门是锁着的？”多蒂问妈妈。她妈妈说锁着壁橱门是为了她的安全。“门后面是什么？”她问妈妈。她妈妈说门后有把步枪。爸爸在壁橱里藏了一把步枪。<br>100<br>Ed looked at the kitchen floor. The kitchen floor was dirty. There were little pieces of food on the floor. Ed saw bread crumbs. He saw cracker crumbs. He saw cheese crumbs. He saw little pieces of bread. He saw little pieces of cracker. He saw little pieces of cheese. He needed to sweep the floor. Ed didn’t want bugs in his kitchen. Bugs like to eat little pieces of food. He took the broom out of the kitchen closet. He took the dust pan out of the kitchen closet. Ed swept the floor. He swept all the pieces of food into the dust pan.<br>艾德看着厨房地板。厨房地板很脏。地板上有食物碎渣。艾德看见面包屑。 他看见全麦面包渣。他看见奶酪渣。他看见小块面包。他看见小块全麦面包。他看见小块奶酪。他得扫扫地。艾德不想他的厨房里有虫子。虫子爱吃食物碎渣。他从厨房壁橱里拿出笤帚。他从厨房壁橱里拿出簸箕。艾德扫扫地。他把所有食物碎渣都扫进了簸箕。<br>99<br>Tom was bored. He didn’t have anything to do. He wasn’t interested in doing anything. He didn’t want to watch TV. Tom didn’t want to listen to the radio. He didn’t want to play sports. He didn’t want to use the computer. He didn’t want to read books. “I’m bored,” Tom said. “What can I do? I want to do something interesting.” Tom’s father had an idea. “I have an idea,” his father said. “Why don’t you collect coins? Coins are fun to collect. And coins are everywhere. You see coins every day. Some coins are valuable. They will make you rich.”<br>汤姆很烦。他无事可做。他对任何事都不感兴趣。他不想看电视。他不想听收音机。他不想做运动。他不想玩电脑。他不想看书。“我很烦，”汤姆说。“我能做点什么呢？我想做些有趣的事情。”汤姆的爸爸有个好主意。“我有个好主意，”他爸爸说。“你为什么不集硬币？”集硬币很有趣。并且到处都有硬币。你每天都能看见硬币。一些硬币很值钱。它们会使你变得富有。<br>98</p><p>Maria is 18. She will go to college in September. She will be a college student in September. But right now it is summer time. It is June. Maria needs a job. She needs money for college. She needs money to buy books for college. She wants a job. Maria went to a restaurant. “Can I have a job?” she asked. The restaurant manager said, “I’m sorry. I don’t need anyone right now.” Maria went to a book store. “Will you give me a job?” she asked. The book store manager said, “I’m sorry. I don’t need new workers right now.”<br>玛利亚18岁了。9月份她将上大学。9月份她就会成为一名大学生。但是现在是暑假。现在是6月份。玛利亚需要一份工作。她需要为上大学挣点钱。她需要钱来买大学的课本。她想找份工作。玛利亚去了一个饭店。“我能在这里工作吗？”她问。饭店经理说，“不好意思。我现在不缺人手。”玛利亚去了一个书店。“我能在这里工作吗？”她问。书店经理说，“不好意思。我现在不需要新员工。”<br>97<br>Don has cancer. He is 12 years old. But he is lucky. The doctor knows how to fix Don’s cancer. The doctor told Don’s mom to bring him to the hospital. Don’s mom said no. She will let God fix Don’s cancer. God will fix Don’s cancer. She does not trust the doctor. She doesn’t trust the hospital. She only trusts God. The doctor said Don will die. He said Don must come to the hospital. Don’s mom ran away. She ran away with Don. The police are looking for Don and his mom. They want to save Don’s life. Only the doctor can save Don’s life.<br>唐得了癌症。他12岁了。但是他很幸运。医生知道怎样来治疗唐的癌症。医生告诉唐的妈妈把他送到医院。唐的妈妈拒绝了。她将让山地来治疗唐的癌症。上帝会治疗唐的癌症。她不相信医生。她不信任医院。她只相信上帝。医生说唐会死掉。他说唐必须得住院。唐的妈妈跑走了。她带着唐跑走了。警察正在寻找唐和他妈妈。他们想救唐的生命。只有医生能挽救唐的生命。<br>96<br>Margaret made a fresh salad. She peeled a yellow banana. She peeled a red apple. She peeled a green cucumber. She peeled an orange carrot. She peeled a brown potato. She peeled a white onion. She peeled a white egg. She chopped everything up with a sharp knife. She chopped everything into little pieces. She used her sharp knife to chop up the banana, apple, cucumber, carrot, potato, onion, and egg. She chopped up a tomato. She put all the little pieces into a bowl. She opened a bottle of salad dressing. She poured salad dressing on her fresh salad.<br>玛格丽特做了新鲜沙拉。她剥开一根黄香蕉。她削了一个红苹果。她把绿黄瓜削了皮。她把橙色萝卜削了皮。她把棕色土豆削了皮。她剥开一个白色洋葱。她打了一个白色鸡蛋。她用一把锋利的菜刀把所有食物切碎。她把所有食物切成小块。她用锋利的菜刀把香蕉，苹果，黄瓜，胡萝卜，土豆，洋葱和鸡蛋切碎。她把一个西红柿切碎。她把所有碎块放入一个碗里。她打开一瓶色拉调料酱。她把色拉调料酱倒在她的新鲜色拉上。<br>95<br>Bill stole a wheelchair. The wheelchair did not belong to him. It belonged to someone else. The wheelchair belonged to Jenny. Jenny could not walk very far. She got tired very fast. It was her wheelchair. Jenny was inside her house. Her wheelchair was on the front porch. Bill saw the wheelchair on the front porch. He looked around. Nobody was around. He walked up to the front porch. Bill grabbed the wheelchair. He pushed it in front of him. He pushed the wheelchair to his home. He opened the door to his home. Bill pushed the wheelchair into his home. “Look, Grandma,” he said, “I brought you a new wheelchair.”<br>比尔偷了一辆轮椅。这辆轮椅不属于他。它属于别人。这辆轮椅属于珍妮。珍妮不能走太远的路。她很快就会感到很累。那是她的轮椅。珍妮在家里。她的轮椅在前门廊。比尔看见了前门廊的轮椅。他看看四周。四周没人。他走向前门廊。比尔抓住轮椅。他把它推到他前面。他把轮椅退回了他家。他把轮椅推进了家里。“看，奶奶，”他说，“我给你买了辆新轮椅。”<br>94<br>Mike washed his hands. He washed his hands with soap and water. He brushed his teeth. He brushed his teeth with toothpaste and water. He turned off the water. The sink was full of water. The water did not go down the drain. The water stayed in the sink. What was the matter? Why didn’t the water go down the drain? Mike waited and waited. The water didn’t go anywhere. It sat in the sink. Mike opened a bottle of liquid Drain Opener. He poured the Drain Opener into the sink. Mike waited one minute. Then all the water went down the drain.<br>麦克洗洗双手。他用水和香皂洗洗双手。他刷刷牙。他用水和牙膏刷刷牙。他关掉水。水槽里的水满了。水没有顺着排水管流走。水还在水槽里。怎么回事？为什么水没有顺着排水管流走？麦克等啊等。水没有流走。它还呆在水槽里。麦克打开一瓶下水道疏通剂。他往排水管里倒了些疏通剂。 麦克等了一分钟。然后水都顺着排水管流走了。<br>93<br>Liz looked at the round plastic container. The plastic container was empty. There was no milk in the container. Liz wanted to drink some milk. But she was out of milk. She needed to make more milk. She opened the cabinet. She grabbed a box of powdered milk. She opened the box. She took the lid off the round plastic container. Liz poured some powder into the container. She filled up the container with cold water. She put the lid back on the container. Liz shook the container hard. She shook it and shook it. She poured some cold milk into a glass. She drank the cold milk in the glass.<br>利兹看着这个圆圆的塑料容器。这个塑料容器是空的。容器里没有牛奶。利兹想喝些牛奶。但是她没有牛奶了。她需要制作更多牛奶。她打开橱柜。她拿起一盒奶粉。她打开盒子。她把圆塑料容器的盖子掀开。利兹往容器里倒了些奶粉。她用凉水填满容器。她用容器盖子重新盖上。利兹使劲摇容器。她摇啊摇啊。她把一些冷牛奶倒进一个玻璃杯。她喝了玻璃杯里的冷牛奶。<br>92<br>Helen turned on her flashlight. Nothing happened. The light did not come on. There was no light. What was wrong with her flashlight? She unscrewed the top of the plastic flashlight. Helen took the two batteries out of the plastic tube. She looked at the two batteries. They were “D” batteries. They looked okay. They did not look bad. But maybe they were dead batteries. She opened a package of new batteries. She put two new “D” batteries into the plastic tube. Helen screwed the top back onto the plastic flashlight. She turned on her flashlight. The light worked!<br>海伦打开手电筒。什么也没发生。灯不亮了。没有灯光了。她的手电筒怎么了？她拧开塑料手电筒的顶端。海伦把两节电池从塑料管里拿出来。她看看这两节电池。它们是“D”号电池。它们看起来没问题。它们看起来也没坏。但是也许它们是废电池。她打开一包新电池。她把两节新“D”号电池放进塑料管里。海伦拧紧塑料手电筒的顶端。她打开手电筒。又有电了！<br>91<br>Bob pushed the button on the door handle. He pulled on the door handle. He opened the car door. He got into the car. He sat down. He sat down in the driver’s seat. He sat down behind the steering wheel. Bob put the seat belt on. He buckled the seat belt. The seat belt went across his chest. The seat belt went across his lap. The seat belt kept him safe. He put his car key into the ignition. The ignition was next to the steering wheel. The ignition starts a car. Bob turned the car key in the ignition. The car started.<br>鲍勃按了门把手上的按钮。他拉开门把手。他打开车门。他钻进车里。他坐下来。他坐到司机位上。他坐在放线盘后面。鲍勃系上安全带。他扣紧安全带。安全带绕过他的胸部。安全带绕过他的膝盖。安全带保证了他的安全。他把车钥匙插进点火开关。点火开关就挨着方向盘。点火开关能启动一辆汽车。鲍勃转了下点火开关里的钥匙。汽车启动了。<br>90<br>Pat looked at the washer. The washer had dials on it. It had two dials on it. There were words next to each dial. Each dial had three words next to it. The words next to one dial were Small, Medium, and Large. This dial was for the size of the load. Did Pat have a small load, a medium load, or a large load? The words next to the other dial were Cold, Warm, and Hot. Did Pat want to wash her clothes in cold water, warm water, or hot water? Pat turned one dial to Large, and the other dial to Hot. Then she pushed the Start button on the washer.<br>帕特看看洗衣机。洗衣机有按钮。上面有两个按钮。每个按钮旁都有文字。每个按钮旁都有3个字。每个按钮旁的字都是小，中，大。这个按钮表示负荷量。帕特有少量，中量或者大量衣服要洗？另一个按钮旁的字是冷，温，热。帕特用冷水，温水还是热水洗了她的衣服？帕特把一个按钮调到大，另一调到热。然后她按了洗衣机开始按钮。<br>89</p><p>Jim had two separate sheets of paper. He wanted to put the two sheets of paper together. He did not want to glue them together. He did not want to use glue. He did not want to staple them together. He did not want to use a staple. What did Jim want to use? He wanted to use a paper clip. He wanted to put the two sheets of paper together with a paper clip. He picked up a paper clip. It was a metal paper clip. It was a silver paper clip. Jim put the silver metal paper clip on both sheets of paper. Now the sheets of paper were together. They were not separate.<br>吉姆有两张没连在一起的纸。他想把两张纸连一起。他不想用胶水把它们粘住。他不想用胶水。他不想把它们订一起。他不想用订书机。吉姆想用什么？他想用一个纸夹。他想用一个纸夹把这两张纸放一起。他拿起一个纸夹。它是一个金属纸夹。它是个银色纸夹。他用银色纸夹夹住两张纸。现在两张纸放一起了。它们再不是分开的了。<br>88</p><p>Sandra picked up the bag of peanuts. It was a bag of roasted peanuts. She opened the bag. She poured out some roasted peanuts onto the table. There were about eight peanuts on the table. The peanuts were still in their shells. Each peanut was in its shell. Sandra picked up a peanut. She held it in her hands. She put her thumbs on the peanut. She broke the shell open with her thumbs. Sandra opened the shell. Inside the shell were two little red peanuts. Each peanut had red skin on it. Thin red skin covered both little peanuts. She took a little red peanut out of the shell. Sandra ate the little peanut with the red skin on it.<br>桑德拉拿起花生袋子。那是一袋烤花生。她打开袋子。她把一些烤花生倒在桌子上。桌子上有8个烤花生。花生豆还在花生壳里。每个花生仁都在壳里。桑德拉拿起一个花生。她把花生放在手里。她把拇指压住花生。她用拇指剥开了花生。桑德拉打开花生壳。壳里面有两粒红色的花生豆。每个花生豆都有红色的皮。薄薄的红色的皮包裹着花生豆。她把一个小花生豆从壳里拿出来。桑德拉吃了这粒有红色外皮的小花生豆。<br>87<br>Fay went into the bathroom. She turned on the cold water. She turned on the hot water. Warm water came out of the faucet. She put her hands under the warm water. She rubbed her hands together. She picked up a bar of white soap. She rubbed the soap with her hands. She put the soap back. She washed her hands for half a minute. Then she rinsed her hands with the water. She turned off the hot water. She turned off the cold water. She dried her hands with a towel.<br>费伊走进浴室。她把冷水打开。她把热水打开。温水从水龙头里流出来。她把手放在温水下。她搓搓双手。她拿起一块白色香皂。她用手搓搓香皂。她把香皂放回去。她洗了半分钟手。然后她用水冲冲手。她把热水关掉。她把冷水关掉。 她用毛巾擦干手。<br>86</p><p>Susan likes to eat apples. She likes to eat big red apples. She likes to wear a blue hat. She wears a big blue hat on her head. She wears a hat and eats an apple. She drinks some water from a white cup. Susan drinks water and eats apples. She doesn’t cut the apple with a knife. A knife is sharp. She just eats the apple. She holds the apple in her hand. She bites into the apple with her teeth. She licks her lips. She drinks more water. She wipes her mouth with her hand.<br>苏珊喜欢吃苹果。她喜欢吃又大又红的苹果。她喜欢带一顶蓝色帽子。她头上戴了一顶大大的蓝色帽子。她戴着帽子吃着苹果。她用白色杯子喝了点水。苏珊一边喝水一边吃苹果。她没有用水果刀切苹果。水果刀太锋利。她只是吃着苹果。她把苹果拿在手里。她用牙咬苹果。她舔舔嘴唇。她又喝了点水。她用手擦擦嘴。<br>85<br>The baby birds sat in the nest. There were two baby birds. They were in the nest. The nest was in the tree. The baby birds were waiting for mama bird. They were hungry. When would mama bird be back? Then they saw mama bird. She landed on the nest. She had two worms in her mouth. She gave one worm to each baby bird. The worms were delicious. The baby birds ate the worms very fast. Then they opened their mouths. They wanted another worm. Mama bird flew away. She went to get more worms.<br>鸟宝宝在巢里坐着。那里有两只鸟宝宝。它们在鸟巢里。鸟巢搭载树上。鸟宝宝们在等待鸟妈妈。它们很饿。鸟妈妈什么时候才能回来？然后它们看见了鸟妈妈。 她飞落到鸟巢。她嘴里衔着两只虫子。她给每只鸟宝宝喂了一只虫子。虫子很香。 鸟宝宝们很快就吃掉了虫子。然后它们张开嘴。它们还想吃虫子。鸟妈妈飞走了。她去给它们捉更多虫子吃。<br>84<br>Greg took the pen out of his pants pocket. He took his keys out of his pants pocket. He took his cell phone out of his pants pocket. He took his wallet out of his pants pocket. He put everything into a plastic tray. He took his shoes off. Greg was at the airport. He had to get on the airplane. But he had to pass through security first. He passed through security. He put his pen and keys back into his pocket. He put his cell phone and wallet back into his pocket. He put his shoes back on his feet. He got on the airplane.<br>格雷格从他裤兜里拿出钢笔。他从裤兜里拿出钥匙。他从裤兜里拿出手机。他从裤兜里拿出钱包。他把所有东西放进一个塑料托盘。他把鞋脱掉。格雷格在机场。他得搭乘飞机。但是首先他得通过安检。他通过了安检。他把钢笔和钥匙放回裤兜。他把手机和钱包放回裤兜。他重新穿上鞋。他登上了飞机。<br>83</p><p>Tracy looked at the flag. The flag is red, white, and blue. It has 50 white stars. The white stars are on a blue square. The flag has six white stripes. It has seven red stripes. All the stripes are horizontal. They are not vertical. The stripes do not go up and down. They go from left to right. Tracy loves her flag. It is the flag of her country. It is a pretty flag. No other flag has 50 stars. No other flag has 13 stripes.<br>特蕾西看看旗子。旗子是由红色，白色和蓝色组成的。它有50颗白色的星星。白色星星都在一个蓝色方块里。旗子有6条白色条纹。它有7条红色条纹。所有的条纹都是水平的。他们不是垂直的。条纹没有直上直下。 它们从左向右排列。特雷西很爱她的旗子。那是她国家的国旗。国旗很漂亮。没有其它国家的国旗有50颗星星。没有其它国家的国旗有13个条纹。<br>82</p><p>William looked at his bowl of soup. It was chicken soup. There was white rice in the soup. William liked rice. There were pieces of chicken in the soup. William loved chicken. The pieces of chicken were white. They were small and square. They weren’t big and round. There were pieces of orange carrots in the soup. William didn’t like carrots. He picked up a piece of carrot with his fingers. He put it on the table next to his bowl. He took all the pieces of carrots out of the bowl. He put them all on the table. Then he ate his soup.<br>威廉姆看看他碗里的汤。那是鸡汤。汤里有白米饭。威廉姆爱吃米饭。汤里有几块鸡肉。威廉姆爱吃鸡肉。这几块鸡肉是白色的。它们小小的，方方的。它们不大也不圆。汤里有橙色胡萝卜。威廉姆不喜欢吃胡萝卜。他用手拣出来一块胡萝卜。他把它放到桌子上的碗旁边。他把所有的胡萝卜都拣了出来。他把它们都放到桌子上。然后他开吃喝汤。<br>81</p><p>Lulu’s mom gave Lulu a pencil. It was a yellow pencil. It was a number two pencil. It had a pink eraser. The eraser was small and round and pink. Lulu’s mom gave Lulu a piece of paper. It was a white piece of paper. There were blue lines on the white paper. Lulu wrote a letter to her grandma. Her letter said, “Dear Grandma, Hello, I love you.” Lulu told her mom she was done. Her mom looked at the letter. “This is a short letter,” her mom said. Lulu said, “Yes, Mom, it is a short letter. It is short but sweet.”<br>露露的妈妈给了她一支铅笔。那是一支黄色铅笔。那是二号铅笔。上面有个粉色橡皮。橡皮小小的，圆圆的，粉红色的。露露的妈妈给了她一张纸。那是张白纸。白纸上面有蓝线。露露给姥姥写了一封信。她在信里写道，“亲爱的姥姥，你好，我爱你。”露露告诉妈妈她写完了。她妈妈看看这封信。“这是一封简短的信，”她妈妈说。露露说，“是的，妈妈，是封简短的信。信很短但充满甜蜜。”<br>80-</p><p>Louis got a new book. The book was about animals. Louis loved animals. The book had lots of pictures. It had pictures of dogs and cats. It had pictures of cows and pigs. It had pictures of chickens and rabbits. It had pictures of squirrels and birds. Louis looked at the pictures on the first page. Then he turned the page. He looked at the pictures on the second page. Then he turned the page again. The book had 30 pages in it. Louis looked at all the pictures on all the pages.<br>路易斯得到一本新书。这是本关于动物的书。路易斯很喜欢动物。这本书里有很多图片。里面有各类狗和猫的图片。里面有各类牛和猪的图片。里面有各类鸡和兔子的图片。里面有各类松鼠和鸟的图片。路易斯看看第一页上的图片。然后他翻到下一页。他看看第二页上的图片。接着他翻到下一页。这本书有30页。路易斯看了所有页上的所有图片。<br>79<br>Fred had a red rubber ball. He kicked the ball. It flew through the air. He picked it up. He threw it against a wall. The ball came back to Fred. He kicked it with his foot again. The ball flew over the wall. He picked it up again. He bounced it on the street. The ball bounced up and down. Then it stopped bouncing up and down. It didn’t move. Fred’s dog barked at the ball. Fred kicked the ball. His dog ran after the ball.<br>弗雷德有个红色橡胶球。他踢了下这个球。它从空中飞过。他把它捡起来。他对着墙扔球。球回到弗雷德这里。他用脚又踢了一下。球飞过墙。他又把它捡起来。他在街上拍球。球上上下下弹跳。 然后停止了弹跳。球没有动。弗雷德的狗朝这个球大叫。弗雷德踢踢球。他的狗在后面追球。<br>Jenna was at the airport. She was waiting for her plane. Her plane would leave at 7 p.m. It was only 2 p.m. She had time to eat. She had time to study. She went to the airport restaurant. The restaurant was on the third floor. The restaurant was full. There were no empty seats. There were no empty tables. She didn’t want to stand in line. She didn’t want to wait. There was another restaurant in the airport. It was on the first floor. She went down to the first floor. That restaurant was almost empty. There were many seats and many tables.<br>珍娜在机场。她在等她的航班。她的飞机将在下午7点起飞。刚刚下午2点钟。她有时间吃饭。她有时间来学习。她去了机场饭店。饭店在第三楼。饭店人满了。没有空位。没有空余的桌子。她不想排队。她不想等。机场还有一个饭店。它在第一层。她又去了一楼。那个饭店几乎没人。有很多空位和空余桌子。<br>77<br>Emma went to the market. She needed to buy food. She needed brown eggs. She opened a carton of brown eggs. She looked at the eggs. None of them were cracked. None of them were broken. All the eggs were okay. She closed the carton. She put the carton of eggs in her shopping cart. She needed red apples. She looked at a bag of red apples. She looked for dark spots on the apples. She looked for worm holes in the apples. She didn’t see any dark spots or worm holes. She put the bag of apples in her shopping cart.<br>艾玛去了市场。她需要买些食物。她需要棕色鸡蛋。她打开一箱棕色鸡蛋。她看看这些鸡蛋。没有一个鸡蛋是破的。没有一个鸡蛋被打破。所有鸡蛋都很好。她盖上箱子。她把这箱鸡蛋放进了购物车。她需要买些红苹果。她看了一袋红苹果。她在苹果上找黑点。她在苹果上找虫眼。她没看到有任何黑点或者虫眼。她把这袋苹果放进了购物车。</p><p>76<br>Brent was at the stop light. His car radio was on. The music was very loud. Brent liked to listen to loud music in his car. A police car pulled up next to Brent. The policeman looked at Brent. He shouted, “Pull over to the side of the road.” Brent said, “What?” The policeman said, “Pull over to the side of the road.” Brent pulled over to the side of the road. The policeman said, “Do you know why I am giving you a ticket?” Brent said, “You are giving me a ticket? Why are you giving me a ticket?” The policeman said, “Because your radio is too loud.”<br>布兰特开车遇到红灯。他的汽车音响还在开着。音乐声音很大。布兰特喜欢在车上听很大声的音乐。一辆警车停在布兰特车旁。警察看看布兰特。他大叫，“把车停到路边。”布兰特说，“什么？”警察说，“把车停到路边。”布兰特把车停到了路边。警察说，“知道为什么给你交通罚款单吗？”布兰特说，“你要给我一张交通罚款单？为什么给我罚款单？”警察说，“因为你的汽车音响声音太大。”<br>75<br>Lucy went to the doctor. She didn’t feel good. The doctor asked, “What’s the problem? What’s the matter?” She said she didn’t feel right. “Do you hurt? Where do you hurt?” the doctor asked. She said that she hurt all over. She hurt everywhere. She hurt all over her body. The doctor said, “You have a big problem. I will fix your problem.” The doctor gave Lucy a shot. He gave her a shot in her left arm. “Do you feel better now?” he asked her. “No,” she said, “now my left arm hurts a lot.”<br>露西去看医生。她感觉不舒服。医生问，“什么问题？怎么了？”她说她感觉不对劲儿。“你感觉疼吗？哪里疼？”医生问。她说她全身都疼。她哪儿都疼。她全身都疼。医生说，“问题很大。我将给你治好。”医生给露西打了一针。他给她左臂上打了一针。“现在感觉好点了吗？”他问她。“不好，”她说，“现在我的左臂好疼。”<br>74<br>Rodney’s uncle is in jail. He went to jail because he was drunk. He was driving his car. He was going the wrong way on a one-way street. He almost hit three other cars. Someone called 911. A police car chased Rodney. The police car turned on its red light. The red light was bright. The police car turned on its siren. The siren was loud. Rodney did not pull over. He did not stop his car. Finally, he went off the road. He ran into a tree. He got out of his car. He was okay. His car was not okay. The policeman said, “You are drunk. I’m taking you to jail.”<br>罗德尼的叔叔进了拘留所。他之所以进了拘留所是因为他喝醉了酒。他当时在开车。他在单行路上走错了路。他几乎撞到其它三辆车。有人打了911。一辆警车追着罗德尼。警车打开红色信号灯。红色信号灯很亮。警车打开警报器。警报器很响。罗德尼没有靠边停车。他没有停车。最后，他偏离了道路。他撞向一棵树。他从车里出来。他没事。他的车撞出了问题。警察说，“你喝醉了。我要带你进拘留所。”<br>73</p><p>Alice told her son Jesse to go to his room. He didn’t want to go to his room. “Why do I have to go to my room?” he said. “You were a bad boy,” she said. “You hit your sister.” He said, “No, I didn’t. She hit me first.” Alice said, “But you shouldn’t hit your sister, even if she hits you first. She is younger than you are. And she’s a little girl. Boys should never hit little girls.” Jesse said, “Okay, I won’t ever hit little girls again. Now do I have to go to my room?” Alice said yes, he still had to go to his room. “When she’s a big girl, I’m going to hit her again,” he said.<br>爱丽丝告诉他儿子杰西回自己房间。他不想回自己房间。“为什么非要我回我的房间？”他说。“你是个坏男孩儿，”她说。“你打你妹妹。”他说，”不是的，我没有。她先打我。“爱丽丝说，“但是你也不能打妹妹呀，即使是她先打你。她比你小。并且她是个小女孩儿。男孩子不能打小女孩儿。”杰西说，“好的，我不会再打小女孩儿了。现在我还要回我的房间吗？”爱丽丝说是的，他必须回自己房间。“当她成为大女孩儿时，我还会打她，”他说。<br>72<br>Herman didn’t like his first name. He had never liked it. He wanted to change it. He asked his mother. She said it was too late to change his name. She said he could use his middle name. She would call him by his middle name. She asked him if that was okay. Herman said yes. “From now on,” he said, “please call me by my middle name. From now on, please call me Adam.” His mother said that was no problem. “Goodbye, Herman,” she said, “and hello, Adam.” When Adam’s father came home from work, Adam’s mom said, “Guess what? We have a new son.”<br>赫尔曼不喜欢自己的名字。他从来没喜欢过这个名字。他想改名。他问问妈妈。妈妈说改名字已经太晚了。她说他可以用他的中间名。她可以叫他的中间名。她问题是否可以。赫尔曼说可以。“从现在开始，”他说，“请叫我的中间名。从现在开始，请叫我亚当。”他妈妈说没问题。“再见，赫尔曼，”她说，“你好，亚当。”当亚当的爸爸下班回到家，亚当妈妈说，“猜猜怎么了？我们有个新儿子。”<br>71<br>Norma went to bed. It was eleven o’clock. She turned out the light. She lay in bed. It was dark. It was quiet. She couldn’t sleep. She closed her eyes. She tried to sleep, but she couldn’t. She turned the light back on. She opened her book. She started to read her book. It was a good book. She read one page. Then she read another page. After a while, she felt sleepy. She closed the book. She turned out the light. She closed her eyes. She went straight to sleep.<br>诺尔玛睡觉了。时间是11点。她把灯关掉。她躺在床上。天很黑。很安静。她睡不着。她闭上眼睛。她试着去睡，但是就是睡不着。她重新打开灯。她翻开书。她开始读书。那是一本很好的书。她读了一页。然后又读了一页。过了一会儿，她感到困了。她合上书。她关掉灯。她闭上眼睛。她很快就睡着了。<br>70<br>Jimmy dropped a piece of paper on the floor. He bent over and picked it up. He folded the piece of paper in two. He put it on the table. He picked up a pencil. He wrote a phone number on the piece of paper. He put the pencil on the table. He picked up the scissors. He picked up the piece of paper. He cut the paper in half. He put one-half of the paper on the table. He put the other half with the phone number in his shirt pocket. He put the scissors on the table.<br>吉米掉地上一张纸。他弯下腰把它捡起来。他把这张纸对折了一下。他把它放到桌子上。他拿起一根铅笔。他在纸上写下了一个电话号码。他把铅笔放桌子上。他拿起剪刀。他拿起这张纸。他把这张纸剪成两半。他把一半纸放到桌子上。他把带有电话号码的另一半纸放到衬衣兜里。他把剪刀放到桌子上。<br>69<br>A farmer owns a lot of land. He grows food on that land. He grows the food from seeds. He plants seeds into the land. The seeds grow into corn. The seeds grow into wheat. The seeds need water. The seeds need sunlight. A farmer owns a tractor. He drives the tractor on his land. A farmer has many animals. He has pigs. He has cows. He has sheep. He has chickens. He has dogs and cats. He has rabbits. When it rains, the farmer goes into his house. The animals go into the barn. A farmer works hard. His animals don’t work hard. They just eat and sleep.<br>有个农民有很多土地。他在那片地里种植农作物。他先种植种子。他把种子种到地里。种子长成玉米。种子长成小麦。种子需要浇水。种子需要阳光。这个农民有个拖拉机。他在他的地里开着拖拉机。这个农民有很多牲畜。他养猪。他养牛。他养羊。他养鸡。他养狗和猫。他养兔子。 当下雨时，农民就回到自己的房子里。牲畜就回到畜棚。农民辛苦工作。他的牲畜不用努力工作。它们只管吃和睡。<br>68<br>Andrew was in the third grade. He loved his teacher. His teacher was young. She was pretty. She was friendly. She helped Andrew add numbers. She helped Andrew draw dogs and cats. She helped Andrew learn to spell. Andrew gave his teacher an apple one day. He gave her an orange another day. He gave her a peach another day. His teacher thanked him. “Thank you for the apple,” she said the first day. “Thank you for the orange,” she said the second day. “Thank you for the peach,” she said the third day. Each day Andrew said, “You’re very welcome.”<br>安德鲁在三年级。他很喜欢自己的老师。他的老师很年轻。她很漂亮。她很和蔼。她教安德鲁加法。她教安德鲁画狗和猫。她教安德鲁学拼写。一天安德鲁给了他老师一个苹果。又一天他给了她一个橙子。另一天他给了她一个桃子。他的老师很感谢他。“谢谢你的苹果，”她第一天说。“谢谢你的橙子，”她第二天说。“谢谢你的桃子，”她第三天说。每天安德鲁都说，“不客气。”<br>67<br>Sally had a cold. Her nose was red. She pulled a tissue out of the tissue box. She blew her nose. She threw the tissue into the trash. She looked at her fingernails. Her fingernails were too long. She needed to cut her nails. She opened her purse. She took her nail clippers out of the purse. She clipped all the nails on her left hand. Then she clipped all the nails on her right hand. She looked at both of her hands. Now her nails were nice and short. She put her nail clipper back in her purse. She pulled another tissue out of the box. She blew her nose again.<br>莎莉得了感冒。她的鼻子红红的。她从纸巾盒里抽出来一张纸巾。她擦擦鼻涕。她把纸巾扔进垃圾桶。她看看自己的指甲。她的指甲太长了。她需要剪剪指甲。她打开手提包。她从手提包里拿出指甲钳。她把左手的指甲全剪短了。然后她把右手的指甲也全剪短了。她看看两只手。现在她的指甲又漂亮又短。她把指甲钳放回手提包。她从纸巾盒里再抽出一张纸巾。她又擦擦鼻涕。<br>66<br>Andrew got down on his hands and knees. He put a dry sponge into the bucket. The bucket was full of soapy water. He squeezed the sponge. He scrubbed the kitchen floor. There were marks on the floor. There were spots on the floor. There was old food on the floor. He scrubbed the floor clean. Then he took the bucket into the bathroom. He poured the soapy water into the tub. The water went down the drain. He turned on the shower. He rinsed the tub. He turned the bucket over so it would dry. He washed his hands.<br>安德鲁跪在地上。他把一块干海绵放进水桶。水桶里装满了肥皂水。他挤挤海绵。他擦洗了厨房的地板。地板上好多污痕。地板上好多污点。地板上有剩饭。他把地板擦得很干净。然后他把水桶拿进卫生间。他把肥皂水倒进了浴缸。水顺着下水道流走了。他把淋浴喷头打开。他清洗了浴缸。他把水桶反过来放干。他洗洗手。<br>65<br>Sharon was five years old. Her best friend was Pam. They played games together. They played all kinds of games. They had fun together. But one day Pam pushed Sharon. “Why did you push me?” Sharon asked. “Because,” Pam said. Sharon told Pam not to push her again. So, Pam pushed Sharon again. Sharon pushed Pam back. Then Pam pulled Sharon’s hair. Then Sharon pulled Pam’s hair. Both of them started crying. Sharon’s mom came into the room. She told Pam to go home. Pam ran out of the house. “Sharon, you can’t play with Pam anymore,” Sharon’s mother said.<br>莎伦5岁了。她最好的朋友是帕姆。他们一起玩游戏。他们一起玩各种游戏。他们在一起玩的很开心。但是有一天帕姆推倒了莎伦。“你为什么推我？”莎伦问。“因为，”帕姆说。莎伦告诉帕姆别再推她。所以，帕姆又推倒了莎伦。莎伦也推倒了帕姆。然后帕姆拽莎伦的头发。接着莎伦也拽帕姆的头发。他们两个都开始大哭。莎伦的妈妈赶到屋里。她让帕姆回家。帕姆从房子里跑出来。“莎伦，你再也不许和帕姆一起玩了，”莎伦的妈妈说。<br>64<br>Bruce picked up the cat. The cat meowed. The cat didn’t like most people. The cat liked to be alone. It liked to sleep on the sofa. It liked to sleep in the fruit bowl. It liked to sleep on top of the TV. It liked to chase bugs in the front yard. It liked to chase lizards in the back yard. It liked to chase flies in the kitchen. Bruce put the cat on the floor. He rubbed the cat’s stomach. The cat liked that. The cat licked his hand. Bruce rubbed the cat’s stomach some more. The cat meowed. The cat was happy.<br>布鲁斯抓起猫。猫叫着。这只猫不喜欢人。它喜欢自己待着。它喜欢在沙发上睡觉。 它喜欢在果盘里睡觉。它喜欢睡着电视上面。它喜欢在前院追虫子。它喜欢在后院追蜥蜴。它喜欢在厨房追苍蝇。布鲁斯把猫放到地板上。他揉揉猫的肚子。猫喜欢那样。猫舔了舔他的手。布鲁斯多揉了揉猫的肚子。猫叫着。猫很高兴。</p><p>63<br>Kathy finished her sandwich. She had a chicken sandwich for lunch. She got up from her chair. She took her plate to the kitchen sink. She put the plate in the sink. She turned on the cold water faucet. She rinsed the plate. She picked up a paper towel. She wiped the plate dry. She put the plate on the counter. Her mother walked into the room. “Did you wash that plate with soap?” she asked Kathy. Kathy said no. “I couldn’t find the soap,” she said. Her mom said, “What’s this right next to the cold water faucet?” Kathy said, “Soap.” Her mom told her to wash the plate again.<br>凯西吃完她的三明治。她中午吃的鸡肉三明治。她椅子上坐起来。她把她的盘子放到厨房洗涤池。她把盘子放进洗涤池。她把凉水水龙头打开。她冲洗了盘子。她拿起一块纸巾。她把盘子擦干。她把盘子放到柜台。她妈妈走进了屋子。“你用肥皂洗那个盘子吗？”她问凯西。凯西说没有。“我找不到肥皂，”她说。她妈妈说，“挨着凉水水龙头的是什么？”凯西说，“肥皂。”她妈妈让她把盘子再洗一遍。<br>62<br>Jerry has no job any more. He has a little money. But he does not have enough money for rent. He cannot pay his rent. He has to move out of his apartment. He will move out next week. He will move into his car. He will put all his clothes into his car. He will put his pillows and blankets into his car. He will sleep in his car. He will look for another job. After next week he will not be able to take a shower. He will have to use a public bathroom. He won’t be able to drive his car. He won’t have money for gas. Jerry needs help.<br>杰里失业了。他有一点钱。但是他的钱不够付房租。他付不起房租。他不得不搬出他的公寓。下周他会搬走。他将搬到车上住。他将把他所有的衣服放进他的车里。他将把他的枕头和毛毯放进他的车里。他将睡在他的车里。他将去另外找份工作。下周后他将不能再洗澡了。他将用公共卫生间。他也不能再开车了。他没有钱来买汽油。杰里需要帮助。<br>61<br>Lois has a headache. The headache started one hour ago. She doesn’t know why she has a headache. She never gets headaches. She never gets sick. Lois is a healthy woman. Where did her headache come from? Was it something she ate? Was it something she drank? She doesn’t know. She wants her headache to go away. She does not like to take medicine. But her head hurts so much. She went into her bathroom. She opened the medicine cabinet. She found some aspirin. She took two aspirin with a glass of water. Maybe the aspirin will help her headache go away.<br>洛伊斯头疼。一个小时前开始头疼。她不知道为什么会头疼。她从来没有头疼过。她从来不生病。洛伊斯是个身体很健康的女人。她的头疼是怎么回事呢？是不是她吃了什么引起的？是不是她喝了什么引起的？她不明白。她想让头疼快些好起来。她不喜欢吃药。但是她的头疼的很厉害。她走进卫生间。她打开药箱。她找到一些阿司匹林。她就着一杯水吃了两片阿司匹林。也许阿司匹林能把头疼治好。</p><p>60<br>Frank is not an old man. He is only 61 years old. But he is dying. He is in the home for old people. Nobody visits him. His wife doesn’t visit him. She is already dead. She died six months ago. She died in the street. She was crossing the street. A car ran over her. Frank loves his wife. He got sick after she died. He never got better. The doctor says that nothing is wrong with Frank’s body. The doctor says that Frank wants to die. The doctor is right. Frank does not want to live without his wife.<br>弗兰克年纪不是很大。他只有61岁。但是他快死了。他住在养老院里。没有人来看他。他妻子没来看他。她已经去世了。她6个月前去世的。她死在了大街上。她当时正在穿过马路。一辆汽车从她身上碾过去。弗兰克很爱他的妻子。她去世后他生病了。他再也没好起来。医生说弗兰克的身体没有问题。医生说弗兰克想死死。医生说的对。没有他的妻子弗兰克不想生活下去了。<br>59</p><p>Dora wanted to buy a card for her mother. Her mother’s birthday was next week. Dora loved her mom. She wanted to get a nice birthday card. She wanted a card that was pretty. She wanted a card that said the right thing. What was the right thing? The card must say, “I love you, Mom.” It must say, “Mom, you are the best mother in the world.” It must say, “I’m so happy that you are my Mom.” Those are all the right things for the card to say. But there was one more thing the card must say. It must say, “Happy Birthday!”<br>多拉想给妈妈买个贺卡。她妈妈下周过生日。多拉很爱她的妈妈。她想买个很好的生日贺卡。她想买个很漂亮的贺卡。她想买个上面写着合适的话的贺卡。什么是合适的话？贺卡上必须写，“我爱你，妈妈。”上面必须写，“妈妈，你是世界上最好的妈妈。”上面必须写，“我很高兴你是我的妈妈”这些都是贺卡上要写的合适的话。但是还有件事贺卡上必须写。上面必须写，“生日快乐！”<br>58<br>Peggy went to church every Sunday. She loved to go to church. At church she was with her family and friends. At church she was with the saints. She was with the angels. And most of all, Peggy was with God. She always talked to God in church. She always asked God to stop war. She asked God to stop hate. She asked God to stop sickness. But war and hate and sickness did not stop. There were war and hate and sickness every day. “Mommy, why doesn’t God stop war and hate and sickness?” Peggy asked. “God will,” her mom said, “when more people ask.”<br>佩吉每周日都去教堂。她喜欢去教堂。在教堂她可以与家人和朋友在一起。在教堂她就能和圣人在一起。她就能和天使在一起。最重要的是，佩吉可以和上帝同在。她总是在教堂里和上帝说话。她总是祈求上帝停止战争。她祈求上帝结束仇恨。她祈求上帝阻止疾病。但是战争，仇恨和疾病都没能结束。每天还是有战争，仇恨和疾病。“妈妈，为什么上帝不结束战争，仇恨和疾病呢？”佩吉问。“上帝会的，”她妈妈说，“当更多的人祈求的话”<br>57<br>Danny looked at his brown shoes. They looked old and dirty. They needed a shine. It was time to shine his brown shoes. He got a rag. He got a shoe brush. He got a can of polish. He opened the can of polish. He put the rag around his finger. He scooped out a bit of polish with his finger. He rubbed the polish all over the left shoe. He brushed the left shoe. He brushed it and brushed it. The shoe began to shine. It looked like a new shoe. Then Danny put polish on the right shoe. He brushed the right shoe until it looked like a new shoe.<br>丹尼看着自己的棕色鞋子。它们看起来又旧又脏。该擦擦这双鞋了。是时候该擦擦他的棕色鞋子了。他拿起一块抹布。他准备了一个鞋刷。他准备了一管鞋油。他打开鞋油盖。他把抹布缠到手上。他用手挖出一点鞋油。他把左鞋用鞋油擦了擦。他刷刷左鞋。他刷啊刷啊。鞋变亮了。看起来像只新鞋子。然后丹尼给右鞋打鞋油。他刷刷右鞋，一直到它看起来像只新鞋子。<br>56<br>Patty got a doll for Christmas. It is her favorite doll. It is a rag doll. It has a yellow dress. It has a blue blouse. The name of the doll is Molly. Molly has bright red hair. She has red lips. She has blue eyes. She has a pink ribbon in her hair. Molly is wearing red shoes. She’s wearing white socks. Molly has a purse. Her purse is pink. The purse is empty. There is nothing in the purse. There was a little mirror in the purse. But Patty lost the mirror. When she lost the mirror, she said, “I’m sorry, Molly. I will get you another mirror.”<br>帕蒂在圣诞节收到了一个洋娃娃。那是她最喜欢的洋娃娃。它是个布洋娃娃。它穿着黄色裙子。它穿着蓝色衬衣。洋娃娃的名字叫莫莉。莫莉有一头亮亮的红头发。她有红色的嘴唇。她有蓝色的眼睛。她头发上扎着粉红色丝带。莫莉穿着红色鞋子。她穿着白色袜子。莫莉有个钱包。她的钱包是粉红色。钱包是空的。钱包里什么都没有。钱包里有一个小镜子。但是帕蒂把小镜子弄丢了。当她弄丢镜子后，她说，“对不起，莫莉。我会给你另一个镜子。”<br>55<br>Larry has the flu. His nose is running. He coughs a lot. He sneezes a lot. When he coughs, he covers his mouth. When he sneezes, he covers his mouth. When his nose is running, he wipes his nose with a tissue. Larry’s mother is taking care of him. She makes hot soup for him. She gives him fresh orange juice. She makes him comfortable in his bed. She turns on the TV so he can watch TV in his bed. She turns out the light so he can sleep in his bed. She gives him medicine so he will get better. Larry will get better soon.<br>拉里患了流感。他流鼻涕。他咳嗽很厉害。他打喷嚏很厉害。当他咳嗽时，他捂着嘴。当他打喷嚏时，他捂着嘴。当流鼻涕时，他用纸巾擦鼻子。拉里的妈妈在照顾他。他为他准备热汤。她给他喝新鲜橙汁。她让他舒服地躺着。她把电视打开以便他能在床上看电视。她把灯关掉以便他可以睡着。他给他吃药以便他可以好起来。拉里很快就会好的。<br>54<br>Jackie loves the news. She listens to the news on the radio. She watches the news on TV. She reads the news In the Newspaper. She reads the news in magazines. She loves the news because it is always new. It is always fresh. It is always interesting. There is news every day. There is news in every country. There is news in every state. There is news in every city. Everyone all over the world talks about the news every day. But Jackie has a question about the news. Why is the news usually bad? Why isn’t the news usually good? No one knows the answer.<br>杰基爱听新闻。她听收音机里的新闻。她看电视机播放的新闻。她读报纸上的新闻。她读杂志上的新闻。她喜欢看新闻因为新闻总是新的。它总是最新的。它总是很有趣。每天都有新闻。每个国家都有新闻。每个地区都有新闻。每个城市都有新闻。世界上的每个人每天都在谈论新闻。但是杰基有个关于新闻的问题。为什么新闻经常是坏消息？为什么新闻不经常是好消息？没人知道答案。<br>53<br>Randy went to the bank. He needed money from the bank. The bank has all of Randy’s money. The bank keeps Randy’s money safe. Randy cannot keep his money at home. Someone might steal his money. He can’t hide his money in his back yard. A dog might find his money and eat it. He can’t hide his money in a tree. A bird might fly away with his money. Some people hide their money under their bed. Some people hide their money in their refrigerator. But that is not safe. Someone will look under the bed or in the refrigerator. The best place for people to keep money is in the bank.<br>兰迪去了银行。他需要把钱从银行里取出来。兰迪的钱都存在银行。银行保证了兰迪的资金安全。兰迪不能把钱放到家里。有人会把他的钱偷掉。他不能把钱藏在后院。狗可能会找到他藏的钱并吃掉。他不能把钱藏到树上。鸟可能会把他的钱带飞。有的人把自己的钱放到床底下。有的人把自己的钱放到冰箱。但是那样做很不安全。可能会有人到床下和冰箱里找。人们保管钱最好的地方就是银行。<br>52<br>Paula has cancer. She has six months to live. Her doctors cannot help her. No one can help her. She smoked cigarettes for 30 years. She did not want to stop smoking cigarettes. She liked to smoke cigarettes. The doctors told her to stop smoking many years ago. She didn’t listen to them. She didn’t listen to her parents. She didn’t listen to her children. She didn’t listen to her friends. Everyone told her to stop smoking. She told everyone to stop worrying about her. She would be fine, she told them. She still smokes every day. Why not, she asks.<br>保拉得了癌症。她只剩6个月的在世时间。她的医生帮不了她。没人可以帮她。她吸了30年的烟。她不想戒烟。她喜欢抽烟。多年以前医生就告诉她戒烟。她没有听他们的。她没听她父母的话。她没听孩子们的话。她没听朋友们的话。每个人都告诉她要戒掉烟。她告诉所有人别再担心她。她告诉他们她将会很好。她还是每天吸烟。为什么不吸呢，她问。<br>51</p><p>Deborah was angry at her son. Her son didn’t listen to her. Her son was 16 years old. Her son thought he knew everything. Her son yelled at Deborah. He told her he didn’t have to do anything. He didn’t have to listen to her. He didn’t have to go to school. He didn’t have to do his homework. He didn’t have to study. He was 16. He could do anything he wanted to do. What could Deborah do? She wasn’t married. She was divorced. She could not control her son. He would listen to his father. But his father was not there. His father lived in another city.<br>黛博拉很生儿子的气。她儿子从来不听她的话。她儿子16岁了。她儿子觉得自己什么都知道。她儿子总是对黛博拉大吼。他对她说他不必做所有的事。他没必要听她的话。他没必要去上学。他没必要做作业。他没必要学习。他16岁了。他可以做自己想做的任何事。黛博拉能怎么样呢？她还没再婚。她离婚了。她管不了她儿子。他听爸爸的话。但是他爸爸不在那儿。他爸爸在另一个城市生活。<br>50<br>Jeff sat down. He was in class. He was at school. He was in English class. He liked his English class. He liked his teacher. His teacher was friendly. His teacher helped all the students. His teacher answered everyone’s questions. Jeff asked a new question every day. Yesterday he asked his teacher a spelling question. He asked his teacher how to spell “myself.” His teacher told him how to spell it. Jeff thanked his teacher. His teacher said, “You’re welcome. Ask me anything anytime. That’s what I’m here for, to help you.”<br>杰夫坐下来。他在课堂上。他在学校。他在上英语课。他喜欢英语课。他喜欢他的老师。 他的老师很和蔼。他的老师帮助所有学生。他的老师回答每个人的问题。杰夫每天问一个新问题。昨天他问了老师一个拼写问题。他问老师怎么拼写“myself。”他老师告诉他如何拼写。 杰夫谢了谢老师。他的老师说，“不客气。随时都可以问我任何问题。那就是我在这里的原因，是来帮助你们的。”<br>49</p><p>Laura looked out the window. A storm was coming. The sky was getting darker. The wind was starting to blow. Some trees were bending. Leaves were flying through the air. It was getting cold. She closed all the windows. She went outside. Her car was in the street. She closed the windows in her car. She locked her car. She went back into her house. She turned on the TV. She wanted to see the news about the storm. The TV person said it was a big storm. He said it would rain a lot. He told people to stay home.<br>劳拉看看窗外。一场风暴就要来了。天空变得越来越暗。风开始吹。一些树被吹弯了。树叶在空中打转。天变冷了。她把窗户都关上。她走到外面。她的汽车在街上。她把车窗关上。她锁上车。她返回自己的家。她打开电视。她想看看关于这次风暴的新闻。电视主持人说这是场大风暴。他说将会下大雨。他告诉人们要呆在家。<br>48<br>Jason looked at his watch. It was time for his favorite TV show. He turned on the TV. He sat down in his chair. But then he heard his dog. His dog was scratching at the door. Oh, no, Jason thought. The dog wanted to go out. The dog had to go to the bathroom. If he lived in a house, he could let the dog go out the door and into the yard. But he lived in an apartment. He didn’t have a yard. He had to take the dog for a walk. But if he took the dog for a walk, he would miss his favorite TV show. The dog scratched at the door again. Jason turned off the TV.<br>詹森看看手表。他最爱的电视秀要开始了。他打开电视。他坐到椅子上。但是他听见他的狗有动静。他的狗在抓门。哦，不，詹森想。狗想出去。狗要去上厕所。如果他住在平房里，他可以让狗出去尿在院子里。但是他住在公寓里。这里没有院子。他不得不带着狗出去。但是如果他把狗带出去，他将会错过最爱的电视秀。狗又在抓门。詹森关掉电视。<br>47<br>Kimberly was not happy. She was sad. She needed a job. She asked everyone for a job. Everyone told her no. No one had a job for her. She came home every day and CRIed. How could she live without a job? She had only $1,000. After she spent the $1,000, she would have no money. Then what would she do? She had nowhere to go. She had no friends. She had no family. She was all alone. She was very worried. She looked In the Newspaper every day. She was ready to take any job. If someone gave her a job, she would be so happy.<br>金柏莉不高兴。她很伤心。她需要一份工作。她到处找工作。每个人都拒绝她。没有人给她一份工作。她每天回家都会大哭。如果没有一份工作她该怎么生活？她只有1000美元。当花完这1000美元后，她就没钱了。到那时她该怎么办？她没有地方可去。她没有朋友。她没有家庭。她孤身一人。她很担心。她每天都读报纸。她已经准备好了去做任何工作。如果有人给她一份工作，她会很开心。<br>46<br>Kevin wanted to lose weight. He was getting fat. His stomach was getting bigger. He was gaining weight. He was gaining one pound every week. He had to buy new pants. He didn’t fit into his old pants. He couldn’t see his feet anymore. When he looked down, all he could see was his big fat belly. He wanted his belly to disappear. How could he do that? How could he lose weight? What could he do? He talked to his wife. She told him to stop eating candy. She told him to stop eating cake. She told him to walk up and down the big hill every day.<br>凯文想减肥。他变得越来越胖。他的肚子变得越来越大。他体重在增加。他体重每周增加一磅。他不得不去买新裤子。他原来的裤子都不合适了。他再也看不见自己的双脚。当他低头时，能看见的就只有自己的大肚子。他想让自己的肚子消失。他应该怎样做肚子才能不见呢？他怎么来减肥呢？他能做什么？他和妻子讨论怎么办。她告诉他要停止吃糖果。她告诉他要停止吃蛋糕。她告诉他要每天走着上下那座大山。<br>45<br>Michelle felt the earthquake. It lasted for only five seconds. The whole house shook. She heard noise. The TV went off. The lights went off. She was scared. She had never felt an earthquake. It was very strong. It was as if a giant hand had shaken her house. The lights came back on. Michelle turned the TV on. The TV had no news about the earthquake. She turned on the radio. The radio said it was a 4.7 earthquake. But there was no damage. No one was hurt. Everyone was okay. No houses had damage. Everything was okay. But Michelle was still scared. She wanted to move far away. She did not like earthquakes. They were so scary.<br>米歇尔觉得地震了。地震只持续了5秒。整个房子都摇动了。她听见响声。电视机停了。灯灭了。她很害怕。她从没经历过地震。震感很强烈。就像有只大手在摇动她的房子。灯又亮了。米歇尔打开电视。电视上没有关于地震的消息。她打开收音机。收音机里说是一次4.7级地震。但是没有任何损伤。没人受伤。每个人都好好的。没有房子被毁坏。什么都没事。但是米歇尔还是害怕。她想搬到很远的地方。她不喜欢地震。地震都太可怕了。<br>44<br>Anthony went to the book store. He wanted to buy a book. He wanted to buy a book about bugs. He liked bugs. He picked up bugs in his yard. He took them to school. He showed the bugs to his teacher. His teacher told him the name of each bug. Then Anthony took the bugs home. He showed them to his parents. His mom told him to take the bugs out of the house. His dad liked to see the bugs. He said Anthony did a good job. He gave Anthony money to buy a book. So Anthony took the money to the book store. He looked for a book with lots of pictures of bugs.<br>安东尼去了书店。他想买本书。他想买本关于虫子的书。他喜欢虫子。他在院子里捡了很多虫子。他把它们带到学校。他把虫子拿给老师看。他的老师告诉他每只虫子的名字。然后安东尼把虫子带回家。他把虫子拿给他爸妈。他妈妈让他把这些虫子拿到屋子外面。他爸爸喜欢看这些虫子。他说安东尼做的很好。他给安东尼钱让他去买本书。所以安东尼拿着钱去书店。他在找有很多虫子图片的书。<br>43<br>Anthony went to the book store. He wanted to buy a book. He wanted to buy a book about bugs. He liked bugs. He picked up bugs in his yard. He took them to school. He showed the bugs to his teacher. His teacher told him the name of each bug. Then Anthony took the bugs home. He showed them to his parents. His mom told him to take the bugs out of the house. His dad liked to see the bugs. He said Anthony did a good job. He gave Anthony money to buy a book. So Anthony took the money to the book store. He looked for a book with lots of pictures of bugs.<br>安东尼去了书店。他想买本书。他想买本关于虫子的书。他喜欢虫子。他在院子里捡了很多虫子。他把它们带到学校。他把虫子拿给老师看。他的老师告诉他每只虫子的名字。然后安东尼把虫子带回家。他把虫子拿给他爸妈。他妈妈让他把这些虫子拿到屋子外面。他爸爸喜欢看这些虫子。他说安东尼做的很好。他给安东尼钱让他去买本书。所以安东尼拿着钱去书店。他在找有很多虫子图片的书。<br>42<br>When does Ronald eat breakfast? He eats breakfast in the morning. What does he eat for breakfast? He eats ham and eggs. What does he drink for breakfast? He drinks coffee. Where does he eat breakfast? He eats breakfast at home. Who makes breakfast for Ronald? His wife makes breakfast for him. Why does Ronald eat breakfast? Because food gives him energy. What does he do after he eats breakfast? He brushes his teeth. What does he do after he brushes his teeth? He goes to work. Which bus does he take to work? He takes the city bus to work.<br>罗纳德什么时间吃早饭 ？他在早上吃早饭。他早饭吃什么？他吃火腿和鸡蛋。他早饭喝什么？他喝咖啡。他在哪里吃早饭？他在家吃早饭。谁给罗纳德做早饭？他妻子给他做早饭。为什么罗纳德要吃早饭？因为早饭可以给他提供能量。他吃完早饭干什么？他刷牙。他刷完牙干什么？他去上班。他上班坐什么公交车？他坐城市客车去上班。<br>41<br>Ruth is pregnant. She is expecting a baby. The baby is due in two months. The baby is a boy. It is her first boy. She already has a little girl. Her little girl is two years old. Ruth loves her little girl. Her little girl is happy to get a baby brother. Ruth is eating for two people right now. She is very careful about what she eats and drinks. She eats a lot of fresh fruits and vegetables. She eats fresh fish twice a week. She doesn’t drink alcohol or coffee. She doesn’t eat candy or potato chips. She stays away from cigarette smokers. She will have a healthy baby.<br>露丝怀孕了。她快到预产期了。宝宝预产期是两个月后。宝宝是个男孩儿。这是她的第一个儿子。她已经有个女儿了。她的小女儿两岁。露丝很爱她的小女儿。她的小女儿很高兴要有个小弟弟了。露丝现在吃的是两个人的饭量。她对自己的吃喝很注意。她吃很多新鲜水果和蔬菜。她一周吃两次新鲜鱼肉。她不喝酒和咖啡。她不吃糖和薯片。她从不靠近吸烟的人。她将会生个健康的男孩儿。<br>40</p><p>Brian has a fast car. He drives his car fast. He never gets a ticket. His car is too fast for the police. They chase him, but they can’t catch him. Brian always escapes from the police. The police want to catch him. But their cars are too slow. Brian’s car is very fast. He likes to drive over 100 mph. When he sees the police, he waves to the police. The police turn on their sirens. They turn on their red lights. They chase after Brian. Brian speeds up. He passes all the other cars on the road. He escapes from the police.<br>布莱恩有辆快车。他开车很快。他从来没收到过交通罚款单。他的车对于警察来说太快了。他们追他，但是他们追不上他。布莱恩总是能从警察手里逃脱。警察想抓住他。但是他们的警车太慢。布莱恩的车太快。他喜欢开到时速100公里。当他看见警察，他向警察挥挥手。警察打开警报器。他们打开红灯。他们在追布莱恩。布莱恩加速了。他超过了路上其它所有的汽车。他从警察手里逃脱了。<br>39<br>Carol felt tired. She felt tired all the time. She didn’t use to feel tired. She used to have a lot of energy. Why was she so tired all the time? “You should eat more sugar,” her friend told her. “Sugar will give you energy.” But Carol didn’t want to eat more sugar. More sugar would give her more weight. She didn’t want to put on weight. She wanted to have energy again. She finally decided to see a doctor. Her doctor told her that she had a thyroid problem. “What is a thyroid?” she asked her doctor. “It can make you feel very tired. But don’t worry, I can fix it,” he told her.<br>卡罗尔感觉很累。她感觉总是很累。她以前不会感觉很累。她过去总是很有活力。为什么她总是感觉很累？“你应该多吃些糖，”她朋友告诉她。“糖能给你能量。” 但是卡罗尔不想吃太多的糖。太多糖会使她变胖。她不想变胖。她想找回活力。最终她决定去看医生。她的医生告诉她她甲状腺有问题。“甲状腺是什么？”她问医生。“它可以使你感到很累。但是不要担心，我可以治好它，”他告诉她。<br>38<br>It was time for bed. Edward was very tired. He turned off the TV. He turned off his computer. He turned off the dining room light. He went into the bathroom. He brushed his teeth. He went into the bedroom. He puton his pajamas. He got into bed. He put his head on the pillow. He pulled the blanket up to his shoulders. He thought about all the work he had done that day. He thought about all the work he had to do the next day. He closed his eyes. He thought about his vacation in three months. That would be so nice.<br>该睡觉了。爱德华很累。他关掉电视。他关掉电脑。他关掉厨房里的灯。他走到卫生间。他刷刷牙。他走进卧室。他穿上睡衣。他上了床。他的头枕在枕头上。他把毛毯拉到肩膀上。他想想当天做的所有工作。他想想明天该做的所有工作。他闭上眼。他想想3个月后的假期。真好。<br>37<br>Donna loved her husband. Her husband loved Donna. They were in love with each other. She wanted to give him a birthday present. He was going to be 40 years old next week. She wondered what to give him. Should shegive him a watch? Should she give him a sweater? Should she give him a new guitar? What should she give him? She asked him what he wanted for his birthday. He said he didn’t want anything for his birthday. “Oh,you must want something!” she said. “You’re right,” he said. “I want your love forever.”<br>堂娜很爱自己的丈夫。她的丈夫也很爱她。他们彼此深爱着对方。她想给他一个生日礼物。下周他将满40周岁。她不知道要送给他什么。要送给他一块手表？要送给他一件毛衫？要送给他一把吉他？送他什么好呢？她问他想要什么生日礼物。他说什么生日礼物也不要。“哦，你肯定想要点什么！”她说。“你说的对，”他说。“我要你永远爱我。”<br>36</p><p>Steven was hungry. What could he eat? He looked in the refrigerator. He saw some orange cheese. He saw some yellow butter. He knew what he would eat. He would eat a melted cheese sandwich. He took the cheese and butter out of the refrigerator. He buttered two slices of bread. He sliced the cheese and put it between the two buttered slices. He heated the frying pan. He put the cheese sandwich into the frying pan. After three minutes, he flipped the sandwich over. After three more minutes, he put the melted cheese sandwich on a plate.<br>史蒂芬很饿。他要吃点什么呢？他看看冰箱。他看见一些香橙奶酪。他看见一些黄油。他直到自己要吃什么了。他可以吃一个夹奶酪的三明治。他把奶酪和黄油从冰箱里拿出来。他在两片面包上抹上黄油。他把奶酪切片，夹在两片抹了黄油的面包中间。他加热煎锅。他把奶酪三明治放入煎锅。三分钟后，他翻翻三明治。又过了三分钟，他把奶酪三明治放到了盘子里。</p><p>Steven was hungry. What could he eat? He looked in the refrigerator. He saw some orange cheese. He saw some yellow butter. He knew what he would eat. He would eat a melted cheese sandwich. He took the cheese and butter out of the refrigerator. He buttered two slices of bread. He sliced the cheese and put it between the two buttered slices. He heated the frying pan. He put the cheese sandwich into the frying pan. After three minutes, he flipped the sandwich over. After three more minutes, he put the melted cheese sandwich on a plate.<br>史蒂芬很饿。他要吃点什么呢？他看看冰箱。他看见一些香橙奶酪。他看见一些黄油。他直到自己要吃什么了。他可以吃一个夹奶酪的三明治。他把奶酪和黄油从冰箱里拿出来。他在两片面包上抹上黄油。他把奶酪切片，夹在两片抹了黄油的面包中间。他加热煎锅。他把奶酪三明治放入煎锅。三分钟后，他翻翻三明治。又过了三分钟，他把奶酪三明治放到了盘子里。<br>35<br>Sandra wrote a check to her gas company. On one line she wrote “May 17, 2009.” On the next line she wrote “The Gas Company.” On another line she wrote “$35.66.” On another line she wrote “Thirty-five and 66/100.” On another line she wrote “Monthly Gas Bill.” On another line she signed her name. Then she put the check into an envelope. She also put the gas bill into the envelope. She licked the envelope and sealed it. She put her return address on the front of the envelope. She put a 44-cent stamp on the front of the envelope. She put the envelope in the mailbox.<br>桑德拉给她的煤气公司写了张支票。一行写着“2009年5月17日。”下一行她写上“煤气公司。”另一行她写上“35.66美元。”另一行她写上“35又100分之66.”另一行她写上“每月汽油钱。”另一行她签上了自己的名字。然后她把这张支票放到了一个信封里。她也把汽油钱放到了信封里。她舔舔信封并封住口。她把回信地址卸载信封正面。她在信封正面贴了一张44美分的邮票。她把信封放进了信箱。<br>34<br>Kenneth cleaned his apartment. He emptied the trash. He washed the dirty dishes. He looked in his bathroom. The sink and bathtub were dirty. He scrubbed the sink and bathtub. He looked in his bedroom. Clothes were on the floor. He picked up the clothes. He put the shirts on hangers. He folded the pants. He put the pants in the dresser. He washed the dirty clothes. He looked in his living room. Papers were on the floor. Books and newspapers and magazines were on the floor. He picked them all up. He put them on the book shelves. Then he vacuumed his whole apartment.<br>肯尼思打扫了他的公寓。他把垃圾桶清理了。他洗洗脏盘子。他看看厕所。洗涤槽和浴缸都很脏。他把洗涤槽和浴缸都擦洗了。他看看卧室。衣服都在地板上。他捡起这些衣服。他把衬衣用衣架撑起来。他把裤子叠起来。他把裤子放进衣柜。他洗洗脏衣服。他看看客厅。地板上有纸。书，报纸和杂志都在地板上。他把它们都捡起来。他把它们放到书架上。然后他用吸尘器清扫了整个公寓。<br>33<br>Helen is unhappy with her mother. Her mother is unhappy with Helen. They are both unhappy with each other. Helen has a boyfriend. His name is Peter. Her mother doesn’t like Peter. Her mother said that Peter is rude. Why did she say that? Because Peter didn’t take his hat off in the house. Helen’s mother says that is rude. A man should take his hat off in the house. “Your father always took his hat off in the house,” Helen’s mother said. “But, Mom, times are different now,” Helen said. “I promise you, Peter will take his hat off next time.” Helen’s mother said it was too late—rude is rude.<br>海伦对她妈妈很不满意。她妈妈对海伦很不满意。她们对彼此都不满意。海伦有个男朋友。他叫彼得。她妈妈不喜欢彼得。她妈妈说彼得很无礼。她为什么会那样说？因为在屋子里彼得不把他的帽子脱下来。海伦的妈妈说那就是无礼。一个男人在屋子里应该把帽子脱下来。“你爸爸在屋子里总是把帽子脱下来，”海伦的妈妈说。“但是，妈妈，时代不同了，”海伦说。 “我向你保证，下次彼得会脱下帽子。”海伦的妈妈说太晚了-无礼就是无礼。<br>32<br>George is going to make a salad. He is going to make a simple salad. It will be a simple salad, but it will also be delicious. His salad will have only two ingredients. One ingredient is fresh cucumber. A cucumber is dark green and long. George will peel the skin off the cucumber. He will throw the skin in the trash. He won’t eat the skin. He will slice the cucumber into little pieces. Each piece will be about the size of a nickel. He will put all the pieces into a big bowl. Then he will pour salad dressing on the pieces in the big bowl. That’s it—a cucumber, and salad dressing.<br>乔治要做一份色拉。他将制作一份简单的色拉。这份色拉很简单，但也很美味。他的色拉只有两种材料。一种材料是新鲜黄瓜。黄瓜是深绿色的，长长的。乔治将把黄瓜皮削掉。他将把这些皮扔到垃圾桶。他不吃这些皮。他将把这根黄瓜切成小碎片。每片大概和一个5美分硬币那么大。他将把所有的碎片放到一个大碗里。然后他会把色拉酱调料倒在大碗里的碎黄瓜片上。完成了-一根黄瓜，一些色拉酱调料。<br>31<br>Betty’s doctor told her to exercise more. So she began running. She enjoys running. She runs almost everyday. She runs two miles a day. On the weekend she runs five miles. She runs up hills. She runs down hills.She runs in the street and on the sidewalk. She runs on trails. She runs in the heat and the cold. She runs on sunny days and rainy days. Betty will run in the marathon next week. Next week will be her first marathon. A marathon is 26 miles. She will run for three hours without stopping. She won’t try to win the marathon. She will try to finish it.<br>贝蒂的医生嘱咐她要多加锻炼。所以她开始跑步。她喜欢跑步。几乎每天她都跑步。每天她跑2公里。周末她跑5公里。她跑上山。她跑下山。她在街道上和人行道上跑。她在山径上跑。热天冷天她也跑。晴天雨天她也跑。下周贝蒂将参加马拉松赛跑。下周是她第一次参加马拉松。马拉松总长26公里。她将不间断跑3个小时。她不会试图去赢得马拉松赛跑。她只是努力去跑完。<br>30<br>Donald plays the piano. He loves the piano. He has a big piano in his living room. His piano is shiny and black. It has three legs. He sits on a bench to play the piano. The bench has four legs. His piano has 88 keys. The keys are black and white. Donald has ten fingers. His ten fingers play music on the 88 piano keys. The piano also has three pedals. Donald uses his two feet on the three pedals. He uses both of his hands and both of his feet to play the piano. He also uses both of his eyes to play the piano.<br>唐纳德弹钢琴。他喜欢弹钢琴。他的客厅有个很大的钢琴。他的钢琴师亮黑色。它有三个支腿。他坐在长凳上弹钢琴。长凳有4个支腿。他的钢琴有88个键。这些钢琴键都是黑色和白色的。唐纳德有10个手指。他用10个手指弹这88个钢琴键。钢琴也有3个脚键盘。唐纳德用他的两只脚来踩三个脚键盘。他用手和脚同时弹钢琴。他也要用两只眼睛来帮助自己弹琴。<br>29<br>Karen is on the swim team. She is on the swim team at school. She is a good swimmer. All the swimmers on the swim team are good swimmers. She swims every day. She goes to the pool after her last class. Her last class is her English class. After English class she walks over to the pool. She changes into her swim suit. She dives into the water. She swims for two hours. Her coach watches her swim. He gives her advice. He tells her how to swim better. Her coach is her swim instructor. He is a good instructor. She will win a race one day.<br>凯伦是游泳队队员。她是学校游泳队队员。她是个很厉害的游泳运动员。游泳队上的所有队员都是很好的游泳运动员。她每天都游泳。在最后一节课结束后她就去游泳池。她最后一节课是英语课。英语课结束后她不行去游泳池。她换上泳衣。她潜入水里。她游两个小时。她的教练观看她游泳。他给她建议。他告诉她如何能游得更好。她的教练是她的游泳教练。他是个很好的教练。总有一天她会赢得一场比赛。<br>28</p><p>Mark bought a new car last week. He is happy with his new car. He got a good deal on his new car. It was on sale. His new car is green. The four tires are black. His new car has four doors. It has one trunk. The spare tire is in the trunk. All new cars have a spare tire. His new car has one hood. The engine is under the hood. All new cars have an engine. His new car has two big seats. One seat is in the front. One seat is in the back. Mark sits in the front seat when he drives his new car. He always buckles his seat belt.<br>马克上周买了一辆新汽车。他很喜欢自己的新汽车。他的新车很便宜。当时在打折。他的新车是绿色的。四个轮胎是黑色的。他的新车有4个车门。它有个后备箱。备用车胎就放在备用箱里。所有新车都有备用车胎。他的新车有一个发动机罩。发动机就在发动机罩下面。所有新车都有一个发动机。他的新车有两个大座椅。一个座椅在前面。一个座椅在后面。当马克开他的新车时他就坐在前面。他总是系上安全带。<br>27<br>Lisa loves to go shopping. Tomorrow she is going shopping. She needs a new pair of shoes. She wants to buy a pair of red shoes. She thinks red shoes are pretty. She will buy a pair of shoes at the mall. Lisa usually shops at the mall. The mall is only a mile from her house. She just walks to the mall. It only takes her 20 minutes. Tomorrow she will go to four different shoe stores. Tomorrow is Saturday. The mall always has sales on Saturday. If the sale price is good, Lisa might buy two pairs of shoes.<br>丽莎很喜欢购物。明天她要去购物。她需要一双新鞋。她想买双红色的新鞋。她觉得红色的鞋子很漂亮。她将在购物广场买一双鞋。她经常在购物广场买东西。购物广场离她家只有一公里。她步行就能去购物广场。只需要20分钟。明天她将去4家不同的鞋店看看。明天是周六。购物商场经常在周六打折。如果价格合适，丽莎会买两双鞋。<br>26<br>Paul has a red bicycle. He loves his red bicycle. He got the red bicycle for his ninth birthday. His parents gave him his bike when he was nine. He takes care of his bike. He puts air in both tires. He puts air in the front tire. He puts air in the rear tire. He puts oil on the bike chain. He wipes dirt off the bike with a damp rag. He puts water on the rag and wipes all the dirt away. He rides his bike everywhere. He rides it to school. He rides it to the library. He rides it to his friend’s house. He really loves his bike.<br>保罗有辆红色自行车。他很喜欢自己的红色自行车。他是在9岁生日时收到的这辆红色自行车礼物。他父母在他9岁时送给了他这辆自行车。 他把自行车保养得很好。他给两个轮胎打气。他给前车胎打气。他给后车胎打气。他给自行车链擦油。他用抹布把自行车上的灰尘擦掉。他在抹布上放些水然后把灰尘全擦掉。他到哪里都骑车。他骑车去学校。他骑车去图书馆。他骑车去朋友家。他真的很爱自己的自行车。<br>25</p><p>Dorothy will be ten years old next month. She is excited. Ten years old is very old. She will not be a little kid anymore. A nine-year-old kid is just a little kid. A ten-year-old kid is almost an adult. Nine is only one number, but 10 is two numbers. Nine is a little kid number, but 10 is an adult number. When she is ten, she will be an adult almost. She will be a young woman. She will wear lipstick. She will wear nail polish. She will have a boyfriend. He will be handsome and polite. He will open doors for her. He will buy her birthday presents. Dorothy can’t wait until next month.<br>桃乐茜下个月就满10岁了。她很兴奋。十岁已经很大了。她将不再是一个小孩儿。一个九岁的孩子只是一个小孩儿。一个十岁的孩子基本可以算是一个成年人。九只是单位数，但是十是两个数字。九是个小孩儿数字，但是十是个成人数字。当她十岁时，她将会是一个成年人。她将是一位年轻女子。她将抹口红。她将染指甲。她将有男朋友。他会很帅很有礼貌。他会为她打开门。他会为她买生日礼物。桃乐茜简直等不到下个月了。<br>24<br>Daniel wanted to visit a farm. He asked his parents to take him to a farm. His teacher told him about the animals on a farm. There are lots of animals on a farm. Daniel wanted to see the animals. He wanted to seethe cows. He wanted to see the chickens. He wanted to see the pigs. He wanted to pet the animals. He wanted to feed the animals. He loved animals. He wanted to live on a farm. He wanted to live with cows and chickens and pigs.They would be his friends. He didn’t have any friends in school.<br>丹尼尔想去参观一个农场。他让父母带他去一个农场。他的老师告诉了他关于农场上的动物。农场里有很多动物。丹尼尔想去看看这些动物。他想去看牛。 他想去看鸡。他想去看猪。他想去爱抚这些动物。他想去喂喂这些动物。他喜欢动物。他想住在农场。他想和动物们住一起。他想和牛，鸡，猪住一起。它们将会是他的朋友。他在学校没有任何朋友。<br>23<br>Margaret was a small girl. She was a little girl. All her friends were taller than her. She was shorter than all her friends. She wanted to be tall. Her mom told her not to worry. One day Margaret would be tall. One day she would be taller than her friends. One day all her friends would be shorter than her. She was happy to hear that. She only had one question for her mom. When would she be taller than her friends? Wouldit be next year? She hoped it would be next year. She was tired of being the shortest girl.<br>玛格丽特是个小女孩儿。她是个小女孩儿。她的朋友都比她高。她比所有的朋友都矮。她想长高点。她妈妈告诉她不要着急。有一天玛格丽特会长高。有一天她会长得比她的朋友们都高。有一天她所有的朋友都会比她矮。听到妈妈的话她很高兴。她只有一个问题想问妈妈。她什么时候才会比她的朋友们高？是在明年？她希望是在明年。她厌倦做最矮的女孩儿。<br>22<br>Christopher wrote a letter to his sister. His sister lived in another city. His sister did not have a computer. Neither did he. His sister didn’t like to use the phone. Neither did he. He wrote his sister a longletter. He told her the news in his life. He told her that he had a new job. He told her that he had a newgirlfriend. He told her that he had a new car. He had lots of news for his sister. She would be happy to read his letter. Then she would send him a letter. Her letter would have lots of news, too.<br>克里斯托弗给他姐姐写了封信。他姐姐住在另一个城市。他姐姐没有电脑。他也没有。他姐姐不喜欢用电话。他也不喜欢用。 他给姐姐写了封很长的信。他告诉姐姐生活中一些新鲜事。他告诉姐姐自己有新工作了。他告诉姐姐自己有了新女友。他告诉姐姐自己买了辆新车。他有很多新鲜事想告诉姐姐。她读他寄来的信时会很高兴。谈后她会寄给他一封信。她的信里也会有很多新鲜事。<br>21<br>Maria was learning to add numbers. She liked to add numbers. It was easy to add numbers. She could add one and one. She knew that one and one are two. She knew that two and two are four. She knew that three and three are six. But that was it. She didn’t know what four and four are. She asked her mom. Her mom told her that four and four are eight. “Oh, now I know,” Maria said. “I am four years old now. In four more years, I will be eight.” Maria was a fast learner. She wasn’t a slow learner.<br>玛利亚正在学习加法。她喜欢加法。加法很简单。她会一加一。她知道一加一等于2。她知道二加二等于四。她知道三加三等于六。但是就这些。她不知道四加四等于几。她就问妈妈。妈妈告诉她四加四等于八。“哦，现在我知道了，”玛利亚说。“我现在四岁，再过四年，我就是八岁。”玛利亚学东西很快。她不是学习慢的人。<br>20<br>Thomas was not hot. He was not warm either. He was cold. The weather was not hot. The weather was not warm either. The weather was cold. Thomas did not like to be cold. He looked for his jacket. He found his jacket. He put on his jacket. But he was still cold. He looked at the windows. Were all the windows closed? Yes, they were. They were all closed. None of the windows were open. He looked at the door. The door wasn’t open. It was closed. He was still cold. He looked for a warmer jacket.<br>托马斯不热。他也不暖和。他很冷。天气不热。天气也不暖和。天气很冷。托马斯不喜欢冷天。他在找他的夹克衫。他找到了他的夹克衫。他穿上夹克衫。但是他始终感觉冷。他看看窗外。窗户都关上了吗？是的，都关上了。窗户都关着。没有窗户开着。他看看门。门没开。门是关着的。他始终很冷。 他要找件暖和的外套。<br>19<br>Jennifer pulled the trash can out to the street. She pulled the trash can out to the street on Monday morning. Monday was trash day. The trash truck came to her house. The truck had a metal arm. The metal arm picked up the trash can. It raised the trash can into the sky. It emptied the trash can into the truck. Then the arm put the can back on the street. On Monday afternoon Jennifer walked out to the street. The trash can was empty. She pulled the trash can back into her yard. Next Monday she would pull it out to the street again.<br>珍妮弗把垃圾桶拉到大街上。周一早上她把垃圾桶拉到大街上。星期一是垃圾日。垃圾车来到她家。垃圾车有金属臂。金属臂可以把垃圾箱捡起来。它把垃圾箱举到半空。它把垃圾箱里的垃圾倒进垃圾车。然后金属臂把垃圾箱放回街上。周一下午珍妮弗走在大街上。垃圾箱空空的。她把垃圾箱拉回自己的院子。下周一她将再次把垃圾箱拉到大街上。<br>18<br>Joseph never opens the front door. When someone knocks on the front door, Joseph says, “Who is it?” But he does not open the door. His parents told him to keep the door closed. His parents want him to be safe. He will be safe if he doesn’t open the door. Yesterday someone knocked on the front door. “Who is it?” Joseph asked. “It’s the mailman,” the person said. “I cannot open the door,” Joseph said. “Okay, I will come back tomorrow,” the mailman said. “Goodbye,” Joseph said. Joseph is a good boy. He listens to his parents. He doesn’t open the door for any person.<br>约瑟夫从不开前门。当有人敲前门，约瑟夫说，“谁呀？”但是他不打开门。他父母告诉她要让门关着。他父母想保证他的安全。如果他不开门，他就是安全的。昨天有人敲前门。“谁呀？”约瑟夫问。“我是邮递员，”这个人回答。“我不能打开门，”约瑟夫说。“好吧，明天我再来，”邮递员说。“再见，”约瑟夫说。约瑟夫是个好孩子。他很听父母的话。他从不给别人开门。<br>17</p><p>Elizabeth washes her hands every day. She likes to wash her hands. She washes her hands with soap and water. She uses soap and water to wash her hands. She uses warm water and soap. She washes her hands for 30 seconds. After 30 seconds she stops washing her hands. She turns off the water. She dries her hands on a clean towel. Every few hours she turns on the water and washes her hands. Elizabeth has very clean hands. Shedoes not have many germs on her hands. Germs cannot live on her clean hands.<br>伊丽莎白每天都洗手。她很喜欢洗手。她用水和香皂洗手。她用香皂和水洗手。她用温水和香皂。她洗手用30秒。30秒后她就停止洗手。她关掉水龙头。她用干净毛巾擦干手。每隔几个小时她就打开水龙头洗洗手。伊丽莎白的手很干净。她的手上没有太多细菌。细菌在她手上不能生存。<br>16<br>Charles found a glass bottle. He found the glass bottle in his back yard. It was a pretty glass bottle. It was dark green. He looked inside the dark green bottle. He couldn’t see anything. He shook the bottle. Something came out of the bottle. It landed on the ground. It was a bug. Charles picked up the bug. He looked at it. The bug looked at Charles. Charles put the bottle back on the ground. He put the bug on the ground, next to the bottle. The bug crawled back into the bottle.<br>查尔斯发现了一个玻璃瓶。他在自家后院发现了一个玻璃瓶。玻璃瓶很漂亮。它是深绿色的。他朝深绿色玻璃瓶的里面看了看。他看不到任何东西。他摇摇瓶子。有个东西从瓶子里掉出来。它掉到地上。那是个臭虫。查尔斯捡起臭虫。他看着它。臭虫看着查尔斯。查尔斯把瓶子放回地上。他把臭虫放到地上，挨着瓶子。臭虫爬回了瓶子。<br>15</p><p>Barbara likes funny stories. She likes to hear funny stories. She likes to tell funny stories. She told her mom a funny story. When she finished, she waited for her mom to laugh. “Mom, why aren’t you laughing? That was a funny story,” Barbara said. “Oh, I’m sorry,” her mom said. “Sometimes you think something is funny, but someone else thinks it isn’t funny.” So, Barbara’s mom did not laugh at Barbara’s story.Barbara told the same story to her younger sister. Her younger sister laughed at the story.<br>芭芭拉喜欢笑话。她喜欢听笑话。她喜欢讲笑话。她给妈妈讲了一个笑话。当她讲完后，一直等着妈妈大笑。“妈妈，为什么你不笑？那个笑话很搞笑，”芭芭拉说。“哦，对不起，”妈妈说。“有时你觉得一些事情很好笑，但是别人不一定认为它很好笑。”所以，芭芭拉的妈妈听完笑话后没有大笑。芭芭拉把同样的故事讲给她妹妹听。妹妹听到故事后笑了起来。<br>14<br>Richard is a light eater. He doesn’t eat much. He isn’t a heavy eater. He eats a light breakfast, a light lunch, and a light dinner. Richard is not fat. He is thin. He will always be thin, because he is a lighteater. He eats a bowl of cereal for breakfast. He eats a bowl of cereal with milk. He eats a sandwich for lunch. Sometimes it’s a fish sandwich. He likes fish. He eats rice and vegetables for dinner. All he eatsfor dinner is rice and vegetables. He will never get fat.<br>理查德饭量很小。他从不吃太多。他饭量不大。他早中晚三餐都吃的很少。理查德不胖。他很瘦。他会一直很瘦，因为他吃的很少。他早饭喝一碗麦片粥。他喝牛奶加麦片粥。他中午吃一个三明治。有时是鱼肉三明治。他喜欢吃鱼。晚饭他吃大米和蔬菜。他晚餐都是吃大米和蔬菜。他永远不会长胖。</p><p>13<br>Linda wants to buy a new car. She has an old car. Her old car is a white Honda. Linda wants to buy a new Honda. She wants to buy a new red Honda. She has saved $1,000. She will use $1,000 to help buy the new car.She will give $1,000 to the Honda dealer. The Honda dealer will give her a contract to sign. The contract will require her to pay $400 a month for seven years. Her new red Honda will cost Linda a lot of money. But that’s okay, because Linda makes a lot of money.<br>琳达想买辆新车。她有辆旧车。她的旧车是辆白色本田车。琳达想买辆新本田车。她想买辆红色新本田车。她已经攥了1000美元。她将用1000美元来帮助自己购买新车。她将给本田经销商1000美元。本田经销商会让她签合同。合同要求她每月要付400美元，一共付7年。琳达的红色新本田车将花费很多钱。但是没关系，因为琳达很能挣钱。<br>12<br>Mike was ready for bed. It was 11 o’clock. He had to get up early the next day. The next day he was going fishing. Fish wake up early. They look for food early in the day. They look for food late in the day. The best time to fish is early or late in the day. That is when the fish are hungry. Mike set his alarm. He set his alarm for 5 o’clock. The next day he would start fishing at 6 o’clock. He wanted to catch four or five fish. If he caught four or five fish, he could eat fresh fish all week. Fresh fish is the best fish. Mike went to bed.<br>麦克准备睡觉。已经11点了。他第二天必须早起。第二天他将去钓鱼。鱼醒的很早。它们在白天很早的时候找食吃。它们在白天很晚的时候找食吃。白天最好的钓鱼时间是大早上或者晚些时候。那时候是鱼饿的时候。麦克定好闹铃。他定的闹铃时间是5点。第二天他将在6点就开始钓鱼。他想钓到4、5条鱼。如果他钓到4、5条鱼，整个星期他都会迟到新鲜鱼肉。新鲜鱼肉是最好的鱼肉。麦克睡觉了。<br>11<br>Patricia did not have much time. It was time to go to work. She did not want to be late for work. She would lose her job if she was late. She finished her coffee. She drank the last drop. She put the coffee cup in the kitchen sink. She turned on the kitchen faucet. She poured water into the cup. She turned off the faucet. She picked up her keys. The keys were on the kitchen table. She grabbed her gray coat. Her gray coatwas on the chair. The chair was next to the door. She walked outside. She locked her door with her house key.<br>帕特丽夏没有太多时间。上班时间到了。她不想上班迟到。如果她迟到就会失去工作。她喝完咖啡。她喝完最后一口。她把咖啡杯放进厨房洗涤槽。她打开厨房水龙头。她让水流进咖啡杯。她关掉水龙头。她拿起钥匙。钥匙在厨房桌子上。她拿起她的灰色外套。她的灰色外套在椅子上。椅子挨着门。她走向外面。她用房门钥匙锁上了门。<br>10<br>James took the milk out of the refrigerator. He put the carton of milk on the counter. He took the cap off the carton of milk. He opened the kitchen cabinet. He took a glass out of the cabinet. He put the glass onthe counter next to the milk. He poured some milk into the glass. He put the cap back on the carton of milk. He put the milk back into the refrigerator. He took the chocolate syrup out of the refrigerator. He poured some chocolate syrup into the glass of milk. He stirred the milk with a spoon. He licked the spoon.<br>詹姆斯把牛奶从冰箱里拿出来。他把这盒牛奶放到柜台上。他把牛奶盒盖取下来。他打开餐具柜。他从餐具柜里取出一个玻璃杯。他把玻璃杯放到了柜台上，挨着牛奶盒。他往玻璃杯里倒了些牛奶。他把牛奶盒盖上。他把牛奶盒放回冰箱。他从冰箱里拿出巧克力酱。他在这杯牛奶里加了些巧克力酱。他用勺子搅搅牛奶。他舔舔勺子。<br>9</p><p>Mary ate a blueberry. She loved blueberries. Then she ate a blackberry. She loved blackberries. Then she ate a strawberry. She loved strawberries. Mary was confused. A blueberry is blue, so you call it a blueberry. A blackberry is black, so you call it a blackberry. A strawberry is red. So, why don’t you call it a red berry? Mary asked her mom. Her mom didn’t know. She asked her dad. Her dad didn’t know. She asked her little brother. “Because a red berry is a cherry!” her brother said.<br>玛丽吃了一个蓝莓。她喜欢吃蓝莓。然后她吃了一个黑莓。她喜欢吃黑莓。然后她吃了一个草莓。她喜欢吃草莓。玛丽很困惑。蓝莓是蓝色的，所以你可以叫它蓝莓。黑莓是黑色的，所以你可以叫它黑莓。草莓是红色的，所以，为什么你不叫它红莓？玛丽问问妈妈。妈妈不知道。她问问爸爸。爸爸不知道。她问她的弟弟。“因为红色的莓是樱桃！”她弟弟说。<br>8</p><p>Johnny jumped over the dog. The dog was lying on the ground. Johnny jumped over it. The dog saw Johnny jump over it. The dog got up. The dog got up and barked at Johnny. Johnny laughed. He laughed while the dog barked. Johnny ran over to the fence. The dog chased him to the fence. Johnny jumped over the fence. He turned around and looked at the dog. The dog stopped at the fence. The dog could not jump over the fence. Johnny said, “Jump, jump!” The dog barked, but did not jump.<br>乔尼跳过一条狗。狗正在地上躺着。乔尼跳过它。狗看见乔尼跳过自己。狗站起来。狗站起来并向乔尼大叫。乔尼笑了。他笑的同时狗在叫。乔尼跑向围栏。狗追他到围栏。乔尼跳过围栏。他转过身看着狗。狗在围栏边停下。狗跳不过围栏。乔尼说，“跳，跳！”狗叫着，却跳不过去。<br>7<br>Brenda sang a song. She sang the song while she walked to school. The name of the song was “Row, Row, Row Your Boat.” Brenda liked to sing this song. It was her favorite song to sing. She sang it every day whileshe walked to school. Sometimes she sang it with her best friend. Sometimes her best friend walked to school with Brenda. Then they both sang the song together. Brenda liked the song because it was easy to remember the words. “Row, row, row your boat” are easy words to remember.<br>布伦达唱了一首歌。她在步行上学路上唱了一首歌。歌曲的名字叫“划，划，划小船。”布伦达喜欢唱这首歌。那是她最喜欢唱的歌。她每天步行上学路上都唱这首歌。有时她和她最好的朋友一起唱。有时布伦达和她最好的朋友一起步行去上学。然后他们一起唱这首歌。布伦达喜欢唱这首歌是因为它的歌词很好记。“划，划，划小船”是很好记的歌词。<br>6<br>Brian sat down for dinner. He sat down in the chair. He sat down at the table. He looked at his white plate. He looked at his silver fork. He looked at his silver spoon. His dad said, “Pass me your plate, Brian.”His dad put white rice on the plate. His dad put yellow corn on the plate. His dad put green peas on the plate. He gave the plate back to Brian. “This looks delicious,” Brian said. “It is delicious,” his dadsaid. Brian wondered why corn was yellow. He wondered why peas were green. He wondered if there were yellow peas and green corn.<br>布莱恩坐下准备吃晚饭。他坐到椅子上。他坐在饭桌旁。他看着自己的白色盘子。他看着自己的银叉。他看着自己的银勺。他爸爸说，“布莱恩，把你的盘子递给我。”他爸爸将白色大米饭放到盘子上。他爸爸将黄色玉米粒放到盘子上。他爸爸将绿色豌豆放到盘子上。他把盘子递回布莱恩。“看起来很美味，”布莱恩说。“它很美味，”他爸爸说。布莱恩想知道为什么玉米是黄色的。他想知道为什么豌豆是绿色的。他想知道是否有黄色豌豆和绿色玉米。<br>5<br>“Can I ride my horse, Mommy?” Sara asked her mom. Sara loved to ride her horse. She rode her horse almost every Saturday. “Okay, honey, get ready to go,” her mom said. Sara was happy. She went into her bedroom. She put her pink socks on. She put her pink sneakers on. She grabbed her pink hat. She went to the front door. “I’m going to wait in the car,” she told her mom. “Okay, I’ll be there in a minute,” her momsaid. Sara opened the car door. She sat down in the front seat. She put on her hat. She was excited.<br>“我能骑我的马吗，妈妈？”萨拉问妈妈。萨拉喜欢骑她的马。几乎每周六她都骑她的马。“好的，宝贝，准备出发，”妈妈说。萨拉很高兴。她走进自己的卧室。她穿上了粉红色袜子。她穿上粉色运动鞋。她抓住她的粉红色帽子。她走到前门。“我去车里等，”她告诉妈妈。“好，我马上到，”妈妈说。萨拉打开汽车门。她坐到前排座位上。她带上帽子。她很兴奋。<br>4<br>David lost his yellow pencil. He could not find it. “Where is my yellow pencil?” he asked his sister. His sister did not know. “I don’t know where your pencil is,” she said. David thought about it. He thought and thought. He used his yellow pencil before lunch. He used it to write a note to his teacher. The note said, “Dear teacher, Thank you for helping me. David.” He put the note in an envelope. Where was the envelope? He looked in the kitchen. He looked on the kitchen counter. He found the envelope. It was next to the toaster. He found the pencil. It was under the toaster.<br>大卫弄丢了他的黄色铅笔。他找不到它。“我的黄色铅笔在哪儿？”他问妹妹。他妹妹不知道。“我不知道你的铅笔在哪儿，”她说。大卫想了下。他想啊想。他在午饭前用过他的黄色铅笔。他用它给老师谢了一个便条。便条写着，“亲爱的老师，谢谢你帮助我。大卫。”他把便条放进了一个信封。信封在哪里？他看看厨房。他看看厨房柜台。他找到了信封。它挨着烤面包机。他找到了铅笔。它在烤面包机下面。<br>3</p><p>Bobby woke up because he heard a dog. He heard a dog barking outside his window. Bobby woke up when he heard the dog barking. Bobby got out of bed. He got out of bed and walked to the window. He looked out the window. He saw a big brown dog. It was barking very loud. Bobby opened his window. He looked at the barking dog. “Why are you barking so loud?” he asked the dog. The dog looked at Bobby. Then it stopped barking.<br>鲍比醒来是因为他听到狗叫。他听到一条狗在他的窗户外面叫。鲍比听见狗叫时醒了。鲍比下了床。鲍比下床后走到窗户那。他看看那窗户外面。他看到一条棕色狗。它使劲儿大叫。鲍比打开他的窗户。他看看这条大叫的狗。“你为什么叫这么大声？”他问狗。狗看看鲍比。然后停止了大叫。<br>2<br>Nancy wants to live a long time. She wants to live for one hundred years. She is five years old now. She wants to live 95 more years. Then she will be 100. Her father is 30 years old. He wants to live a long time,too. He wants to live for one hundred years. He wants to live for 70 more years. “Daddy, we will grow old together, okay?” Nancy said to her father. “Yes, honey, we will grow old together,” he said to Nancy.Then Nancy smiled. She gave her daddy a big hug.<br>南希想活很久很久。她想活100年。她现在5周岁。她想再活95年。到那时她就活到100岁了。她爸爸30岁。他也想活很久很久。他想活100年。他想再活70年。“爸爸，我们将一起变老，好吗？”南希对爸爸说。“是的，宝贝，我们将一起变老，”他对南希说。然后南希笑了。她给了爸爸一个大大的拥抱。<br>1<br>Billy always listens to his mother. He always does what she says. If his mother says, “Brush your teeth,”Billy brushes his teeth. If his mother says, “Go to bed,” Billy goes to bed. Billy is a very good boy.A good boy listens to his mother. His mother doesn’t have to ask him again. She asks him to do something one time, and she doesn’t ask again. Billy is a good boy. He does what his mother asks the first time. Shedoesn’t have to ask again. She tells Billy, “You are my best child.” Of course Billy is her best child. Billy is her only child.<br>比利总是很听妈妈的话。妈妈说什么他做什么。如果妈妈说，“刷牙，”比利就刷牙。如果妈妈说，“去睡觉，”比利就去睡觉。比利是个非常好的男孩儿。一个听妈妈话的好男孩儿。妈妈从不需要跟他说第二遍。她只说一次让他去做什么，并且从来不用说第二次。比利是个好男孩儿。他总是在妈妈第一次说的时候就去做。她从来不用说第二次。她告诉比利，“你是我最优秀的孩子。”当然比利是她最优秀的孩子。比利是他的独生子。</p>]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>所有的相遇到最后都会分开</title>
    <link href="/post/e12e079/"/>
    <url>/post/e12e079/</url>
    
    <content type="html"><![CDATA[<p>毛骗<br><img src="https://image.glwsq.cn/img/%E6%89%80%E6%9C%89%E7%9A%84%E7%9B%B8%E9%81%87%E5%88%B0%E6%9C%80%E5%90%8E%E9%83%BD%E4%BC%9A%E5%88%86%E5%BC%80-2022-06-25-16-10-20.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>flask框架基础到源码分析详细讲解</title>
    <link href="/post/4eb19c71/"/>
    <url>/post/4eb19c71/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>讲的很不错，还简单的分析了一下源码，很有收获</p><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=1">P1. 1-01 flask框架概述</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=2">P2. 1-02 今日概要</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=3">P3. 1-03 内容回顾</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=4">P4. 1-04 flask快速上手</a><figure class="highlight py"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask<br><br>app = Flask(__name__)<br><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>():</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;hello world&#x27;</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run()<br></code></pre></td></tr></table></figure></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=5">P5. 1-05 用户登录示例</a><br><img src="https://image.glwsq.cn/img/flask%E6%A1%86%E6%9E%B6%E5%9F%BA%E7%A1%80%E5%88%B0%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3-2022-06-19-00-13-28.png"></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=6">P6. 1-06 用户编辑示例</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=7">P7. 1-07 上述知识点梳理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=8">P8. 1-08 基于session实现用户登录</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=9">P9. 1-09 装饰器实现用户认证</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=10">P10. 1-10 蓝图</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=11">P11. 1-11 今日内容总结</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=12">P12. 1-12 作业</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=13">P13. 2-01 今日概要</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=14">P14. 2-02 内容回顾</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=15">P15. 2-03 面试题讲解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=16">P16. 2-04 面试题讲解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=17">P17. 2-05 数据库链接池</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=18">P18. 2-06 sqlhelper的编写</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=19">P19. 2-07 上下文管理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=20">P20. 2-08 今日作业和面试题整理任务</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=21">P21. 3-01 今日概要</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=22">P22. 3-02 内容回顾</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=23">P23. 3-03 根据flask源码反推wsgi返回值</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=24">P24. 3-04 静态文件处理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=25">P25. 3-05 localsettings配置文件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=26">P26. 3-06 类的配置文件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=27">P27. 3-07 类的配置文件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=28">P28. 3-08 路由</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=29">P29. 3-09 上述总结</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=30">P30. 3-10 CBV</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=31">P31. 3-11 模板</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=32">P32. 3-12 特殊装饰器</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=33">P33. 3-13 装饰器应用的其他方式</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=34">P34. 3-14 蓝图中编写特殊装饰器</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=35">P35. 3-15 threading.local的作用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=36">P36. 4-01 flask源码概要</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=37">P37. 4-02 内容回顾</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=38">P38. 4-04 线程唯一标识</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=39">P39. 4-05 自定义threadinglocal</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=40">P40. 4-06 自定义高级版的threadinglocal</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=41">P41. 4-07 flask源码实现LocalStack和Local对象</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=42">P42. 4-08 flask源码实现流程梗概</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=43">P43. 4-09 以上内容总结</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=44">P44. 4-10 flask源码启动阶段</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=45">P45. 4-11 上述内容梳理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=46">P46. 4-12 强插知识点：SQLHelper实现</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=47">P47. 4-13 强插知识点：SQLHelper实现</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=48">P48. 4-14 今日作业</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=49">P49. 5-01 内容回顾</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=50">P50. 5-02 flask源码之项目启动阶段</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=51">P51. 5-03 flask源码之请求到来阶段概述</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=52">P52. 5-04 flask源码之上下文处理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=53">P53. 5-05 flask源码之app上下文处理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=54">P54. 5-06 flask源码之request上下文处理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=55">P55. 5-07 flask源码之特殊装饰器和视图</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=56">P56. 5-08 flask源码之销毁上下文</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=57">P57. 5-09 flask源码之上述过程总结</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=58">P58. 5-10 上下文中封装的值的使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=59">P59. 5-11 偏函数和LocalProxy源码</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=60">P60. 5-12 flask源码之LocalProxy细节</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=61">P61. 5-13 g及应用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=62">P62. 5-14 总结</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=63">P63. 6-01 今日概要</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=64">P64. 6-02 内容回顾</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=65">P65. 6-03 内容补充</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=66">P66. 6-04 flask信号之扩展</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=67">P67. 6-05 flash消息</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=68">P68. 6-06 总结</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=69">P69. 6-07 flask-script组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=70">P70. 6-08 蓝图</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=71">P71. 6-09 蓝图总结</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=72">P72. 6-10 阶段总结</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Tt4y1s7pw?p=73">P73. 6-11 作业和预习</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据结构怎么学</title>
    <link href="/post/62686cb/"/>
    <url>/post/62686cb/</url>
    
    <content type="html"><![CDATA[<p>你好，欢迎报考北京化工大学，我来给你分享一下我学习数据结构的心得。</p><p>首先，北京化工大学的数据结构有个特点，那就是大题的分数超级高，而且选择题的难度都不低，就那我这次的考试来说，我写到了交卷的最后一刻。</p><p>选择题中涉及图这个知识点的话，每一个图都很复杂，反正需要花很多时间。</p><p>大题的话，还好，首先都是书上出现的代码，跟着大纲，把大纲上出现的大题代码都敲一遍，然后大题就轻轻松松了。</p><p>我考试的时候大题是先写到了演草纸上，然后再抄到答题卡上，我感觉我的大题是一点问题没有的，就算是放到编译器里面都不会报错。我也不知道为什么没有考满分，我对自己就这么自信。</p><p>不扯犊子了，我来给你说一下我的大题是怎么学的吧。</p><p>我的大题全都是按照严蔚敏老师的数据结构的书来学的，因为王道的写法和他的还是有点不一样的，而且为了防止被扣分，我就按照了学校提供的参考资料<br>来的。</p><p>但是呢，不管是谁的书，他们都写的代码都没办法直接运行，就是你不能直接用电脑来运行看一下效果，我感觉这样的学习方法很不好。</p><p>我认为的学习方法，就是首先把代码敲一遍，然后在编译器里面运行一下，最好还有个判题oj来执行一下，告诉你代码确实是对的。</p><p>这是我考研时候的笔记，我把考研大纲直接列了一下，然后把对应的代码都敲了一遍，然后差不多就记住了，记不住就每隔一段时间来看看，或者敲一遍。</p>]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Webstorm 调试 JavaScript 代码</title>
    <link href="/post/55d4a90/"/>
    <url>/post/55d4a90/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.it610.com/article/1280127964020752384.htm">https://www.it610.com/article/1280127964020752384.htm</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>转载</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nginx快速开启localhost地址的https访问-无需申请证书</title>
    <link href="/post/b594e639/"/>
    <url>/post/b594e639/</url>
    
    <content type="html"><![CDATA[<p>快速使用nginx的https功能，方便测试，无需申请证书。</p><span id="more"></span><h2 id="一、环境检查"><a href="#一、环境检查" class="headerlink" title="一、环境检查"></a>一、环境检查</h2><p>首先nginx里面随便配置一个http的正常的正向代理，浏览器访问是可以正常访问的 <a href="http://localhost:86/">http://localhost:86</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><pre><code class="hljs conf">server &#123;<br>    listen 86;<br>    server_name localhost;<br><br>    location / &#123;<br>        root   html;<br>        index  index.html index.htm;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="二、nginx开启https的访问"><a href="#二、nginx开启https的访问" class="headerlink" title="二、nginx开启https的访问"></a>二、nginx开启https的访问</h2><ol><li><p>下载证书: <a href="https://image.glwsq.cn/bilibili/https-crt-localhost.7z">localhost证书</a></p></li><li><p>然后把证书放到nginx的根目录，可以创建一个cert文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs tree">nginx<br> ├── cert<br> │   ├── localhost.crt<br> │   ├── localhost.pem<br> │   └── localhost_private_key.pem<br> ├── conf<br> ├── contrib<br> ├── docs<br> ├── html<br> ├── logs<br> ├── nginx.exe<br> └── temp<br></code></pre></td></tr></table></figure></li><li><p>修改nginx的配置</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs diff">server &#123;<br><span class="hljs-deletion">-    listen 86;</span><br><span class="hljs-addition">+    listen 86 ssl;</span><br>    server_name localhost;<br><span class="hljs-addition">+    ssl_certificate      ../cert/localhost.pem;</span><br><span class="hljs-addition">+    ssl_certificate_key  ../cert/localhost_private_key.pem;</span><br><br>    location / &#123;<br>        root   html;<br>        index  index.html index.htm;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>重启nginx</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">nginx -s reload</span><br></code></pre></td></tr></table></figure></li></ol><h2 id="三、本地安装证书"><a href="#三、本地安装证书" class="headerlink" title="三、本地安装证书"></a>三、本地安装证书</h2><blockquote><p>因为https没办法从网络获取localhost的证书，需要手动在电脑上安装</p></blockquote><p>双击<code>localhost.crt</code>，然后默认安装即可，建议在下面的这一步的时候这样选择。</p><p><img src="https://image.glwsq.cn/img/nginx%E5%BF%AB%E9%80%9F%E5%BC%80%E5%90%AFlocalhost%E5%9C%B0%E5%9D%80%E7%9A%84https%E8%AE%BF%E9%97%AE-2022-06-10-15-35-42.png"></p><p>开启浏览器测试吧：<a href="https://localhost:86/">https://localhost:86</a></p><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>目前的方法省去了自己生成证书的过程，如果想自己生成证书，然后再使用的话，可以参考这个教程：<a href="https://www.bilibili.com/video/BV1iC4y1a7S7">自签证书超简单傻瓜版CA创建与HTTPS证书签发教程</a></p><p>就可以自定义ip地址，这样在局域网内可以更灵活访问其他设备的https服务。</p>]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>uTools文档备份</title>
    <link href="/post/176c2715/"/>
    <url>/post/176c2715/</url>
    
    <content type="html"><![CDATA[<p><a href="https://yuanliao.info/d/1166-utools">https://yuanliao.info/d/1166-utools</a></p><p>下面的方法只针对windows系统，不过mac也有自己的实现方法。</p><h2 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h2><p>退出uTools</p><p>mklink /d “D:\BaiduSyncdisk\utools” “C:\Users%UserName%\AppData\Roaming\uTools”</p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>其实就是软链接的简单应用啦ヾ(•ω•`)o</p><p>我比较讨厌软件安装到C盘或者把数据一股脑儿往C盘塞，所以会有几个单独的分区用来存软件和数据（像vscode拓展，也可以像下面一样操作）</p><p>具体操作是这样的：</p><ol><li>退出uTools</li><li>win+R 后输入 %APPDATA%，找到uTools文件夹（假设目前uTools文件夹的路径是 C:\Users\fakeuser\AppData\Roaming\uTools）</li><li>选中uTools文件夹，剪切到你想要的任何位置（你没看错是剪切）（假设剪切后uTools文件夹的路径为 D:\fakepath\uTools）</li><li>win+R 后输入 cmd，打开cmd窗口</li><li>在cmd窗口中输入mklink /d “C:\Users\fakeuser\AppData\Roaming\uTools” “D:\fakepath\uTools”，回车（记得替换路径）</li></ol><p>完成上述操作后，你会发现原来的AppData目录中出现了一个类似快捷方式的uTools目录，但是仅仅是类似，实际上是创建了一个软链接，普通的快捷方式是没法达到这个目的的。</p><p>这样就能让uTools不占用C盘空间，将数据储存到其他地方了。</p><p>mklink /d “C:\Users\15977\AppData\Roaming\uTools” “F:\BaiduNetdiskWorkspace\AppData\utools\utools”</p>]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>看过的电影</title>
    <link href="/post/99b7b15a/"/>
    <url>/post/99b7b15a/</url>
    
    <content type="html"><![CDATA[<blockquote><p>电影零零散散也看过不少，但是让我叙述一下其中的某一部电影感觉又无话可说，专门开一篇文章记录一下看电影时候的想法，这样也不会觉得只是浪费时间的看了一部电影，至少有一点收获。</p></blockquote><span id="more"></span><h2 id="末日之战"><a href="#末日之战" class="headerlink" title="末日之战"></a>末日之战</h2><p><img src="https://image.glwsq.cn/img/%E7%9C%8B%E8%BF%87%E7%9A%84%E7%94%B5%E5%BD%B1%E8%AE%B0%E5%BD%95%E5%88%86%E4%BA%AB-2022-06-15-18-30-40.png"></p><p>观看时间：2022-06-15 18:30:47</p><h3 id="个人评价"><a href="#个人评价" class="headerlink" title="个人评价"></a>个人评价</h3><p>刚开始的一幕和现在的疫情好像啊，都是控制不住疫情了。</p><h2 id="这个杀手不太冷静"><a href="#这个杀手不太冷静" class="headerlink" title="这个杀手不太冷静"></a>这个杀手不太冷静</h2><link rel="stylesheet" type="text/css" href="/static/hexo-tag-mtime.css" /><div class="mtime-movie_card"><div class="mtime-info_section"><div class="mtime-movie_header"><img src="https://img5.mtime.cn/mt/2021/12/16/141115.75152120_1280X720X2.jpg" class="mtime-locandina"><h3 id="这个杀手不太冷静">这个杀手不太冷静</h3><h4 id="这个杀手不太冷静">2022，邢文雄</h4><div><span class="mtime-minutes">109分钟</span><p class="mtime-type">喜剧</p></div></div><div class="mtime-movie_desc"><p class="mtime-text">改编自日本导演三谷幸喜的《魔幻时刻》。一个默默无闻的群众演员以为时来运转，终于能“扮演男一号杀手卡尔”，但是他完全不知道，在阴谋诡计和阴差阳错中，他一不小心成了真正的杀手。真诚和欺骗，坦率与隐瞒，实在让人好奇——人生如戏的荒谬中，魏成功将如何周旋？他和这场意外的“演出”，又会碰撞出什么样的火花？</p></div></div><div class="mtime-blur_back" style="background: url(https://img5.mtime.cn/pi/2022/01/29/111443.46329279_1000X1000.jpg); no-repeat fixed;background-size: cover;"></div></div><p>观看时间: 2022-06-14 15:05:46</p><h2 id="温暖的抱抱"><a href="#温暖的抱抱" class="headerlink" title="温暖的抱抱"></a>温暖的抱抱</h2><link rel="stylesheet" type="text/css" href="/static/hexo-tag-mtime.css" /><div class="mtime-movie_card"><div class="mtime-info_section"><div class="mtime-movie_header"><img src="https://img5.mtime.cn/mt/2020/08/26/164823.42526363_1280X720X2.jpg" class="mtime-locandina"><h3 id="温暖的抱抱">温暖的抱抱</h3><h4 id="温暖的抱抱">2020，常远</h4><div><span class="mtime-minutes">112分钟</span><p class="mtime-type">喜剧</p></div></div><div class="mtime-movie_desc"><p class="mtime-text">翻拍自韩国电影《计划男》。对整洁和计划有着超乎常人执念的鲍抱(常远 饰)，本以为自己是一个友情爱情的绝缘体，但在遇到个性率真宋温暖(李沁 饰) 、妙手“神经”贾医生(沈腾 饰)和假仁假义王为仁（乔杉 饰）之后，上演了一段阴差阳错的喜剧故事……</p></div></div><div class="mtime-blur_back" style="background: url(https://img5.mtime.cn/pi/2020/11/25/152742.24180991_1000X1000.jpg); no-repeat fixed;background-size: cover;"></div></div><p>观看时间: 2022-06-11 15:00:38</p><h3 id="个人评价-1"><a href="#个人评价-1" class="headerlink" title="个人评价"></a>个人评价</h3><p>很搞笑，也很温暖。</p><h2 id="扬名立万"><a href="#扬名立万" class="headerlink" title="扬名立万"></a>扬名立万</h2><link rel="stylesheet" type="text/css" href="/static/hexo-tag-mtime.css" /><div class="mtime-movie_card"><div class="mtime-info_section"><div class="mtime-movie_header"><img src="https://img5.mtime.cn/mt/2021/11/02/145959.15510846_1280X720X2.jpg" class="mtime-locandina"><h3 id="扬名立万">扬名立万</h3><h4 id="扬名立万">2021，刘循子墨</h4><div><span class="mtime-minutes">123分钟</span><p class="mtime-type">剧情，悬疑</p></div></div><div class="mtime-movie_desc"><p class="mtime-text">月黑风高之夜，一群不得志电影人聚集一堂，欲将一起轰动一时的血案翻拍成电影，借此扬名立万，却不知自己正身处案发现场，并步步陷入一个巨大迷局之中，而凶手就在他们中间……　　伴随着利欲熏天的创作风暴，案件背后的故事似乎也更加扑朔迷离，戏中戏、案中案、局中局、人外人，环环相扣，一场野心与良心的较量愈演愈烈。究竟是命悬一线，还是另有惊天逆转？爱与温暖的血色花又能否从快将干涸的血河中终极绽放？一切都有待揭开。</p></div></div><div class="mtime-blur_back" style="background: url(https://img5.mtime.cn/pi/2021/11/29/094858.88306366_1000X1000.jpg); no-repeat fixed;background-size: cover;"></div></div><p>观看时间: 2022-05-22 20:00:38</p><h3 id="个人评价-2"><a href="#个人评价-2" class="headerlink" title="个人评价"></a>个人评价</h3><p>这个电影有点意思啊，很有脑洞，各种反转，看完以后很惆怅，形容不出来，只能怪读书少了</p><p>但是最后的结局又反转了一下，没看懂，我现在都没想到怎么回事儿</p><p>前面半个小时看的很迷，有点不知道在干啥，越看越有意思</p><h2 id="神奇动物在哪里"><a href="#神奇动物在哪里" class="headerlink" title="神奇动物在哪里"></a>神奇动物在哪里</h2><link rel="stylesheet" type="text/css" href="/static/hexo-tag-mtime.css" /><div class="mtime-movie_card"><div class="mtime-info_section"><div class="mtime-movie_header"><img src="https://img5.mtime.cn/mt/2016/10/26/095432.57742613_1280X720X2.jpg" class="mtime-locandina"><h3 id="神奇动物在哪里">神奇动物在哪里</h3><h4 id="神奇动物在哪里">2016，大卫·耶茨</h4><div><span class="mtime-minutes">133分钟</span><p class="mtime-type">奇幻，家庭，冒险</p></div></div><div class="mtime-movie_desc"><p class="mtime-text">1926年纽约的魔法世界，危机四伏。某个神秘的力量在街头制造了一连串的破坏，并扬言要向反魔法师狂热组织'第二塞勒姆'揭露魔法社会的存在，并借他们的手斩草除根。而强大的黑魔法师盖勒特·格林德沃，在欧洲制造了浩劫后消身匿迹，至今没人能寻得其踪。　　魔法动物学家纽特·斯卡曼德抵达纽约时，对这日益严重的紧张气氛毫不知情。他即将结束对神奇魔法动物的研究和营救工作开展的环球之旅。在他看似其貌不扬的魔法皮箱里，其实保护着不少神奇魔法动物。但意外还是猝不及防地发生了，一个叫雅各布·科瓦斯基的麻鸡无意间放跑了几个纽特的神奇魔法动物，而此时的纽约魔法界正处于最为动荡不安的时刻 -因严重违反保密法令被停职的前傲罗蒂娜·戈德斯坦恩一把抓住这个机会，想重回自己以前调查员的职位。但是，神秘莫测的美国魔法国会魔法安全部长帕西瓦尔·格雷夫斯却同时怀疑上纽特和蒂娜，事态突然变得凶险异常。　　自此，不得不合作的纽特和蒂娜，以及蒂娜的妹妹奎妮和他们的新麻鸡朋友雅各布，凑成了一支冒险小队，他们必须尽快找到走丢的神奇动物，以免它们遭受不测。然而，真正的危险，远比这四个上了通缉名单的局外人兼逃犯想象的要严重得多。他们与黑暗势力产生了正面冲突，魔法和麻鸡两界的战争可能因此一触即发。</p></div></div><div class="mtime-blur_back" style="background: url(https://img31.mtime.cn/pi/2015/11/16/095136.88394195_1000X1000.jpg); no-repeat fixed;background-size: cover;"></div></div><p>观看时间: 2022-05-16</p><h2 id="哈利·波特系列的50个精彩瞬间"><a href="#哈利·波特系列的50个精彩瞬间" class="headerlink" title="哈利·波特系列的50个精彩瞬间"></a>哈利·波特系列的50个精彩瞬间</h2><link rel="stylesheet" type="text/css" href="/static/hexo-tag-mtime.css" /><div class="mtime-movie_card"><div class="mtime-info_section"><div class="mtime-movie_header"><img src="https://img21.mtime.cn/mt/2011/08/08/210039.76203047_1280X720X2.jpg" class="mtime-locandina"><h3 id="哈利·波特系列的50个精彩瞬间">哈利·波特系列的50个精彩瞬间</h3><h4 id="哈利·波特系列的50个精彩瞬间">2011，无导演</h4><div><span class="mtime-minutes"></span><p class="mtime-type">纪录片</p></div></div><div class="mtime-movie_desc"><p class="mtime-text">英国ITV电视台回顾哈利波特系列的纪录片，但不包括《哈7下》。</p></div></div><div class="mtime-blur_back" style="background: url(https://img21.mtime.cn/mt/2011/08/08/210039.76203047_1280X720X2.jpg); no-repeat fixed;background-size: cover;"></div></div><p>观看时间：2022-05-14</p><h3 id="个人评价-3"><a href="#个人评价-3" class="headerlink" title="个人评价"></a>个人评价</h3><p>无意中看到了居然还有记录片，然后去B站搜了搜，发现居然有1个多小时，跟看个电影一样，一口气看完，回味了一遍哈利波特全集。</p><p>纪录片讲述的50个瞬间没有包含最后一部，是在最后一部上映前发出来的，所以并没有斯内普流泪这一个感人的镜头</p><h3 id="视频截图"><a href="#视频截图" class="headerlink" title="视频截图"></a>视频截图</h3><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://image.glwsq.cn/img/%E7%9C%8B%E8%BF%87%E7%9A%84%E7%94%B5%E5%BD%B1%E8%AE%B0%E5%BD%95%E5%88%86%E4%BA%AB-2022-05-14-16-15-48.png"></div><div class="group-image-wrap"><img src="https://image.glwsq.cn/img/%E7%9C%8B%E8%BF%87%E7%9A%84%E7%94%B5%E5%BD%B1%E8%AE%B0%E5%BD%95%E5%88%86%E4%BA%AB-2022-05-14-16-16-23.png"></div></div></div><h3 id="J·K·罗琳的哈利波特粉丝交流网站"><a href="#J·K·罗琳的哈利波特粉丝交流网站" class="headerlink" title="J·K·罗琳的哈利波特粉丝交流网站"></a>J·K·罗琳的哈利波特粉丝交流网站</h3><p><img src="https://image.glwsq.cn/img/%E7%9C%8B%E8%BF%87%E7%9A%84%E7%94%B5%E5%BD%B1%E8%AE%B0%E5%BD%95%E5%88%86%E4%BA%AB-2022-05-14-18-18-18.png"></p><p><a href="http://www.pottermore.com/">www.pottermore.com</a></p><hr><h2 id="我是谁"><a href="#我是谁" class="headerlink" title="我是谁"></a>我是谁</h2><link rel="stylesheet" type="text/css" href="/static/hexo-tag-mtime.css" /><div class="mtime-movie_card"><div class="mtime-info_section"><div class="mtime-movie_header"><img src="https://img31.mtime.cn/mt/2014/02/22/234831.84539626_1280X720X2.jpg" class="mtime-locandina"><h3 id="我是谁">我是谁</h3><h4 id="我是谁">1998，陈木胜</h4><div><span class="mtime-minutes">120分钟</span><p class="mtime-type">动作，惊悚，科幻，冒险</p></div></div><div class="mtime-movie_desc"><p class="mtime-text">很多年前，科学家在南非发现了一种一经震动便会产生极强的杀伤力的矿石。中央情报局要独占“魔石”，派特别突击队队员杰克及十一名队友前往南非，他们用先进的武器掳走三名科学家和所有的“魔石”。这时，发生空难事件，致使所有突击队员遇难，只有杰克侥幸生存。他被非洲土著居民在森林中发现，奄奄一息，完全失去记忆。在土著人的照料下，杰克慢慢恢复健康，而对自己的身份和处境茫然无知。他经常问“我是谁”，土著人因此称他为“我是谁”。杰克毅然离开土著人，去寻找自己，他刚一现身，就陷入到追杀的困境中。…</p></div></div><div class="mtime-blur_back" style="background: url(https://img21.mtime.cn/pi/2011/07/22/201017.57428373_1000X1000.jpg); no-repeat fixed;background-size: cover;"></div></div><p>观看时间：2022-05-13</p><h3 id="个人评价-4"><a href="#个人评价-4" class="headerlink" title="个人评价"></a>个人评价</h3><p>对这部电影的影响是感觉没看过，但是看的时候又感觉看过，可能是成龙很经典的电影了，里面的很多镜头都在其他视频中反复出现过。成龙的电影都是以动作戏为主，而且镜头下看到的大多数都是真实的场景，因此很有代入感。</p><p>在看电影的时候有几句话印象很深，那就是再也不会有这么真实的镜头了，现在的镜头大多都是后期合成的，虽然看起来也是很棒的，但是少了一点韵味吧。</p>]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>免费领取Linux虚拟机</title>
    <link href="/post/freelinux/"/>
    <url>/post/freelinux/</url>
    
    <content type="html"><![CDATA[<p>我这两天将自己闲置的服务器用docker技术分成了很多个小的Linux虚拟机，如果你想随时随地通过ssh控制一个Linux服务器进行学习的话，不妨来领取一个试试。</p><span id="more"></span><h2 id="获取方法"><a href="#获取方法" class="headerlink" title="获取方法"></a>获取方法</h2><p><img src="https://image.glwsq.cn/img/%E5%85%8D%E8%B4%B9%E9%A2%86%E5%8F%96Linux%E8%99%9A%E6%8B%9F%E6%9C%BA-2022-05-09-00-12-15.png"></p><p>获取的方法是关注公众号：海上飞棚，发送任意的文字即可<br><img max-width="50px" width="200px" src="https://image.glwsq.cn/img/202202052349959.jpg"></p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>目前的服务器只开放了22端口，可以让你通过ssh来访问，未来的展望是可以让你自行绑定其他端口，例如80、3306端口，当然这要看这个项目受欢迎的程度，如果很多人用的话，肯定会一直做下去。</p><p>这也是我第一次尝试，可能会遇到很多问题，因此这个系统只是让你用来练习Linux命令的，你可以放心大胆的使用<code>rm -rf /*</code>，更不用跑路。</p><h2 id="更多操作"><a href="#更多操作" class="headerlink" title="更多操作"></a>更多操作</h2><p>这个系统是一个精简版的ubuntu系统，如果没有你需要的命令直接安装就好了，例如系统本身是没有tree命令的，那么只需要<code>apt-get install tree</code>就好了</p><blockquote><p>如果你有任何的问题或者建议，可以在下面评论。</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>短而美第8期 - 好用的ssh工具分享</title>
    <link href="/post/ssh-tools/"/>
    <url>/post/ssh-tools/</url>
    
    <content type="html"><![CDATA[<p><a href="https://image.glwsq.cn/img/%E5%A5%BD%E7%94%A8%E7%9A%84ssh%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB-2022-05-08-14-43-22.png"></a></p><p>提供了我经常使用的ssh连接Linux服务器的方法，系统自带的和第三方软件的。</p><span id="more"></span><h2 id="Windows自带的ssh工具"><a href="#Windows自带的ssh工具" class="headerlink" title="Windows自带的ssh工具"></a>Windows自带的ssh工具</h2><blockquote><p>优点: 不需要安装，每个Windows系统的电脑都有，当然Linux也有<br>缺点: 只能通过命令行使用，文件的上传下载编辑不太方便</p></blockquote><p>使用方法: </p><p>直接在cmd命令界面输入ssh连接命令就可以了</p><figure class="highlight stylus"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs stylus">ssh root@ubuntu<span class="hljs-selector-class">.glwsq</span><span class="hljs-selector-class">.cn</span> -<span class="hljs-selector-tag">p</span> <span class="hljs-number">42222</span><br></code></pre></td></tr></table></figure><ul><li>用户名：root</li><li>密码：ubuntu</li><li>ip地址：ubuntu.glwsq.cn</li><li>端口号：42222</li></ul><p><img src="https://image.glwsq.cn/img/%E5%A5%BD%E7%94%A8%E7%9A%84ssh%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB-2022-05-08-14-20-40.png"></p><blockquote><p>当然这个是我公开的一个docker容器，任何人都可以进行访问。如果你也想拥有一个Linux服务器来练习的话，可以关注公众号：海上飞棚，发送任意文本免费领取一个。</p></blockquote><h2 id="第三方的ssh工具-MobaXterm"><a href="#第三方的ssh工具-MobaXterm" class="headerlink" title="第三方的ssh工具 MobaXterm"></a>第三方的ssh工具 MobaXterm</h2><p>官网: <a href="https://mobaxterm.mobatek.net/">https://mobaxterm.mobatek.net</a></p><blockquote><p>优点：可以方便的将文件复制到Linux服务器中，也可以用本地的文本编辑器直接编辑服务器上的文件<br>缺点：需要安装，当然我也提供有免安装的中文绿色版本（这个是破解的收费版本），可以<a href="https://image.glwsq.cn/software/MobaXterm.zip">点击下载</a></p></blockquote><p>直接用我提供的ssh连接信息进行登录，密码：ubuntu</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">ssh root@ubuntu<span class="hljs-selector-class">.glwsq</span><span class="hljs-selector-class">.cn</span> -<span class="hljs-selector-tag">p</span> <span class="hljs-number">42222</span><br></code></pre></td></tr></table></figure><p><img src="https://image.glwsq.cn/img/%E5%A5%BD%E7%94%A8%E7%9A%84ssh%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB-2022-05-08-14-52-50.png"></p><p>这个软件可以直接拖拽文件到旁边的文件管理器中，这样就可以把文件上传了，而且也可以直接用本地的编辑器打开，编辑完成以后直接同步到服务器，对新手很友好。</p><p><img src="https://image.glwsq.cn/img/%E5%A5%BD%E7%94%A8%E7%9A%84ssh%E5%B7%A5%E5%85%B7%E5%88%86%E4%BA%AB-2022-05-08-14-55-19.png" alt="直接傻瓜式编辑文本"></p><blockquote><p>这个软件功能非常的多，不是单纯的ssh连接工具，还很有多可玩的功能，游戏都有，欢迎自己探索。</p></blockquote><div class="note note-success">            <p>相关文章推荐：</p><ul><li><a href="/post/ssh-keygen/">ssh生成公钥</a></li><li><a href="/post/github-clone-ssh/">GitHub clone切换为ssh方式</a></li><li><a href="/post/ssh-port/">修改ssh的访问端口</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>短而美</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>js 16进制颜色转rgba</title>
    <link href="/post/e6e3ebe0/"/>
    <url>/post/e6e3ebe0/</url>
    
    <content type="html"><![CDATA[<p>在实际项目中遇到了一个问题，需要为一个16进制的颜色设置一个透明度，特意记录一下。</p><span id="more"></span><figure class="highlight js"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></div></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 16进制颜色转rgba</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param </span>sHex 16进制颜色信息 例如：#00FF00</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param </span>alpha 透明度</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns <span class="hljs-type">&#123;string&#125;</span> </span>返回rgba字符串 例如: &#x27;rgba(57,191,104,0.9)&#x27;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">colorRgba</span>(<span class="hljs-params">sHex, alpha = <span class="hljs-number">1</span></span>) </span>&#123;<br>  <span class="hljs-comment">// 十六进制颜色值的正则表达式</span><br>  <span class="hljs-keyword">var</span> reg = <span class="hljs-regexp">/^#([0-9a-fA-f]&#123;3&#125;|[0-9a-fA-f]&#123;4&#125;|[0-9a-fA-f]&#123;6&#125;|[0-9a-fA-f]&#123;8&#125;)$/</span><br>  <span class="hljs-comment">/* 16进制颜色转为RGB格式 */</span><br>  <span class="hljs-keyword">var</span> sColor = sHex.toLowerCase()<br>  <span class="hljs-keyword">if</span> (sColor &amp;&amp; reg.test(sColor)) &#123;<br>    <span class="hljs-keyword">if</span> (sColor.length === <span class="hljs-number">4</span> || sColor.length === <span class="hljs-number">5</span>) &#123;<br>      <span class="hljs-keyword">var</span> sColorNew = <span class="hljs-string">&#x27;#&#x27;</span><br>      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">1</span>; i &lt; sColor.length; i += <span class="hljs-number">1</span>) &#123;<br>        sColorNew += sColor.slice(i, i + <span class="hljs-number">1</span>).concat(sColor.slice(i, i + <span class="hljs-number">1</span>))<br>      &#125;<br>      sColor = sColorNew<br>    &#125;<br>    <span class="hljs-comment">// 如果有透明度再执行</span><br>    <span class="hljs-keyword">if</span> (sColor.length === <span class="hljs-number">9</span>) &#123;<br>      alpha = (<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">&#x27;0x&#x27;</span> + sColor.slice(<span class="hljs-number">7</span>, <span class="hljs-number">9</span>))/<span class="hljs-number">255</span>).toFixed(<span class="hljs-number">2</span>)<br>    &#125;<br>    <span class="hljs-comment">//  处理六位的颜色值</span><br>    <span class="hljs-keyword">var</span> sColorChange = []<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">7</span>; i += <span class="hljs-number">2</span>) &#123;<br>      sColorChange.push(<span class="hljs-built_in">parseInt</span>(<span class="hljs-string">&#x27;0x&#x27;</span> + sColor.slice(i, i + <span class="hljs-number">2</span>)))<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;rgba(&#x27;</span> + sColorChange.join(<span class="hljs-string">&#x27;,&#x27;</span>) + <span class="hljs-string">&#x27;,&#x27;</span> + alpha + <span class="hljs-string">&#x27;)&#x27;</span><br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">return</span> sColor<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
      <tag>js</tag>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Win11 打开纯英文的输入法</title>
    <link href="/post/16a627d2/"/>
    <url>/post/16a627d2/</url>
    
    <content type="html"><![CDATA[<p>Win11家庭中文版安装好以后会自带拼音输入法，这个输入法可以进行英文和中文的输入。平常的时候没什么问题，但是如果你想玩游戏，并且需要按shift操作的时候就会出问题。莫名其妙就换成中文输入法了，然后就不能进行操作了。</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>只需要在设置中添加英语即可</p><p><img src="https://image.glwsq.cn/img/Win11-%E6%89%93%E5%BC%80%E7%BA%AF%E8%8B%B1%E6%96%87%E7%9A%84%E8%BE%93%E5%85%A5%E6%B3%95-2022-04-26-10-01-40.png"></p><p>这个时候用<code>Win+空格</code>就可以进行拼音输入法和纯英文输入法的切换</p><p><img src="https://image.glwsq.cn/img/Win11-%E6%89%93%E5%BC%80%E7%BA%AF%E8%8B%B1%E6%96%87%E7%9A%84%E8%BE%93%E5%85%A5%E6%B3%95-2022-04-26-10-03-13.png" alt="只有中文语言"></p><p><img src="https://image.glwsq.cn/img/Win11-%E6%89%93%E5%BC%80%E7%BA%AF%E8%8B%B1%E6%96%87%E7%9A%84%E8%BE%93%E5%85%A5%E6%B3%95-2022-04-26-10-05-32.png" alt="添加英文语言"></p>]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>水浒传最美镜头</title>
    <link href="/post/af7aff2/"/>
    <url>/post/af7aff2/</url>
    
    <content type="html"><![CDATA[<p>水浒传发现了一个很美的镜头，截图记录一下。</p><span id="more"></span><p><a href="https://www.bilibili.com/bangumi/play/ep327325?spm_id_from=333.1007.top_right_bar_window_history.content.click&amp;from_spmid=666.25.player.continue&amp;t=1502.0">https://www.bilibili.com/bangumi/play/ep327325?spm_id_from=333.1007.top_right_bar_window_history.content.click&amp;from_spmid=666.25.player.continue&amp;t=1502.0</a></p><p><img src="https://image.glwsq.cn/img/%E6%B0%B4%E6%B5%92%E4%BC%A0%E6%9C%80%E7%BE%8E%E9%95%9C%E5%A4%B4-2022-04-22-23-28-58.png"></p><p><img src="https://image.glwsq.cn/img/%E6%B0%B4%E6%B5%92%E4%BC%A0%E6%9C%80%E7%BE%8E%E9%95%9C%E5%A4%B4-2022-04-22-23-29-17.png"></p>]]></content>
    
    
    <categories>
      
      <category>摄影</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通过python和websocket将RTSP视频流显示到网页上</title>
    <link href="/post/dd06a4e4/"/>
    <url>/post/dd06a4e4/</url>
    
    <content type="html"><![CDATA[<p><img src=""></p><p>在工作中遇到一个问题，有一个网络摄像头，打开摄像头自带的监控软件以后，可以转发出来RTSP的视频流，现在需要在web端显示。</p><p>因为html是没办法直接显示这样的视频数据的，所以需要通过其他的语言来进行处理一下。</p><p>我的思路是：</p><ol><li>通过python语言将rtsp的视频数据捕获</li><li>将捕获的数据转换成一帧一帧的图片数据</li><li>将图片数据转换成base64格式的形式，方便发送到前端</li><li>通过websocket实时的将数据发送到html</li></ol><h2 id="需要安装的依赖"><a href="#需要安装的依赖" class="headerlink" title="需要安装的依赖"></a>需要安装的依赖</h2><figure class="highlight cmake"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> opencv-python<br>pip <span class="hljs-keyword">install</span> websockets<br></code></pre></td></tr></table></figure><h2 id="Python捕获视频数据"><a href="#Python捕获视频数据" class="headerlink" title="Python捕获视频数据"></a>Python捕获视频数据</h2><p>rtsp_path 可以为一个地址，也可以为0，当为0时表示本机的摄像头</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><br><span class="hljs-comment"># 0 表示本地的摄像头</span><br>rtsp_path = <span class="hljs-number">0</span> <span class="hljs-comment"># &#x27;rtsp://admin:@192.168.1.11:554&#x27;</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">capture_videp</span>():</span><br>    capture = cv2.VideoCapture(rtsp_path)<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        ret, frame = capture.read()<br>        <span class="hljs-built_in">print</span>(frame)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> ret:<br>            <span class="hljs-keyword">break</span><br>        cv2.imshow(<span class="hljs-string">&#x27;video&#x27;</span>, frame)<br>        <span class="hljs-keyword">if</span> cv2.waitKey(<span class="hljs-number">50</span>) == <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;q&#x27;</span>): <span class="hljs-comment"># 按q键退出</span><br>            <span class="hljs-keyword">break</span><br><br>capture_videp()<br><br>cv2.destroyAllWindows()<br></code></pre></td></tr></table></figure><h2 id="python发送websocket"><a href="#python发送websocket" class="headerlink" title="python发送websocket"></a>python发送websocket</h2><p>python提供了一个高级库websockets来实现websocket。<br>官网链接：<a href="https://websockets.readthedocs.io/en/stable/">https://websockets.readthedocs.io/en/stable/</a></p><p>它需要借助asyncio这个异步框架来实现。官网上有详细的教程。</p><blockquote><p>也可以参考这个博客来进行学习：<a href="https://www.jianshu.com/p/b7df44b7c7f7">https://www.jianshu.com/p/b7df44b7c7f7</a></p></blockquote><h2 id="完整的python代码-后端"><a href="#完整的python代码-后端" class="headerlink" title="完整的python代码-后端"></a>完整的python代码-后端</h2><blockquote><p>自己随便写的，可以使用，但是代码很丑，但是思路就是这个思路</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> threading<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> asyncio<br><span class="hljs-keyword">import</span> websockets<br><br>rtsp_path = <span class="hljs-string">&#x27;rtsp://admin:@192.168.1.11:554&#x27;</span><br>camera1 = <span class="hljs-literal">None</span><br>frame = <span class="hljs-literal">None</span><br>base64img = <span class="hljs-string">&#x27;&#x27;</span><br>flag = <span class="hljs-literal">True</span><br>speed = <span class="hljs-number">0.1</span> <span class="hljs-comment"># 视频帧率 表示多少秒一帧</span><br><br><span class="hljs-comment"># 视频获取</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">vedioCapture_thread2</span>(<span class="hljs-params">n</span>):</span><br><span class="hljs-keyword">global</span> camera1<br>camera1 = cv2.VideoCapture(rtsp_path)<br><span class="hljs-keyword">global</span> frame<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>_, img_bgr = camera1.read()<br><br><span class="hljs-keyword">if</span> img_bgr <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>camera1 = cv2.VideoCapture(rtsp_path)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;丢失帧&#x27;</span>)<br><span class="hljs-keyword">else</span>:<br>frame=img_bgr<br><span class="hljs-comment"># cv2.imshow(&#x27;video&#x27;, frame)</span><br><span class="hljs-keyword">if</span> cv2.waitKey(<span class="hljs-number">50</span>) == <span class="hljs-number">27</span>:<br><span class="hljs-keyword">break</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">vedioSend_thread1</span>(<span class="hljs-params">n</span>):</span><br><span class="hljs-keyword">global</span> base64img<br><span class="hljs-keyword">global</span> flag<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;send&#x27;</span>)<br>time.sleep(<span class="hljs-number">3</span>)<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>image = cv2.imencode(<span class="hljs-string">&#x27;.jpg&#x27;</span>, frame)[<span class="hljs-number">1</span>]<br>base64_data = base64.b64encode(image)<br>s = base64_data.decode()<br><span class="hljs-comment"># print(&#x27;data:image/jpeg;base64,%s&#x27;%s)</span><br>base64img = <span class="hljs-string">&#x27;data:image/jpeg;base64,&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(s)<br>flag = <span class="hljs-literal">True</span><br><span class="hljs-comment"># server.send_message_to_all(&#x27;data:image/jpeg;base64,%s&#x27;%s)</span><br>time.sleep(speed)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">from_vedio</span>():</span><br>    thread1 = threading.Thread(target=vedioSend_thread1, args=(<span class="hljs-number">1</span>,))<br>    thread1.start()<br>    thread2 = threading.Thread(target=vedioCapture_thread2, args=(<span class="hljs-number">1</span>,))<br>    thread2.start()<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sendImg</span>(<span class="hljs-params">websocket, path</span>):</span><br><span class="hljs-keyword">global</span> flag<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br><span class="hljs-keyword">if</span> flag:<br><span class="hljs-keyword">try</span>:<br><span class="hljs-keyword">await</span> websocket.send(base64img)<br><span class="hljs-keyword">except</span> websockets.exceptions.ConnectionClosedError <span class="hljs-keyword">as</span> e:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;connection closed error&quot;</span>)<br><span class="hljs-keyword">break</span><br><span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br><span class="hljs-built_in">print</span>(e)<br><span class="hljs-keyword">break</span><br>flag = <span class="hljs-literal">False</span><br><br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br>    <span class="hljs-comment"># start a websocket server</span><br><br>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> websockets.serve(sendImg, <span class="hljs-string">&quot;localhost&quot;</span>, <span class="hljs-number">8765</span>):<br>        <span class="hljs-keyword">await</span> asyncio.Future()  <span class="hljs-comment"># run forever</span><br><br>from_vedio()<br>asyncio.run(main())<br></code></pre></td></tr></table></figure><h2 id="完整的html代码-前端"><a href="#完整的html代码-前端" class="headerlink" title="完整的html代码-前端"></a>完整的html代码-前端</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>websocket练习<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;capture&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-built_in">window</span>.onload = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">let</span> vedio = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;capture&#x27;</span>)</span><br><span class="javascript">    <span class="hljs-keyword">var</span> ws = <span class="hljs-keyword">new</span> WebSocket(<span class="hljs-string">&#x27;ws://localhost:8765&#x27;</span>);</span><br><span class="javascript">    ws.onopen = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        ws.send(<span class="hljs-string">&#x27;the request from client&#x27;</span>);</span><br><span class="javascript">    &#125;;</span><br><span class="javascript">    ws.onmessage = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-comment">// console.log(&#x27;from server: &#x27; + e.data);</span></span><br><span class="javascript">        vedio.setAttribute(<span class="hljs-string">&#x27;src&#x27;</span>, e.data)</span><br><span class="javascript"></span><br><span class="javascript">    &#125;;</span><br><span class="javascript">&#125;</span><br><span class="javascript"></span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>python</tag>
      
      <tag>html</tag>
      
      <tag>websocket</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网页调用摄像头</title>
    <link href="/post/1659d89e/"/>
    <url>/post/1659d89e/</url>
    
    <content type="html"><![CDATA[<p>html调用电脑自带的摄像头，并且实时显示视频数据，还可以截图保存</p><figure class="highlight html"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></div></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>摄像头拍照<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;video&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;480&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;320&quot;</span> <span class="hljs-attr">controls</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;capture&quot;</span>&gt;</span>拍照<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;canvas&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;480&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;320&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">        <span class="hljs-comment">//访问用户媒体设备的兼容方法</span></span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getUserMedia</span>(<span class="hljs-params">constraints, success, error</span>) </span>&#123;</span><br><span class="javascript">            <span class="hljs-keyword">if</span> (navigator.mediaDevices.getUserMedia) &#123;</span><br><span class="javascript">                <span class="hljs-comment">//最新的标准API</span></span><br><span class="javascript">                navigator.mediaDevices.getUserMedia(constraints).then(success).catch(error);</span><br><span class="javascript">            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (navigator.webkitGetUserMedia) &#123;</span><br><span class="javascript">                <span class="hljs-comment">//webkit核心浏览器</span></span><br><span class="javascript">                navigator.webkitGetUserMedia(constraints, success, error)</span><br><span class="javascript">            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (navigator.mozGetUserMedia) &#123;</span><br><span class="javascript">                <span class="hljs-comment">//firfox浏览器</span></span><br><span class="javascript">                navigator.mozGetUserMedia(constraints, success, error);</span><br><span class="javascript">            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (navigator.getUserMedia) &#123;</span><br><span class="javascript">                <span class="hljs-comment">//旧版API</span></span><br><span class="javascript">                navigator.getUserMedia(constraints, success, error);</span><br><span class="javascript">            &#125;</span><br><span class="javascript">        &#125;</span><br><span class="javascript"></span><br><span class="javascript">        <span class="hljs-keyword">let</span> video = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;video&#x27;</span>);</span><br><span class="javascript">        <span class="hljs-keyword">let</span> canvas = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;canvas&#x27;</span>);</span><br><span class="javascript">        <span class="hljs-keyword">let</span> context = canvas.getContext(<span class="hljs-string">&#x27;2d&#x27;</span>);</span><br><span class="javascript"></span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">success</span>(<span class="hljs-params">stream</span>) </span>&#123;</span><br><span class="javascript">            <span class="hljs-comment">//兼容webkit核心浏览器</span></span><br><span class="javascript">            <span class="hljs-keyword">let</span> CompatibleURL = <span class="hljs-built_in">window</span>.URL || <span class="hljs-built_in">window</span>.webkitURL;</span><br><span class="javascript">            <span class="hljs-comment">//将视频流设置为video元素的源</span></span><br><span class="javascript">            <span class="hljs-built_in">console</span>.log(stream);</span><br><span class="javascript"></span><br><span class="javascript">            <span class="hljs-comment">//video.src = CompatibleURL.createObjectURL(stream);</span></span><br><span class="javascript">            video.srcObject = stream;</span><br><span class="javascript">            video.play();</span><br><span class="javascript">        &#125;</span><br><span class="javascript"></span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">error</span>(<span class="hljs-params">error</span>) </span>&#123;</span><br><span class="javascript">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`访问用户媒体设备失败<span class="hljs-subst">$&#123;error.name&#125;</span>, <span class="hljs-subst">$&#123;error.message&#125;</span>`</span>);</span><br><span class="javascript">        &#125;</span><br><span class="javascript"></span><br><span class="javascript">        <span class="hljs-keyword">if</span> (navigator.mediaDevices.getUserMedia || navigator.getUserMedia || navigator.webkitGetUserMedia || navigator</span><br><span class="javascript">            .mozGetUserMedia) &#123;</span><br><span class="javascript">            <span class="hljs-comment">//调用用户媒体设备, 访问摄像头</span></span><br><span class="javascript">            getUserMedia(&#123;</span><br><span class="javascript">                <span class="hljs-attr">video</span>: &#123;</span><br><span class="javascript">                    <span class="hljs-attr">width</span>: <span class="hljs-number">480</span>,</span><br><span class="javascript">                    <span class="hljs-attr">height</span>: <span class="hljs-number">320</span></span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;, success, error);</span><br><span class="javascript">        &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">            alert(<span class="hljs-string">&#x27;不支持访问用户媒体&#x27;</span>);</span><br><span class="javascript">        &#125;</span><br><span class="javascript"></span><br><span class="javascript">        <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;capture&#x27;</span>).addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">            context.drawImage(video, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">480</span>, <span class="hljs-number">320</span>);</span><br><span class="javascript">        &#125;)</span><br><span class="javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>HTML</tag>
      
      <tag>精选文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue-cli 3.x和2.x共存</title>
    <link href="/post/38b4b8a6/"/>
    <url>/post/38b4b8a6/</url>
    
    <content type="html"><![CDATA[<p><img src="https://image.glwsq.cn/img/vue-cli-3-x%E5%92%8C2-x%E5%85%B1%E5%AD%98-2022-04-21-17-32-41.png"><br>遇到了一个很老的vue项目，是用vue-cli2.x创建的，现在需要把里面的一部分功能提取出来，然后进行一些改动，但是发现创建完vue项目之后和之前的老项目的项目结构不一样，没办法直接进行复制粘贴。</p><p>然后发现现在使用<code>vue create test</code>命令创建的项目是用的最新的脚手架。现在有个需求就是使用之前老版本的vue-cli2.x。</p><p><strong>解决办法:</strong></p><p>Vue CLI 3 和旧版使用了相同的vue命令，所以 Vue CLI 2 (vue-cli) 被覆盖了。如果你仍然需要使用旧版本的vue init功能，你可以全局安装一个桥接工具：</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> install -g @vue/cli-init<br></code></pre></td></tr></table></figure><p>然后用这个命令来创建项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vue init webpack <span class="hljs-built_in">test</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第一次拍照分享</title>
    <link href="/post/photography-20220404/"/>
    <url>/post/photography-20220404/</url>
    
    <content type="html"><![CDATA[<blockquote><p>心血来潮，买了一个微单，就用来记录一下生活吧。</p></blockquote><p>今天早上特意早起去公园拍了几张照片，把公园转了3圈，步数倒是走了不少，最后只选出来了4张能看的照片。</p><p><img src="https://image.glwsq.cn/img/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8B%8D%E7%85%A7%E5%88%86%E4%BA%AB-2022-04-04-17-31-18.jpg"></p><p><img src="https://image.glwsq.cn/img/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8B%8D%E7%85%A7%E5%88%86%E4%BA%AB-2022-04-04-17-31-28.jpg"></p><p><img src="https://image.glwsq.cn/img/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8B%8D%E7%85%A7%E5%88%86%E4%BA%AB-2022-04-04-17-31-34.jpg"></p><p><img src="https://image.glwsq.cn/img/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8B%8D%E7%85%A7%E5%88%86%E4%BA%AB-2022-04-04-17-31-41.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>摄影</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【28个前端精品实战案例，助你入门前端开发】，前端案例练习，WEB前端开发的实战项目练习HTML+CSS</title>
    <link href="/post/6641f455/"/>
    <url>/post/6641f455/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>是一门实践性非常强的课程，适合复习和强化自己的html+css的知识</p><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi">https://www.bilibili.com/video/BV1Wo4y1Q7Mi</a><br>自己写的代码:</p></blockquote><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=1">P1. 00-开课导语</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=2">P2. 01-淘宝官网搜索框圆角实现</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=3">P3. 02-淘宝官网中小三角实现</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=4">P4. 03-拼多多首页导航条布局(1)</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=5">P5. 04-拼多多首页导航条布局(2)</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=6">P6. 05-拼多多首页导航条布局(3)</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=7">P7. 06-拼多多首页导航条布局(4)</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=8">P8. 07-拼多多首页二维码图片布局</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=9">P9. 08-百度新闻页面右侧电梯雪碧图应用</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=10">P10. 09-百度新闻页面右侧电梯动画</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=11">P11. 10-央视官网顶部banner及导航布局</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=12">P12. 11-百度新闻页面返回顶部</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=13">P13. 12-返回顶部(匀速和缓冲方式)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=14">P14. 13-百度新闻页面内容搜索功能实现</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=15">P15. 14-京东官网放大镜功能实现(1)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=16">P16. 15-京东官网放大镜功能实现(2)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=17">P17. 16- 京东官网手风琴特效(1)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=18">P18. 17- 京东官网手风琴特效(2)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=19">P19. 18-实时圆形时钟特效(1)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=20">P20. 19-实时圆形时钟特效(2)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=21">P21. 20-购物官网或App的五星好评功能实现</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=22">P22. 21-遮罩层动画</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=23">P23. 22-碰撞检测1</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=24">P24. 23-碰撞检测2</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=25">P25. 24-物体吸附效果</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=26">P26. 25-旋转木马效果</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=27">P27. 26-万年历1</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=28">P28. 27-万年历2</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=29">P29. 28-万年历3</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=30">P30. 29-万年历4</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=31">P31. 30-3D旋转立方体1</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=32">P32. 31-3D旋转立方体2</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=33">P33. 32-随机抽奖功能1</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=34">P34. 33-随机抽奖功能2</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=35">P35. 34-随机抽奖功能3</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=36">P36. 35-省市区三级联动1</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=37">P37. 36-省市区三级联动2</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=38">P38. 37-省市区三级联动3</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=39">P39. 38-省市区三级联动4</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=40">P40. 40-轮播图2</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=41">P41. 41-轮播图3</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=42">P42. 42-轮播图4</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=43">P43. 43-轮播图5</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>win11右键默认显示更多选项</title>
    <link href="/post/8146e869/"/>
    <url>/post/8146e869/</url>
    
    <content type="html"><![CDATA[<p>我平时用右键的功能有点频繁，Win11现在右键需要点击更多选项才能展开所有，有点麻烦，这个方法可以直接展开最全的右键菜单。</p><p>反正可以再改回去，想尝试了可以试试，我现在体验很好<br><img src="https://image.glwsq.cn/img/win11%E5%8F%B3%E9%94%AE%E9%BB%98%E8%AE%A4%E6%98%BE%E7%A4%BA%E6%9B%B4%E5%A4%9A%E9%80%89%E9%A1%B9-2022-03-10-19-44-38.png"></p><h2 id="快速修改"><a href="#快速修改" class="headerlink" title="快速修改"></a>快速修改</h2><p>最简单方法，直接用下面这个批处理文件</p><figure class="highlight bat"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></div></td><td class="code"><pre><code class="hljs bat"><span class="hljs-built_in">echo</span> off<br><span class="hljs-built_in">color</span> <span class="hljs-number">1</span>f<br>:<span class="hljs-built_in">start</span><br><span class="hljs-built_in">cls</span><br><span class="hljs-built_in">echo</span>,<br><span class="hljs-built_in">echo</span>     修改右键菜单模式<br><span class="hljs-built_in">echo</span>,<br><span class="hljs-built_in">echo</span>   <span class="hljs-number">1</span> Windows <span class="hljs-number">10</span> 传统模式<br><span class="hljs-built_in">echo</span>,<br><span class="hljs-built_in">echo</span>   <span class="hljs-number">2</span> Windows <span class="hljs-number">11</span> 默认模式<br><span class="hljs-built_in">echo</span>,<br><span class="hljs-built_in">echo</span>,<br><span class="hljs-built_in">echo</span>,<br><span class="hljs-built_in">echo</span>   <span class="hljs-number">0</span> 放弃修改，退出<br><span class="hljs-built_in">echo</span>,<br><span class="hljs-built_in">echo</span>,<br>choice /c:<span class="hljs-number">120</span> /n /m:&quot;请选择要使用的模式&quot;<br><span class="hljs-keyword">if</span> <span class="hljs-variable">%errorlevel%</span>==<span class="hljs-number">0</span> <span class="hljs-keyword">exit</span><br><span class="hljs-keyword">if</span> <span class="hljs-variable">%errorlevel%</span>==<span class="hljs-number">2</span> <span class="hljs-keyword">goto</span> cmd2<br><span class="hljs-keyword">if</span> <span class="hljs-variable">%errorlevel%</span>==<span class="hljs-number">1</span> <span class="hljs-keyword">goto</span> cmd1<br><span class="hljs-keyword">exit</span><br><br><br>:cmd1<br>reg.exe add &quot;HKCU\Software\Classes\CLSID\&#123;<span class="hljs-number">86</span>ca1aa0-<span class="hljs-number">34</span>aa-<span class="hljs-number">4</span>e8b-a509-<span class="hljs-number">50</span>c905bae2a2&#125;\InprocServer32&quot; /f /ve<br>shutdown -l<br><span class="hljs-keyword">exit</span><br><br>:cmd2<br>reg.exe delete &quot;HKCU\Software\Classes\CLSID\&#123;<span class="hljs-number">86</span>ca1aa0-<span class="hljs-number">34</span>aa-<span class="hljs-number">4</span>e8b-a509-<span class="hljs-number">50</span>c905bae2a2&#125;&quot; /f<br>shutdown -l<br><span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>通过修改注册表，我们就可以将Win11的右键菜单改为老样式。下面是具体的方法。</p><ol><li><p>运行“regedit”，开启注册表编辑器，定位到“HKEY_CURRENT_USER\SOFTWARE\CLASSES\CLSID”；</p></li><li><p>接着，右键点击“CLSID”键值，新建一个名为{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}的项；</p></li><li><p>右键点击新创建的项，新建一个名为InprocServer32的项，按下回车键保存；</p></li><li><p>最后选择新创建的项，然后双击右侧窗格中的默认条目，什么内容都不需要输入，按下回车键。</p></li><li><p>保存注册表后，重启explorer.exe，即可看到右键菜单恢复成旧样式了。</p></li></ol><p>如果想要恢复成为Win11的设计，那么删掉InprocServer32的项就可以了。</p>]]></content>
    
    
    <categories>
      
      <category>电脑使用技巧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>springboot+vue练手级项目，真实的在线博客系统</title>
    <link href="/post/springboot-vue-mszl-blog/"/>
    <url>/post/springboot-vue-mszl-blog/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>一个springboot+vue博客的练手项目，学了一段时间，感觉适合有一点点项目经验的人，没必要非得是springboot的项目经验。如果有网站后台开发经验，写过一个后台的项目，就会对这个项目更加的得心应手，因为这个老师在讲解的过程中没有讲项目的结构和数据库的表结构，如果没有一点点基础的话可能会不知道他在干啥。</p><p>我自己没有按照他的项目结构来，因为感觉刚开始他说的项目结构很乱，也可能是我太菜理解不了，所以我是直接用Spring Initializr创建了一个初始化的项目，然后跟着他一步一步来，如果需要的maven包没有的话，直接去他提供的资料里找</p><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb">https://www.bilibili.com/video/BV1Gb4y1d7zb</a><br>项目资料: <a href="https://pan.baidu.com/s/1YD8pi_bxDucY1rtrAiPXYQ?pwd=6666">https://pan.baidu.com/s/1YD8pi_bxDucY1rtrAiPXYQ?pwd=6666</a><br>自己跟着视频写的代码: <a href="https://github.com/glwhappen/mszl-blog">https://github.com/glwhappen/mszl-blog</a></p></blockquote><h2 id="用到的依赖"><a href="#用到的依赖" class="headerlink" title="用到的依赖"></a>用到的依赖</h2><ul><li>jdk 1.8</li><li>spring-boot 2.4.1</li><li>mysql-connector</li><li>mybatis-plus 3.5.1</li><li>lombok</li></ul><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><p>P4后形成的目录结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></div></td><td class="code"><pre><code class="hljs txt">src/cn.glwsq.blog<br>│  BlogApplication.java # 启动文件<br>│<br>├─config # 配置文件<br>│      MyBatisPlusConfig.java # MyBatisPlus配置文件<br>│      WebMVCConfig.java # 跨域配置<br>│<br>├─controller<br>│      ArticleController.java<br>│<br>├─domain<br>│      Article.java<br>│      SysUser.java<br>│      Tag.java<br>│<br>├─mapper # 会去寻找resources下面的同名mapper<br>│      ArticleMapper.java<br>│      SysUserMapper.java<br>│      TagMapper.java<br>│<br>├─service<br>│  │  ArticleService.java<br>│  │  SysUserService.java<br>│  │  TagService.java<br>│  │<br>│  └─impl<br>│          ArticleServiceImpl.java<br>│          SysUserServiceImpl.java<br>│          TagServiceImpl.java<br>│<br>└─vo<br>    │  ArticleVo.java<br>    │  Result.java<br>    │  TagVo.java<br>    │<br>    └─params<br>            PageParams.java<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs txt">resources<br>│  application.yml # 项目配置<br>│<br>├─mapper # mapper映射文件<br>│      ArticleMapper.xml<br>│      SysUserMapper.xml<br>│      TagMapper.xml<br>│<br>├─static<br>└─templates<br></code></pre></td></tr></table></figure><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=1">P1. 项目介绍</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=2">P2. 项目搭建</a><ul><li>用自己的方法搭建博客后台项目</li><li>加入mybatis-plus的分页插件</li><li>跨域配置</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=3">P3. 首页文章列表实现-1</a><ul><li>idea的MybatisX插件真好用，直接通过mysql数据库把相关的代码实现了，具体的代码如下<ol><li>domain层，包含了数据库的表结构</li><li>mapper层，包含了mybatis的数据库操作Mapper</li><li>service层，逻辑处理层</li><li>和resources下的mapper.xml</li></ol></li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=4">P4. 首页文章列表实现-2</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=5">P5. 首页-最热标签</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=6">P6. 统一异常处理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=7">P7. 首页-最热文章</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=8">P8. 首页-最新文章</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=9">P9. 首页-文章归档</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=10">P10. 登录JWT技术</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=11">P11. 登录功能</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=12">P12. 登录后获取用户信息</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=13">P13. 退出登录</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=14">P14. 注册功能</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=15">P15. 登录拦截器</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=16">P16. ThreadLocal保存登录用户信息</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=17">P17. ThreadLocal内存泄漏</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=18">P18. 文章详情</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=19">P19. 线程池的使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=20">P20. 阅读次数bug修正</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=21">P21. 评论列表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=22">P22. 评论功能</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=23">P23. 写文章-所有分类</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=24">P24. 写文章-所有标签</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=25">P25. 发布文章</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=26">P26. AOP记录日志</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=27">P27. 文章归档bug修复</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=28">P28. 文章图片上传</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=29">P29. 导航-文章分类</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=30">P30. 分类文章列表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=31">P31. 标签文章列表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=32">P32. 归档文章列表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=33">P33. 统一缓存处理（优化）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=34">P34. 统一缓存精度bug</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=35">P35. 思考别的优化+作业</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=36">P36. 管理后台-搭建工程</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=37">P37. 管理后台-页面讲解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=38">P38. 权限表增删改查</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=39">P39. security配置说明</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=40">P40. 登录认证</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=41">P41. 权限认证</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=42">P42. 管理台权限布置作业</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=43">P43. 总结-面试技术亮点</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=44">P44. 前端代码讲解1</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=45">P45. 前端代码讲解2</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=46">P46. 部署-云服务器购买</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=47">P47. 部署-域名和备案</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=48">P48. 部署-打包</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=49">P49. 部署-安装mysql和redis</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=50">P50. 部署-app镜像制作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=51">P51. 部署-服务编排</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=52">P52. 部署-网络错误解决</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=53">P53. 补充-53-缓存一致性问题</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=54">P54. 补充-54-缓存一致性问题-消费者逻辑</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=55">P55. 补充-55-缓存一致性问题-文章列表解决方案</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>学习中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>王道组成原理学习总结</title>
    <link href="/post/7cd0071e/"/>
    <url>/post/7cd0071e/</url>
    
    <content type="html"><![CDATA[<p>记录在学习组成原理这门课的过程中的知识点，方便复习，看的视频是王道考研的视频，正在学习…..</p><span id="more"></span><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><h3 id="01-第一章计算机系统概述"><a href="#01-第一章计算机系统概述" class="headerlink" title="01.第一章计算机系统概述"></a>01.第一章计算机系统概述</h3><ul><li><input checked="" disabled="" type="checkbox"> 1.0 - 你好，我是计算机组成原理<ul><li>没啥要学的</li></ul></li><li><input checked="" disabled="" type="checkbox"> 1.1 - 计算机的发展（大纲已删但建议看看）<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-10-12-14-39.png"><br>中国的超级计算机：神威·太湖之光  </p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 1.2.1 - 计算机硬件的基本组成<ul><li><details><summary>笔记</summary><h4 id="早期的冯诺依曼计算机"><a href="#早期的冯诺依曼计算机" class="headerlink" title="早期的冯诺依曼计算机"></a>早期的冯诺依曼计算机</h4><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-10-15-32-12.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-10-15-34-04.png"><br>早期的冯诺依曼计算机可以类比为一个加工厂<br>因此很明显可以看到缺点，就是存储部门可以直接和采购部门销售部门对接，但是现在非要经过生产加工部门，因此需要改进，这也就出现了现代计算机<br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-10-16-05-06.png"></p><h4 id="现代计算机"><a href="#现代计算机" class="headerlink" title="现代计算机"></a>现代计算机</h4><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-10-16-06-45.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 1.2.2 - 认识各个硬件部件<ul><li>这节课还是比较硬核的</li><li>字(word): 跟计算机的硬件有关 如果是32位系统则一个字是4个字节,如果是64位,则是8个字节。</li><li>字节(Byte): 1字节 = 8bit</li><li>运算器<ul><li>ACC：累加器 Accumulator</li><li>MQ：乘商寄存器 Multiple-Quotient Register</li><li>X：通用的操作数寄存器 </li><li>ALU：算术逻辑单元 Arithmetic and Logic Unit</li></ul></li><li>控制器<ul><li>CU：控制单元 Control Unit</li><li>IR：指令寄存器 Instruction Register</li><li>PC：程序寄存器 Program Counter</li></ul></li><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-10-22-34-50.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-10-22-36-46.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-10-22-37-11.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 1.2.3 - 计算机系统的层次结构<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-11-20-11-23.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-11-20-12-10.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 1.3 - 计算机的性能指标<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-11-20-12-54.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-11-20-17-04.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-11-20-18-12.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-11-20-35-08.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-11-20-35-52.png">  </p></details><h3 id="02-第二章数据的表示和运算"><a href="#02-第二章数据的表示和运算" class="headerlink" title="02.第二章数据的表示和运算"></a>02.第二章数据的表示和运算</h3></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.1.1 - 进位计数制<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-11-03-39.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-11-04-10.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.1.2 - BCD码（大纲已删408考生可不看）<ul><li>用四位的二进制来保存一个十进制数，会有冗余</li><li>方便一位一位的进行进制转换</li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.1.3 - 字符与字符串<ul><li>太神奇了，ASCII码的低4位居然是BCD码</li><li>大小写字母的低5位转换为数字居然正好是1-26，我之前以为他们的ASCII是随便写的。</li><li>汉字的GB2312是用区位码来表示的，94*94的格子，每一个表示一个汉字</li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.1.4 - 奇偶校验码（计组大纲已删但计网要考）<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-15-44-07.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.1.5 - 海明校验码（计组大纲已删但计网要考）<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-15-44-57.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-15-46-11.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-15-46-46.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.1.6 - 循环冗余校验码（计组大纲已删但计网要考）<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-16-27-47.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.1 - 定点数的表示<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-16-52-38.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-11-01-54.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.2 - 原码补码移码的作用<ul><li>补码的作用是为了把负数相加转换为整数相加，这样就可以致设计加法电路，来完成减法的需求</li><li>移码的作用是方便比较大小</li><li>反码没啥用，是一个中间变量</li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.3 - 移位运算<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-17-30-45.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-17-30-59.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.4 - 加减运算和溢出判断<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-09-07-30.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-09-08-27.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-09-09-07.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-09-10-20.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-09-10-41.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-09-12-11.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-09-12-43.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.5 - 原码的乘法运算<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-09-46-20.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.5 - 补码的乘法运算<ul><li><strong>好难，没听懂，回头再来学学</strong></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.6 - 原码的除法运算<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-17-53-11.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-17-54-23.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.6 - 补码的除法运算<ul><li><details><summary>笔记</summary><p>发现补码的都比较难<br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-18-08-49.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.7 - 强制类型转换<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-16-15-41-08.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.8 - 数据的存储和排列<ul><li>大小端模式</li><li>边界对齐</li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.1 - 浮点数的表示<ul><li>内容有点多，感觉不是很好算</li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.2 - IEEE75<ul><li><details><summary>笔记</summary><p>重点学一下十进制和二进制的相互转换<br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-16-22-54-43.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-16-22-56-04.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-16-22-57-04.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.3 - 浮点数的运算<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-10-38-13.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-10-39-29.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-10-39-47.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.4.1 - 电路的基本原理、加法器设计<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-11-19-39.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-11-20-59.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-11-21-27.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-11-22-38.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-11-22-56.png" alt="一位全加器"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-11-23-36.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-11-24-01.png"></p></details></li></ul></li><li><input disabled="" type="checkbox"> 2.4.2 - 加法器、ALU的改进<ul><li>听不懂，跳过 <h3 id="03-第三章存储系统"><a href="#03-第三章存储系统" class="headerlink" title="03.第三章存储系统"></a>03.第三章存储系统</h3></li></ul></li><li><input checked="" disabled="" type="checkbox"> 3.1+3.2 - 存储系统基本概念<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-15-52-37.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-15-53-12.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 3.3.1 - 主存储器的基本组成<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-16-12-57.png" alt="主存储器的简单模型"></p></details></li></ul></li><li><input disabled="" type="checkbox"> 3.3.2 - SRAM和DRAM<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-16-23-09.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-16-55-09.png" alt="DRAM v.s SRAM"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-16-56-32.png" alt="DRAM的刷新"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 3.3.3 - 只读存储器ROM<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-17-09-35.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 3.4 - 主存储器与CPU的连接<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-17-51-06.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-17-51-54.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-17-52-34.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-17-53-01.png"></p></details></li></ul></li><li><input disabled="" type="checkbox"> 3.5 - 双端口RAM和多模块存储器<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-15-56-54.png" alt="双端口RAM"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-15-57-34.png" alt="多体并行存储器"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-15-59-00.png" alt="都体块存储器"></p></details></li></ul></li><li><input disabled="" type="checkbox"> 3.6.1 - Cache的基本概念和原理<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-16-01-29.png" alt="Cache的工作原理"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-16-02-09.png" alt="局部性原理"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-16-03-28.png" alt="性能分析"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-16-04-22.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-16-04-48.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 3.6.2 - Cache和主存的映射方式<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-16-52-55.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-16-58-19.png" alt="Cache-主存映射方式"></p></details></li></ul></li><li><input disabled="" type="checkbox"> 3.6.3 - Cache替换算法<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-17-00-35.png" alt="随机算法"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-17-01-10.png" alt="先进先出算法"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-17-03-33.png" alt="近期最少使用算法"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-17-04-18.png" alt="最不经常使用算法"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 3.6.4 - Cache写策略<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-17-15-56.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 3.7.1 - 页式存储器<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-17-51-21.png" alt="快表和Cache总结"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-17-49-41.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-17-50-47.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 3.7.2 - 虚拟存储器<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-18-06-05.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-18-06-27.png"></p></details><h3 id="04-第四章指令系统"><a href="#04-第四章指令系统" class="headerlink" title="04.第四章指令系统"></a>04.第四章指令系统</h3></li></ul></li><li><input checked="" disabled="" type="checkbox"> 4.1.1 - 指令格式<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-10-41-03.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 4.1.2 - 扩展操作码指令格式<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-10-42-25.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-10-43-23.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 4.2.1 - 指令寻址<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-10-45-06.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 4.2.2 - 数据寻址<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-10-45-41.png" alt="数据寻址方法"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-10-46-58.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 4.2.3 - 数据寻址2_偏移寻址<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-20-01-42.png" alt="基址寻址"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-20-02-08.png" alt="变址寻址"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-20-06-12.png" alt="相对寻址"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 4.2.4 - 数据寻址3_堆栈寻址<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-20-07-18.png" alt="堆栈寻址"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 4.3 - CISC和RISC<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-20-10-55.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-20-11-30.png"></p></details><h3 id="05-第五章中央处理器"><a href="#05-第五章中央处理器" class="headerlink" title="05.第五章中央处理器"></a>05.第五章中央处理器</h3></li></ul></li><li><input checked="" disabled="" type="checkbox"> 5.0 - 回忆过去</li><li><input checked="" disabled="" type="checkbox"> 5.1 - CPU的功能和基本结构<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-11-08-36.png" alt="CPU的基本结构"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-11-09-19.png" alt="CPU的功能和基本结构"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 5.2 - 指令周期的数据流<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-15-41-50.png" alt="指令周期流程"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-15-42-50.png" alt="取值周期"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-15-43-12.png" alt="间址周期"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-15-44-21.png" alt="中断周期"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-15-44-58.png" alt="指令执行方案"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 5.3.1 - 数据通路-单总线结构<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-18-20-35.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 5.3.2 - 数据通路-专用通路结构<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-18-23-43.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 5.4.1 - 硬布线控制器的设计<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-18-16-29.png" alt="硬布线控制器"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-18-17-24.png" alt="硬布线控制器的设计"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 5.4.2 - 微程序控制器的基本原理<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-18-50-50.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-18-51-38.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 5.4.3 - 微指令的设计<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-20-22-49.png"></p></details></li></ul></li><li><input disabled="" type="checkbox"> 5.4.4 - 微程序控制单元的设计</li><li><input checked="" disabled="" type="checkbox"> 5.5.1 - 指令流水线的基本概念<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-20-59-01.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-20-59-42.png" alt="指令流水线的表示方法"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-21-00-29.png" alt="指令流水线"></p></details></li></ul></li><li><input disabled="" type="checkbox"> 5.5.2 - 指令流水线的影响因素和分类</li><li><input disabled="" type="checkbox"> 5.5.3 - 五段式指令流水线<h3 id="06-第六章总线"><a href="#06-第六章总线" class="headerlink" title="06.第六章总线"></a>06.第六章总线</h3></li><li><input disabled="" type="checkbox"> 6.1.1 - 总线概述</li><li><input disabled="" type="checkbox"> 6.1.2 - 总线的性能指标</li><li><input disabled="" type="checkbox"> 6.2 - 总线仲裁</li><li><input disabled="" type="checkbox"> 6.3 - 总线操作和定时</li><li><input disabled="" type="checkbox"> 6.4 - 总线标准<h3 id="07-第七章IO系统"><a href="#07-第七章IO系统" class="headerlink" title="07.第七章IO系统"></a>07.第七章IO系统</h3></li><li><input disabled="" type="checkbox"> 7.1 IO系统基本概念</li><li><input disabled="" type="checkbox"> 7.2.1 输入输出设备</li><li><input disabled="" type="checkbox"> 7.2.2 外存储器</li><li><input disabled="" type="checkbox"> 7.3 I-O接口</li><li><input disabled="" type="checkbox"> 7.4.1 程序查询方式</li><li><input disabled="" type="checkbox"> 7.4.2 中断的作用和原理</li><li><input disabled="" type="checkbox"> 7.4.3 多重中断</li><li><input disabled="" type="checkbox"> 7.4.4 程序中断方式</li><li><input disabled="" type="checkbox"> 7.4.5 DMA方式</li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>百度网盘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>研究生信息保存</title>
    <link href="/post/2ffc594e/"/>
    <url>/post/2ffc594e/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4b145b06db56ac8197033420bb3b4f59f71e5b0bceb5955b0dcf13b86ec60b16">3cda45eb18a6d7e6d918c351ef05b50a59b4b1b3c645f92f1a57f9b3725e6f64e4e342a1947fdcd6f9555d842b2de30f3da69fbdd846ea347344334467af812b6c74e7576b654dab83f67ec3842e071871140852c92f9210944eb86ddac7e1aed2fd3ae670173c4da12b1b7d52d31e41ce66c7c14261045e727080661bfe5149ac11a4b76c1f753f871a8d4d6b7c0e53f3a85a91ea2db29db45045229716e74c5fce3254316292c0ce1c49badc58e95a7173a5399001bdeac2f3182093d64664b1279f2a461b39b7bfc2ca683aad28eba0af89c08a9a4e5225f11a1904ee431e8d97f1edfb453af6db182381fde73a17c795ae073322e9178cd7cebdfdeaf1bbab463b891be41589371f0f73b52e31fb5e9e5166377087f365a8271244ab222a6d68741488638070c0061445b1e230f482e0c7497f07d123359690702c28d9e11e2526c1ea08c14f28c967ed45afc739a2e3eb34cb6b29f81f85ecea711632a79d90fef076a57e932cad8f772f503636b67449b8c7a570330712c83bf605cbf9f8be0bbef532ef330baa711ab99c395cb10a8e6ef7c2a52df012ba2b740f8c04825f04b8ccf93783b6f60862148666d52e458046ac9ba7c9ea8ad0d443d8cb8c59e95c6933f8b89c230fd193921238aa1ce4d916b51ccd773875ac1f1bba351a3b63ae04f9a42129e5fafbf96106ca93cd03e3d3abf781df9fa909b01b084e58e6f9a0f14fcdf2e504e5ff99c6c565219c4ed7e75031e94d0426c4f2e773940f7f4883502f1631f3c9e9b264f11b319efb5417a9224eabb3031e448c8935546c3c36fdbc4f060a99e2348ff34cb93a1116b6ef8b87cf96bad645b42cb2dd80e1e5b915bf0e24a020a7203981fa2c904e</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>推荐分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>考研复试英语口语问题整理学习</title>
    <link href="/post/introduce-myself-in-english/"/>
    <url>/post/introduce-myself-in-english/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="8a4298df7265947d9c8263bb572909e12db10666103814d050635adc9aa1a39f"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>个人文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DeskSave - 桌面图标记录工具</title>
    <link href="/post/desk-save/"/>
    <url>/post/desk-save/</url>
    
    <content type="html"><![CDATA[<p>DeskSave是一款老牌的桌面图标记录工具，有时候会因为自己的误操作打乱桌面图标，如果你还是个强迫症患者，肯定还会再手动调整回去（我好像这样干过，而且我每隔一段时间会截屏记录一下图标的位置）</p><p>如果你拥有了这一款软件，就能完美解决这个问题。</p><p>使用 DeskSave，你可以把当前的桌面图标排列方式保存，以后可以直接恢复。</p><p>除此之外，还可以设置每隔一段时间自动保存当前桌面图标排列方式。</p><p><a href="https://image.glwsq.cn/software/DeskSave.zip">点击下载</a></p><p>只需要下载DeskSave，然后右键管理员方式运行就可以了。</p>]]></content>
    
    
    <categories>
      
      <category>推荐分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>软件推荐</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>为什么头发会越洗越油？</title>
    <link href="/post/f57fc629/"/>
    <url>/post/f57fc629/</url>
    
    <content type="html"><![CDATA[<p><img src="https://image.glwsq.cn/img/%E6%B4%97%E5%A4%B4%E9%A2%91%E7%8E%87-2022-03-03-10-13-06.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>转载</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>尚硅谷雷神SpringBoot2零基础入门springboot全套完整版（spring boot2）</title>
    <link href="/post/spring-boot-2/"/>
    <url>/post/spring-boot-2/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>最近需要学习一下spring boot，正在学习中</p><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV19K4y1L7MT">https://www.bilibili.com/video/BV19K4y1L7MT</a><br>上课笔记: <a href="https://www.yuque.com/atguigu/springboot">https://www.yuque.com/atguigu/springboot</a><br>源码地址：<a href="https://gitee.com/leifengyang/springboot2">https://gitee.com/leifengyang/springboot2</a><br>后台管理系统静态页：<a href="https://image.glwsq.cn/bilibili/admin.zip">https://image.glwsq.cn/bilibili/admin.zip</a></p></blockquote><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=1">01、基础入门-SpringBoot2课程介绍</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=2">02、基础入门-Spring生态圈</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=3">03、基础入门-SpringBoot的大时代背景</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=4">04、基础入门-SpringBoot官方文档架构</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=5">05、基础入门-SpringBoot-HelloWorld</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=6">06、基础入门-SpringBoot-依赖管理特性</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=7">07、基础入门-SpringBoot-自动配置特性</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=8">08、底层注解-@Configuration详解</a><ul><li>这里没听懂，云里雾里的，可能是因为没有学spring吧，回头学一下再来</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=9">09、底层注解-@Import导入组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=10">10、底层注解-@Conditional条件装配</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=11">11、底层注解-@ImportResource导入Spring配置文件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=12">12、底层注解-@ConfigurationProperties配置绑定</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=13">13、自动配置【源码分析】-自动包规则原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=14">14、自动配置【源码分析】-初始加载自动配置类</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=15">15、自动配置【源码分析】-自动配置流程</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=16">16、最佳实践-SpringBoot应用如何编写</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=17">17、最佳实践-Lombok简化开发</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=18">18、最佳实践-dev-tools</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=19">19、最佳实践-Spring Initailizr</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=20">20、配置文件-yaml的用法</a><ul><li>这节课讲的太好了，受益匪浅。</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=21">21、配置文件-自定义类绑定的配置提示</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=22">22、web场景-web开发简介</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=23">23、web场景-静态资源规则与定制化</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=24">24、web场景-welcome与favicon功能</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=25">25、web场景-【源码分析】-静态资源原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=26">26、请求处理-【源码分析】-Rest映射及源码解析</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=27">27、请求处理-【源码分析】-怎么改变默认的_method</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=28">28、请求处理-【源码分析】-请求映射原理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=29">29、请求处理-常用参数注解使用</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=30">30、请求处理-@RequestAttribute</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=31">31、请求处理-@MatrixVariable与UrlPathHelper</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=32">32、请求处理-【源码分析】-各种类型参数解析原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=33">33、请求处理-【源码分析】-Servlet API参数解析原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=34">34、请求处理-【源码分析】-Model、Map原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=35">35、请求处理-【源码分析】-自定义参数绑定原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=36">36、请求处理-【源码分析】-自定义Converter原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=37">37、响应处理-【源码分析】-ReturnValueHandler原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=38">38、响应处理-【源码分析】-HTTPMessageConverter原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=39">39、响应处理-【源码分析】-内容协商原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=40">40、响应处理-【源码分析】-基于请求参数的内容协商原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=41">41、响应处理-【源码分析】-自定义MessageConverter</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=42">42、响应处理-【源码分析】-浏览器与PostMan内容协商完全适配</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=43">43、视图解析-Thymeleaf初体验</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=44">44、web实验-后台管理系统基本功能</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=45">45、web实验-抽取公共页面</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=46">46、web实验-遍历数据与页面bug修改</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=47">47、视图解析-【源码分析】-视图解析器与视图</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=48">48、拦截器-登录检查与静态资源放行</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=49">49、拦截器-【源码分析】-拦截器的执行时机和原理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=50">50、文件上传-单文件与多文件上传的使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=51">51、文件上传-【源码流程】文件上传参数解析器</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=52">52、错误处理-SpringBoot默认错误处理机制</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=53">53、错误处理-【源码分析】底层组件功能分析</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=54">54、错误处理-【源码流程】异常处理流程</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=55">55、错误处理-【源码流程】几种异常处理原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=56">56、原生组件注入-原生注解与Spring方式注入</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=57">57、原生组件注入-【源码分析】DispatcherServlet注入原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=58">58、嵌入式Servlet容器-【源码分析】切换web服务器与定制化</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=59">59、定制化原理-SpringBoot定制化组件的几种方式</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=60">60、数据访问-数据库场景的自动配置分析与整合测试</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=61">61、数据访问-自定义方式整合druid数据源</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=62">62、数据访问-druid数据源starter整合方式</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=63">63、数据访问-整合mybatis-配置版</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=64">64、数据访问-整合Mybatis-注解配置混合版</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=65">65、数据访问-整合MyBatisPlus操作数据库</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=66">66、数据访问-crud实验-数据列表展示【补录】</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=67">67、数据访问-crud实验-分页数据展示</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=68">68、数据访问-crud实验-删除用户完成</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=69">69、数据访问-准备阿里云redis环境</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=70">70、数据访问-redis操作与统计小实验</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=71">71、单元测试-Junit5简介</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=72">72、单元测试-常用测试注解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=73">73、单元测试-断言机制</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=74">74、单元测试-前置条件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=75">75、单元测试-嵌套测试</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=76">76、单元测试-参数化测试</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=77">77、指标监控-SpringBoot Actuator与Endpoint</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=78">78、指标监控-开启与禁用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=79">79、指标监控-定制Endpoint</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=80">80、指标监控-Boot Admin Server</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=81">81、高级特性-Profile环境切换</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=82">82、高级特性-配置加载优先级</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=83">83、高级特性-自定义starter细节</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=84">84、原理解析-SpringApplication创建初始化流程</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=85">85、原理解析-SpringBoot完整启动过程</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=86">86、原理解析-自定义事件监听组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=87">87、后会有期</a></li></ul><div class="note note-success">            <p>相关推荐：</p><ul><li><a href="/post/note-vue-element/">Vue后台管理系统项目实战/vue+element-ui/vue经典全套系统案例讲解</a></li><li><a href="/post/df99894b/">尚硅谷Vue2.0+Vue3.0全套教程丨vuejs从入门到精通</a></li><li><a href="/post/2ff98e51/">Docker最新超详细版教程通俗易懂</a></li><li><a href="/post/switch-node-version/">优雅的切换nodejs版本</a></li><li><a href="/post/vmware-linux/">如何在VMware中安装Linux</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>学习中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何发布自己的npm包</title>
    <link href="/post/public-npm-package/"/>
    <url>/post/public-npm-package/</url>
    
    <content type="html"><![CDATA[<p>经常用npm安装各种包，现在来试试自己发布一个吧。</p><span id="more"></span><h2 id="1-注册账号"><a href="#1-注册账号" class="headerlink" title="1. 注册账号"></a>1. 注册账号</h2><p><a href="https://www.npmjs.com/">https://www.npmjs.com/</a></p><h2 id="2-发送验证邮件"><a href="#2-发送验证邮件" class="headerlink" title="2. 发送验证邮件"></a>2. 发送验证邮件</h2><p><img src="https://image.glwsq.cn/img/%E5%A6%82%E4%BD%95%E5%8F%91%E5%B8%83%E8%87%AA%E5%B7%B1%E7%9A%84npm%E5%8C%85-2022-02-22-23-10-30.png"></p><p>一定要记得验证，要不会一直报错<br><img src="https://image.glwsq.cn/img/%E5%A6%82%E4%BD%95%E5%8F%91%E5%B8%83%E8%87%AA%E5%B7%B1%E7%9A%84npm%E5%8C%85-2022-02-22-23-14-07.png"></p><h2 id="3-切换镜像站"><a href="#3-切换镜像站" class="headerlink" title="3. 切换镜像站"></a>3. 切换镜像站</h2><p>一定要切换到官方镜像站</p><figure class="highlight arduino"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs arduino">npm config set registry https:<span class="hljs-comment">//registry.npmjs.org/</span><br></code></pre></td></tr></table></figure><h2 id="4-登录"><a href="#4-登录" class="headerlink" title="4. 登录"></a>4. 登录</h2><p>这里一定要切换到官方镜像才能登录成功</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> login<br></code></pre></td></tr></table></figure><h2 id="5-创建目录"><a href="#5-创建目录" class="headerlink" title="5. 创建目录"></a>5. 创建目录</h2><p>可以<code>npm init</code>一个目录，或者直接GitHub克隆一个。<br>然后再package.json文件中修改以下信息</p><p>package name：比较重要，会显示到npm仓库，不能和现有的名称重复<br>version: 版本号<br>license：开源协议</p><h2 id="5-发布"><a href="#5-发布" class="headerlink" title="5. 发布"></a>5. 发布</h2><p>进入包所在的目录</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> publish<br></code></pre></td></tr></table></figure><p>第一个包发布成功</p><p><img src="https://image.glwsq.cn/img/%E5%A6%82%E4%BD%95%E5%8F%91%E5%B8%83%E8%87%AA%E5%B7%B1%E7%9A%84npm%E5%8C%85-2022-02-22-23-16-17.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>哔哩哔哩学习记录</title>
    <link href="/post/bilibili-record/"/>
    <url>/post/bilibili-record/</url>
    
    <content type="html"><![CDATA[<!DOCTYPE html><html><head><meta charset="utf-8"><title>Redirecting...</title><link rel="canonical" href="https://www.glwsq.cn/bilibili-record/"><meta http-equiv="refresh" content="0; url=https://www.glwsq.cn/bilibili-record/"></head></html>]]></content>
    
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>内容聚合</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS flex布局练习小游戏-flexboxdefense</title>
    <link href="/post/flexboxdefense/"/>
    <url>/post/flexboxdefense/</url>
    
    <content type="html"><![CDATA[<p>游戏网址：<a href="http://www.flexboxdefense.com/">http://www.flexboxdefense.com/</a></p><h2 id="游戏介绍"><a href="#游戏介绍" class="headerlink" title="游戏介绍"></a>游戏介绍</h2><p>这是一款练习css flex布局的塔防小游戏，有12个关卡，可以学习jusfity-content, align-items, flex-direction, order, align-self相关用法，如果你也想学习的话可以试一试。 </p><p>游戏是纯英文的，建议边翻译边玩，还能顺带学一下英语。不要被英语吓到，因为英文虽然很多，但是都是重复的，反复介绍flex布局的用法。</p>]]></content>
    
    
    <categories>
      
      <category>前端开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>CSS</tag>
      
      <tag>flex布局</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue后台管理系统项目实战/vue+element-ui/vue经典全套系统案例讲解</title>
    <link href="/post/note-vue-element/"/>
    <url>/post/note-vue-element/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>讲的太好了，而且老师说话很好听，适合刚学完vue来练手，正在学习中。。。</p><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV1j5411o7xH">https://www.bilibili.com/video/BV1j5411o7xH</a></p></blockquote><h2 id="后台管理系统"><a href="#后台管理系统" class="headerlink" title="后台管理系统"></a>后台管理系统</h2><p>包含商品管理 用户管理 订单等等信息。</p><p>欢迎预览我当前的写后台：<a href="http://api.glwsq.cn/">传送门</a></p><h3 id="技术点"><a href="#技术点" class="headerlink" title="技术点"></a>技术点</h3><p>  Vue + Vue-router + Vuex + Element-ui + Axios + 其他三方库</p><h3 id="项目准备"><a href="#项目准备" class="headerlink" title="项目准备"></a>项目准备</h3><ol><li>mysql </li><li>iconfont <a href="https://at.alicdn.com/t/font_2448847_4xsojqvt7qt.css">https://at.alicdn.com/t/font_2448847_4xsojqvt7qt.css</a></li></ol><h3 id="项目搭建"><a href="#项目搭建" class="headerlink" title="项目搭建"></a>项目搭建</h3><ol><li><code>vue create vue-ego</code></li><li>依赖：Vue 2, less, babel, router, vuex</li><li><code>npm i axios</code></li><li><code>vue add element</code> 按需导入，这里视频里讲的很好，按需全部导入，省了很多事，而且后续可以删除</li></ol><h3 id="项目初始化"><a href="#项目初始化" class="headerlink" title="项目初始化"></a>项目初始化</h3><ol><li>删除无用的组件 home.vue about.vue hello…</li><li>css 初始化</li><li>引入iconfont 图表导入</li></ol><h3 id="路由的配置"><a href="#路由的配置" class="headerlink" title="路由的配置"></a>路由的配置</h3><ol><li>页面布局配置 同级登录页面</li></ol><h3 id="后台服务"><a href="#后台服务" class="headerlink" title="后台服务"></a>后台服务</h3><ol><li>node.js 服务</li><li><code>npm i express</code></li><li>jwt（生成token）</li><li><code>npm i mysql</code></li></ol><h3 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h3><ol><li>后台安装 multer 模块   同时引入fs模块</li><li>router.js入口文件导入模块<br>const fs=require(‘fs’)<br>const multer=require(‘multer’)</li><li>上传图片</li></ol><h3 id="富文本编译器"><a href="#富文本编译器" class="headerlink" title="富文本编译器"></a>富文本编译器</h3><p>wangEditor <a href="https://www.wangeditor.com/doc/">https://www.wangeditor.com/doc/</a></p><h3 id="国际化"><a href="#国际化" class="headerlink" title="国际化"></a>国际化</h3><ol><li>使用：vuei18n <a href="https://kazupon.github.io/vue-i18n/zh/introduction.html">https://kazupon.github.io/vue-i18n/zh/introduction.html</a></li><li>安装<code>npm install vue-i18n@8.26.7</code> 如果跟着视频来，必须安装这个，要不会报错</li><li>引入<figure class="highlight js"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> VueI18n <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-i18n&#x27;</span><br>Vue.use(VueI18n)<br></code></pre></td></tr></table></figure></li></ol><h3 id="element-国际化"><a href="#element-国际化" class="headerlink" title="element 国际化"></a>element 国际化</h3><p>视频里的方法最后一步报错，参考了这个人的教程就可以了<br><a href="https://blog.csdn.net/songhsia/article/details/104800966">vue+element+vue-i18n@8.x 国际化中英文切换</a></p><p>安装</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm i wangeditor <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>引入使用</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-keyword">import</span> E <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;wangeditor&quot;</span><br><span class="hljs-keyword">const</span> editor = <span class="hljs-keyword">new</span> E(<span class="hljs-string">&quot;<span class="hljs-subst">#div1</span>&quot;</span>)<br>editor.create()<br></code></pre></td></tr></table></figure><p>常用配置</p><ol><li>清空内容<br><code>editor.txt.clear()</code></li><li>获取html<br><code>editor.txt.html()</code></li><li>配置菜单<ol><li>默认显示所有</li><li></li></ol></li></ol><h3 id="登录–路由拦截"><a href="#登录–路由拦截" class="headerlink" title="登录–路由拦截"></a>登录–路由拦截</h3><h3 id="Echarts使用"><a href="#Echarts使用" class="headerlink" title="Echarts使用"></a>Echarts使用</h3><p><a href="https://echarts.apache.org/handbook/zh/basics/import">https://echarts.apache.org/handbook/zh/basics/import</a></p><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=1">P1. 01 项目介绍</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=2">P2. 02 项目搭建-初始化</a><ul><li>项目初始化<ul><li>删除无用的组件</li><li>初始化css</li><li>引入iconfont</li></ul></li><li>安装了以下内容<ul><li>axios</li><li>element</li></ul></li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=3">P3. 03 首页-路由界面基础搭建</a><ul><li>左边导航栏已经实现了，用的element里面的navmenu</li><li>并且创建了大量的页面</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=4">P4. 04 首页-导航折叠</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=5">P5. 05 商品列表-静态布局</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=6">P6. 06 商品列表-动态数据</a><ul><li>实现后台接口 express + Mysql <a href="https://image.glwsq.cn/bilibili/Vue%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-ego.7z">sql文件</a></li><li>简单的展示数据</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=7">P7. 07 商品列表-分页实现</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=8">P8. 01 商品管理-搜索</a><ul><li>实现了商品的搜索，并且还前端模拟了分页</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=9">P9. 02 商品-页面添加</a><ul><li>新增了一个添加商品的页面</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=10">P10. 03 商品-弹框添加</a><ul><li>新增了一个添加商品的页面-dialog方法实现</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=11">P11. 04 商品-分页功能bug</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=12">P12. 05 类目选择</a><ul><li>实现静态页面</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=13">P13. 06 类目选择实现</a><ul><li>实现完整的动态数据获取</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=14">P14. 01 项目补充说明</a><ul><li>没实现功能，讲了一些基本的前后台知识</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=15">P15. 02 上传图片实现</a><ul><li>实现了上传图片的后台和前台</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=16">P16. 03 富文本编译器</a><ul><li>使用了wangEditor</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=17">P17. 04 商品添加-清空表单</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=18">P18. 05 删除商品</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=19">P19. 06 编辑商品</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=20">P20. 01 Vue-i8n国际化</a><ul><li>如果跟着视频来，必须这样安装<code>npm install vue-i18n@8.26.7</code>要不会报错</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=21">P21. 02 Element-国际化</a><ul><li>视频里的方法最后一步报错，参考了这个人的教程就可以了 <a href="https://blog.csdn.net/songhsia/article/details/104800966">vue+element+vue-i18n@8.x 国际化中英文切换</a></li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=22">P22. 03 登录布局</a><ul><li>实现了登录页面</li><li>我自己也做了很多优化，非常好看</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=23">P23. 04 登录-功能实现-数据持久化-vuex</a><ul><li>后台安装 jsonwebtoken <code>npm install jsonwebtoken</code></li><li>前台安装 jwt-decode 解析jsonwebtoken中的数据 <code>npm install jwt-decode</code></li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=24">P24. 05 Echarts使用</a><ul><li>安装：<code>npm install echarts</code></li><li>使用方式<ol><li>导入echarts在组件中使用</li><li>导入全局 挂载在原型上 全局使用 【推荐】</li><li>开发成vue插件</li></ol></li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=25">P25. 06 Mock.js模拟数据</a><ul><li>安装：<code>npm install mockjs</code></li><li>前端引用 import Mock from ‘mockjs’</li><li>语法 Mock.mock()</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=26">P26. 01 规格参数列表获取</a><ul><li>创建页面</li><li>获取后台数据</li></ul></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=27">P27. 02 添加规格参数-动态表单</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=28">P28. 03 规格参数配置</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=29">P29. 01 Vue-pdf打印合同</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=30">P30. 02 Vue项目-下载图片资源</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=31">P31. 03 Vue项目-实现表格导出EXCEL表格</a></li></ul><div class="note note-success">            <p>相关推荐：</p><ul><li><a href="/post/note-vue-element/">Vue后台管理系统项目实战/vue+element-ui/vue经典全套系统案例讲解</a></li><li><a href="/post/df99894b/">尚硅谷Vue2.0+Vue3.0全套教程丨vuejs从入门到精通</a></li><li><a href="/post/2ff98e51/">Docker最新超详细版教程通俗易懂</a></li><li><a href="/post/switch-node-version/">优雅的切换nodejs版本</a></li><li><a href="/post/vmware-linux/">如何在VMware中安装Linux</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>vue</tag>
      
      <tag>学习中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker最新超详细版教程通俗易懂</title>
    <link href="/post/2ff98e51/"/>
    <url>/post/2ff98e51/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>讲的太好了，一天看了20多个视频，如果学Docker，推荐学习。</p><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=1">1、Docker学习大纲</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=2">2、聊聊Docker为什么会出现</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=3">3、聊聊Docker的历史</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=4">4、Docker能做什么</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=5">5、Docker中的名词概念</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=6">6、安装Docker</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=7">7、配置阿里云镜像加速</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=8">8、Run的流程和Docker原理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=9">9、镜像的基本命令</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=10">10、容器的基本命令</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=11">11、日志、元数据、进程的查看</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=12">12、进入容器的命令和拷贝命令</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=13">13、常用命令小结</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=14">14、作业一：部署Nginx</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=15">15、作业二：部署Tomcat</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=16">16、作业三：部署ES+Kibana</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=17">17、Portainer可视化面板安装</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=18">18、镜像原理之联合文件系统</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=19">19、镜像原理之分层理解</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=20">20、Commit镜像</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=21">21、容器数据卷使用</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=22">22、实战：MySQL同步数据</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=23">23、具名挂载和匿名挂载</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=24">24、数据卷之Dockerfile</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=25">25、数据卷容器</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=26">26、DockerFile介绍</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=27">27、DockerFile指令说明</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=28">28、实战：构建自己的centos</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=29">29、CMD和ENTRYPOINT的区别</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=30">30、实战：Dockerfile制作tomcat镜像</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=31">31、发布镜像到DockerHub</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=32">32、发布镜像到阿里云容器服务</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=33">33、Docker所有流程小结</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=34">34、Docker0网络详解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=35">35、容器互联–link</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=36">36、自定义网络</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=37">37、网络连通</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=38">38、Redis集群部署实战</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=39">39、SpringBoot微服务打包Docker镜像</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=40">40、结语</a></li></ul><h2 id="学习笔记"><a href="#学习笔记" class="headerlink" title="学习笔记"></a>学习笔记</h2><blockquote><p>弱小和无知不是生存的障碍，傲慢才是。</p></blockquote><blockquote><p>看视频快速记录的笔记，格式可能不太好，但是每一行命令都是运行过的</p></blockquote><ol><li><p>系统内核版本查看</p><figure class="highlight ebnf"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">uname -r</span><br></code></pre></td></tr></table></figure></li><li><p>系统信息</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/etc/</span>os-release<br></code></pre></td></tr></table></figure></li><li><p>帮助文档<br><a href="https://docs.docker.com/engine/install/ubuntu/">https://docs.docker.com/engine/install/ubuntu/</a></p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 启动docker</span><br>systemctl start docker<br><span class="hljs-comment"># hello word</span><br>sudo docker run hello-world<br><span class="hljs-comment"># 运行镜像</span><br>sudo docker run -it ubuntu bash<br><span class="hljs-comment"># 查看镜像</span><br>sudo docker images<br></code></pre></td></tr></table></figure><p>每次输入命令都需要sudo很不方便，可以查看这个官方文档修改</p><p><a href="https://docs.docker.com/engine/install/linux-postinstall/">https://docs.docker.com/engine/install/linux-postinstall/</a></p><p>如果不想看，最简单的办法是执行下面的命令，作用是将当前登录的用户加入docker用户组，这样就不需要sudo了，然后记得注销用户重新登录一下。</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">sudo groupadd docker<br>sudo usermod -aG docker $USER<br></code></pre></td></tr></table></figure><p>镜像加速</p><ol><li><p>创建或修改 <code>/etc/docker/daemon.json</code> 文件，并写入以下内容：</p><p>直接用tee来快速创建文件，并且写入内容</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class="hljs-string">&#x27;EOF&#x27;</span><br>&#123;<br>   <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<br>       <span class="hljs-string">&quot;https://mirror.ccs.tencentyun.com&quot;</span><br>  ]<br>&#125;<br>EOF<br></code></pre></td></tr></table></figure><ol><li>重新启动 Docker 服务 。重启之前可以 <code>docker ps</code>看下自己起了哪些服务，别忘了重启</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl daemon-reload<br>service docker restart<br></code></pre></td></tr></table></figure><ol><li><code>docker info</code>查看是否生效<br> 在最下面有这两行即为成功</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs json">Registry Mirrors:<br> https:<span class="hljs-comment">//mirror.ccs.tencentyun.com</span><br></code></pre></td></tr></table></figure><ol><li>重启第 2 步中停掉的服务</li></ol><h2 id="Docker常用命令"><a href="#Docker常用命令" class="headerlink" title="Docker常用命令"></a>Docker常用命令</h2><p>帮助命令</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">docker <span class="hljs-keyword">version</span> <span class="hljs-comment"># 显示docker的版本信息</span><br>docker info    <span class="hljs-comment"># 显示docker的系统信息，镜像容器的数量</span><br>docker 命令 <span class="hljs-params">--help</span>  <span class="hljs-comment"># docker帮助命令</span><br></code></pre></td></tr></table></figure><p>镜像命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell">docker images <span class="hljs-comment"># 查看所有镜像</span><br>docker search <span class="hljs-comment"># 搜索镜像</span><br>docker pull mysql:<span class="hljs-number">5.7</span> <span class="hljs-comment"># 下载拉取镜像</span><br>docker rmi <span class="hljs-operator">-f</span> id <span class="hljs-comment"># 删除镜像</span><br><span class="hljs-comment"># 批量删除全部</span><br>docker rmi <span class="hljs-operator">-f</span> <span class="hljs-variable">$</span>(docker images <span class="hljs-literal">-aq</span>)<br></code></pre></td></tr></table></figure><p>容器命令</p><p>有了镜像才可以创建容器</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker pull centos <span class="hljs-comment"># 下载容器</span><br>docker run [可选参数] image<br>--name=<span class="hljs-string">&quot;Name&quot;</span> 容器名字<br>-d 后台方式运行<br>-it 使用交互方式运行，进入容器查看内容<br>-p 指定容器的端口 -p <span class="hljs-number">8080</span>:<span class="hljs-number">8080</span> ip:主机端口:容器端口<br>-P 随机指定端口<br>docker ps <span class="hljs-comment"># 列出运行的容器</span><br>-a <span class="hljs-comment"># 列出当前和历史运行的容器</span><br>-n=? <span class="hljs-comment"># 列出最近创建的容器</span><br>-q <span class="hljs-comment"># 只显示容器的编号</span><br>docker rm 容器id<br>-f 强制删除<br><span class="hljs-comment"># 批量删除全部</span><br>docker rm -f $(docker ps -aq)<br>docker start 容器id <span class="hljs-comment"># 启动容器</span><br>docker restart 容器id <span class="hljs-comment"># 重启容器</span><br>docker stop 容器id <span class="hljs-comment"># 停止当前运行的容器</span><br>docker kill 容器id <span class="hljs-comment"># 强制停止当前容器</span><br><br><span class="hljs-keyword">exit</span> <span class="hljs-comment"># 直接停止容器退出</span><br>ctrl + P + Q <span class="hljs-comment"># 容器不停止退出</span><br></code></pre></td></tr></table></figure><p>常用的其他命令</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker <span class="hljs-built_in">run</span> -d centos <span class="hljs-comment"># 后台启动</span><br>docker logs -tf <span class="hljs-comment">--tail 10 容器id</span><br></code></pre></td></tr></table></figure><p>一直输出内容的脚本</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker run -d centos <span class="hljs-regexp">/bin/</span>sh -c <span class="hljs-string">&quot;while true;do echo hello; sleep 1;done&quot;</span><br></code></pre></td></tr></table></figure><p>查看容器中的进程信息</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker top 容器<span class="hljs-built_in">id</span><br></code></pre></td></tr></table></figure><p>查看镜像的元数据</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker inspect 容器<span class="hljs-built_in">id</span><br></code></pre></td></tr></table></figure><p>进入当前正在运行的容器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">docker <span class="hljs-built_in">exec</span> -it 容器<span class="hljs-built_in">id</span> /<span class="hljs-built_in">bin</span>/bash <span class="hljs-comment"># 会创建一个新的窗口</span><br>docker attach 容器<span class="hljs-built_in">id</span> <span class="hljs-comment"># 进入正在运行的</span><br></code></pre></td></tr></table></figure><p>从容器内拷贝文件到主机上</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> cp <span class="hljs-number">408</span>e<span class="hljs-number">026</span>ee<span class="hljs-number">14</span>e:/home/test.java ./<br></code></pre></td></tr></table></figure><p><img src="https://image.glwsq.cn/img/2018071915491757" alt="img"></p><p>docker 安装nginx</p><p><a href="https://registry.hub.docker.com/search?q=nginx">https://registry.hub.docker.com/search?q=nginx</a></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker search nginx</span><br></code></pre></td></tr></table></figure><p>docker 安装 tomcat</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker <span class="hljs-built_in">run</span> -<span class="hljs-keyword">it</span> <span class="hljs-comment">--rm tomcat:9.0 # 用完就删 一般用来测试</span><br></code></pre></td></tr></table></figure><p>docker 安装es+kibana</p><p>es暴露的端口很多，耗内存</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs console">docker run -d --name elasticsearch02 -p 9200:9200 -p 9300:9300 -e &quot;discovery.type=single-node&quot; -e ES_JAVA_OPTS=&quot;-Xms64m -Xmx512m&quot; elasticsearch:7.6.2<br></code></pre></td></tr></table></figure><p>docker stats</p><h2 id="查看空间占用"><a href="#查看空间占用" class="headerlink" title="查看空间占用"></a>查看空间占用</h2><blockquote><p>有时候玩docker莫名奇妙少了很多空间，可以看看这里</p></blockquote><p>查看docker磁盘占用</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">docker <span class="hljs-keyword">system</span> df<br></code></pre></td></tr></table></figure><p>查看docker的匿名数据卷空间占用</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">du -sh <span class="hljs-regexp">/var/</span>lib<span class="hljs-regexp">/docker/</span>volumes/*<br></code></pre></td></tr></table></figure><p>查看单个image、container大小：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs clean">docker <span class="hljs-keyword">system</span> df -v <br></code></pre></td></tr></table></figure><p><strong>空间清理</strong></p><blockquote><p>注意，这两个命令会把你暂时关闭的容器，以及暂时没有用到的Docker镜像都删掉了,所以使用之前一定要想清楚。</p></blockquote><p><code>docker system prune</code>命令可以用于清理磁盘，删除关闭的容器、无用的数据卷和网络，以及dangling镜像(即无tag的镜像)。</p><p><code>docker system prune -a</code>  命令清理得更加彻底，可以将没有容器使用Docker镜像都删掉</p><h2 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h2><p>portainer</p><p>Docker图形化界面管理工具！提供一个后台面板让我们操作</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">docker run -d -p <span class="hljs-number">8088</span>:<span class="hljs-number">9000</span> --restart=always -v <span class="hljs-regexp">/var/</span>run<span class="hljs-regexp">/docker.sock:/</span>var<span class="hljs-regexp">/run/</span>docker.sock --privileged=<span class="hljs-keyword">true</span> portainer/portainer<br></code></pre></td></tr></table></figure><p>访问测试</p><p>Rancher</p><h2 id="提交镜像"><a href="#提交镜像" class="headerlink" title="提交镜像"></a>提交镜像</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> commit -a=<span class="hljs-string">&quot;happen&quot;</span> -m <span class="hljs-string">&quot;add webapps app&quot;</span> id tomcate<span class="hljs-number">02</span>:<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="Docker-容器数据卷"><a href="#Docker-容器数据卷" class="headerlink" title="Docker 容器数据卷"></a>Docker 容器数据卷</h2><p>如果数据都在数据卷中，那么我们删除容器，数据就会丢失！需求：数据持久化</p><p>使用数据卷</p><p>方式一：使用命令来挂载</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker run -it -v 主机目录:容器内目录  -p 主机端口:容器内端口<br>docker run -it -v <span class="hljs-regexp">/home/u</span>buntu<span class="hljs-regexp">/test:/</span>home centos <span class="hljs-regexp">/bin/</span>bash<br></code></pre></td></tr></table></figure><h3 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker pull mysql:<span class="hljs-number">5.7</span><br>docker run -d -p <span class="hljs-number">3310</span>:<span class="hljs-number">3306</span> -v <span class="hljs-regexp">/home/u</span>buntu<span class="hljs-regexp">/mysql/</span>conf:<span class="hljs-regexp">/etc/my</span>sql<span class="hljs-regexp">/conf.d -v /</span>home<span class="hljs-regexp">/ubuntu/my</span>sql<span class="hljs-regexp">/data:/</span>var<span class="hljs-regexp">/lib/my</span>sql -e MYSQL_ROOT_PASSWORD=<span class="hljs-number">123456</span> --name mysql01 mysql:<span class="hljs-number">5.7</span><br></code></pre></td></tr></table></figure><p>具名挂载</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker <span class="hljs-built_in">run</span> -d -P <span class="hljs-comment">--name nginx03 -v name-nginx:/etc/nginx nginx</span><br></code></pre></td></tr></table></figure><p>匿名挂载</p><p>-v 容器路径</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">docker <span class="hljs-keyword">run</span><span class="bash"> -d -P --name nginx02 -v /etc/nginx nginx</span><br>docker <span class="hljs-keyword">volume</span><span class="bash"> --<span class="hljs-built_in">help</span></span><br>docker <span class="hljs-keyword">volume</span><span class="bash"> ls <span class="hljs-comment"># 查看所有卷</span></span><br><br></code></pre></td></tr></table></figure><p>ro/rw区别</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker <span class="hljs-built_in">run</span> -d -P <span class="hljs-comment">--name nginx03 -v name-nginx:/etc/nginx:ro nginx</span><br>docker <span class="hljs-built_in">run</span> -d -P <span class="hljs-comment">--name nginx03 -v name-nginx:/etc/nginx:rw nginx</span><br></code></pre></td></tr></table></figure><ul><li><p>ro readonly 只读，只能从外部改变，不能从内部改变</p></li><li><p>rw readwrite 可读可写</p></li></ul><h2 id="DockerFile"><a href="#DockerFile" class="headerlink" title="DockerFile"></a>DockerFile</h2><p>就是用来构建docker镜像的文件</p><p>通过这个脚本可以生成镜像，一个一个的命令，每个命令都是一层</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> centos<br><span class="hljs-keyword">VOLUME</span><span class="bash"> [<span class="hljs-string">&quot;volume01&quot;</span>, <span class="hljs-string">&quot;volume02&quot;</span>]</span><br><br><span class="hljs-keyword">CMD</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;-----end-----&quot;</span></span><br><span class="hljs-keyword">CMD</span><span class="bash"> /bin/bash</span><br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> build -f dockerfile<span class="hljs-number">1</span> -t happen/centos .<br></code></pre></td></tr></table></figure><p>数据卷容器</p><p>两个mysql同步数据</p><p>–volumes-from</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker run -d -p <span class="hljs-number">3310</span>:<span class="hljs-number">3306</span> -v <span class="hljs-regexp">/home/u</span>buntu<span class="hljs-regexp">/mysql/</span>conf:<span class="hljs-regexp">/etc/my</span>sql<span class="hljs-regexp">/conf.d -v /</span>home<span class="hljs-regexp">/ubuntu/my</span>sql<span class="hljs-regexp">/data:/</span>var<span class="hljs-regexp">/lib/my</span>sql -e MYSQL_ROOT_PASSWORD=<span class="hljs-number">123456</span> --name mysql01 mysql:<span class="hljs-number">5.7</span><br>docker run -d -p <span class="hljs-number">3311</span>:<span class="hljs-number">3306</span> --volumes-form mysql01 -e MYSQL_ROOT_PASSWORD=<span class="hljs-number">123456</span> --name mysql02 mysql:<span class="hljs-number">5.7</span><br><span class="hljs-comment"># 这个时候可以实现两个容器数据同步</span><br></code></pre></td></tr></table></figure><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker <span class="hljs-built_in">run</span> -<span class="hljs-keyword">it</span> <span class="hljs-comment">--name docker01 happen/centos</span><br>docker <span class="hljs-built_in">run</span> -<span class="hljs-keyword">it</span> <span class="hljs-comment">--name docker02 --volumes-from docker01 happen/centos</span><br>docker <span class="hljs-built_in">run</span> -<span class="hljs-keyword">it</span> <span class="hljs-comment">--name docker03 happen/centos</span><br></code></pre></td></tr></table></figure><h2 id="Docker网络"><a href="#Docker网络" class="headerlink" title="Docker网络"></a>Docker网络</h2>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>学习中</tag>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>myindex</title>
    <link href="/post/1d713e4e/"/>
    <url>/post/1d713e4e/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="eb2b3234d6f3035a120b21f24dbaacab60f034c3e2b26ca4e7b18afd85d4c16e"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>个人文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>尚硅谷Nginx教程由浅入深（一套打通丨初学者也可掌握）</title>
    <link href="/post/BV1zJ411w7SV/"/>
    <url>/post/BV1zJ411w7SV/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>视频不是很新，用到的nginx版本是2017年的，我跟着学完了，在跟着安装的过程中一直报错，最后我用了最新的nginx并且写了一个笔记，如果需要的话可以点击查看：<a href="/post/note-nginx">Nginx学习笔记</a></p><p>笔记中的软件版本:</p><ol><li>Ubuntu Server 20.04 LTS 64bit</li><li>nginx-1.20.2</li><li>openjdk-17-jre-headless</li><li>apache-tomcat-10.0.16</li></ol><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV1zJ411w7SV">https://www.bilibili.com/video/BV1zJ411w7SV</a></p></blockquote><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=1">01-nginx课程介绍</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=2">02-nginx的简介</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=3">03-nginx相关概念（正向和反向代理）</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=4">04-nginx相关概念（负载均衡和动静分离）</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=5">05-nginx在linux系统安装</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=6">06-nginx常用的命令</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=7">07-nginx的配置文件</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=8">08-nginx配置实例（反向代理准备工作）</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=9">09-nginx配置实例（反向代理实例一）</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=10">10-nginx配置实例（反向代理实例二）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=11">11-nginx配置实例（负载均衡）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=12">12-nginx配置实例（动静分离准备工作）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=13">13-nginx配置实例（动静分离）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=14">14-nginx配置实例（高可用准备工作）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=15">15-nginx配置实例（高可用主备模式）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=16">16-nginx配置实例（高可用配置文件详解）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=17">17-nginx的原理解析</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>Nginx</tag>
      
      <tag>学习中断</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx学习笔记</title>
    <link href="/post/note-nginx/"/>
    <url>/post/note-nginx/</url>
    
    <content type="html"><![CDATA[<p>在学习nginx时记录的笔记。<br>nginx官网: <a href="http://nginx.org/">http://nginx.org/</a></p><p>所用的各种环境:</p><ol><li>Ubuntu Server 20.04 LTS 64bit</li><li>nginx-1.20.2</li><li>openjdk-17-jre-headless</li><li>apache-tomcat-10.0.16</li></ol><span id="more"></span><h2 id="nginx操作常用命令"><a href="#nginx操作常用命令" class="headerlink" title="nginx操作常用命令"></a>nginx操作常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用命令必须进入nginx的目录</span><br><span class="hljs-built_in">cd</span> /usr/<span class="hljs-built_in">local</span>/nginx/sbin<br><span class="hljs-comment"># 查看版本号</span><br>./nginx -v<br><span class="hljs-comment"># 启动nginx</span><br>sudo ./nginx<br><span class="hljs-comment"># 关闭nginx</span><br>sudo ./nginx -s stop<br><span class="hljs-comment"># 重新加载nginx 重新加载配置文件</span><br>sudo ./nginx -s reload<br></code></pre></td></tr></table></figure><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h3><p>可以加个代理服务器让你访问另一个服务器，例如通过<a href="http://www.abc.com/">http://www.abc.com</a>这个服务器正向代理 <a href="http://www.google.com/">http://www.google.com</a> 服务器，这样就能通过<a href="http://www.abc.com/">http://www.abc.com</a>访问谷歌了，对用户来说是能感知到有这个代理的。</p><h3 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h3><p>用户访问这个服务器，这个服务器会通过反向代理来自动调用其他服务器，用户感知不到其他服务器的存在。</p><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><p>通过代理服务器，将请求均匀的分配到不同的服务器上。通过增加服务器可以解决大量请求的情况。</p><h3 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离"></a>动静分离</h3><p>为了加快网站的解析速度，可以把动态页面和静态页面由不同的服务器来解析，加快解析速度。降低原来单个服务器的压力。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="1-安装编译工具及库文件"><a href="#1-安装编译工具及库文件" class="headerlink" title="1. 安装编译工具及库文件"></a>1. 安装编译工具及库文件</h3><p>CentOS 用 yum</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nsis">sudo yum -y install make <span class="hljs-literal">zlib</span> <span class="hljs-literal">zlib</span>-devel gcc-c++ libtool  openssl openssl-devel<br></code></pre></td></tr></table></figure><p>Ubuntu用apt</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> apt -y install make zlib<span class="hljs-number">1</span>g zlib<span class="hljs-number">1</span>g-dev gcc g++ libtool  openssl libssl-dev libpcre<span class="hljs-number">3</span> libpcre<span class="hljs-number">3</span>-dev  <br></code></pre></td></tr></table></figure><details><summary>详细解释</summary><blockquote><p>上面的一行命令都包括了，可以不执行这里面的命令</p></blockquote><ol><li><p>PCRE库<br>PCRE库支持正则表达式。如果我们在配置文件nginx.conf中使用了正则表达式，那么在编译Nginx时就必须把PCRE库编译进Nginx，因为Nginx的HTTP模块需要靠它来解析正则表达式。另外，pcre-devel是使用PCRE做二次开发时所需要的开发库，包括头文件等，这也是编译Nginx所必须使用的。可以这样安装：<br><code>sudo apt-get install libpcre3 libpcre3-dev</code></p></li><li><p>zlib库<br>zlib库用于对HTTP包的内容做gzip格式的压缩，如果我们在nginx.conf中配置了gzip on，并指定对于某些类型（content-type）的HTTP响应使用gzip来进行压缩以减少网络传输量，则在编译时就必须把zlib编译进Nginx。zlib-devel是二次开发所需要的库。可以这样安装：<br><code>sudo apt-get install zlib1g-dev</code></p></li><li><p>OpenSSL库<br>如果服务器不只是要支持HTTP，还需要在更安全的SSL协议上传输HTTP，那么需要拥有OpenSSL。另外，如果我们想使用MD5、SHA1等散列函数，那么也需要安装它。可以这样安装：<br><code>sudo apt-get install openssl libssl-dev</code> </p></li></ol></details><h3 id="2-安装-PCRE"><a href="#2-安装-PCRE" class="headerlink" title="2. 安装 PCRE"></a>2. 安装 PCRE</h3><p>PCRE 作用是让 Nginx 支持 Rewrite 功能。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget http:<span class="hljs-regexp">//</span>downloads.sourceforge.net<span class="hljs-regexp">/project/</span>pcre<span class="hljs-regexp">/pcre/</span><span class="hljs-number">8.37</span>/pcre-<span class="hljs-number">8.37</span>.tar.gz<br>tar -zxvf pcre-<span class="hljs-number">8.37</span>.tar.gz<br>cd pcre-<span class="hljs-number">8.37</span><br>./configure<br>make<br>sudo make install<br></code></pre></td></tr></table></figure><p>查看pcre版本</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">pcre-<span class="hljs-built_in">config</span> <span class="hljs-comment">--version</span><br></code></pre></td></tr></table></figure><p>下载并解压命令</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//</span>nginx.org<span class="hljs-regexp">/download/</span>nginx-<span class="hljs-number">1.20</span>.<span class="hljs-number">2</span>.tar.gz<br>tar -zxvf nginx-<span class="hljs-number">1.20</span>.<span class="hljs-number">2</span>.tar.gz<br>cd nginx-<span class="hljs-number">1.20</span>.<span class="hljs-number">2</span><br>./configure<br>make<br>sudo make install<br></code></pre></td></tr></table></figure><p>安装成功位置:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/user/</span>local/nginx<br></code></pre></td></tr></table></figure><p>开始启动</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>sbin<br>sudo ./nginx<br></code></pre></td></tr></table></figure><p>查看启动是否成功</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">ps</span> -ef | <span class="hljs-keyword">grep</span> nginx<br></code></pre></td></tr></table></figure><p>可以在浏览器访问ip地址，会出现欢迎界面</p><p><img src="https://image.glwsq.cn/img/nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2022-02-13-20-57-13.png"></p><h2 id="nginx-配置文件"><a href="#nginx-配置文件" class="headerlink" title="nginx 配置文件"></a>nginx 配置文件</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>conf/nginx.conf<br></code></pre></td></tr></table></figure><h2 id="我的nginx配置文件"><a href="#我的nginx配置文件" class="headerlink" title="我的nginx配置文件"></a>我的nginx配置文件</h2><p>/usr/local/nginx/conf/nginx.conf</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><code class="hljs ini"><br><span class="hljs-comment">#user  nobody;</span><br>user root<span class="hljs-comment">;</span><br>worker_processes  1<span class="hljs-comment">;</span><br><br><span class="hljs-comment">#error_log  logs/error.log;</span><br><span class="hljs-comment">#error_log  logs/error.log  notice;</span><br><span class="hljs-comment">#error_log  logs/error.log  info;</span><br><br><span class="hljs-comment">#pid        logs/nginx.pid;</span><br><br><br>events &#123;<br>    worker_connections  1024<span class="hljs-comment">;</span><br>&#125;<br><br><br>http &#123;<br>    include       mime.types<span class="hljs-comment">;</span><br>    default_type  application/octet-stream<span class="hljs-comment">;</span><br><br>    <span class="hljs-comment">#log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br>    <span class="hljs-comment">#                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br>    <span class="hljs-comment">#                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><br>    <span class="hljs-comment">#access_log  logs/access.log  main;</span><br><br>    sendfile        on<span class="hljs-comment">;</span><br>    <span class="hljs-comment">#tcp_nopush     on;</span><br><br>    <span class="hljs-comment">#keepalive_timeout  0;</span><br>    keepalive_timeout  65<span class="hljs-comment">;</span><br><br>    <span class="hljs-comment">#gzip  on;</span><br><br>    server &#123;<br>        listen       81<span class="hljs-comment">;</span><br>        server_name  localhost<span class="hljs-comment">;</span><br><br>        <span class="hljs-comment">#charset koi8-r;</span><br><br>        <span class="hljs-comment">#access_log  logs/host.access.log  main;</span><br><br>        location / &#123;<br>            root   html<span class="hljs-comment">;</span><br>            index  index.html index.htm<span class="hljs-comment">;</span><br>        &#125;<br><br>        <span class="hljs-comment">#error_page  404              /404.html;</span><br><br>        <span class="hljs-comment"># redirect server error pages to the static page /50x.html</span><br>        <span class="hljs-comment">#</span><br>        error_page   500 502 503 504  /50x.html<span class="hljs-comment">;</span><br>        <span class="hljs-attr">location</span> = /<span class="hljs-number">50</span>x.html &#123;<br>            root   html<span class="hljs-comment">;</span><br>        &#125;<br><br>        <span class="hljs-comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ \.php$ &#123;</span><br>        <span class="hljs-comment">#    proxy_pass   http://127.0.0.1;</span><br>        <span class="hljs-comment">#&#125;</span><br><br>        <span class="hljs-comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ \.php$ &#123;</span><br>        <span class="hljs-comment">#    root           html;</span><br>        <span class="hljs-comment">#    fastcgi_pass   127.0.0.1:9000;</span><br>        <span class="hljs-comment">#    fastcgi_index  index.php;</span><br>        <span class="hljs-comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br>        <span class="hljs-comment">#    include        fastcgi_params;</span><br>        <span class="hljs-comment">#&#125;</span><br><br>        <span class="hljs-comment"># deny access to .htaccess files, if Apache&#x27;s document root</span><br>        <span class="hljs-comment"># concurs with nginx&#x27;s one</span><br>        <span class="hljs-comment">#</span><br>        <span class="hljs-comment">#location ~ /\.ht &#123;</span><br>        <span class="hljs-comment">#    deny  all;</span><br>        <span class="hljs-comment">#&#125;</span><br>    &#125;<br>    server &#123; <span class="hljs-comment"># 反向代理实例2</span><br>      listen  9001<span class="hljs-comment">;</span><br>      server_name localhost<span class="hljs-comment">;</span><br><br>      location ~ /edu/ &#123;<br>        proxy_pass http://localhost:8080<span class="hljs-comment">;</span><br>      &#125;<br><br>      location ~ /vod/ &#123;<br>        proxy_pass http://localhost:8081<span class="hljs-comment">;</span><br>      &#125;<br>    &#125;<br>    server &#123; <span class="hljs-comment"># 正向代理</span><br>      listen  8888 ssl<span class="hljs-comment">;</span><br>      server_name localhost<span class="hljs-comment">;</span><br><br>      ssl_certificate     /usr/local/nginx/ssl/api.glwsq.cn_bundle.crt<span class="hljs-comment">;</span><br>      ssl_certificate_key  /usr/local/nginx/ssl/api.glwsq.cn.key<span class="hljs-comment">;</span><br><br>      location ^~ /i2.hdslb.com/ &#123;<br>        proxy_pass https://i2.hdslb.com<span class="hljs-comment">;</span><br>        rewrite ^/i2.hdslb.com/(.*)$ /$1 break<span class="hljs-comment">;</span><br>      &#125;<br>    &#125;<br>    server &#123;<br>      listen 80<span class="hljs-comment">;</span><br>      server_name localhost<span class="hljs-comment">;</span><br><br>      location / &#123;<br>        root /home/ubuntu/www/element<span class="hljs-comment">;</span><br>        try_files $uri $uri/ /index.html<span class="hljs-comment">;</span><br>        index  index.html index.htm<span class="hljs-comment">;</span><br>      &#125;<br>      location /api/ &#123;<br>        proxy_pass http://localhost:3033<span class="hljs-comment">;</span><br>      &#125;<br>    &#125;<br>    server &#123; <span class="hljs-comment"># 反向代理</span><br>      listen  3001 ssl<span class="hljs-comment">;</span><br>      server_name localhost<span class="hljs-comment">;</span><br><br>      ssl_certificate     /usr/local/nginx/ssl/api.glwsq.cn_bundle.crt<span class="hljs-comment">;</span><br>      ssl_certificate_key  /usr/local/nginx/ssl/api.glwsq.cn.key<span class="hljs-comment">;</span><br><br>      location / &#123;<br>        proxy_pass https://localhost:3000<span class="hljs-comment">;</span><br>      &#125;<br>    &#125;<br>    <span class="hljs-comment"># another virtual host using mix of IP-, name-, and port-based configuration</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment">#server &#123;</span><br>    <span class="hljs-comment">#    listen       8000;</span><br>    <span class="hljs-comment">#    listen       somename:8080;</span><br>    <span class="hljs-comment">#    server_name  somename  alias  another.alias;</span><br><br>    <span class="hljs-comment">#    location / &#123;</span><br>    <span class="hljs-comment">#        root   html;</span><br>    <span class="hljs-comment">#        index  index.html index.htm;</span><br>    <span class="hljs-comment">#    &#125;</span><br>    <span class="hljs-comment">#&#125;</span><br><br><br>    <span class="hljs-comment"># HTTPS server</span><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-comment">#server &#123;</span><br>    <span class="hljs-comment">#    listen       443 ssl;</span><br>    <span class="hljs-comment">#    server_name  localhost;</span><br><br>    <span class="hljs-comment">#    ssl_certificate      cert.pem;</span><br>    <span class="hljs-comment">#    ssl_certificate_key  cert.key;</span><br><br>    <span class="hljs-comment">#    ssl_session_cache    shared:SSL:1m;</span><br>    <span class="hljs-comment">#    ssl_session_timeout  5m;</span><br><br>    <span class="hljs-comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br>    <span class="hljs-comment">#    ssl_prefer_server_ciphers  on;</span><br><br>    <span class="hljs-comment">#    location / &#123;</span><br>    <span class="hljs-comment">#        root   html;</span><br>    <span class="hljs-comment">#        index  index.html index.htm;</span><br>    <span class="hljs-comment">#    &#125;</span><br>    <span class="hljs-comment">#&#125;</span><br><br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="第一部分：全局块"><a href="#第一部分：全局块" class="headerlink" title="第一部分：全局块"></a>第一部分：全局块</h3><p>主要会设置一些影响nginx服务器整体运行的配置指令，主要包括配置运行Nginx服务器的用户(组)、允许生成worker proccess 数，进程PID存放路径、日志存放路径类型以及配置文件的引入等。</p><h3 id="event块"><a href="#event块" class="headerlink" title="event块"></a>event块</h3><p>主要影响 Nginx 服务器与用户的网络链接<br>比如说：worker_connections 最大连接数</p><h3 id="http全局块"><a href="#http全局块" class="headerlink" title="http全局块"></a>http全局块</h3><p>配置最频繁的部分，代理、缓存、日志、超时时间、单连接请求上限<br>server 块 和虚拟主机有密切关系</p><h2 id="Nginx配置实例"><a href="#Nginx配置实例" class="headerlink" title="Nginx配置实例"></a>Nginx配置实例</h2><h3 id="反向代理-1"><a href="#反向代理-1" class="headerlink" title="反向代理"></a>反向代理</h3><p>首先准备一个tomcat服务器，需要java环境</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//</span>dlcdn.apache.org<span class="hljs-regexp">/tomcat/</span>tomcat-<span class="hljs-number">10</span><span class="hljs-regexp">/v10.0.16/</span>bin/apache-tomcat-<span class="hljs-number">10.0</span>.<span class="hljs-number">16</span>.tar.gz<br>tar -xvf apache-tomcat-<span class="hljs-number">10.0</span>.<span class="hljs-number">16</span>.tar.gz<br>cd apache-tomcat-<span class="hljs-number">10.0</span>.<span class="hljs-number">16</span><br>.<span class="hljs-regexp">/bin/</span>startup.sh<br>tail -f .<span class="hljs-regexp">/logs/</span>catalina.out<br></code></pre></td></tr></table></figure><p>添加配置</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>  <span class="hljs-attribute">listen</span>  <span class="hljs-number">80</span>;<br>  <span class="hljs-attribute">server_name</span> localhost;<br><br>  <span class="hljs-attribute">location</span> / &#123;<br>    <span class="hljs-attribute">proxy_pass</span> http://127.0.0.1:8080; <span class="hljs-comment"># 反向代理到8080端口</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="反向代理实例2"><a href="#反向代理实例2" class="headerlink" title="反向代理实例2"></a>反向代理实例2</h3><p>访问 <a href="http://127.0.0.1:9001/deu/">http://127.0.0.1:9001/deu/</a> 直接跳转到127.0.0.1:8080<br>访问 <a href="http://127.0.0.1:9001/vod/">http://127.0.0.1:9001/vod/</a> 直接跳转到127.0.0.1:8081</p><p>准备工作<br>准备两个tomcat 服务器，然后随便在webapp中放一个能区分出来的文件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>  <span class="hljs-attribute">listen</span>  <span class="hljs-number">9001</span>;<br>  <span class="hljs-attribute">server_name</span> localhost;<br><br>  <span class="hljs-attribute">location</span> <span class="hljs-regexp">~ /edu/</span> &#123;<br>    <span class="hljs-attribute">proxy_pass</span> http://localhost:8080;<br>  &#125;<br>  <br>  <span class="hljs-attribute">location</span> <span class="hljs-regexp">~ /vod/</span> &#123;<br>    <span class="hljs-attribute">proxy_pass</span> http://localhost:8081;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="反向代理-2"><a href="#反向代理-2" class="headerlink" title="反向代理"></a>反向代理</h2><p>有个需求</p><p>访问<a href="http://myserver/api/bar">http://myserver:80/api/bar</a> 反向代理到后台端 <a href="http://localhost:3200/bar">http://localhost:3200/bar</a></p><p>第一种</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">location</span>  /api &#123;<br>  <span class="hljs-attribute">rewrite</span> /api/(.*) /<span class="hljs-variable">$1</span>  <span class="hljs-literal">break</span>;<br>  <span class="hljs-attribute">proxy_pass</span>         http://localhost:3200;<br>  <span class="hljs-attribute">proxy_redirect</span>     <span class="hljs-literal">off</span>;<br>  <span class="hljs-attribute">proxy_set_header</span>   Host $host;<br>&#125;<br></code></pre></td></tr></table></figure><p>第二种</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">location</span> <span class="hljs-title">/api</span> &#123;<br>  proxy_pass http://localhost:<span class="hljs-number">3200</span>/;<br>&#125;<br></code></pre></td></tr></table></figure><p>需要注意的是，在写 proxy_pass 不能随便在目标地址后加 /，如果你在地址末尾加了 / ，则最终代理是这样的：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">location /api &#123;<br>    proxy_pass https:<span class="hljs-regexp">//</span>baidu.com<span class="hljs-regexp">/; # 将会被代理到 https:/</span><span class="hljs-regexp">/baidu.com/</span>，后面没有 /api<br>&#125;<br></code></pre></td></tr></table></figure><p>不加 /，则最终代理是这样的，访问 Nginx 命中的 /api ，Nginx 也会自动帮你拼接上去：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">location</span> <span class="hljs-title">/api</span> &#123;<br>    proxy_pass https://baidu.com; <span class="hljs-comment"># 将会代理到 https://baidu.com/api </span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="配置nginx-支持ssl"><a href="#配置nginx-支持ssl" class="headerlink" title="配置nginx 支持ssl"></a>配置nginx 支持ssl</h2><p>首先nginx的源文件目录，然后执行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configure --prefix=/usr/<span class="hljs-built_in">local</span>/nginx --with-http_ssl_module<br>make<br>cp ./objs/nginx /usr/<span class="hljs-built_in">local</span>/nginx/sbin/<br></code></pre></td></tr></table></figure><p>下载ssl证书<br>我用的腾讯云 <a href="https://console.cloud.tencent.com/ssl">https://console.cloud.tencent.com/ssl</a><br>下载证书，选择nginx的<br>找到</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">api<span class="hljs-selector-class">.glwsq</span><span class="hljs-selector-class">.cn</span><span class="hljs-selector-class">.key</span><br>api<span class="hljs-selector-class">.glwsq</span><span class="hljs-selector-class">.cn_bundle</span>.crt<br></code></pre></td></tr></table></figure><p>上传到<code>/usr/local/nginx/ssl</code>目录下，这个随意</p><p>ssl配置如下</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs nginx"> <span class="hljs-section">server</span> &#123;<br>     <span class="hljs-attribute">listen</span> <span class="hljs-number">443</span> ssl;<br>     <span class="hljs-attribute">server_name</span>  localhost;<br><br>     <span class="hljs-attribute">ssl_certificate</span>     /usr/local/nginx/ssl/api.glwsq.cn_bundle.crt;<br>     <span class="hljs-attribute">ssl_certificate_key</span>  /usr/local/nginx/ssl/api.glwsq.cn.key;<br><br>     <span class="hljs-attribute">ssl_session_cache</span>    shared:SSL:<span class="hljs-number">1m</span>;<br>     <span class="hljs-attribute">ssl_session_timeout</span>  <span class="hljs-number">5m</span>;<br><br>     <span class="hljs-comment">#ssl_ciphers  HIGH:!aNULL:!MD5;</span><br>     <span class="hljs-comment">#ssl_prefer_server_ciphers  on;</span><br><br>     <span class="hljs-attribute">location</span> / &#123;<br>         <span class="hljs-attribute">index</span>  index.html index.htm;<br>   &#125;<br> <br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>Nginx</tag>
      
      <tag>Ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>短而美第9期 - linux使用screen来后台运行程序</title>
    <link href="/post/3c6df2a7/"/>
    <url>/post/3c6df2a7/</url>
    
    <content type="html"><![CDATA[<h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><ol><li><p>开启一个screen并进入</p><figure class="highlight dos"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs dos">screen -S myscreen<br></code></pre></td></tr></table></figure><p>现在就打开了一个新的窗口了，可以进行任何操作</p></li><li><p>将screen放入后台<br>使用快捷键<code>Ctrl + A + D</code></p></li><li><p>查看后台运行的screen</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">screen -ls<br></code></pre></td></tr></table></figure></li><li><p>再次打开screen</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">screen -r myscreen<br></code></pre></td></tr></table></figure><blockquote><p>其后可以通过指定窗口名打开特定窗口，默认打开上一个使用的窗口</p></blockquote></li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># CentOS</span><br>yum install screen<br><span class="hljs-comment"># Ubuntu</span><br>apt install screen<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>短而美</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>linux</tag>
      
      <tag>screen</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Canvas小白入门到实战(飞机大战)</title>
    <link href="/post/2ee27b16/"/>
    <url>/post/2ee27b16/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>讲的很不错，但是发现不需要学习这一门技术了，就暂且搁置了，如果有空闲时间我会继续学完。</p><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV1AJ41167V8">https://www.bilibili.com/video/BV1AJ41167V8</a></p></blockquote><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=1">Canvas系列课程1-初识Canvas</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=2">Canvas系列课程2-一个简单的模板</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=3">Canvas系列课程3-一个简单的例子</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=4">Canvas系列课程4-清除矩形</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=5">Canvas系列课程5-绘制路径</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=6">Canvas系列课程6-绘制两个三角形</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=7">Canvas系列课程7-绘制圆形</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=8">Canvas系列课程8-循环建圆</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=9">Canvas系列课程9-画笑脸</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=10">Canvas系列课程10-线性渐变</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=11">Canvas系列课程11-径向渐变</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=12">Canvas系列课程12-绘制图片</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=13">Canvas系列课程13-绘制文字阴影</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=14">Canvas系列课程14-DrawImage</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=15">Canvas系列课程15-制作房产证</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=16">Canvas系列课程16-Clip</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=17">Canvas系列课程17-涂鸦</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=18">Canvas系列课程18-刮刮卡</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=19">Canvas系列课程19-图像组合</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=20">Canvas系列课程20-矩形直线运动</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=21">Canvas系列课程21-请求关键帧运动</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=22">Canvas系列课程22-圆形碰撞反弹</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=23">Canvas系列课程23-水平全景滚动</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=24">Canvas系列课程24-save&amp;restore</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=25">Canvas系列课程25-垂直全景移动</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=26">Canvas系列课程26-矩形碰撞检测</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=27">Canvas系列课程27-圆形碰撞检测</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=28">Canvas系列课程28-贪吃蛇思路</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=29">Canvas系列课程29-贪吃蛇之画头</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=30">Canvas系列课程30-绘制蛇头蛇身</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=31">Canvas系列课程31-移动蛇头蛇身</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=32">Canvas系列课程32-投放和吃食物</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=33">Canvas系列课程33-游戏结束</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=34">Canvas系列课程34-打飞机背景及音乐</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=35">Canvas系列课程35-背景移动</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=36">Canvas系列课程36-主角出场</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=37">Canvas系列课程37-让飞机动起来</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=38">Canvas系列课程38-画子弹</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=39">Canvas系列课程39-让子弹飞</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=40">Canvas系列课程40-创建敌机</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=41">Canvas系列课程41-敌机降落</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=42">Canvas系列课程42-结束打飞机</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>学习中断</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>短而美第7期 - 修改ssh的访问端口</title>
    <link href="/post/ssh-port/"/>
    <url>/post/ssh-port/</url>
    
    <content type="html"><![CDATA[<p><img src="https://image.glwsq.cn/img/%E7%AC%AC1%E6%9C%9F-ssh%E7%94%9F%E6%88%90%E5%85%AC%E9%92%A5-2022-02-05-23-31-16.png"><br>众所周知，ssh的端口是22，世界上有那么一群人专门喜欢挨着服务器一个一个的试用户名密码，为了更加的安全，直接把ssh的端口换掉。</p><span id="more"></span><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><p>修改配置文件<code>/etc/ssh/sshd_config</code></p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">sudo vim /etc/ssh/sshd_config<br></code></pre></td></tr></table></figure><p>找到Port这个配置项，修改为你想要的端口号</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs diff">Include /etc/ssh/sshd_config.d/*.conf<br><span class="hljs-deletion">- #Port 22</span><br><span class="hljs-addition">+ Port 222</span><br>#AddressFamily any<br>AddressFamily inet<br></code></pre></td></tr></table></figure><h2 id="重启ssh服务"><a href="#重启ssh服务" class="headerlink" title="重启ssh服务"></a>重启ssh服务</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo <span class="hljs-regexp">/etc/i</span>nit.d/ssh restart<br></code></pre></td></tr></table></figure><h2 id="开放端口"><a href="#开放端口" class="headerlink" title="开放端口"></a>开放端口</h2><p>如果是购买的服务器，需要打开控制台把222端口放行</p><p><img src="https://image.glwsq.cn/img/%E4%BF%AE%E6%94%B9ssh%E7%9A%84%E8%AE%BF%E9%97%AE%E7%AB%AF%E5%8F%A3-2022-02-10-18-40-53.png"></p><div class="note note-success">            <p>相关文章推荐：</p><ul><li><a href="/post/ssh-keygen/">ssh生成公钥</a></li><li><a href="/post/github-clone-ssh/">GitHub clone切换为ssh方式</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>短而美</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>ssh</tag>
      
      <tag>精选文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关闭VScode回车键自动代码补全，避免换行和补全之间冲突</title>
    <link href="/post/2a7d0aeb/"/>
    <url>/post/2a7d0aeb/</url>
    
    <content type="html"><![CDATA[<p>这个功能真的烦，我就想换行，一不小心就补全代码了</p><p>也可以不改变，如果想换行的时候，直接<code>ctrl + enter</code></p><p><img src="https://image.glwsq.cn/img/%E5%85%B3%E9%97%ADVScode%E5%9B%9E%E8%BD%A6%E9%94%AE%E8%87%AA%E5%8A%A8%E4%BB%A3%E7%A0%81%E8%A1%A5%E5%85%A8%EF%BC%8C%E9%81%BF%E5%85%8D%E6%8D%A2%E8%A1%8C%E5%92%8C%E8%A1%A5%E5%85%A8%E4%B9%8B%E9%97%B4%E5%86%B2%E7%AA%81-2022-02-10-15-13-33.png"></p>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>vscode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作完成</tag>
      
      <tag>vscode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>js读取csv数据，并用Echarts展示</title>
    <link href="/post/js-echarts-csv/"/>
    <url>/post/js-echarts-csv/</url>
    
    <content type="html"><![CDATA[<p>用d3js读取包含中文的csv数据，然后用Echarts将数据可视化显示。</p><span id="more"></span><p>遇到的问题，高版本的d3js会报错，目前没有解决，用我提供的cdn就不会出错了</p><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p><img src="https://image.glwsq.cn/img/%E8%AF%BB%E5%8F%96csv%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%B9%B6%E7%94%A8Echarts%E5%B1%95%E7%A4%BA-2022-02-10-15-16-51.png"></p><h2 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h2><p>data.csv内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><pre><code class="hljs csv">月份,手机销量,电脑销量<br>1月,23,234<br>2月,231,323<br>3月,323,343<br>4月,343,123<br>5月,123,234<br>6月,234,231<br>7月,234,323<br>8月,43,343<br>9月,234,234<br>10月,123,43<br>11月,654,96<br>12月,565,345<br></code></pre></td></tr></table></figure><p>html内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>折线图的绘制<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/echarts/5.2.2/echarts.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://d3js.org/d3.v3.min.js&quot;</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;main&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 600px;width:900px;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"></span><br><span class="javascript">  <span class="hljs-keyword">var</span> nameset=[];<span class="hljs-comment">//数组初始化</span></span><br><span class="javascript">  <span class="hljs-keyword">var</span> numset1=[];</span><br><span class="javascript">  <span class="hljs-keyword">var</span> numset2=[];</span><br><span class="javascript">  <span class="hljs-comment">//获取csv对象</span></span><br><span class="javascript">  <span class="hljs-keyword">let</span> csv = d3.dsv(<span class="hljs-string">&quot;,&quot;</span>, <span class="hljs-string">&quot;text/csv;charset=gb2312&quot;</span>); <span class="hljs-comment">// 逗号分割，设置编码，这样就可以正常显示中文了</span></span><br><span class="javascript">  <span class="hljs-comment">// 获取数据</span></span><br><span class="javascript">  csv(<span class="hljs-string">&quot;data.csv&quot;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">error,csvdata</span>)</span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">if</span>(error)&#123;</span><br><span class="javascript">      <span class="hljs-built_in">console</span>.log(error);</span><br><span class="javascript">    &#125;<span class="hljs-keyword">else</span>&#123;</span><br><span class="javascript">      <span class="hljs-built_in">console</span>.log(csvdata)</span><br><span class="javascript">      <span class="hljs-keyword">for</span>( <span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>; i&lt;csvdata.length; i++ )&#123;</span><br><span class="javascript">        nameset.push(csvdata[i][<span class="hljs-string">&#x27;月份&#x27;</span>]);           <span class="hljs-comment">//对象转数组</span></span><br><span class="javascript">        numset1.push(<span class="hljs-built_in">parseFloat</span>(csvdata[i][<span class="hljs-string">&#x27;手机销量&#x27;</span>]));</span><br><span class="javascript">        numset2.push(<span class="hljs-built_in">parseFloat</span>(csvdata[i][<span class="hljs-string">&#x27;电脑销量&#x27;</span>]));</span><br><span class="javascript">      &#125;</span><br><span class="javascript"></span><br><span class="javascript">      <span class="hljs-keyword">var</span> myChart = echarts.init(<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;main&quot;</span>));</span><br><span class="javascript"></span><br><span class="javascript">      <span class="hljs-keyword">var</span> option = &#123;</span><br><span class="javascript">        <span class="hljs-attr">legend</span>: &#123;&#125;, <span class="hljs-comment">// 在头部显示每个折线的名称和颜色</span></span><br><span class="javascript">        <span class="hljs-attr">xAxis</span>: [</span><br><span class="javascript">          &#123;</span><br><span class="javascript">            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;category&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">data</span>: nameset,</span><br><span class="javascript">            <span class="hljs-attr">axisPointer</span>: &#123;</span><br><span class="javascript">              <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;shadow&#x27;</span></span><br><span class="javascript">            &#125;</span><br><span class="javascript">          &#125;</span><br><span class="javascript">        ],</span><br><span class="javascript">        <span class="hljs-attr">yAxis</span>: [</span><br><span class="javascript">          &#123;</span><br><span class="javascript">            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;value&#x27;</span>,</span><br><span class="javascript">          &#125;</span><br><span class="javascript">        ],</span><br><span class="javascript">        <span class="hljs-attr">series</span>: [</span><br><span class="javascript">          &#123;</span><br><span class="javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;手机销量&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;line&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">data</span>: numset1,</span><br><span class="javascript">          &#125;,</span><br><span class="javascript">          &#123;</span><br><span class="javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;电脑销量&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;line&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">data</span>: numset2,</span><br><span class="javascript">          &#125;</span><br><span class="javascript">        ]</span><br><span class="javascript">      &#125;;</span><br><span class="javascript"></span><br><span class="javascript">      myChart.setOption(option);</span><br><span class="javascript">    &#125;</span><br><span class="javascript">  &#125;);</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>Echarts</tag>
      
      <tag>js</tag>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows电脑开启自带的远程桌面</title>
    <link href="/post/64f41e3c/"/>
    <url>/post/64f41e3c/</url>
    
    <content type="html"><![CDATA[<p>适用环境：</p><ol><li>家里有两台电脑，一台性能比较高，但是笨重，另一台轻便，可以愉快的用轻便的电脑控制笨重的玩，在一个WiFi下感觉不到延迟。</li><li>如果会配置内网穿透，可以在世界各地的任何电脑上控制你家里的电脑。</li></ol><span id="more"></span><p>虽然有很多软件可以代替，但是Windows原生的体验会更好。</p><p><strong>如果你的电脑不是家庭版本，是专业版或者其他更高级的的就不需要看了，本身电脑就自带。</strong></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>直接下载安装就好</p><p><a href="https://image.glwsq.cn/software/Windows%E7%94%B5%E8%84%91%E5%BC%80%E5%90%AF%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5-RDPW_installer-Black.exe">Windows电脑开启远程桌面连接-RDPW</a></p><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>如果电脑更新系统了，需要更新一下才能继续使用，打开软件的安装位置，默认位置: <code>C:\Program Files\RDP Wrapper</code></p><p>右键用管理员权限打开update.bat进行更新</p><p>此过程需要连接GitHub，如果连接不到GitHub更新失败了，看这篇文章<a href="/post/github-uu">用UU加速器免费加速GitHub</a></p><p>如果提示无法写入INI文件，则需要关闭当前的远程桌面服务，然后再次尝试更新<br><img src="https://image.glwsq.cn/img/Windows%E7%94%B5%E8%84%91%E5%BC%80%E5%90%AF%E8%87%AA%E5%B8%A6%E7%9A%84%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2-2022-02-10-08-59-10.png"></p>]]></content>
    
    
    <categories>
      
      <category>电脑使用技巧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何用GitHub钩子自动部署项目</title>
    <link href="/post/github-webhook/"/>
    <url>/post/github-webhook/</url>
    
    <content type="html"><![CDATA[<p>可以解决的问题，当GitHub仓库更新的时候，可以通知你的服务器执行shell脚本pull代码。</p><p>例如：我有一个GitHub仓库，里面有一个html网页，已经把仓库clone到服务器上了，任何人都可以访问这个网页，现在我修改GitHub的中html的内容以后，服务器会自动pull代码，这样就不用每次手动进入服务器更新了。</p><p><img src="https://image.glwsq.cn/img/%E5%A6%82%E4%BD%95%E7%94%A8GitHub%E9%92%A9%E5%AD%90%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2-2022-02-09-20-15-44.png"></p><h2 id="webhook工具安装"><a href="#webhook工具安装" class="headerlink" title="webhook工具安装"></a>webhook工具安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">sudo apt-get install webhook<br></code></pre></td></tr></table></figure><h2 id="生成-ssh-key-添加GitHub"><a href="#生成-ssh-key-添加GitHub" class="headerlink" title="生成 ssh key 添加GitHub"></a>生成 ssh key 添加GitHub</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">ssh-keygen</span><br></code></pre></td></tr></table></figure><p>一路回车，生成后可通过<code>cat ~/.ssh/id_rsa.pub</code>命令查看，最后将key加入github即可</p><p>详细添加过程: <a href="/post/github-clone-ssh/">短而美第3期 - GitHub Clone切换为ssh方式</a></p><h2 id="部署脚本编写"><a href="#部署脚本编写" class="headerlink" title="部署脚本编写"></a>部署脚本编写</h2><p>可以参考官方的文档：<a href="https://github.com/adnanh/webhook/blob/master/docs/Hook-Definition.md">https://github.com/adnanh/webhook/blob/master/docs/Hook-Definition.md</a></p><h3 id="自动pull"><a href="#自动pull" class="headerlink" title="自动pull"></a>自动pull</h3><p>适用条件，自己的服务器有一个git仓库文件夹，每次仓库更新时，自动pull</p><p>编写一个用来pull的shell脚本，方便webhook调用</p><p><code>/home/ubuntu/webhook/pull.sh</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/sh</span><br>git pull<br></code></pre></td></tr></table></figure><p>给这个文件执行命令的权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod a+x pull.sh<br></code></pre></td></tr></table></figure><p>编写一个配置文件<code>hooks.json</code></p><p>web和blog是两个git目录，现在就可以自动更新仓库了</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs json">[<br>  &#123;<br>    <span class="hljs-attr">&quot;id&quot;</span>: <span class="hljs-string">&quot;deploy-web&quot;</span>,<br>    <span class="hljs-attr">&quot;execute-command&quot;</span>: <span class="hljs-string">&quot;/home/ubuntu/webhook/pull.sh&quot;</span>,<br>    <span class="hljs-attr">&quot;command-working-directory&quot;</span>: <span class="hljs-string">&quot;/home/ubuntu/www/website/web&quot;</span><br>  &#125;,<br>    &#123;<br>    <span class="hljs-attr">&quot;id&quot;</span>: <span class="hljs-string">&quot;deploy-blog&quot;</span>,<br>    <span class="hljs-attr">&quot;execute-command&quot;</span>: <span class="hljs-string">&quot;/home/ubuntu/webhook/pull.sh&quot;</span>,<br>    <span class="hljs-attr">&quot;command-working-directory&quot;</span>: <span class="hljs-string">&quot;/home/ubuntu/www/website/blog&quot;</span><br>  &#125;<br>]<br></code></pre></td></tr></table></figure><ul><li>id 用来区分多个命令</li><li>execute-command 执行的脚本，上面写的pull.sh脚本</li><li>command-working-directory 执行pull.sh脚本的运行目录，也就是git仓库的目录，这样才能执行git pull</li></ul><h3 id="测试执行"><a href="#测试执行" class="headerlink" title="测试执行"></a>测试执行</h3><p>前台运行的方法，可以方便测试</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">webhook -hooks <span class="hljs-regexp">/home/u</span>buntu<span class="hljs-regexp">/webhook/</span>hooks.json -verbose<br></code></pre></td></tr></table></figure><p>执行结果</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">[webhook] <span class="hljs-number">2022</span><span class="hljs-regexp">/02/</span><span class="hljs-number">12</span> <span class="hljs-number">16</span>:<span class="hljs-number">23</span>:<span class="hljs-number">17</span> version <span class="hljs-number">2.6</span>.<span class="hljs-number">9</span> starting<br>[webhook] <span class="hljs-number">2022</span><span class="hljs-regexp">/02/</span><span class="hljs-number">12</span> <span class="hljs-number">16</span>:<span class="hljs-number">23</span>:<span class="hljs-number">17</span> setting up os signal watcher<br>[webhook] <span class="hljs-number">2022</span><span class="hljs-regexp">/02/</span><span class="hljs-number">12</span> <span class="hljs-number">16</span>:<span class="hljs-number">23</span>:<span class="hljs-number">17</span> attempting to load hooks from <span class="hljs-regexp">/home/u</span>buntu<span class="hljs-regexp">/webhook/</span>hooks.json<br>[webhook] <span class="hljs-number">2022</span><span class="hljs-regexp">/02/</span><span class="hljs-number">12</span> <span class="hljs-number">16</span>:<span class="hljs-number">23</span>:<span class="hljs-number">17</span> found <span class="hljs-number">2</span> hook(s) <span class="hljs-keyword">in</span> file<br>[webhook] <span class="hljs-number">2022</span><span class="hljs-regexp">/02/</span><span class="hljs-number">12</span> <span class="hljs-number">16</span>:<span class="hljs-number">23</span>:<span class="hljs-number">17</span>   loaded: deploy-web<br>[webhook] <span class="hljs-number">2022</span><span class="hljs-regexp">/02/</span><span class="hljs-number">12</span> <span class="hljs-number">16</span>:<span class="hljs-number">23</span>:<span class="hljs-number">17</span>   loaded: deploy-blog<br>[webhook] <span class="hljs-number">2022</span><span class="hljs-regexp">/02/</span><span class="hljs-number">12</span> <span class="hljs-number">16</span>:<span class="hljs-number">23</span>:<span class="hljs-number">17</span> serving hooks on http:<span class="hljs-regexp">//</span><span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:<span class="hljs-number">9000</span><span class="hljs-regexp">/hooks/</span>&#123;id&#125;<br>[webhook] <span class="hljs-number">2022</span><span class="hljs-regexp">/02/</span><span class="hljs-number">12</span> <span class="hljs-number">16</span>:<span class="hljs-number">23</span>:<span class="hljs-number">17</span> os signal watcher ready<br></code></pre></td></tr></table></figure><p>这个时候访问服务器的9000端口，并加上id就可以更新代码了</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>服务器ip:<span class="hljs-number">9000</span><span class="hljs-regexp">/hooks/</span>deploy-web<br>http:<span class="hljs-regexp">//</span>服务器ip:<span class="hljs-number">9000</span><span class="hljs-regexp">/hooks/</span>deploy-blog<br></code></pre></td></tr></table></figure><h3 id="后台部署"><a href="#后台部署" class="headerlink" title="后台部署"></a>后台部署</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">nohup webhook -hooks <span class="hljs-regexp">/home/u</span>buntu<span class="hljs-regexp">/webhook/</span>hooks.json -verbose &amp;<br></code></pre></td></tr></table></figure><p>然后将 http://服务器ip:9000/hooks/deploy-web 填到你的 GitHub 网站对应项目页面 Settings → Webhooks 中即可</p><p><img src="https://image.glwsq.cn/img/%E5%A6%82%E4%BD%95%E7%94%A8GitHub%E9%92%A9%E5%AD%90%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2-2022-02-12-20-37-54.png"></p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>GitHub</tag>
      
      <tag>精选文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux安装golang</title>
    <link href="/post/e2af2758/"/>
    <url>/post/e2af2758/</url>
    
    <content type="html"><![CDATA[<p>如果想学习go语言，可以通过这个教程快速在Linux上安装最新版。</p><span id="more"></span><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><blockquote><p>如果要其他安装包，可以查看: <a href="https://studygolang.com/dl">https://studygolang.com/dl</a></p></blockquote><p>下载并解压命令</p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">wget https://studygolang.com/dl/golang/go1.17.7.linux-amd64.tar.gz<br>tar -zxvf go1.17.7.linux-amd64.tar.gz<br></code></pre></td></tr></table></figure><p>将解压后的文件夹，放到自己平常的安装包位置，并设置0777权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo cp -rf go /usr/local<br>cd /usr/local<br>sudo chmod -R 0777 go<br></code></pre></td></tr></table></figure><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p>go语言的环境变量配置，需要两个值：</p><ol><li>GOROOT是系统上安装Go软件包的位置</li><li>GOPATH是工作目录的位置</li></ol><p>创建GOPATH工作目录gohome，我选择创建在/home/ubuntu目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir gohome<br>sudo chmod -R 0777 gohome<br></code></pre></td></tr></table></figure><p>修改<code>~/.bashrc</code>文件夹下的环境变量，在末尾添加以下内容。同时也在GOPATH目录下创建src和bin目录。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">GOROOT</span>=/usr/local/go #GOROOT是系统上安装Go软件包的位置。<br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">GOPATH</span>=/home/hadoop/gohome #gohome是工作目录的位置。<br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">PATH</span>=<span class="hljs-variable">$GOPATH</span>/bin:$GOROOT/bin:$PATH<br></code></pre></td></tr></table></figure><p>使用以下命令使环境变量生效，并可以查看环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">source ~/.bashrc<br>export | grep GO<br></code></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>查看版本号，如果没报错就安装成功了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">go version<br></code></pre></td></tr></table></figure><p>编写一个hello world</p><p>在GOPATH目录下创建hello目录，用于存放go的第一个程序。<br>在hello目录下，创建hello.go文件，内容如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;fmt&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>    fmt.Printf(<span class="hljs-string">&quot;Hello, World\n&quot;</span>)<br>&#125;<br><br></code></pre></td></tr></table></figure><p>运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">go run hello.go<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信公众号markdown编辑器</title>
    <link href="/post/7853fb/"/>
    <url>/post/7853fb/</url>
    
    <content type="html"><![CDATA[<p>个人很喜欢用markdown写文章，博客本身用hexo部署，同时又想无缝的发布到微信公共号上，尝试过很多种方法，终于找到了一个非常完美的解决办法。</p><span id="more"></span><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><p>直接使用这个编辑器即可，推荐使用网页版或者浏览器插件</p><blockquote><p>主页地址：<a href="https://product.mdnice.com/">https://product.mdnice.com/</a><br>md编辑器地址：<a href="https://editor.mdnice.com/">https://editor.mdnice.com/</a></p></blockquote><h2 id="优点介绍"><a href="#优点介绍" class="headerlink" title="优点介绍"></a>优点介绍</h2><h3 id="丰富的主题系统"><a href="#丰富的主题系统" class="headerlink" title="丰富的主题系统"></a>丰富的主题系统</h3><p>编辑器里面有相当多的主题，总有一款适合你，如果不适合，可以自己修改css，打造一款非常适合自己的主题。</p><blockquote><p>主题地址: <a href="https://product.mdnice.com/themes/">https://product.mdnice.com/themes/</a></p></blockquote><p><img src="https://image.glwsq.cn/img/markdown%E5%BF%AB%E9%80%9F%E8%BD%AC%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0-2022-02-07-21-32-03.png"></p><p><img src="https://image.glwsq.cn/img/markdown%E5%BF%AB%E9%80%9F%E8%BD%AC%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0-2022-02-07-21-32-19.png"></p><h3 id="公共号后台无缝衔接"><a href="#公共号后台无缝衔接" class="headerlink" title="公共号后台无缝衔接"></a>公共号后台无缝衔接</h3><p>可以使用Markdown Nice 浏览器插件，直接和微信公共号的编辑器结合。在微信中可直接编辑，无需切换页面复制粘贴。</p><blockquote><p>具体教程:<a href="https://product.mdnice.com/article/user/extension/">https://product.mdnice.com/article/user/extension/</a></p></blockquote><p><img src="https://image.glwsq.cn/img/markdown%E5%BF%AB%E9%80%9F%E8%BD%AC%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0-2022-02-07-21-32-38.png"></p><hr><p>欢迎关注我的微信公众号:<br><img max-width="50px" width="200px" src="https://image.glwsq.cn/img/202202052349959.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>推荐分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>markdown</tag>
      
      <tag>微信公众号</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mdnice主题样式</title>
    <link href="/post/6daf16c9/"/>
    <url>/post/6daf16c9/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0e8fc8b4168e904711a9dadc4c04a5627a4466465a32b78d317fecb6a9b599e3"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>个人文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>webpack5指南</title>
    <link href="/post/d0759478/"/>
    <url>/post/d0759478/</url>
    
    <content type="html"><![CDATA[<p>官方教程写的相当详细，在整个指南中，使用 diff 块，来展示对目录、文件和代码所做的修改。我也发现了用 diff 块来描述代码的更新很清晰明确，在以后写文章的过程中也会频繁运用。</p><span id="more"></span><blockquote><p>文档地址: <a href="https://webpack.docschina.org/guides/getting-started/">https://webpack.docschina.org/guides/getting-started/</a></p></blockquote><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> 起步</li><li><input checked="" disabled="" type="checkbox"> 管理资源</li><li><input checked="" disabled="" type="checkbox"> 管理输出</li><li><input checked="" disabled="" type="checkbox"> 开发环境</li><li><input disabled="" type="checkbox"> 代码分离</li><li><input disabled="" type="checkbox"> 缓存</li><li><input disabled="" type="checkbox"> 创建 library</li><li><input disabled="" type="checkbox"> 环境变量</li><li><input disabled="" type="checkbox"> 构建性能</li><li><input disabled="" type="checkbox"> 内容安全策略</li><li><input disabled="" type="checkbox"> 开发 - Vagrant</li><li><input disabled="" type="checkbox"> 依赖管理</li><li><input disabled="" type="checkbox"> 安装</li><li><input disabled="" type="checkbox"> 模块热替换</li><li><input disabled="" type="checkbox"> Tree Shaking</li><li><input disabled="" type="checkbox"> 生产环境</li><li><input disabled="" type="checkbox"> 懒加载</li><li><input disabled="" type="checkbox"> ECMAScript 模块</li><li><input disabled="" type="checkbox"> Shimming 预置依赖</li><li><input disabled="" type="checkbox"> TypeScript</li><li><input disabled="" type="checkbox"> Web Workers</li><li><input disabled="" type="checkbox"> 渐进式网络应用程序</li><li><input disabled="" type="checkbox"> 公共路径</li><li><input disabled="" type="checkbox"> 集成</li><li><input disabled="" type="checkbox"> 资源模块</li><li><input disabled="" type="checkbox"> entry 高级用法</li><li><input disabled="" type="checkbox"> Package exports</li></ul><h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><figure class="highlight js"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></div></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>)<br><span class="hljs-keyword">const</span> HtmlWebpackPlugin = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;html-webpack-plugin&#x27;</span>)<br><span class="hljs-keyword">const</span> &#123; CleanWebpackPlugin &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;clean-webpack-plugin&#x27;</span>);<br><br><span class="hljs-built_in">module</span>.exports = &#123;<br>  <span class="hljs-attr">entry</span>: &#123;<br>    <span class="hljs-attr">app</span>: <span class="hljs-string">&#x27;./src/index.js&#x27;</span>,<br>    <span class="hljs-attr">print</span>: <span class="hljs-string">&#x27;./src/print.js&#x27;</span><br>  &#125;,<br>  <span class="hljs-attr">output</span>: &#123;<br>    <span class="hljs-attr">filename</span>: <span class="hljs-string">&#x27;[name].bundle.js&#x27;</span>,<br>    <span class="hljs-attr">path</span>: path.resolve(__dirname, <span class="hljs-string">&#x27;dist&#x27;</span>),<br>    <span class="hljs-attr">publicPath</span>: <span class="hljs-string">&#x27;/&#x27;</span>,<br>  &#125;,<br>  <span class="hljs-attr">devtool</span>: <span class="hljs-string">&#x27;inline-source-map&#x27;</span>, <span class="hljs-comment">// 加上这个报错会很清晰 https://www.webpackjs.com/guides/development/#%E4%BD%BF%E7%94%A8-source-map</span><br>  <span class="hljs-attr">devServer</span>: &#123;<br>    <span class="hljs-attr">static</span>: &#123;<br>      <span class="hljs-attr">directory</span>: path.join(__dirname, <span class="hljs-string">&#x27;dist&#x27;</span>),<br>    &#125;<br>  &#125;,<br>  <span class="hljs-attr">plugins</span>: [<br>    <span class="hljs-keyword">new</span> CleanWebpackPlugin(), <span class="hljs-comment">// 清理dist文件</span><br>    <span class="hljs-keyword">new</span> HtmlWebpackPlugin(&#123; <span class="hljs-comment">// 用于自动生成HTML页面</span><br>      <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;自动生成HTML页面&#x27;</span>,<br>      <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;public/index.html&#x27;</span><br>    &#125;)<br>  ],<br>  <span class="hljs-attr">module</span>: &#123;<br>    <span class="hljs-attr">rules</span>: [<br>      &#123;<br>        <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.css$/</span>,<br>        use: [<br>          <span class="hljs-string">&#x27;style-loader&#x27;</span>,<br>          <span class="hljs-string">&#x27;css-loader&#x27;</span><br>        ]<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.(png|svg|jpg|gif)/</span>,<br>        use: [<br>          <span class="hljs-string">&#x27;file-loader&#x27;</span><br>        ]<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.(csv|tsv)/</span>,<br>        use: [<br>          <span class="hljs-string">&#x27;csv-loader&#x27;</span><br>        ]<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.xml/</span>,<br>        use: [<br>          <span class="hljs-string">&#x27;xml-loader&#x27;</span><br>        ]<br>      &#125;<br>    ]<br>  &#125;,<br>  <span class="hljs-attr">mode</span>: <span class="hljs-string">&#x27;development&#x27;</span> <span class="hljs-comment">// production|development</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>官方文档</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>koa-parameter数据格式校验</title>
    <link href="/post/140dc37/"/>
    <url>/post/140dc37/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.npmjs.com/package/koa-parameter">https://www.npmjs.com/package/koa-parameter</a></p>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>官方文档</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>码农翻身</title>
    <link href="/post/d98560e0/"/>
    <url>/post/d98560e0/</url>
    
    <content type="html"><![CDATA[<p>很不错的学习了解计算机相关技术的一本书，通过一个个生动的故事，来讲述计算机的前世今生。让你深刻理解“人间一天，CPU一年”看似荒诞但是又切合实际的故事。</p><span id="more"></span><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><h3 id="第1章-计算机的世界你不懂"><a href="#第1章-计算机的世界你不懂" class="headerlink" title="第1章   计算机的世界你不懂"></a>第1章   计算机的世界你不懂</h3><ul><li><input disabled="" type="checkbox"> 我是一个线程   1<ul><li><input disabled="" type="checkbox"> 初生牛犊   1</li><li><input disabled="" type="checkbox"> 渐入佳境   4</li><li><input disabled="" type="checkbox"> 虎口脱险   5</li><li><input disabled="" type="checkbox"> 江湖再见   8</li></ul></li><li><input disabled="" type="checkbox"> TCP/IP之大明内阁   9</li><li><input disabled="" type="checkbox"> TCP/IP之大明邮差   12</li><li><input disabled="" type="checkbox"> CPU阿甘   17<ul><li><input disabled="" type="checkbox"> 启动   17</li><li><input disabled="" type="checkbox"> 运行   18</li><li><input disabled="" type="checkbox"> 新装备：缓存   19</li><li><input disabled="" type="checkbox"> 自我提升：流水线   20</li></ul></li><li><input checked="" disabled="" type="checkbox"> 我是一个进程   21<ul><li><input checked="" disabled="" type="checkbox"> 批处理系统   22</li><li><input checked="" disabled="" type="checkbox"> 多道程序   22</li><li><input checked="" disabled="" type="checkbox"> 地址重定位   24</li><li><input checked="" disabled="" type="checkbox"> 分时系统   26</li><li><input checked="" disabled="" type="checkbox"> 分块装入内存   27</li><li><input checked="" disabled="" type="checkbox"> 虚拟内存：分页   28</li><li><input checked="" disabled="" type="checkbox"> 分段+分页   30</li><li><input checked="" disabled="" type="checkbox"> 程序的装载   31</li><li><input checked="" disabled="" type="checkbox"> 线程   35</li></ul></li><li><input checked="" disabled="" type="checkbox"> 我是一块硬盘   36<ul><li><input checked="" disabled="" type="checkbox"> 内部结构   37</li><li><input checked="" disabled="" type="checkbox"> 文件   38</li><li><input checked="" disabled="" type="checkbox"> 文件的存放   39</li><li><input checked="" disabled="" type="checkbox"> 管理空闲块   44</li><li><input checked="" disabled="" type="checkbox"> 文件系统   45</li></ul></li><li><input checked="" disabled="" type="checkbox"> 我是一个键盘   46<ul><li><input checked="" disabled="" type="checkbox"> 二等公民   46<details><summary>笔记</summary><p>很明显， CPU 和内存是一等公民，这对好朋友占据着二环内最核心 最金贵的土地，居高临下对外发号施令，从各处“抢劫”二进制数据到自己的地界来。</p><p>真他的都被归类到二等公民，居住在五环以外，统称为输入/输出（I/O）设备。</p><p>有些设备居无定所，通过 USB 临时接入计算机，待个三五天就走，是典型的“北漂”。</p><p>对了，我必须说明一下，硬盘的地位有点特殊，虽然 也是一个 I/O 设备，但是存储着所有的程序和数据，包括操作系统老大！</p><p>虽然经常被 CPU 和内存嘲笑，但硬盘应该属于 1.5 等公民，住在三环以里。</p></details></li><li><input checked="" disabled="" type="checkbox"> 总线和端口   47</li><li><input checked="" disabled="" type="checkbox"> 轮询（程序式I/O）   48</li><li><input checked="" disabled="" type="checkbox"> 中断   49</li><li><input checked="" disabled="" type="checkbox"> DMA   50</li></ul></li><li><input checked="" disabled="" type="checkbox"> 数据库的奇妙之旅   51<ul><li><input checked="" disabled="" type="checkbox"> 无纸化办公   51</li><li><input checked="" disabled="" type="checkbox"> 数据的冗余和不一致   52</li><li><input checked="" disabled="" type="checkbox"> 李氏查询   52<details><summary>笔记</summary><p>所有计算机的问题都可以通过增加一个中间层来解决。如果不行，那就再套一层</p></details></li><li><input checked="" disabled="" type="checkbox"> 并发访问   54</li><li><input checked="" disabled="" type="checkbox"> 原子性问题   56</li><li><input checked="" disabled="" type="checkbox"> 安全   58</li></ul></li><li><input checked="" disabled="" type="checkbox"> 搞清楚Socket   59</li><li><input disabled="" type="checkbox"> 从1加到100：一道简单的数学题挑战一下你的大脑   64<ul><li><input disabled="" type="checkbox"> CPU和内存   64</li><li><input disabled="" type="checkbox"> 从1加到100   65</li><li><input disabled="" type="checkbox"> 热身   65</li><li><input disabled="" type="checkbox"> 正式出发   65</li></ul></li><li><input disabled="" type="checkbox"> 一个翻译家族的发家史   68<ul><li><input disabled="" type="checkbox"> 机器语言   68</li><li><input disabled="" type="checkbox"> 汇编语言   69</li><li><input disabled="" type="checkbox"> 高级语言   70</li></ul></li><li><input disabled="" type="checkbox"> 编程世界的那把锁   74<ul><li><input disabled="" type="checkbox"> 共享变量惹的祸   74</li><li><input disabled="" type="checkbox"> 争抢吧，线程   75</li><li><input disabled="" type="checkbox"> 改进   76</li><li><input disabled="" type="checkbox"> 信号量   77</li></ul></li><li><input disabled="" type="checkbox"> 绕不开的加法器   81</li><li><input disabled="" type="checkbox"> 递归那点事儿   85<h3 id="第2章-Java帝国"><a href="#第2章-Java帝国" class="headerlink" title="第2章   Java帝国"></a>第2章   Java帝国</h3></li><li><input disabled="" type="checkbox"> Java：一个帝国的诞生   91</li><li><input disabled="" type="checkbox"> C语言帝国的统治   91</li><li><input disabled="" type="checkbox"> 反抗   92</li><li><input disabled="" type="checkbox"> 一鸣惊人   93</li><li><input disabled="" type="checkbox"> 开拓疆土   93</li><li><input disabled="" type="checkbox"> 帝国的诞生   94</li><li><input disabled="" type="checkbox"> 我是一个Java Class   96</li><li><input disabled="" type="checkbox"> 陌生警察   96</li><li><input disabled="" type="checkbox"> 刺探信息   97</li><li><input disabled="" type="checkbox"> 初识虚拟机   98</li><li><input disabled="" type="checkbox"> 快乐假期   102</li><li><input disabled="" type="checkbox"> 真相大白   103</li><li><input disabled="" type="checkbox"> 持久化：Java帝国反击战   104</li><li><input disabled="" type="checkbox"> 断电的威胁   104</li><li><input disabled="" type="checkbox"> 数据库联合酋长国   105</li><li><input disabled="" type="checkbox"> 表面风光的EJB   106</li><li><input disabled="" type="checkbox"> 轻量级O/R Mapping框架   106</li><li><input disabled="" type="checkbox"> 帝国的反击   107</li><li><input disabled="" type="checkbox"> JDBC的诞生   108</li><li><input disabled="" type="checkbox"> 谈判   108</li><li><input disabled="" type="checkbox"> 统一接口   110</li><li><input disabled="" type="checkbox"> 面向接口编程   111</li><li><input disabled="" type="checkbox"> 简单工厂   112</li><li><input disabled="" type="checkbox"> 数据驱动   114</li><li><input disabled="" type="checkbox"> 工厂方法   115</li><li><input disabled="" type="checkbox"> Java帝国之宫廷内斗   119</li><li><input disabled="" type="checkbox"> JDBC大臣   119</li><li><input disabled="" type="checkbox"> 密谋   120</li><li><input disabled="" type="checkbox"> 两阶段提交   121</li><li><input disabled="" type="checkbox"> JTA   123</li><li><input disabled="" type="checkbox"> 塞翁失马，焉知非福   124</li><li><input disabled="" type="checkbox"> 基本可用   125</li><li><input disabled="" type="checkbox"> 走漏风声   127</li><li><input disabled="" type="checkbox"> 宫廷激辩   128</li><li><input disabled="" type="checkbox"> JSP：一个装配工的没落   131</li><li><input disabled="" type="checkbox"> 黑暗岁月   131</li><li><input disabled="" type="checkbox"> 服务器端动态页面   132</li><li><input disabled="" type="checkbox"> 标签库   134</li><li><input disabled="" type="checkbox"> 模板引擎   134</li><li><input disabled="" type="checkbox"> 草根搅局   135</li><li><input disabled="" type="checkbox"> Java 帝国之消息队列   137</li><li><input disabled="" type="checkbox"> 张家村的历史   137</li><li><input disabled="" type="checkbox"> 拆分   138</li><li><input disabled="" type="checkbox"> 新问题   139</li><li><input disabled="" type="checkbox"> 消息队列   139</li><li><input disabled="" type="checkbox"> 互不兼容的MQ   140</li><li><input disabled="" type="checkbox"> 消息队列接口设计   141</li><li><input disabled="" type="checkbox"> 配置和代码的分离   143</li><li><input disabled="" type="checkbox"> 再次抽象   144</li><li><input disabled="" type="checkbox"> Java帝国之动态代理   147</li><li><input disabled="" type="checkbox"> 深夜奏对   147</li><li><input disabled="" type="checkbox"> 明察暗访   149</li><li><input disabled="" type="checkbox"> Java 动态代理   150</li><li><input disabled="" type="checkbox"> Java注解是怎么成功上位的   153</li><li><input disabled="" type="checkbox"> XML大臣   153</li><li><input disabled="" type="checkbox"> 安翰林献计   154</li><li><input disabled="" type="checkbox"> 早朝争斗   157</li><li><input disabled="" type="checkbox"> Java帝国之泛型   159</li><li><input disabled="" type="checkbox"> 新王登基   159</li><li><input disabled="" type="checkbox"> C++使者   159</li><li><input disabled="" type="checkbox"> 泛型实现   162</li><li><input disabled="" type="checkbox"> 泛型方法   163</li><li><input disabled="" type="checkbox"> 泛型和继承   164</li><li><input disabled="" type="checkbox"> 一个著名的日志系统是怎么设计出来的   166</li><li><input disabled="" type="checkbox"> 前言   166</li><li><input disabled="" type="checkbox"> 张家村   167</li><li><input disabled="" type="checkbox"> 小张的设计   167</li><li><input disabled="" type="checkbox"> 正交性   170</li><li><input disabled="" type="checkbox"> Log4j   171</li><li><input disabled="" type="checkbox"> 尾声   171</li><li><input disabled="" type="checkbox"> 序列化：一个老家伙的咸鱼翻身   172</li><li><input disabled="" type="checkbox"> 寒冬的蛰伏   172</li><li><input disabled="" type="checkbox"> XML和JSON的挑战   173</li><li><input disabled="" type="checkbox"> 新协议的崛起   175</li><li><input disabled="" type="checkbox"> 加锁还是不加锁，这是一个问题   176</li><li><input disabled="" type="checkbox"> 互斥锁   176</li><li><input disabled="" type="checkbox"> 要不要加锁   177</li><li><input disabled="" type="checkbox"> CAS的扩展   179</li><li><input disabled="" type="checkbox"> Spring 的本质   182</li><li><input disabled="" type="checkbox"> 问题来源   183</li><li><input disabled="" type="checkbox"> 设计模式：模板方法   184</li><li><input disabled="" type="checkbox"> 设计模式：装饰者   186</li><li><input disabled="" type="checkbox"> AOP   187</li><li><input disabled="" type="checkbox"> 实现AOP   188</li><li><input disabled="" type="checkbox"> 对象的创建   189</li><li><input disabled="" type="checkbox"> IoC与DI   191<h3 id="第3章-浪潮之巅的Web"><a href="#第3章-浪潮之巅的Web" class="headerlink" title="第3章   浪潮之巅的Web"></a>第3章   浪潮之巅的Web</h3></li><li><input disabled="" type="checkbox"> Web的起源   192</li><li><input disabled="" type="checkbox"> 两个程序的爱情故事   195</li><li><input disabled="" type="checkbox"> 好感   195</li><li><input disabled="" type="checkbox"> 分离   196</li><li><input disabled="" type="checkbox"> 网络   197</li><li><input disabled="" type="checkbox"> Web   198</li><li><input disabled="" type="checkbox"> 一个故事讲完HTTPS   199</li><li><input disabled="" type="checkbox"> 总有一种被偷窥的感觉   199</li><li><input disabled="" type="checkbox"> RSA：非对称加密   200</li><li><input disabled="" type="checkbox"> 非对称加密+对称加密   202</li><li><input disabled="" type="checkbox"> 中间人劫持   202</li><li><input disabled="" type="checkbox"> 你到底是谁   203</li><li><input disabled="" type="checkbox"> HTTPS    206</li><li><input disabled="" type="checkbox"> 机房夜话   207</li><li><input disabled="" type="checkbox"> 第一夜   207</li><li><input disabled="" type="checkbox"> 第二夜   209</li><li><input disabled="" type="checkbox"> 第三夜   211</li><li><input disabled="" type="checkbox"> 从密码到token，一个有关授权的故事   215</li><li><input disabled="" type="checkbox"> 我把密码献给你   215</li><li><input disabled="" type="checkbox"> token   216</li><li><input disabled="" type="checkbox"> 授权码 + token   218</li><li><input disabled="" type="checkbox"> 后记   220</li><li><input disabled="" type="checkbox"> 后端风云   220</li><li><input disabled="" type="checkbox"> 数据库老头儿   220</li><li><input disabled="" type="checkbox"> 危机   221</li><li><input disabled="" type="checkbox"> 党委扩大会议   221</li><li><input disabled="" type="checkbox"> 分家   223</li><li><input disabled="" type="checkbox"> Redis   224</li><li><input disabled="" type="checkbox"> 余数算法   227</li><li><input disabled="" type="checkbox"> 一致性Hash算法   229</li><li><input disabled="" type="checkbox"> Hash槽 （Hash Slot）   233</li><li><input disabled="" type="checkbox"> 故障转移   235</li><li><input disabled="" type="checkbox"> 高可用的Nginx   237</li><li><input disabled="" type="checkbox"> 高可用的Tomcat   238</li><li><input disabled="" type="checkbox"> 数据库的读写分离   240</li><li><input disabled="" type="checkbox"> 我是一个函数   243</li><li><input disabled="" type="checkbox"> 从SOA到微服务   246</li><li><input disabled="" type="checkbox"> 什么是框架   249</li><li><input disabled="" type="checkbox"> HTTP Server：一个差生的逆袭   252</li><li><input disabled="" type="checkbox"> HTTP Server 1.0   252</li><li><input disabled="" type="checkbox"> HTTP Server 2.0：多进程   253</li><li><input disabled="" type="checkbox"> HTTP Server 3.0：select模型   254</li><li><input disabled="" type="checkbox"> HTTP Server 4.0：epoll模型   255<h3 id="第4章-代码管理那些事儿"><a href="#第4章-代码管理那些事儿" class="headerlink" title="第4章   代码管理那些事儿"></a>第4章   代码管理那些事儿</h3></li><li><input disabled="" type="checkbox"> 版本管理简史   258</li><li><input disabled="" type="checkbox"> “人肉” 版本管理   258</li><li><input disabled="" type="checkbox"> 锁定文件：避免互相覆盖   259</li><li><input disabled="" type="checkbox"> 允许冲突：退一步海阔天空   260</li><li><input disabled="" type="checkbox"> 分支：多版本并行   261</li><li><input disabled="" type="checkbox"> 分布式管理：给程序员放权   262</li><li><input disabled="" type="checkbox"> 程序员也爱社交   264</li><li><input disabled="" type="checkbox"> Build的演进之路   265</li><li><input disabled="" type="checkbox"> 手工Build的烦恼   265</li><li><input disabled="" type="checkbox"> 自动化Build   267</li><li><input disabled="" type="checkbox"> Java 与 XML   268</li><li><input disabled="" type="checkbox"> 消除重复   270</li><li><input disabled="" type="checkbox"> 烂代码传奇   275</li><li><input disabled="" type="checkbox"> 敏捷下的单元测试   277</li><li><input disabled="" type="checkbox"> 敏捷运动   277</li><li><input disabled="" type="checkbox"> 困惑   278</li><li><input disabled="" type="checkbox"> 讨论   279</li><li><input disabled="" type="checkbox"> 一年以后   280</li><li><input disabled="" type="checkbox"> 再见！Bug   281<h3 id="第5章-我的编程语言简史"><a href="#第5章-我的编程语言简史" class="headerlink" title="第5章   我的编程语言简史"></a>第5章   我的编程语言简史</h3></li><li><input disabled="" type="checkbox"> JavaScript ：一个草根的逆袭   284</li><li><input disabled="" type="checkbox"> 出世   284</li><li><input disabled="" type="checkbox"> 成长   286</li><li><input disabled="" type="checkbox"> 第一桶金   288</li><li><input disabled="" type="checkbox"> 发明JSON   289</li><li><input disabled="" type="checkbox"> 人生巅峰   291</li><li><input disabled="" type="checkbox"> Node.js：我只需要一个店小二   292</li><li><input disabled="" type="checkbox"> C老头儿和Java小子的硬盘夜话   295</li><li><input disabled="" type="checkbox"> 编程语言的“爱恨情仇”   300</li><li><input disabled="" type="checkbox"> 让人怀疑的C 语言   300</li><li><input disabled="" type="checkbox"> 被忘却的 VB &amp; Visual FoxPro   301</li><li><input disabled="" type="checkbox"> 蹂躏我的C++   302</li><li><input disabled="" type="checkbox"> 赖以谋生的Java    303</li><li><input disabled="" type="checkbox"> 优雅的Ruby    304</li><li><input disabled="" type="checkbox"> 命令式编程 VS 声明式编程   306</li><li><input disabled="" type="checkbox"> 一则小故事   306</li><li><input disabled="" type="checkbox"> 命令式编程   306</li><li><input disabled="" type="checkbox"> 声明式编程   307<h3 id="第6章-老司机的精进"><a href="#第6章-老司机的精进" class="headerlink" title="第6章   老司机的精进"></a>第6章   老司机的精进</h3></li><li><input disabled="" type="checkbox"> 凡事必先骑上虎背，和性格内向的程序员聊几句   309</li><li><input disabled="" type="checkbox"> 码农需要知道的“潜规则”   311</li><li><input disabled="" type="checkbox"> 上帝的规矩：局部性原理   311</li><li><input disabled="" type="checkbox"> 坐飞机的怎么和坐驴车的打交道：缓存   311</li><li><input disabled="" type="checkbox"> 抛弃细节：抽象   312</li><li><input disabled="" type="checkbox"> 我只想和邻居打交道：分层   312</li><li><input disabled="" type="checkbox"> 我怕等不及：异步调用   313</li><li><input disabled="" type="checkbox"> 大事化小，小事化了：分而治之   314</li><li><input disabled="" type="checkbox"> 15年编程生涯，一名架构师的总结   314</li><li><input disabled="" type="checkbox"> 好奇心   315</li><li><input disabled="" type="checkbox"> 养成计算机的思维方式   315</li><li><input disabled="" type="checkbox"> 扎实基础，融会贯通   317</li><li><input disabled="" type="checkbox"> 要透彻地理解一门技术的本质   317</li><li><input disabled="" type="checkbox"> 能写漂亮的代码   318</li><li><input disabled="" type="checkbox"> 抽象的能力   319</li><li><input disabled="" type="checkbox"> 技术领导力   319</li><li><input disabled="" type="checkbox"> 对自己狠一点，开始写作吧   320</li><li><input disabled="" type="checkbox"> 学习编程的四兄弟   322</li><li><input disabled="" type="checkbox"> 摇摆不定的老大   322</li><li><input disabled="" type="checkbox"> “小仓鼠”老二   322</li><li><input disabled="" type="checkbox"> 不看书的老三   323</li><li><input disabled="" type="checkbox"> 半途而废的老四   323</li></ul><h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><p>分时系统   26<br>分时系统一经推出就大获成功，尤真对于那些速度超慢的人类而言，他们开着电脑一边昕歌、一边上网 一边聊 QQ ，很是自在，理所当然地认为这些程序就是同时运行的。</p><p>虚拟内存：分页   28<br>我们可以给每个程序都提供一个超级大的空间，如 4GB ，只不过这个空间是虚拟的，程序中的指令使用的就是这些虚拟地址，然后我的MMU把它们映射到真实的物理内存地址上，那些程序却浑然不觉。哈哈，实在太棒了。</p><p>程序的装载   31<br>操作系统老大和 CPU 阿甘“狼狈为奸”， 成功地营造了一个假象，让我们以为每个程序都可以使用 4GB 的巨大空间，但实际上那只是虚拟的！</p>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>读书</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>收藏并不等于学会，可能还会忘记收藏了什么</title>
    <link href="/post/47958ef6/"/>
    <url>/post/47958ef6/</url>
    
    <content type="html"><![CDATA[<p>我们现在每时每刻都在收藏内容，搞笑的、学习的、好玩的，都想着收藏一下，等需要的时候翻出来看看，然而现实是并不会这么做。</p><span id="more"></span><p>因此我最近做了一些实验性的事情，包括哔哩哔哩正在看的视频，百度网盘正在看的视频，正在读的书，正在看的官方文档，全部都用博客系统来管理起来了，至少记录了当前学习的进度，不至于过了一段时间连自己学到了哪儿都忘记了。在学习的过程中，如果有一些特别的思考，正好可以顺手记录一下。</p><p>访问这个网址可以查看我的详细记录：<a href="https://www.glwsq.cn/bilibili-record/">https://www.glwsq.cn/bilibili-record/</a></p><p><img src="https://image.glwsq.cn/img/%E7%AC%AC7%E6%9C%9F-%E6%94%B6%E8%97%8F%E5%B9%B6%E4%B8%8D%E7%AD%89%E4%BA%8E%E5%AD%A6%E4%BC%9A%EF%BC%8C%E5%8F%AF%E8%83%BD%E8%BF%98%E4%BC%9A%E5%BF%98%E8%AE%B0%E6%94%B6%E8%97%8F%E4%BA%86%E4%BB%80%E4%B9%88-2022-04-26-20-46-32.png" alt="哔哩哔哩学习记录"></p><p><img src="https://image.glwsq.cn/img/%E7%AC%AC7%E6%9C%9F-%E6%94%B6%E8%97%8F%E5%B9%B6%E4%B8%8D%E7%AD%89%E4%BA%8E%E5%AD%A6%E4%BC%9A%EF%BC%8C%E5%8F%AF%E8%83%BD%E8%BF%98%E4%BC%9A%E5%BF%98%E8%AE%B0%E6%94%B6%E8%97%8F%E4%BA%86%E4%BB%80%E4%B9%88-2022-04-26-20-47-15.png" alt="哔哩哔哩详细学习记录"><br>哔哩哔哩学习记录</p>]]></content>
    
    
    <categories>
      
      <category>短而美</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaWeb视频教程,javaweb零基础入门到精通IDEA版</title>
    <link href="/post/1d33fcb2/"/>
    <url>/post/1d33fcb2/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>讲的太好了，很细致，对内部的原理理解的很深刻。讲的很底层，把JavaWeb的内部原理讲的很透彻。</p><p>课程简介：本套教程讲述了JavaWeb从入门到实战全部的知识点，主要包括：Servlet、Filter、Listener、jsp、EL表达式、JSTL标签库、jQuery、Cookie、Session、JSON、Ajax等相关技术，Javaweb全部知识点，一套教程全部搞定</p><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH">https://www.bilibili.com/video/BV1Zy4y1K7SH</a></p></blockquote><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=1">01-关于系统结构分析</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=2">02-BS架构通信原理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=3">03-配置tomcat服务器</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=4">04-编写第一个webapp</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=5">05-BS结构系统的角色和协议</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=6">06-模拟servlet本质</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=7">07-开发第一个servlet</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=8">08-servlet中编写jdbc程序连接数据库</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=9">09-使用IDEA工具开发Servlet</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=10">10-Servlet对象的生命周期</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=11">11-适配器模式改造Servlet</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=12">12-改造GenericServlet</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=13">13-ServletConfig接口详解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=14">14-ServletContext接口详解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=15">15-ServletContext接口详解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=16">16-ServletContext接口详解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=17">17-HTTP协议详解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=18">18-GET和POST的区别</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=19">19-HttpServlet源码分析</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=20">20-HttpServlet源码分析及web欢迎页</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=21">21-HttpServletRequest接口</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=22">22-通过request接口获取请求参数</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=23">23-关于请求域对象</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=24">24-关于request对象的常用方法</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=25">25-关于request对象的常用方法</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=26">26-设计数据库表以及原型</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=27">27-实现部门列表以及详情页</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=28">28-实现部门删除功能</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=29">29-实现部门新增功能</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=30">30-实现部门的修改</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=31">31-深度剖析转发和重定向的区别</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
      <tag>JavaWeb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>尚硅谷Vue2.0+Vue3.0全套教程丨vuejs从入门到精通</title>
    <link href="/post/df99894b/"/>
    <url>/post/df99894b/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>如果学习vue的话，强烈推荐这个视频，讲的是太好了，我已经把vue2.0学习完了，现在不太需要vue3.0，如果需要了，再学一下。</p><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH">https://www.bilibili.com/video/BV1Zy4y1K7SH</a><br>素材地址: <a href="https://pan.baidu.com/s/1Rj17kfgFCInLW8jyCj_seQ?pwd=6666">https://pan.baidu.com/s/1Rj17kfgFCInLW8jyCj_seQ?pwd=6666</a></p></blockquote><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=1">001_尚硅谷Vue技术_课程简介</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=2">002_尚硅谷Vue技术_Vue简介</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=3">003_尚硅谷Vue技术_Vue官网使用指南</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=4">004_尚硅谷Vue技术_搭建Vue开发环境</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=5">005_尚硅谷Vue技术_Hello小案例</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=6">006_尚硅谷Vue技术_分析Hello案例</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=7">007_尚硅谷Vue技术_模板语法</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=8">008_尚硅谷Vue技术_数据绑定</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=9">009_尚硅谷Vue技术_el与data的两种写法</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=10">010_尚硅谷Vue技术_理解MVVM</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=11">011_尚硅谷Vue技术_Object.defineProperty</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=12">012_尚硅谷Vue技术_理解数据代理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=13">013_尚硅谷Vue技术_Vue中的数据代理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=14">014_尚硅谷Vue技术_事件处理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=15">015_尚硅谷Vue技术_事件修饰符</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=16">016_尚硅谷Vue技术_键盘事件</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=17">017_尚硅谷Vue技术_事件总结</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=18">018_尚硅谷Vue技术_姓名案例</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=19">019_尚硅谷Vue技术_计算属性</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=20">020_尚硅谷Vue技术_计算属性_简写</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=21">021_尚硅谷Vue技术_天气案例</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=22">022_尚硅谷Vue技术_监视属性</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=23">023_尚硅谷Vue技术_深度监视</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=24">024_尚硅谷Vue技术_监视的简写形式</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=25">025_尚硅谷Vue技术_watch对比computed</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=26">026_尚硅谷Vue技术_绑定class样式</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=27">027_尚硅谷Vue技术_绑定style样式</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=28">028_尚硅谷Vue技术_条件渲染</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=29">029_尚硅谷Vue技术_列表渲染</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=30">030_尚硅谷Vue技术_key作用与原理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=31">031_尚硅谷Vue技术_列表过滤</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=32">032_尚硅谷Vue技术_列表排序</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=33">033_尚硅谷Vue技术_更新时的一个问题</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=34">034_尚硅谷Vue技术_Vue监测数据的原理_对象</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=35">035_尚硅谷Vue技术_Vue.set()方法</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=36">036_尚硅谷Vue技术_Vue监测数据的原理_数组</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=37">037_尚硅谷Vue技术_总结Vue监视数据</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=38">038_尚硅谷Vue技术_收集表单数据</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=39">039_尚硅谷Vue技术_过滤器</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=40">040_尚硅谷Vue技术_v-text指令</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=41">041_尚硅谷Vue技术_v-html指令</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=42">042_尚硅谷Vue技术_v-cloak指令</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=43">043_尚硅谷Vue技术_v-once指令</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=44">044_尚硅谷Vue技术_v-pre指令</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=45">045_尚硅谷Vue技术_自定义指令_函数式</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=46">046_尚硅谷Vue技术_自定义指令_对象式</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=47">047_尚硅谷Vue技术_自定义指令_总结</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=48">048_尚硅谷Vue技术_引出生命周期</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=49">049_尚硅谷Vue技术_生命周期_挂载流程</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=50">050_尚硅谷Vue技术_生命周期_更新流程</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=51">051_尚硅谷Vue技术_生命周期_销毁流程</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=52">052_尚硅谷Vue技术_生命周期_总结</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=53">053_尚硅谷Vue技术_对组件的理解</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=54">054_尚硅谷Vue技术_非单文件组件</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=55">055_尚硅谷Vue技术_组件的几个注意点</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=56">056_尚硅谷Vue技术_组件的嵌套</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=57">057_尚硅谷Vue技术_VueComponent构造函数</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=58">058_尚硅谷Vue技术_Vue实例与组件实例</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=59">059_尚硅谷Vue技术_一个重要的内置关系</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=60">060_尚硅谷Vue技术_单文件组件</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=61">061_尚硅谷Vue技术_创建Vue脚手架</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=62">062_尚硅谷Vue技术_分析脚手架结构</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=63">063_尚硅谷Vue技术_render函数</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=64">064_尚硅谷Vue技术_修改默认配置</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=65">065_尚硅谷Vue技术_ref属性</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=66">066_尚硅谷Vue技术_props配置</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=67">067_尚硅谷Vue技术_mixin混入</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=68">068_尚硅谷Vue技术_插件</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=69">069_尚硅谷Vue技术_scoped样式</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=70">070_尚硅谷Vue技术_TodoList案例_静态</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=71">071_尚硅谷Vue技术_TodoList案例_初始化列表</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=72">072_尚硅谷Vue技术_TodoList案例_添加</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=73">073_尚硅谷Vue技术_TodoList案例_勾选</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=74">074_尚硅谷Vue技术_TodoList案例_删除</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=75">075_尚硅谷Vue技术_TodoList案例_底部统计</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=76">076_尚硅谷Vue技术_TodoList案例_底部交互</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=77">077_尚硅谷Vue技术_TodoList案例_总结</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=78">078_尚硅谷Vue技术_浏览器本地存储</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=79">079_尚硅谷Vue技术_TodoList_本地存储</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=80">080_尚硅谷Vue技术_组件自定义事件_绑定</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=81">081_尚硅谷Vue技术_组件自定义事件_解绑</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=82">082_尚硅谷Vue技术_组件自定义事件_总结</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=83">083_尚硅谷Vue技术_TodoList案例_自定义事件</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=84">084_尚硅谷Vue技术_全局事件总线1</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=85">085_尚硅谷Vue技术_全局事件总线2</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=86">086_尚硅谷Vue技术_TodoList案例_事件总线</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=87">087_尚硅谷Vue技术_消息订阅与发布_pubsub</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=88">088_尚硅谷Vue技术_TodoList案例_pubsub</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=89">089_尚硅谷Vue技术_TodoList案例_编辑</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=90">090_尚硅谷Vue技术_$nextTick</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=91">091_尚硅谷Vue技术_动画效果</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=92">092_尚硅谷Vue技术_过度效果</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=93">093_尚硅谷Vue技术_多个元素过度</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=94">094_尚硅谷Vue技术_集成第三方动画</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=95">095_尚硅谷Vue技术_总结过度与动画</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=96">096_尚硅谷Vue技术_配置代理_方式一</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=97">097_尚硅谷Vue技术_配置代理_方式二</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=98">098_尚硅谷Vue技术_github案例_静态组件</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=99">099_尚硅谷Vue技术_github案例_列表展示</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=100">100_尚硅谷Vue技术_github案例_完善案例</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=101">101_尚硅谷Vue技术_vue-resource</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=102">102_尚硅谷Vue技术_默认插槽</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=103">103_尚硅谷Vue技术_具名插槽</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=104">104_尚硅谷Vue技术_作用域插槽</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=105">105_尚硅谷Vue技术_Vuex简介</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=106">106_尚硅谷Vue技术_求和案例_纯vue版</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=107">107_尚硅谷Vue技术_Vuex工作原理图</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=108">108_尚硅谷Vue技术_搭建Vuex环境</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=109">109_尚硅谷Vue技术_求和案例_vuex版</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=110">110_尚硅谷Vue技术_vuex开发者工具的使用</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=111">111_尚硅谷Vue技术_getters配置项</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=112">112_尚硅谷Vue技术_mapState与mapGetters</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=113">113_尚硅谷Vue技术_mapActions与mapMutations</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=114">114_尚硅谷Vue技术_多组件共享数据</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=115">115_尚硅谷Vue技术_vuex模块化+namespace_1</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=116">116_尚硅谷Vue技术_vuex模块化+namespace_2</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=117">117_尚硅谷Vue技术_路由的简介</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=118">118_尚硅谷Vue技术_路由基本使用</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=119">119_尚硅谷Vue技术_几个注意点</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=120">120_尚硅谷Vue技术_嵌套路由</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=121">121_尚硅谷Vue技术_路由的query参数</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=122">122_尚硅谷Vue技术_命名路由</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=123">123_尚硅谷Vue技术_路由的params参数</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=124">124_尚硅谷Vue技术_路由的props配置</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=125">125_尚硅谷Vue技术_router-link的replace属性</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=126">126_尚硅谷Vue技术_编程式路由导航</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=127">127_尚硅谷Vue技术_缓存路由组件</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=128">128_尚硅谷Vue技术_两个新的生命周期钩子</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=129">129_尚硅谷Vue技术_全局前置_路由守卫</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=130">130_尚硅谷Vue技术_全局后置_路由守卫</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=131">131_尚硅谷Vue技术_独享路由守卫</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=132">132_尚硅谷Vue技术_组件内路由守卫</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=133">133_尚硅谷Vue技术_history模式与hash模式</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=134">134_尚硅谷Vue技术_element-ui基本使用</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=135">135_尚硅谷Vue技术_element-ui按需引入</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=136">136_尚硅谷Vue3技术_vue3简介</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=137">137_尚硅谷Vue3技术_使用vue-cli创建工程</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=138">138_尚硅谷Vue3技术_使用vite创建工程</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=139">139_尚硅谷Vue3技术_分析工程结构</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=140">140_尚硅谷Vue3技术_安装开发者工具</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=141">141_尚硅谷Vue3技术_初识setup</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=142">142_尚硅谷Vue3技术_ref函数_处理基本类型</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=143">143_尚硅谷Vue3技术_ref函数_处理对象类型</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=144">144_尚硅谷Vue3技术_reactive函数</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=145">145_尚硅谷Vue3技术_回顾Vue2的响应式原理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=146">146_尚硅谷Vue3技术_Vue3响应式原理_Proxy</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=147">147_尚硅谷Vue3技术_Vue3响应式原理_Reflect</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=148">148_尚硅谷Vue3技术_reactive对比ref</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=149">149_尚硅谷Vue3技术_setup的两个注意点</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=150">150_尚硅谷Vue3技术_computed计算属性</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=151">151_尚硅谷Vue3技术_watch监视ref定义的数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=152">152_尚硅谷Vue3技术_watch监视reactive定义的数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=153">153_尚硅谷Vue3技术_watch时value的问题</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=154">154_尚硅谷Vue3技术_watchEffect函数</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=155">155_尚硅谷Vue3技术_Vue3生命周期</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=156">156_尚硅谷Vue3技术_自定义hook</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=157">157_尚硅谷Vue3技术_toRef与toRefs</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=158">158_尚硅谷Vue3技术_shallowReactive与shallowRef</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=159">159_尚硅谷Vue3技术_readonly与shallowReadonly</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=160">160_尚硅谷Vue3技术_toRaw与markRaw</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=161">161_尚硅谷Vue3技术_customRef</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=162">162_尚硅谷Vue3技术_provide与inject</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=163">163_尚硅谷Vue3技术_响应式数据的判断</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=164">164_尚硅谷Vue3技术_CompositionAPI的优势</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=165">165_尚硅谷Vue3技术_Fragment组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=166">166_尚硅谷Vue3技术_Teleport组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=167">167_尚硅谷Vue3技术_Suspense组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=168">168_尚硅谷Vue3技术_Vue3中其他的改变</a></li></ul><div class="note note-success">            <p>相关推荐：</p><ul><li><a href="/post/note-vue-element/">Vue后台管理系统项目实战/vue+element-ui/vue经典全套系统案例讲解</a></li><li><a href="/post/df99894b/">尚硅谷Vue2.0+Vue3.0全套教程丨vuejs从入门到精通</a></li><li><a href="/post/2ff98e51/">Docker最新超详细版教程通俗易懂</a></li><li><a href="/post/switch-node-version/">优雅的切换nodejs版本</a></li><li><a href="/post/vmware-linux/">如何在VMware中安装Linux</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>尚硅谷VUE项目实战，前端项目-尚品汇(大型\重磅)</title>
    <link href="/post/BV1Vf4y1T7bw/"/>
    <url>/post/BV1Vf4y1T7bw/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>这个视频看了一点，没有学下去，如果你也在找一个刚学完vue的练手项目的话，推荐这个：<a href="/post/note-vue-element/">Vue后台管理系统项目实战-vue+element-ui</a></p><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw">https://www.bilibili.com/video/BV1Vf4y1T7bw</a><br>素材地址:</p><ol><li>尚品汇源码GIT地址：<a href="https://gitee.com/jch1011/shangpinhui_0415.git">https://gitee.com/jch1011/shangpinhui_0415.git</a></li><li>后台管理系统源码GIT地址：<a href="https://gitee.com/jch1011/guigu.git">https://gitee.com/jch1011/guigu.git</a></li></ol></blockquote><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=1">001-尚硅谷-尚品汇-教程简介</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=2">002-尚硅谷-尚品汇-vue-cli脚手架初始化项目</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=3">003-尚硅谷-尚品汇-项目的其他配置</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=4">004-尚硅谷-尚品汇-项目的路由分析</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=5">005-尚硅谷-尚品汇-Header与Footer非路由组件完成</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=6">006-尚硅谷-尚品汇-完成路由组件的搭建</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=7">007-尚硅谷-尚品汇-路由元信息的使用</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=8">008-尚硅谷-尚品汇-路由传递参数</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=9">009-尚硅谷-尚品汇-路由传递参数相关面试题</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=10">010-尚硅谷-尚品汇-重写push与replace方法</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=11">011-尚硅谷-尚品汇-home首页组件拆分业务分析</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=12">012-尚硅谷-尚品汇-TypeNav三级联动全局组件完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=13">013-尚硅谷-尚品汇-Home首页拆分静态组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=14">014-尚硅谷-尚品汇-POSTMAN工具测试接口</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=15">015-尚硅谷-尚品汇-axios二次封装</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=16">016-尚硅谷-尚品汇-API接口统一管理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=17">017-尚硅谷-尚品汇-nprogress进度条的使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=18">018-尚硅谷-尚品汇-vuex模块式开发</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=19">019-尚硅谷-尚品汇-动态展示三级联动数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=20">020-尚硅谷-尚品汇-完成三级联动动态背景颜色</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=21">021-尚硅谷-尚品汇-通过JS控制二三级分类显示与隐藏</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=22">022-尚硅谷-尚品汇-演示卡顿现象引入防抖与节流</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=23">023-尚硅谷-尚品汇-函数防抖的理解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=24">024-尚硅谷-尚品汇-函数节流的理解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=25">025-尚硅谷-尚品汇-三级联动节流</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=26">026-尚硅谷-尚品汇-三级联动路由跳转的分析</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=27">027-尚硅谷-尚品汇-完成三级联动的路由跳转与传递参数业务</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=28">028-尚硅谷-尚品汇-复习</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=29">029-尚硅谷-尚品汇-Search模块中商品分类与过渡动画</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=30">030-尚硅谷-尚品汇-typeNav商品分类列表的优化</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=31">031-尚硅谷-尚品汇-合并参数</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=32">032-尚硅谷-尚品汇-mockjs模拟数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=33">033-尚硅谷-尚品汇-获取Banner轮播图的数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=34">034-尚硅谷-尚品汇-swiper基本使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=35">035-尚硅谷-尚品汇-Banner实现轮播图第一种解决方案</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=36">036-尚硅谷-尚品汇-轮播图通过watch+nectTick解决问题</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=37">037-尚硅谷-尚品汇-获取floor组件mock数据‘</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=38">038-尚硅谷-尚品汇-动态展示Floor组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=39">039-尚硅谷-尚品汇-共用组件Carsouel</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=40">040-尚硅谷-尚品汇-Search模块的静态组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=41">041-尚硅谷-尚品汇-search模块vuex操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=42">042-尚硅谷-尚品汇-search模块中动态展示产品列表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=43">043-尚硅谷-尚品汇-Search模块根据不同的参数获取数据展示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=44">044-尚硅谷-尚品汇-Search模块中子组件动态开发</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=45">045-尚硅谷-尚品汇-监听路由的变化再次发请求获取数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=46">046-尚硅谷-商品柜-面包屑处理分类的操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=47">047-尚硅谷-尚品汇-面包屑处理关键字</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=48">048-尚硅谷-尚品汇-面包屑处理品牌信息</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=49">049-尚硅谷-尚品汇-平台售卖属性的操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=50">050-尚硅谷-尚品汇-排序操作上</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=51">051-尚硅谷-尚品汇-排序操作下</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=52">052-尚硅谷-尚品汇-分页器静态组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=53">053-尚硅谷-尚品汇-排序复习</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=54">054-尚硅谷-尚品汇-分页功能分析</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=55">055-尚硅谷-尚品汇-分页器起始与结束数字计算</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=56">056-山硅谷-尚品汇-分页器动态展示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=57">057-尚硅谷-尚品汇-分页器完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=58">058-尚硅谷-尚品汇-分页器添加类名</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=59">059-尚硅谷-尚品汇-滚动行为</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=60">060-尚硅谷-尚品汇-产品详情数据获取</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=61">061-尚硅谷-尚品汇-产品详情展示动态数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=62">062-尚硅谷-尚品汇-分页器复习-裁剪</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=63">063-尚硅谷-尚品汇-zoom放大镜展示数据-裁剪</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=64">064-尚硅谷-尚品汇-detail路由组件展示商品售卖属性-裁剪</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=65">065-尚硅谷-尚品汇-产品售卖属性值排他操作-裁剪</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=66">066-尚硅谷-尚品汇-放大镜操作上</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=67">067-尚硅谷-尚品汇-放大镜结束‘</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=68">068-尚硅谷-尚品汇-购买产品个数的操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=69">069-尚硅谷-尚品汇-加入购物车</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=70">070-尚硅谷-尚品汇-加入购物车成功与失败的判断</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=71">071-尚硅谷-尚品汇-加入购物车操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=72">072-尚硅谷-尚品汇-路由传递参数结合会话存储</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=73">073-尚硅谷-尚品汇-购物车静态组件与修改</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=74">074-尚硅谷-尚品汇-uuid游客身份获取购物车数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=75">075-尚硅谷-尚品汇-购物车动态展示数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=76">076-尚硅谷-尚品汇-处理产品数量</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=77">077-尚硅谷-尚品汇-修改购物车产品的数量完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=78">078-尚硅谷-尚品汇-删除购物车产品的操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=79">079-尚硅谷-尚品汇-修改产品状态</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=80">080-尚硅谷-尚品汇-复习</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=81">081-尚硅谷-尚品汇-删除全部选中的商品</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=82">082-尚硅谷-尚品汇-全部产品的勾选状态修改</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=83">083-尚硅谷-尚品汇-登录注册静态组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=84">084-尚硅谷-尚品汇-注册业务上</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=85">085-尚硅谷-尚品汇-注册业务下</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=86">086-尚硅谷-尚品汇-登录业务（token）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=87">087-尚硅谷-尚品汇-用户登录携带token获取用户信息</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=88">088-尚硅谷-尚品汇-登录业务中讲解存在问题‘</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=89">089-尚硅谷-尚品汇-退出登录</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=90">090-尚硅谷-尚品汇-导航守卫理解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=91">091-尚硅谷-尚品汇-导航守卫的判断</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=92">092-尚硅谷-尚品汇-导航守卫用户登录操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=93">093-尚硅谷-尚品汇-trade静态组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=94">094-尚硅谷-尚品汇-获取交易页数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=95">095-尚硅谷-尚品汇-用户地址信息的展示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=96">096-尚硅谷-商品汇-交易页面完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=97">097-尚硅谷-尚品汇-提交订单</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=98">098-尚硅谷-尚品汇-获取订单号与展示支付信息</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=99">099-尚硅谷-尚品汇-支付页面中使用ElementUI以及按需引入</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=100">100-尚硅谷-尚品汇-微信支付业务上</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=101">101-尚硅谷-尚品汇-微信支付下、</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=102">102-尚硅谷-尚品汇-个人中心二级路由搭建</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=103">103-尚硅谷-尚品汇-我的订单</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=104">104-尚硅谷-尚品汇-未登录的导航守卫判断</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=105">105-尚硅谷-尚品汇-用户登录（路由独享与组件内守卫）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=106">106-尚硅谷-尚品汇-图片懒加载</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=107">107-尚硅谷-尚品汇-vee-validate表单验证使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=108">108-尚硅谷-尚品汇-路由懒加载</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=109">109-尚硅谷-尚品汇-处理map文件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=110">110-尚硅谷-尚品汇-购买服务器</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=111">111-尚品汇-尚硅谷-安全组与xshell操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=112">112-尚品汇-尚硅谷-nginx反向代理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=113">001-尚硅谷-组件通信-组件通信6种方式</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=114">002-尚硅谷-组件通信-自定义事件深入</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=115">003-尚硅谷-组件通信-v-model深入</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=116">004-尚硅谷-组件通信-sync属性修饰符</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=117">005-尚硅谷-组件通信-$attrs与$listeners</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=118">006-尚硅谷-组件通信-$children与$parent</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=119">007-尚硅谷-组件通信-混入mixin</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=120">008-尚硅谷-组件通信-作用域插槽</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=121">009-尚硅谷-后台管理系统项目-后台管理系统项目简介</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=122">010-尚硅谷-后台管理系统-后台管理系统模板介绍</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=123">011-尚硅谷-后台管理系统-登录业务完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=124">012-尚硅谷-后台管理系统-退出登录</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=125">013-尚硅谷-后台管理系统-路由的搭建</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=126">014-尚硅谷-后台管理系统-品牌管理静态组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=127">015-尚硅谷-后台管理系统-品牌列表展示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=128">016-尚硅谷-后台管理系统-添加品牌与修改品牌静态完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=129">017-尚硅谷-后台管理系统-添加品牌完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=130">018-尚硅谷-后台管理系统-修改品牌完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=131">019-尚硅谷-后台管理系统-品牌的表单验证（自定义校验规则）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=132">020-尚硅谷-后台管理系统-删除品牌操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=133">021-尚硅谷-后台管理系统-商品管理之三级联动静态组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=134">022-尚硅谷-后台管理系统-三级联动动态展示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=135">023-尚硅谷-后台管理系统-三级联动完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=136">024-尚硅谷-后台管理系统-平台属性管理动态展示属性</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=137">025-尚硅谷-后台管理系统-平台属性之添加属性与修改属性静态完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=138">026-尚硅谷-后台管理系统-收集属性名的操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=139">027-尚硅谷-后台管理-收集属性值操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=140">028-尚硅谷-后台管理系统-解决返回按钮数据回显问题</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=141">029-尚硅谷-后台管理系统-修改属性操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=142">030-尚硅谷-后台管理系统-查看模式与修改模式切换</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=143">031-尚硅谷-后台管理系统-查看模式与编辑模式注意事项</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=144">032-尚硅谷-后台管理系统-修改属性的查看与编辑模式切换</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=145">033-尚硅谷-后台管理系统-表单元素自动聚焦的实现</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=146">034-尚硅谷-后台管理系统-删除属性值的操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=147">035-尚硅谷-后台管理系统-保存操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=148">036-尚硅谷-后台管理系统-按钮与三级联动的可操作性</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=149">037-尚硅谷-后台管理系统-SPU管理模块业务介绍</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=150">038-尚硅谷-后台管理系统-SPU管理模块静态</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=151">039-尚硅谷-后台管理系统-动态展示SPU列表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=152">040-尚硅谷-后台管理系统-Spu管理内容的切换</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=153">041-尚硅谷-后台管理系统-SpuForm静态组件完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=154">042-尚硅谷-后台管理系统-SpuForm请求业务得分析</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=155">043-尚硅谷-后台管理系统-获取SpuForm数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=156">044-尚硅谷-后台管理系统-SpuForm组件数据展示与收集数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=157">045-尚硅谷-后台管理系统-SpuForm销售属性的数据展示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=158">046-尚硅谷-后台管理系统-完成SpuForm照片墙数据的收集</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=159">047-尚硅谷-后台管理系统-销售属性的添加的操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=160">048-尚硅谷-后台管理系统-销售属性值展示与收集</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=161">049-尚硅谷-后台管理系统-删除销售属性与属性值操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=162">050-尚硅谷-后台管理系统-完成修改Spu的保存操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=163">051-尚硅谷-后台管理系统-完成添加SPU的操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=164">052-尚硅谷-后台管理系统-删除SPU的操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=165">053-尚硅谷-后台管理系统-完成SKU静态组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=166">054-尚硅谷-后台管理系统-获取SkuForm数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=167">055-尚硅谷-后台管理系统-展示SKU与收集SKU的数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=168">056-尚硅谷-后台管理系统-添加SKU图片列表数据的展示与收集</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=169">057-尚硅谷-后台管理系统-完成添加SKU保存操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=170">058-尚硅谷-后台管理系统-SKU列表的展示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=171">059-尚硅谷-后台管理系统-loading效果</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=172">060-尚硅谷-后台管理系统-sku模块数据展示与分页功能</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=173">061-尚硅谷-尚品汇-SKU上架与下架操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=174">062-尚硅谷-后台管理系统-SKU详情查看完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=175">063-尚硅谷-后台管理系统-深度选择器</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=176">064-尚硅谷-后台管理系统-数据可视化简介</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=177">065-尚硅谷-后台管理系统-canvas绘制线段</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=178">066-尚硅谷-后台管理系统-canvas绘制矩形</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=179">067-尚硅谷-后台管理系统-绘制圆形</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=180">068-尚硅谷-后台管理系统-画布清除与绘制文字</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=181">069-尚硅谷-后台管理系统-绘制柱状图</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=182">070-尚硅谷-后台管理系统-svg基本使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=183">071-尚硅谷-后台管理系统-echarts基本使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=184">072-上硅谷-后台管理系统-echarts展示多个图表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=185">073-尚硅谷-后台管理系统-一个容器显示多个图表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=186">074-尚硅谷-后台管理系统-echart中数据集dataset使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=187">075-尚硅谷-后台管理系统-echarts内置组件使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=188">076-尚硅谷-后台管理系统-echarts坐标体系</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=189">077-尚硅谷-后台管理系统-Home首页Card静态组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=190">078-尚硅谷-后台管理系统-折线图完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=191">079-尚硅谷-后台管理系统-柱状图完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=192">080-尚硅谷-后台管理系统-进度条完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=193">081-尚硅谷-后台管理系统-sale静态组件-上</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=194">082-尚硅谷-后台管理系统-sale静态组件-中</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=195">083-尚硅谷-后台管理系统-sale组件完毕</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=196">084-尚硅谷-后台管理系统-observe静态组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=197">085-尚硅谷-后台管理系统-动态展示mock数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=198">086-尚硅谷-后台管理系统-权限管理模块介绍</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=199">087-尚硅谷-后台管理系统-权限管理模块的串讲</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=200">088-尚硅谷-后台管理系统-菜单&amp;按钮权限</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前端开发之Vue项目实战_Element-UI【配套源码+笔记】</title>
    <link href="/post/BV1x64y1S7S7/"/>
    <url>/post/BV1x64y1S7S7/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><span id="more"></span><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV1x64y1S7S7">https://www.bilibili.com/video/BV1x64y1S7S7</a><br>素材地址: <a href="https://pan.baidu.com/s/17Jx1eqJKyPgdiU1qZXpsRA?pwd=u6i8">https://pan.baidu.com/s/17Jx1eqJKyPgdiU1qZXpsRA?pwd=u6i8</a></p></blockquote><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=1">01.Vue项目实战学习目标_</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=2">02.Vue项目实战概述_</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=3">03.电商后台管理系统的功能_</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=4">04.开发模式：前后端分离_</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=5">05.项目初始化_</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=6">06.初始化Git远程仓库_</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=7">07.本地项目托管到GitHub或码云中_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=8">08.后台项目的环境安装配置_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=9">09.测试后台接口是否正常_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=10">10.登录与退出功能_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=11">11.登录功能实现_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=12">12.删除不要的组件_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=13">13.创建登录组件_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=14">14.登录组件布局_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=15">15.登录组件头部布局_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=16">16.登录组件表单布局_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=17">17.登录组件表单小图标布局_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=18">18.登录组件表单的数据绑定_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=19">19.登录组件表单的数据验证_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=20">20.登录组件实现表单的重置_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=21">21.登录组件登录前的预验证_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=22">22.登录组件根据预验证是否发起请求_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=23">23.登录组件配置弹窗提示_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=24">24.登录组件登录成功后的行为_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=25">25.路由导航守卫控制访问权限_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=26">26.退出功能实现原理_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=27">27.处理语法警告问题_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=28">28.优化element-ui按需组件的导入形式_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=29">29.提交登录功能代码_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=30">01.主页布局开始_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=31">02.主页Header布局_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=32">03.主页左侧菜单布局_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=33">04.通过接口获取菜单数据_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=34">05.发起请求获取左侧菜单数据_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=35">06.左侧菜单UI绘制_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=36">07.左侧菜单格式美化_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=37">08.左侧菜单优化_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=38">09.实现左侧菜单的折叠与展开功能_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=39">10.实现首页的路由重定向_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=40">11.左侧菜单改造为路由链接_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=41">12.用户列表开发_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=42">13.解决用户列表小问题_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=43">14.绘制用户列表的基本UI结构_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=44">15.获取用户列表数据_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=45">16.渲染用户列表数据_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=46">17.为用户列表添加索引列_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=47">18.改造状态列的显示效果_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=48">19.插槽形式自定义列的渲染_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=49">20.实现数据分页效果_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=50">21.实现用户状态的修改_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=51">22.实现搜索的功能_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=52">23.实现添加用户的功能_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=53">24.添加用户的对话框中渲染一个添加用户的表单_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=54">25.实现自定义规则_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=55">26.实现添加用户表单的重置功能_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=56">27.添加用户的预验证功能_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=57">28.发起请求添加一个新用户_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=58">29.添加用户修改的操作_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=59">30.根据ID查询用户信息_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=60">31.绘制修改用户的表单_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=61">32.实现修改表单的关闭之后的重置操作_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=62">33.提交修改之前表单预验证操作_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=63">34.修改用户信息的操作_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=64">35.实现删除用户的操作_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=65">36.完成删除用户的操作_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=66">37.提交用户列表功能代码_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=67">01.权限管理开发开始_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=68">02.开发权限列表对应规格_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=69">03.权限列表的基本页面布局_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=70">04_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=71">05_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=72">06_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=73">07_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=74">08_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=75">09_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=76">10_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=77">11_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=78">12_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=79">13_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=80">14_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=81">15_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=82">16_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=83">17_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=84">18_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=85">19_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=86">20_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=87">21_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=88">22_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=89">23_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=90">24_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=91">25_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=92">26_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=93">27_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=94">28_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=95">29_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=96">01.分类管理开始_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=97">02.创建分类管理git分支_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=98">03.商品分类路由组件的加载_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=99">04.绘制商品分类页面的基本结构_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=100">05_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=101">06_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=102">07_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=103">08_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=104">09_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=105">10_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=106">11_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=107">12_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=108">13_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=109">14_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=110">15_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=111">16_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=112">17_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=113">18_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=114">19_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=115">20_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=116">21_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=117">22_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=118">23_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=119">24_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=120">25_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=121">26_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=122">27_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=123">28_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=124">29_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=125">30_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=126">31_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=127">32_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=128">33_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=129">34_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=130">35_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=131">36_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=132">37_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=133">38_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=134">39_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=135">40_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=136">41_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=137">42_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=138">43_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=139">44_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=140">45_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=141">01.商品列表功能开发开始_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=142">02_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=143">03_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=144">04_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=145">05_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=146">06_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=147">07_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=148">08_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=149">09_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=150">10_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=151">11_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=152">12_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=153">13_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=154">14_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=155">15_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=156">16_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=157">17_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=158">18_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=159">19_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=160">20_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=161">21_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=162">22_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=163">23_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=164">24_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=165">25_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=166">26_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=167">27_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=168">28_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=169">29_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=170">30_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=171">31_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=172">32_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=173">33_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=174">34_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=175">35_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=176">01.订单管理开发开始_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=177">02_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=178">03_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=179">04_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=180">05_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=181">06_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=182">07_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=183">08_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=184">09_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=185">10_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=186">11_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=187">12_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=188">13_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=189">14_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=190">15_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=191">16_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=192">17_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=193">18_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=194">19_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=195">20_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=196">01.生成项目报告_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=197">02_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=198">03_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=199">04_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=200">05_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=201">06_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=202">07_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=203">08_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=204">09_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=205">10_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=206">11_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=207">12_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=208">13_</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>电商平台数据可视化实时监控系统-ECharts-vue项目综合练习</title>
    <link href="/post/BV1bh41197p8/"/>
    <url>/post/BV1bh41197p8/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>讲的很好，我现在是单纯的把Echarts相关的课程学完了，感觉很不错，如果你也想学Echarts，也可以直接看相关的视频。</p><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV1bh41197p8">https://www.bilibili.com/video/BV1bh41197p8</a><br>素材地址: <a href="https://gitee.com/xiaoqiang001/online-retailers.git">https://gitee.com/xiaoqiang001/online-retailers.git</a></p></blockquote><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=1">01_课程介绍</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=2">02_项目演示</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=3">03_数据可视化概念</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=4">04_ECharts的介绍</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=5">05_ECharts的快速上手</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=6">06_相关配置项的讲解</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=7">07_柱状图的基本实现和常见效果</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=8">08_通用配置_title的相关配置</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=9">09_通用配置_tooltip的相关配置</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=10">10_通用配置_toolbox的相关配置</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=11">11_通用配置_legend的相关配置</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=12">12_折线图的基本实现</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=13">13_折线图的常见效果</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=14">14_折线图的常见效果</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=15">15_散点图的基本实现</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=16">16_散点图的常见效果</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=17">17_直角坐标系的常用配置grid</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=18">18_直角坐标系的常用配置axis</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=19">19_直角坐标系的常用配置dataZoom</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=20">20_饼图的基本实现</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=21">21_饼图的常见效果</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=22">22_地图的基本实现和常见配置</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=23">23_地图常见效果_显示某个省份地图</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=24">24_地图常见效果_显示空气质量</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=25">25_地图常见效果_地图和散点图结合</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=26">26_雷达图的实现</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=27">27_仪表盘的实现</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=28">28_ECharts基础小结</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=29">29_主题的使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=30">30_调色盘和颜色渐变</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=31">31_直接样式和高亮样式的使用</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=32">32_图表自适应的实现</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=33">33_图表加载动画的实现</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=34">34_图表增量动画的讲解</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=35">35_图表动画的配置项</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=36">36_全局ECharts对象的常用方法1</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=37">37_全局ECharts对象的常用方法2</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=38">38_echartsInstance对象常用方法1</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=39">39_echartsInstance对象常用方法2</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=40">40_ECharts高级小结</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=41">41_Koa2的介绍</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=42">42_Koa2的快速上手</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=43">43_Koa2中间件的特点</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=44">44_后台项目_项目准备</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=45">45_后台项目_总耗时中间件的开发</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=46">46_后台项目_响应头中间件的开发</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=47">47_后台项目_业务逻辑中间件的开发</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=48">48_后台项目_跨域配置</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=49">49_前端项目_项目的创建和准备</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=50">50_前端项目_商家销售统计_组件结构和布局结构</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=51">51_前端项目_商家销售统计_图表基本功能</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=52">52_前端项目_商家销售统计_动态刷新的实现</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=53">53_前端项目_商家销售统计_UI调整</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=54">54_前端项目_商家销售统计_UI调整</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=55">55_前端项目_商家销售统计_拆分option</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=56">56_前端项目_商家销售统计_分辨率适配</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=57">57_前端项目_销量趋势图表_通用代码结构</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=58">58_前端项目_销量趋势图表_基本图表的显示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=59">59_前端项目_销量趋势图表_UI调整</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=60">60_前端项目_销量趋势图表_切换图表的实现</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=61">61_前端项目_销量趋势图表_分辨率适配</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=62">62_前端项目_商家地图分布_显示地图</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=63">63_前端项目_商家地图分布_显示散点</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=64">64_前端项目_商家地图分布_UI调整</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=65">65_前端项目_商家地图分布_分辨率适配</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=66">66_前端项目_商家地图分布_地图点击效果</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=67">67_前端项目_销售排行图表_基本图表的显示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=68">68_前端项目_销售排行图表_UI调整</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=69">69_前端项目_销售排行图表_平移动画效果</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=70">70_前端项目_销售排行图表_分辨率适配</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=71">71_前端项目_热销商品占比_基本图表的显示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=72">72_前端项目_热销商品占比_数据的切换</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=73">73_前端项目_热销商品占比_UI调整</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=74">74_前端项目_热销商品占比_分辨率适配</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=75">75_前端项目_库存销量模块_基本图表的显示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=76">76_前端项目_库存销量模块_UI调整</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=77">77_前端项目_库存销量模块_切换动画</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=78">78_前端项目_库存销量模块_分辨率适配</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=79">79.WebSocket的基本使用_后端</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=80">80.WebSocket的基本使用_前端</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=81">81.后端项目的改造</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=82">82.前后端数据字段的约定</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=83">83.后端接收数据时的处理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=84">84.前端代码改造_连接服务器</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=85">85.前端代码改造_处理接收的数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=86">86.前端代码改造_组件的改造</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=87">87.前端代码改造_优化</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=88">88.细节处理_组件合并</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=89">89.细节处理_全屏切换_布局样式</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=90">90.细节处理_全屏切换_点击事件的处理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=91">91.细节处理_全屏切换_联动效果</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=92">92.细节处理_主题切换_图表主题</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=93">93.细节处理_主题切换_定义数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=94">94.细节处理_主题切换_原生HTML的切换</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=95">95.细节处理_主题切换_联动效果</a></li></ul><h2 id="学习笔记"><a href="#学习笔记" class="headerlink" title="学习笔记"></a>学习笔记</h2><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p><img src="https://image.glwsq.cn/img/%E7%94%B5%E5%95%86%E5%B9%B3%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AE%9E%E6%97%B6%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F-Echarts-vue%E9%A1%B9%E7%9B%AE%E7%BB%BC%E5%90%88%E7%BB%83%E4%B9%A0-2022-02-09-15-44-42.png"></p><h3 id="基本代码框架"><a href="#基本代码框架" class="headerlink" title="基本代码框架"></a>基本代码框架</h3><figure class="highlight html"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></div></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Ecahrts基本框架-折线图<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/echarts/5.2.2/echarts.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;chart1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 600px;height: 400px&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">let</span> myCharts = echarts.init(<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;chart1&#x27;</span>), <span class="hljs-string">&#x27;light&#x27;</span>) <span class="hljs-comment">// 传入dom元素和主题 主题默认是light还可以是dark</span></span><br><span class="javascript">    <span class="hljs-keyword">let</span> xDataArr = [<span class="hljs-string">&#x27;1月&#x27;</span>, <span class="hljs-string">&#x27;2月&#x27;</span>, <span class="hljs-string">&#x27;3月&#x27;</span>, <span class="hljs-string">&#x27;4月&#x27;</span>, <span class="hljs-string">&#x27;5月&#x27;</span>, <span class="hljs-string">&#x27;6月&#x27;</span>, <span class="hljs-string">&#x27;7月&#x27;</span>, <span class="hljs-string">&#x27;8月&#x27;</span>, <span class="hljs-string">&#x27;9月&#x27;</span>, <span class="hljs-string">&#x27;10月&#x27;</span>, <span class="hljs-string">&#x27;11月&#x27;</span>, <span class="hljs-string">&#x27;12月&#x27;</span>]</span><br><span class="javascript">    <span class="hljs-keyword">let</span> yDataArr = [<span class="hljs-number">3000</span>, <span class="hljs-number">2800</span>, <span class="hljs-number">900</span>, <span class="hljs-number">1000</span>, <span class="hljs-number">800</span>, <span class="hljs-number">700</span>, <span class="hljs-number">1400</span>, <span class="hljs-number">1300</span>, <span class="hljs-number">900</span>, <span class="hljs-number">1000</span>, <span class="hljs-number">800</span>, <span class="hljs-number">600</span>]</span><br><span class="javascript">    <span class="hljs-keyword">let</span> option = &#123;</span><br><span class="javascript">        <span class="hljs-attr">title</span>: &#123;</span><br><span class="javascript">            <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;折线图&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">textStyle</span>: &#123; <span class="hljs-comment">// 标题样式</span></span><br><span class="javascript">                <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#45b4c4&#x27;</span></span><br><span class="javascript">            &#125;</span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-attr">legend</span>: &#123;&#125;, <span class="hljs-comment">// 在头部显示每个折线的名称和颜色</span></span><br><span class="javascript">        <span class="hljs-comment">// color: [&#x27;red&#x27;, &#x27;green&#x27;, &#x27;blue&#x27;], // 全局调色盘</span></span><br><span class="javascript">        <span class="hljs-attr">toolbox</span>: &#123; <span class="hljs-comment">// 工具箱</span></span><br><span class="javascript">            <span class="hljs-attr">feature</span>: &#123;</span><br><span class="javascript">                <span class="hljs-attr">saveAsImage</span>: &#123;&#125; <span class="hljs-comment">// 保存图片</span></span><br><span class="javascript">            &#125;</span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-attr">dataZoom</span>: [&#123;<span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;inside&#x27;</span>&#125;], <span class="hljs-comment">// 开启缩放，滚滑轮缩放x轴</span></span><br><span class="javascript">        <span class="hljs-attr">tooltip</span>: &#123;&#125;, <span class="hljs-comment">// 鼠标移动上去内容提示框</span></span><br><span class="javascript">        <span class="hljs-attr">xAxis</span>: &#123; <span class="hljs-comment">// x轴数据类型</span></span><br><span class="javascript">            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;category&#x27;</span>, <span class="hljs-comment">// 类目轴category是需要data的</span></span><br><span class="javascript">            <span class="hljs-attr">boundaryGap</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// x轴的点和数据对齐 建议折线图这样设置，更好看</span></span><br><span class="javascript">            <span class="hljs-attr">data</span>: xDataArr</span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-attr">yAxis</span>: &#123; <span class="hljs-comment">// y轴数据类型</span></span><br><span class="javascript">            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;value&#x27;</span> <span class="hljs-comment">// value不需要data数据</span></span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-attr">series</span>: [&#123; <span class="hljs-comment">// 具体的数据</span></span><br><span class="javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;手机销售量&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">data</span>: yDataArr,</span><br><span class="javascript">            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;line&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">emphasis</span>: &#123; <span class="hljs-comment">// 高亮</span></span><br><span class="javascript">                <span class="hljs-attr">itemStyle</span>: &#123;</span><br><span class="javascript">                    <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;red&#x27;</span></span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;</span><br><span class="javascript">            <span class="hljs-comment">// color: [&#x27;red&#x27;, &#x27;green&#x27;, &#x27;blue&#x27;], // 局部调色盘</span></span><br><span class="javascript">        &#125;]</span><br><span class="javascript">    &#125;</span><br><span class="javascript">    myCharts.setOption(option)</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="读取csv数据"><a href="#读取csv数据" class="headerlink" title="读取csv数据"></a>读取csv数据</h3><p>可以看我的这一篇博客</p><p><a href="/post/js-echarts-csv">js读取csv数据，并用Echarts展示</a></p>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
      <tag>ECharts</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>bilibili视频列表爬虫</title>
    <link href="/post/bilibili-part-spider/"/>
    <url>/post/bilibili-part-spider/</url>
    
    <content type="html"><![CDATA[<p>我经常通过哔哩哔哩看学习视频，一般视频都很长，分上百个P，每次学一段时间这个教程以后可能会由于种种原因忘了这个视频还没学完，因此专门写了一个小脚本来把视频的每一集的标题记录一下，方便以后的复习和记录学习的情况。也可以更方便的做笔记。</p><span id="more"></span><h2 id="获取视频的每一集的数据"><a href="#获取视频的每一集的数据" class="headerlink" title="获取视频的每一集的数据"></a>获取视频的每一集的数据</h2><figure class="highlight js"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> videoData = <span class="hljs-built_in">window</span>.__INITIAL_STATE__.videoData<br><span class="hljs-keyword">let</span> bvid = videoData.bvid<br><span class="hljs-keyword">let</span> baseUrl = <span class="hljs-string">&#x27;https://www.bilibili.com/video/&#x27;</span><br><span class="hljs-keyword">let</span> template = <br><span class="hljs-string">`- [ ] [p$page$ $part$]($partUrl$)</span><br><span class="hljs-string">`</span><br><span class="hljs-keyword">let</span> resStr = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">const</span> page <span class="hljs-keyword">of</span> videoData.pages) &#123;<br>    <span class="hljs-keyword">let</span> tempstr = template.replace(<span class="hljs-string">&#x27;$part$&#x27;</span>, page.part).replace(<span class="hljs-string">&#x27;$page$&#x27;</span>, page.page).replace(<span class="hljs-string">&#x27;$url$&#x27;</span>, baseUrl + bvid).replace(<span class="hljs-string">&#x27;$partUrl$&#x27;</span>,<span class="hljs-string">`<span class="hljs-subst">$&#123;baseUrl&#125;</span><span class="hljs-subst">$&#123;bvid&#125;</span>?p=<span class="hljs-subst">$&#123;page.page&#125;</span>`</span>)<br>    resStr += tempstr<br>&#125;<br><span class="hljs-built_in">console</span>.log(resStr)<br></code></pre></td></tr></table></figure><p>会输出这种格式的文本，具体可以修改template字符串</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs md"><span class="hljs-bullet">-</span> [<span class="hljs-string"> </span>] [<span class="hljs-string">p1 第1步 安装Ubuntu</span>](<span class="hljs-link">https://www.bilibili.com/video/BV1Wb411S7JE?p=1</span>)<br><span class="hljs-bullet">-</span> [<span class="hljs-string"> </span>] [<span class="hljs-string">p2 第2步 安装VMware Tools</span>](<span class="hljs-link">https://www.bilibili.com/video/BV1Wb411S7JE?p=2</span>)<br><span class="hljs-bullet">-</span> [<span class="hljs-string"> </span>] [<span class="hljs-string">p3 第3步 快照</span>](<span class="hljs-link">https://www.bilibili.com/video/BV1Wb411S7JE?p=3</span>)<br></code></pre></td></tr></table></figure><h2 id="template字符串"><a href="#template字符串" class="headerlink" title="template字符串"></a>template字符串</h2><p>支持的模板如下：</p><ul><li><code>$part$</code> 每一集的标题</li><li><code>$page$</code> 每一集的编号</li><li><code>$url$</code> 整个视频的url</li><li><code>$partUrl$</code> 视频每一集的url</li></ul><h2 id="加强版-可以给前n个视频打勾"><a href="#加强版-可以给前n个视频打勾" class="headerlink" title="加强版-可以给前n个视频打勾"></a>加强版-可以给前n个视频打勾</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> done = <span class="hljs-number">8</span>; <span class="hljs-comment">// 学习过前几集</span><br><br><br><span class="hljs-keyword">const</span> videoData = <span class="hljs-built_in">window</span>.__INITIAL_STATE__.videoData<br><span class="hljs-keyword">let</span> bvid = videoData.bvid<br><span class="hljs-keyword">let</span> baseUrl = <span class="hljs-string">&#x27;https://www.bilibili.com/video/&#x27;</span><br><span class="hljs-keyword">let</span> template = <br><span class="hljs-string">`- [$checked$] [$part$]($partUrl$)</span><br><span class="hljs-string">`</span><br><span class="hljs-keyword">let</span> resStr = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">const</span> page <span class="hljs-keyword">of</span> videoData.pages) &#123;<br>    <span class="hljs-keyword">let</span> tempstr = template.replace(<span class="hljs-string">&#x27;$part$&#x27;</span>, page.part).replace(<span class="hljs-string">&#x27;$page$&#x27;</span>, page.page).replace(<span class="hljs-string">&#x27;$url$&#x27;</span>, baseUrl + bvid).replace(<span class="hljs-string">&#x27;$partUrl$&#x27;</span>,<span class="hljs-string">`<span class="hljs-subst">$&#123;baseUrl&#125;</span><span class="hljs-subst">$&#123;bvid&#125;</span>?p=<span class="hljs-subst">$&#123;page.page&#125;</span>`</span>)<br>    <span class="hljs-keyword">if</span>(page.page &lt;= done) &#123;<br>        tempstr = tempstr.replace(<span class="hljs-string">&#x27;$checked$&#x27;</span>, <span class="hljs-string">&#x27;x&#x27;</span>)<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        tempstr = tempstr.replace(<span class="hljs-string">&#x27;$checked$&#x27;</span>, <span class="hljs-string">&#x27; &#x27;</span>)<br>    &#125;<br>    <br>    resStr += tempstr<br>&#125;<br><span class="hljs-built_in">console</span>.log(resStr)<br><span class="hljs-built_in">console</span>.log(videoData.pic)<br></code></pre></td></tr></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="https://image.glwsq.cn/img/bilibili%E8%A7%86%E9%A2%91%E5%88%97%E8%A1%A8%E7%88%AC%E8%99%AB-2022-02-27-10-49-15.png"></p><div class="note note-success">            <p>相关推荐：</p><ul><li><a href="/post/note-vue-element/">Vue后台管理系统项目实战/vue+element-ui/vue经典全套系统案例讲解</a></li><li><a href="/post/df99894b/">尚硅谷Vue2.0+Vue3.0全套教程丨vuejs从入门到精通</a></li><li><a href="/post/2ff98e51/">Docker最新超详细版教程通俗易懂</a></li><li><a href="/post/switch-node-version/">优雅的切换nodejs版本</a></li><li><a href="/post/vmware-linux/">如何在VMware中安装Linux</a></li></ul>          </div>]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
      <tag>哔哩哔哩</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>项目实战-Node+Koa2从零搭建通用API服务</title>
    <link href="/post/BV13A411w79h/"/>
    <url>/post/BV13A411w79h/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>感觉是目前看过的视频里面讲的最好的，整体的设计模式和阿里的egg.js框架很像，正在学习中…</p><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV13A411w79h">https://www.bilibili.com/video/BV13A411w79h</a><br>素材地址: <a href="https://github.com/jj112358/node-api">https://github.com/jj112358/node-api</a></p></blockquote><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=1">01-项目初始化</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=2">02-项目的基础搭建</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=3">03-项目的基本优化(自动重启_配置文件)</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=4">04-添加路由(处理不同的URL请求)</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=5">05-目录结构优化(拆分服务,业务, 路由, 控制器)</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=6">06-解析body拆分service层</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=7">07-sequelize集成</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=8">08-创建User模型</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=9">09-添加用户</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=10">10-错误处理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=11">11-拆分中间件(上)</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=12">11-拆分中间件(下)错误处理的完善</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=13">12-密码加密</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=14">13-注册接口总结</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=15">14-验证登录</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=16">15-颁发token</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=17">16-用户认证</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=18">17-修改密码</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=19">18-路由自动加载</a><br>每次新建一个router.js文件都需要在app中配置一下，通过这节课，可以编写一个自动导入的代码，让开发更加的便捷。</li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=20">19-封装管理员权限</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=21">20-商品图片上传</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=22">21-商品图片上传优化(类型判断)</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=23">22-集成统一的参数格式校验</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=24">23-发布商品写入数据库</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=25">24-修改商品接口</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=26">25-硬删除接口</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=27">26-上下架商品mp4</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=28">27-商品列表接口实现</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=29">28-添加到购物车(上)-准备工作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=30">29-添加到购物车(中)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=31">30-添加到购物车(下)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=32">31-获取购物车列表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=33">32-更新购物车</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=34">33-删除购物车</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=35">34-全选与全不选</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=36">35-添加地址接口(上)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=37">36-添加地址接口(下)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=38">37-获取地址列表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=39">38-更新地址接口</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=40">39-删除与设置默认</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=41">40-生成订单</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=42">41-获取订单列表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=43">42-更新订单状态</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>node</tag>
      
      <tag>koa2</tag>
      
      <tag>正在学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>短而美第6期 - 优雅的切换nodejs版本</title>
    <link href="/post/switch-node-version/"/>
    <url>/post/switch-node-version/</url>
    
    <content type="html"><![CDATA[<p>我自己下载安装软件的时候都会选择最新的版本，我电脑安装的node版本一直是最新的16，但是最近学习了一个项目，它的node版本需要14才可以，所以研究了一下node的版本怎么灵活的切换。</p><p>搜索发现nvm可以胜任这个任务，个人认为nvm类似于python的Anaconda，但是也不完全一样。</p><span id="more"></span><blockquote><p>参考教程 <a href="https://www.jianshu.com/p/ee8aa2298fdf">https://www.jianshu.com/p/ee8aa2298fdf</a></p></blockquote><h2 id="安装nvm"><a href="#安装nvm" class="headerlink" title="安装nvm"></a>安装nvm</h2><ol><li><p>首先需要卸载本地的nodejs</p></li><li><p>然后去GitHub官网下载nvm: <a href="https://github.com/coreybutler/nvm-windows/releases">https://github.com/coreybutler/nvm-windows/releases</a></p></li></ol><p>直接下载<a href="https://image.glwsq.cn/software/nvm-setup.zip">nvm-setup.zip</a>就可以了(点击可以用我的网站高速下载)</p><ol><li>然后直接安装</li></ol><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs batch">nvm list available 提供了可安装的 Node 版本列表<br>nvm install 14.17.4 安装所需的 Node 版本（默认为64位版本，因为当前系统的架构是64位）<br>nvm use 激活刚刚安装的版本，如果报错可能需要管理员权限的cmd<br>nvm list 用来确认安装并激活的正确版本的 Node（如果存在其他已安装的版本，则会列出）<br></code></pre></td></tr></table></figure><div class="note note-success">            <p>相关文章推荐：</p><ul><li><a href="/post/npmmirror/">优雅的切换npm镜像站</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>短而美</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>node</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>短而美第5期 - 优雅的切换npm镜像站</title>
    <link href="/post/npmmirror/"/>
    <url>/post/npmmirror/</url>
    
    <content type="html"><![CDATA[<p>每次安装好nodejs，首要的任务就是切换npm镜像站，这里总结了一下切换npm镜像的方法，我现在使用的是第二种，因为有一次淘宝镜像站下载不了一个包，切换成腾讯就完美解决了，nrm切换更灵活。</p><span id="more"></span><h2 id="方法一：更改npm配置文件"><a href="#方法一：更改npm配置文件" class="headerlink" title="方法一：更改npm配置文件"></a>方法一：更改npm配置文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">npm config set registry https://registry.npmmirror.com<br></code></pre></td></tr></table></figure><p>URL 即为需要设置的镜像站点地址，上面是淘宝的</p><h2 id="方法二：安装nrm-管理"><a href="#方法二：安装nrm-管理" class="headerlink" title="方法二：安装nrm 管理"></a>方法二：安装nrm 管理</h2><blockquote><p>安装这个的前提是现在能正常安装npm包，速度慢点也没关系</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install -g nrm<br></code></pre></td></tr></table></figure><p>待安装完nrm之后，通过nrm管理镜像的地址，切换命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nrm use taobao<br></code></pre></td></tr></table></figure><p>nrm除了淘宝站点镜像之外还有其他的，可以使用以下命令查看：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nrm ls<br></code></pre></td></tr></table></figure><p>输出如下：</p><blockquote><p>可以直接复制后面的地址用【方式一】来设置</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs txt">npm -------- https://registry.npmjs.org/<br>yarn ------- https://registry.yarnpkg.com/<br>tencent ---- https://mirrors.cloud.tencent.com/npm/<br>cnpm ------- https://r.cnpmjs.org/<br>taobao ----- https://registry.npmmirror.com/<br>npmMirror -- https://skimdb.npmjs.com/registry/<br></code></pre></td></tr></table></figure><p>查看安装好了没</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config get registry <br></code></pre></td></tr></table></figure><div class="note note-success">            <p>相关文章推荐：</p><ul><li><a href="/post/switch-node-version/">优雅的切换nodejs版本</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>短而美</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>npm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VS Code上传剪切板中的图片到七牛</title>
    <link href="/post/87a7dd59/"/>
    <url>/post/87a7dd59/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【舌尖上的中国】精彩文案（解说词）</title>
    <link href="/post/e32105ea/"/>
    <url>/post/e32105ea/</url>
    
    <content type="html"><![CDATA[<p>《舌尖上的中国》是纪录频道推出的第一部高端美食类系列纪录片，从2011年3月开始大规模拍摄，是国内第一次使用高清设备拍摄的大型美食类纪录片。共在国内拍摄60个地点方，涵盖了包括港澳台在内的中国各个地域，它全方位展示博大精深的中华美食文化。向观众，尤其是海外观众展示中国的日常饮食流变，千差万别的饮食习惯和独特的味觉审美，以及上升到生存智慧层面的东方生活价值观，让观众从饮食文化的侧面认识和理解传统和变化着的中国。</p><h2 id="第一集《自然的馈赠》"><a href="#第一集《自然的馈赠》" class="headerlink" title="第一集《自然的馈赠》"></a>第一集《自然的馈赠》</h2><p>中国拥有世界上最富戏剧性的自然景观，高原，山林，湖泊，海岸线。这种地理跨度有助于物种的形成和保存，任何一个国家都没有这样多潜在的食物原材料。为了得到这份自然的馈赠，人们采集，捡拾，挖掘，捕捞。穿越四季，本集将展现美味背后人和自然的故事。</p><p>香格里拉，松树和栎树自然杂交林中，卓玛寻找着一种精灵般的食物——松茸。松茸保鲜期只有短短的两天，商人们以最快的速度对松茸的进行精致的加工，这样一只松茸24小时之后就会出现在东京的市场中。</p><p>松茸产地的凌晨3点，单珍卓玛和妈妈坐着爸爸开的摩托车出发。穿过村庄，母女俩要步行走进30公里之外的原始森林。雨让各种野生菌疯长，但每一个藏民都有识别松茸的慧眼。松茸出土后，卓玛立刻用地上的松针把菌坑掩盖好，只有这样，菌丝才可以不被破坏，为了延续自然的馈赠，藏民们小心翼翼地遵守着山林的规矩。</p><p>为期两个月的松茸季节，卓玛和妈妈挣到了5000元，这个收入是对她们辛苦付出的回报。 </p><p>老包是浙江人，他的毛竹林里，长出过遂昌最大的一个冬笋。冬笋藏在土层的下面，从竹林的表面上看，什么也没有，老包只需要看一下竹梢的叶子颜色，就能知道笋的准确位置，这完全有赖于他丰富的经验。</p><p>笋的保鲜从来都是个很大的麻烦，笋只是一个芽，是整个植物机体活动最旺盛的部分。聪明的老包保护冬笋的方法很简单，扒开松松的泥土，把笋重新埋起来，保湿，这样的埋藏方式就地利用自然，可以保鲜两周以上。</p><p>在中国的四大菜系里，都能见到冬笋。厨师偏爱它，也是因为笋的材质单纯，极易吸收配搭食物的滋味。老包正用冬笋制作一道家常笋汤，腌笃鲜主角本来应该是春笋，但是老包却使用价格高出20倍的遂昌冬笋。因为在老包眼里，这些不过是自家毛竹林里的一个小菜而已。</p><p>在云南大理北部山区，醒目的红色砂岩中间，散布着不少天然的盐井，这些盐成就了云南山里人特殊的美味。老黄和他的儿子树江小溪边搭建一个炉灶，土灶每年冬天的工作就是熬盐。</p><p>云龙县的冬季市场，老黄和儿子赶到集市上挑选制作火腿的猪肉，火腿的腌制在老屋的院子里开始。诺邓火腿的腌制过程很简单，老黄把多余的皮肉去除，加工成一个圆润的火腿，洒上白酒除菌，再把自制的诺盐均匀的抹上，不施锥针，只用揉、压，以免破坏纤维。=</p><p>即使用现代的标准来判断，诺邓井盐仍然是食盐中的极品，虽然在这个古老的产盐地，盐业生产已经停止，但我们仍然相信诺邓盐是自然赐给山里人的一个珍贵礼物。</p><p>圣武和茂荣是兄弟俩，每年9月，他们都会来到湖北的嘉鱼县，来采挖一种自然的美味。这种植物生长在湖水下面的深深的淤泥之中，茂荣挖到的植物的根茎叫做莲藕，是一种湖泊中高产的蔬菜——藕。</p><p>作为职业挖藕人，每年茂荣和圣武要只身出门7个月，采藕的季节，他们就从老家安徽赶到有藕的地方。较高的人工报酬使得圣武和茂荣愿意从事这个艰苦的工作。挖藕的人喜欢天气寒冷，这不是因为天冷好挖藕，而是天气冷买藕吃藕汤的人就多一些，藕的价格就会涨。</p><p>整整一湖的莲藕还要采摘5个月的时间，在嘉鱼县的珍湖上，300个职业挖藕人，每天从日出延续到日落，在中国遍布淡水湖的大省，这样场面年年上演。</p><p>今天当我们有权远离自然，享受美食的时候，最应该感谢的是这些通过劳动和智慧成就餐桌美味的人们。</p><h2 id="第二集《主食的故事》"><a href="#第二集《主食的故事》" class="headerlink" title="第二集《主食的故事》"></a>第二集《主食的故事》</h2><p>主食通常提供了人类所需要的大部分卡路里。中国人的烹调手艺与众不同，从最平凡的一锅米饭，一个馒头，到变化万千的精致主食，都是中国人辛勤劳动，经验积累的结晶。然而，不管吃下了多少酒食菜肴，主食，永远都是中国人餐桌上最后的主角。</p><p>老黄的全名叫黄国盛，认识他的人都叫他老黄，从每年农历十一月初开始，老黄每隔三天，会拉着自己家里做的七百个馍馍，骑一个半小时的三轮车，到县城里去卖。 </p><p>老黄卖的黄馍馍，就是用糜子面做成的馒头。是陕北人冬天最爱吃的一种主食。糜子，又叫黍，是中国北方干旱地区最主要的农作物。8000多年前，中国黄河流域开始栽培黍。</p><p>在中国，五谷始终是一个变化中的概念。大约两千年前，五谷的排序为稻、黍、稷、麦、菽。而今天，中国粮食产量的前三名已经变成稻谷、小麦和玉米。中国，从南到北，广袤的国土，自然地理的多样变化，让生活在不同地域的中国人，享受到截然不同的丰富主食。</p><p>丁村，这个中原最古老的村落，谷物加工的历史已有上万年。附近曾经出土过中国最古老的石磨，证实了这一点。</p><p>擀面，是中原女孩子在成为女人的成长中，必须要掌握的生活技艺。按照中国人的风俗礼仪，过生日贺寿是一定要吃面条的，中国人称为长寿面。为什么中国人过生日要吃面？面条是怎么成为中国人贺寿的象征？有一个说法是面的形状长瘦，谐音长寿。面条成为讲究讨口彩的中国人最喜欢的主食。</p><p>兰州人都说：自己的早晨是从一碗牛肉拉面开始的，这个有着一千多家拉面馆的城市，每天要消耗一百万碗拉面，是兰州人心目中，当之无愧的主食王者。一碗面从拉制到煮熟上桌，看似不到两分钟时间，但其背后却有着很深的门道。</p><p>土生土长的西安人曹石，计算机系硕士毕业后，利用业余时间和朋友组了一个用西安方言演唱的说唱乐队。身兼大学教师、乐队的主唱作词、多种角色的他，在这首最广为流传，描写三秦大地平民美食的说唱里，一连串列举了陕西几十种诱人的美食，在曹石的歌里，被冠以经典传统的是牛羊肉泡馍。泡馍是最土生土长的西安主食，吃泡馍最讲究的是掰馍，对西安人来说，这不但是个进食的过程，还是个享受的过程，每个人根据自己喜好的口感，掰出大小、形状不一的馍块，再配以熬煮了十几个小时的老汤，一碗看似豪爽简单的羊肉泡馍，其实内在精致复杂。</p><p>几乎所有的中国人都知道一个概念：北方人喜欢吃面食，而南方人则离不开米饭，这是因为一千年前形成的两大农业布局，一个是黄河流域以黍和麦为主的旱作农业，而另一个则是长江流域的稻作农业。因此出现了中国独特的“南米北面”主食格局。</p><p>地处太湖流域的嘉兴，正处于中国最古老的稻作文化区之中，在相当长的时间里，嘉兴以天下粮仓而著称。然而，以江南精致细腻生活方式著称的嘉兴人，踏实放心的一天，却是从一个热腾腾的肉粽子开始的。</p><p>在现代化流水线上，粽子这个古老的食物，呈现出与传统方式不一样的生命力。刘光荣，这个从四川来嘉兴打工的裹粽技师，从每天上午8点到下午4点，要完成超过3000只粽子。平均每分钟裹7个粽子，每一个粽子，用的时间不到十秒钟，而份量的准确率是百分之百。在这样的车间里，每一个工作日，就会有大约100万只粽子被生产出来。</p><p>每年晚稻成熟，就到了宁波人打年糕的时候。孩子们约好都从宁波回到村里来看望阿公阿婆，四代同堂的一家人像今天这样围坐在一起的日子，一年只有难得的两三次。在这个颇为丰盛的餐桌上，自然少不了孩子们最喜欢吃的年糕。</p><p>做年糕是宁波人庆贺新年的一种传统，以前的宁波家庭要在新年之前做上几十斤至上百斤年糕，泡在冬水里储藏，从腊月一直吃到来年。</p><p>宁波水磨年糕用当年新产的晚粳米制作，经过浸泡、磨粉、蒸粉，搡捣的过程，分子进行重新组合，口感也得以改善。搡捣后的米粉团，在铺板上使劲揉压，再揉搓成长条，一条最普通的脚板年糕就成型了。</p><p>五岁的宁宁最高兴的事情就是跟着曾祖外婆一起做年糕。等宁宁长大的时候，也许不会记得年糕的做法，但那种柔韧筋道的口感，承载着家庭的味道，则会留在宁宁一生的记忆里。</p><p>春节，对于中国人来说，是一个属于家庭的节日。2012年春节，白波跟全家人一起在北京过年。作为一名职业摄影师的白波，常年在各地摄制组工作，一年中，也只有在过年这样难得的日子里，儿女们能回到父亲身边。</p><p>饺子是中国民间最重要的主食，尤其年三十晚上，吃饺子取更岁交子之意，在中国人的习惯里，无论一年过得怎样，春节除夕夜合家团圆吃“饺子”，是任何山珍海味所无法替代的重头大宴。如今，在几乎所有的传统手工食品都已经被放到了工业化流水线上被复制的今天，中国人，这个全世界最重视家庭观念的的群体，依然在一年又一年地重复着同样的故事。其</p><p>在这个时候，中国人心里，没有什么比跟家人在一起吃饭更重要的事情，这就是中国人的传统，这就是中国人，这就是中国人关于主食的故事。</p><h2 id="第三集-转化的灵感"><a href="#第三集-转化的灵感" class="headerlink" title="第三集 转化的灵感"></a>第三集 转化的灵感</h2><p>在吃的法则里，风味重于一切。中国人从来没有把自己束缚在一张乏味的食品清单上。人们怀着对食物的理解，在不断的尝试中寻求着转化的灵感。</p><p>位于云南红河地区的建水古城，古称临安。是一个多民族的聚居地，各种文化的掺杂形成了特有的氛围和格局。建水最著名的大板井旁，女人们单靠手指的合作，就构建起一条豆腐的流水线。</p><p>始建于明代初期的大板井，直径达到惊人的三米，几百年后依然不失活力。中国人相信，水能滋养人的灵性和觉悟。这一点就仿佛水对豆腐的塑造。两者间有一种不可言喻的共通。</p><p>姚贵文和王翠华围绕着豆腐的生活清淡辛苦。丈夫最大的愿望是能够去远方的大湖钓鱼，虽然他从来没有钓过鱼。在这对夫妇眼里，每一颗豆腐都很珍贵。它们能够帮助自己供养子女，过幸福安稳的生活。</p><p>九月下旬，乌珠穆沁草原已经褪去了绿色。孟克和家人抓紧时间，赶在严冬之前进行最后的出场放牧。奶茶是早餐中永远的主角。砖茶、黄油、炒米，以及鲜奶是一锅奶茶的重要内容。</p><p>奶豆腐是几天前做的。草原上的人离不开奶茶和奶豆腐。无法靠蔬菜和水果来补充的维生素和矿物质，都可以从这里获得。</p><p>一直向南，几千公里外的云南，几乎是同样的情形。白族人家用相似的手法转化这里的牛奶。乳扇被晾到院敞里风干，像是挂起了巨大的风铃。</p><p>这种远隔万里的默契，或许要追溯到蒙古人开疆拓也的年代。在800多年前，忽必烈时期的蒙古人远征到云南。定居至此的蒙古人也带来了遥远家乡的奶食味道。他们不会想到，这种转化的手法一直被流传下来，生机勃勃。</p><p>在蛋白质的提供上，大豆食品是唯一能够抗衡肉类的植物性食材。对于素食者来说，这相当完美。中国古人称赞豆腐有和德。吃豆腐的人能安于清贫，而做豆腐的人也懂得“顺其自然”。</p><p>安徽南部，独特的地理环境和温润的气候促成了人们恬淡保守的气质，也孕育出了特有的食物——毛豆腐。方兴玉是不会在湿热的夏天做毛豆腐的，桑拿天里，人们很难控豆腐发酵的走向。但是在其它的季节里，徽州温润的环境却能引导微生物们走上发酵的正轨。她希望与这有关的一切，自己的女儿都能够学习和领悟到。</p><p>聪明的中国人对这些微小生物的运用得心应手。事实上，这种转化的智慧在更为久远的年代里，就已经熠熠生辉了。</p><p>用稻米酿出的黄酒是世界上最古老的酒类之一。酒，应该是人们利用微生物的最早的案例了。立冬的清晨，绍兴的天空开始下起小雨。这对酿酒师傅们来说，是个好征兆。酵母菌喜欢江南冬季这种绵长而又不剧烈的冷。</p><p>绍兴，自古的繁荣富庶之地。如今，绍兴人家仍然乐于枕河而居，享受其中的一份闲适。酱园里，露天的空场排列着几百只硕大的酱缸。五十六岁的丁国云依然身手矫健。酱料粘稠、厚重，需要人力定时的上下翻动，酱缸内的发酵才会均匀。在这些酱缸里，微生物的世界，此消彼长，互相制约。“中国的酱”，在人类的发酵史上独树一帜，数千年间，它成就了中国人餐桌上味道的基础。</p><p>在中国的北方，酱的意味更加直接。再过三个月就是下新酱的时候了，但是准备的工作却要从现在开始。做酱是东北人家的大事情，邻居也赶过来帮忙。煮熟的黄豆在锅里直接被捣烂。在中国的东北地区，人们做酱只用大豆这一种材料。这样的单一也是一种奢侈。</p><p>温暖的火炕上，六只手合力把豆泥堆砌成型。酱的味道甚至可以成为衡量一个主妇合格与否的标准。最后用透气的黄纸包裹，捆绑成结实的酱坯。酱坯被挂上墙。在之后的两个月里，它们静静的发酵。等到来年春天，再开始更深入的转化。</p><p>所有这些充满想象力的转化，它们所打造出的风味和对营养的升华令人叹为观止；并且形成了一种叫做文化的部分，得以传承。</p><h2 id="第四集-时间的味道"><a href="#第四集-时间的味道" class="headerlink" title="第四集 时间的味道"></a>第四集 时间的味道</h2><p>时间是食物的挚友，时间也是食物的死敌。为了保存食物，我们虽然已经拥有了多种多样的科技化方式，然而腌腊、风干、糟醉和烟熏等等古老的方法，在保鲜之余，也曾意外地让我们获得了与鲜食截然不同、有时甚至更加醇厚鲜美的味道。时至今日，这些被时间二次制造出来的食物，依然影响着中国人的日常饮食，并且蕴藏着中华民族对于滋味和世道人心的某种特殊的感触。</p><p>秋日的清晨，古老的呼兰河水流过原野。它发源于小兴安岭，蜿蜒曲折地注入松花江。金顺姬从小在呼兰河边长大，对她来说，故乡，就是这种让她魂牵梦系的泡菜的味道。菜园里的白菜是母亲每年7月头伏时种下的，为了做成泡菜，所以选用的都是心紧叶嫩的品种。今天，女儿第一次和妈妈学习做泡菜。朝鲜族泡菜品目繁多，而且即便只是一个品种，也可以呈现出多种不同的味道:凉食的清爽，烹炒的鲜香，等等。漫长的冬日里，有了脆辣、鲜甜的辣白菜的陪伴，再寡淡的日子，仿佛也会变得温暖、富足而且有滋有味。   </p><p>香港的阿添和家人一起经营着自家的腊味店。每天早上，他都是店里最忙碌的人，做这份工作，他已经有了10年的经验。和兴腊味家有着60年的历史，以用料新鲜，考究，在顾客中建立了良好的信誉和口碑。如今，阿添和他的父亲、大伯一起，打理照料店里的一切。</p><p>而在内地的湖南，稻田里的禾花开了，也到了苗族人制作腌鱼和做腊肉的时节。湘西木材丰富，熏烤腊肉的燃料以硬木为佳，如茶树和杨梅树。熏烤时，要把腌制好的肉挂在取暖做饭的火塘之上，还不断将松果、茶壳、桔皮等放入火塘，这样熏烤出来的腊肉，就会带着茶果的香味。</p><p>对纯朴的苗家人来说，腌鱼腊肉，不仅仅是一种食物，而且是被保存在岁月之中的生活和记忆，永远也难以忘怀。</p><p>在今天的黄山地区，农家后院里依然晾晒着火腿和咸肉，洋溢着一派田园气息。用腌咸肉制作的“刀板香”是一道待客的主菜，也是徽州菜的代表作之一。</p><p>在叶师傅看来，家乡的农家火腿才是世上最美味的火腿。当然他也一定知道，在距古徽州不远的浙江金华，也出产一种大名鼎鼎这火腿，它以肌红脂白，肉色鲜艳，香气浓郁，滋味鲜美而而闻名于世。</p><p>三阳南货店是上海老辈人个个都晓得的土特产商店，江浙地区的各式干货在这里都能买到。腌腊柜台组的组长侯师傅，1975年就开始在这里工作。对金华火腿做品质鉴别，只需要使用这样一支竹签，把它分别插入火腿的上、中、下三个部位，特级的火腿，三签拔出来，每一签都会散发出一股扑鼻的异香。在某种意义上，像“三阳”这样遍布上海的南货店，其实就是这个移民城市的一座座味觉纪念馆。</p><p>霞浦，闽东最古老的县份。漫长的海岸线为这里制造出众多的天然港湾，大海已然成为了种植紫菜的一座水上农场。</p><p>林仁灼，16岁开始和父亲学习种植紫菜，如今已经49岁，今天，他要为自家的农田再架设几枝毛竹。从山上砍来的毛竹要经过预先处理:把里面的竹节疏通，以方便把毛竹插入海底。毛竹每根长16米左右，重200余斤。把它架设在海里，不是一件轻松的工作。</p><p>与闽东隔海相望的台湾，对于云林县口湖乡的渔民们来说，决定他们一年生计的关键时刻已经来临。乌鱼子是台湾西南沿岸的特产，取乌鱼卵腌制而成，由于形状像中国的墨，日本人把乌鱼子称为“唐墨”，并把它视为世界三大美食之一。在台湾和日本，乌鱼子一向被视为餐桌上的高档美味。它口感绵密，软糯滋润，只需薄薄一片，就已厚味无穷。</p><p>曾有学者推论，人类的历史都是在嗅着盐的味道前行。大澳，偏居中国南海一隅，早年因盛产海盐而闻名。</p><p>郑祥兴虾铺是经历四代人的百年老店，一直稳守大澳虾膏虾酱的领导地位。76岁的郭少芬，大澳本地人，从20岁嫁到郑家开始，做虾酱已经有50年以上的经验。无论是虾膏还是虾酱，主料和辅料，其实就是再简单不过的银虾和盐。制做方法，也无非就是用把虾和盐搅碎后放在竹筛上晒太阳。</p><p>老铺一直靠郭少芬和丈夫两个人打理，直到相濡以沫的丈夫在2011年去世。都说大澳是观赏日落最理想的地方，这里，指的也许不仅仅是风景。</p><p>这是盐的味道。山的味道，风的味道，阳光的味道，也是时间的味道，人情的味道。这些味道，已经在漫长的时光中和故土、乡亲、念旧、勤俭、坚忍等等情感和信念混合在一起，才下舌尖，又上心间，让我们几乎分不清哪一个是滋味，哪一种是情怀。</p><h2 id="第五集-厨房的秘密"><a href="#第五集-厨房的秘密" class="headerlink" title="第五集 厨房的秘密"></a>第五集 厨房的秘密</h2><p>要统计中国菜的菜品数量、毫无争议地划分菜系，是一件几乎不可能完成的事。烹炒煎炸蒸，火候，食材，调味……有时候，这些显得简单，有时候却又无比复杂。中国的厨房里，藏匿着什么样的秘密？是食材，佐料，调料的配比？是对时间的精妙运用？是厨师们千变万化的烹制手法？这不是一道简单的数学题。</p><p>这顿午餐是为了犒劳邻居们。每年的11月份，尼西乡的人们都要给青稞地施肥。为了不错过最佳的时机，各家之间互相帮忙。在今天，他们的耕种方式、生活习惯，依然还保持着原样。</p><p>扎西是个黑陶匠人，这里的人们固执地认为，用黑陶烹制出的菜肴，拥有特殊的好滋味。黑陶能承担的烹饪方法，就是煮。“煮”这种烹饪方式，与陶制炊具的诞生息息相关。陶器诞生之前，人们不一定能想到，他们的后代会吃出这么多花样。能够在烧和烤之外找到另一种让食物变熟的方法，在当时已经是一种惊喜和飞跃。</p><p>这里的人们有着自己的生活哲学，并不追求过于精致的生活习惯。作为水和火之间的媒介，它将温度传给食材，让美味释放出来。看似简单的沸腾下，却蕴藏着尼西人厨房的秘密。这秘密流传了几千年后，当初的“惊喜”已经变成日常的烹制手法。</p><p>中国人最早将“蒸”带入厨房，也创造了海量的蒸制菜肴。重阳节这天，是欧阳广业的四十岁生日。晚上之前，他要准备一场大型村宴，压力可想而知。村宴的场地是不固定的，灶台也须临时搭建。这样的炉灶，对于村宴再合适不过。广东是美食之乡，这看上去毫无秘密可言的厨房，却要满足这里挑剔的食客。</p><p>在中国的村宴里，蒸菜往往是主角。蒸是中国菜烹饪法的基本方式之一。在人们发现油脂的快速加热功效之前，蒸被认为比煮加热更快，并且更容易保持食材的完整形状。历史上，“蒸”字曾经和“祭”字同义。牺牲、祭品要保持完整形状。而水蒸气的运作，使热量比较均匀弥散于容器中，也使得蒸一整头猪成为可能。</p><p>在广东，人人几乎都是美食家，他们对菜肴有着几近苛刻的要求。蒸猪是今天宴席的压轴菜。作为一场成功的村宴，家人团聚，老友相会是重要的，美味传达出的满足感也必不可少。</p><p>离开故乡25年后，72岁的居长龙从日本回到扬州。他终于有机会来到熟悉的冶春茶社，再次品味熟悉的味道。</p><p>淮扬菜本身的最大特点，是将寻常的食材精雕细琢后，以华丽的姿态登场。这里面，中国厨房的另一大秘密——刀工的作用首当其冲。西餐的厨师，每个动作都有相应的刀具；中餐的厨师手中的一把刀，却能行出无数种刀法。中国菜的刀法之所以如此丰富，正因为它从来不是简单的“化整为零”。19岁开始，居长龙用三年的刻苦，将一把刀运用到纯熟。但刀工对年龄有着苛刻的要求，72岁的他，现在已近很少展示自己的刀工绝活了。</p><p>每一天，周赛群都会和一群孩子在一起，授业传道，试图把三十余年的经验悉数教给他们。无论天资如何，一年级的学生都必须在练习基本功的同时尽快掌握更多菜品的制作方法。他</p><p>当今的中国，每座城市外表都很接近。唯有饮食习惯，能成为区别于其他地方的标签。湖南菜香辣，“香”主要来自油脂。中国人的厨房少不了各种油脂，古人用油脂来对食材迅速加热，无疑是节省燃料的好方法。在今天，无论再多理论申明油脂过量的危害，中国人依然离不开那特有的脆爽口感。无论这是否矛盾，油脂的运用，是中国人对烹饪方法的莫大贡献。</p><p>这里是一家高级酒店的中餐厨房，所有的厨具应有尽有。国际名厨梁子庚，却打算用这些厨具来做一样不起眼的美食——咸鸭蛋。</p><p>尽管在全球很多国家的高级酒店做过总厨，梁子庚完成了对中西方烹饪的化学式理解。但骨子里，他还是最中意食物本来的料理方式。今天他要和老友搭档，做杭州菜，西湖醋鱼，这是一道对火候要求非常高的菜。他们将一条鱼剖开两半，一半汆水，一半过油。两种做法都需要在恰当的时机将鱼下锅和出锅，否则会直接影响到西湖鲲鱼特殊的鲜嫩口感。出锅后，两种做法的鱼在同一个盘子中合璧，浇上炒好的糖醋，美味看上去就已经呼之欲出。</p><p>不过，遗憾的是，腌制一个月的咸鸭蛋，并不算成功。对于厨师来说，永远会有未知的美味等待解密。小小的一枚咸鸭蛋，照样能难倒一位国际名厨。</p><p>对于专业的厨师来说，厨房的秘密是他们一生的财富。对于普通人来说，厨房的秘密则更多的和他们的青春、情感、记忆联系在一起。</p><p>李羡有就是这样的香港人，她今天打算自创一道新菜。这道菜是用鸡蛋液把肉馅封在柚子皮里，先煎，再浇入成品高汤煨制。和大多数主妇一样，李婆婆不曾受过专业的厨艺训练，她每天炖的汤、烧的菜，既没有美轮美奂的卖相，更没有出神入化的手段。然而，这并不妨碍大多数中国人对“妈妈菜”的眷恋。</p><p>厨房的秘密，表面上是水与火的艺术。说穿了，无非是人与天地万物之间的和谐关系。因为土地对人类的无私给予，因为人类对美食的共同热爱，所以，厨房的终极秘密就是——没有秘密。</p><h2 id="第六集-五味的调和"><a href="#第六集-五味的调和" class="headerlink" title="第六集 五味的调和"></a>第六集 五味的调和</h2><p>不管在中餐还是在汉字里，神奇的“味”字，似乎永远都充满了无限的可能性。除了舌之所尝、鼻之所闻，在中国文化里，对于“味道”的感知和定义，既起自于饮食，又超越了饮食。也就是说，能够真真切切地感觉到“味的，不仅是我们的舌头和鼻子，还包括中国人的心。</p><p>和全世界一样，汉字也用“甜”来表达喜悦和幸福的感觉。这是因为人类的舌尖能够最先感受到的味道，就是甜，而这种味道则往往来源于同一种物质——糖。</p><p>对于阿鸿来说，糖不仅表示着甜，更意味着一切。糖葱薄饼，潮州著名的传统甜食，阿鸿的手艺是祖传的。今天，阿鸿准备多做一些糖葱，明天就是当地隆重的节日——冬节。祖祠中，随着大戏的开场，人们怀着敬意，把各种色泽艳丽的甜品奉献给祖先，同时为自己的生活祈福。阿鸿的心愿，是他的传统手工技艺能继续为整个家庭带来富足。</p><p>中国人在品尝生活的甘甜之时，似乎也很善于欣赏苦。</p><p>10月的果园，茶枝柑由青转黄，气味芬芳。味苦带甘的新会陈皮就出自这些饱满的果实。储存年份的长短，决定了陈皮的等级和价值。在南中国，陈皮甚至能决定一家餐馆的兴衰。</p><p>澳门路环岛，阿伦进完货回到店里。他是这家海鲜餐厅的主人。餐厅以阿伦祖父的名字命名，半个多世纪以来，生意很少冷场，秘密就在于餐馆的招牌菜——陈皮鸭。</p><p>阿伦的记忆里，父母始终只是在店里日夜忙碌的两个身影。童年给他留下的，是辛苦的回味。陈皮飘香里，时光仿佛过得很快，如今，阿伦已有了稳定的工作和收入。在他看来，四十多年的生活经历，如果用一句话来概括，最准确的，莫过于“苦尽甘来”。</p><p>咸的味觉来自盐。在中国菜里，盐更重的使命，是调出食物本身固有的味道，改善某种肌体的质地。在中国的烹饪辞典里，盐是百味之首。</p><p>粤东海边，村民世代以晒盐为生。不下雨的日子里，阿刘每天都要在盐田里忙碌。晒盐的收入微薄，一年不到一万元，阿刘还要做电工和捕鱼贴补家用。村子里的人大多外出打工，大片的盐田已经荒废，阿刘依然选择留守。</p><p>酸味能去腥解腻，提升菜肴的鲜香。当酸味和甜味结合在一起时，它还能使甜味变得更加灵动，更加通透。酸甜，正是大部份外国人在中国以外的地方对于中餐产生的基本共识。</p><p>在烹制肉类时，酸味还能加速肉的纤维化，使肉质变得更加细嫩。当然，“酸”味本身，不尽能促进消化，增进食欲，与此同时，在世界通用的“甜”以及“苦”之外，中国人还很特别地使用“酸”字来形容某种疼痛、某种妒嫉、某种不堪以及某种纠缠而难以言说的苦难。</p><p>除了“酸”，还有一种可以提振食欲、并且在中餐的菜谱上经常合“酸”字合并使用的味道，那就是“辣”。</p><p>素琼是个菜农，也是绝对的一家之主。在四川，许多妇女都像素琼这样开朗、坚韧、果断，汉语里，人们用“泼辣”来形容这种性格。四川盆地气候潮湿，多阴雨，住在这里的人，正需要辣椒的刚猛热烈。</p><p>在川菜中，无论是作主料、辅料还是作调味料，辣椒都是宠儿，它给川菜烙上了鲜明的印记。素琼特意推迟了这一造辣椒的种植和采摘，果然在冬季里卖出更好的价格，这种精明让她丈夫十分佩服。</p><p>中国烹饪，既能像麻辣的川菜一样如此凶猛地侵略我们的味觉，也能润物细无声地让我们的舌尖领略鲜味的美好。</p><p>庄臣18岁时，进入中国最早的五星级酒店，成为一名厨师。2000年，庄臣辞去餐饮总监的职务，成为职业美食家、广东饮食文化的推广者。他认为，在烹饪中保持食材的原味，是一种素面朝天的鲜美。</p><p>“鲜”是只有中国人才懂得并孜孜以求的特殊的味觉体验。全世界只有中文才能阐释“鲜味”的全部涵义。然而所谓阐释，并不重在定义，更多的还是感受。 </p><p>“鲜”既在“五味”之内，又超越了“五味”，成为中国饮食最平常但又最玄妙的一种境界。<br>五味使中国菜的味道千变万化，也为中国人在况味和回味他们各自不同的人生境遇时，提供了一种特殊的表达方式。在厨房里，五味的最佳存在方式，并不是让其中有某一味显得格外突出，而是五味的调和以及平衡，不仅是中国历代厨师和中医不断寻求的完美状态，也是中国在为人处世、甚至在治国经世上所追求的理想境界。</p><h2 id="第七集-我们的田野"><a href="#第七集-我们的田野" class="headerlink" title="第七集 我们的田野"></a>第七集 我们的田野</h2><p>中国人说：靠山吃山、靠海吃海。这不仅是一种因地制宜的变通，更是顺应自然的中国式生存之道。从古到今，这个农耕民族精心使用着脚下的每一寸土地，获取食物的活动和非凡智慧，无处不在。</p><p>贵州省从江县，侗族、苗族和壮族聚居的山区，这里的人自古以糯米为主食，在高山梯田里种植着近百种原始的糯稻。远离现代文明的喧嚣，散落的村寨像一个个孤岛，深藏在大山深处。</p><p>十月，是糯稻成熟的季节，壮族聚居的下尧村，正在迎接一个专为稻谷丰收设置的节日—新米节。但糯稻并不是村民们唯一的收获，水田里还藏着其它的秘密。水稻田里可以同时养鲤鱼和鸭子，这种稻鱼鸭共作的古老体系，已被列入全球重要农业文化遗产。</p><p>獐子岛，黄海北部一个不足15平方公里的岛屿，却因为海域里的物产富甲一方。碧波之下，生存着一个兴旺的群体。被中国人视为海中珍品的海参、鲍鱼、海胆等无脊椎动物恰好占据了其中的多数。纯净的水体和活跃的洋流造就了它们非凡的品质。</p><p>三年前，数以亿计人工培育的海参幼苗被播撒在这片水域，它们和野生同类的成长轨迹完全相同。这是人类和大自然的携手合作，以生态的方式，实现了耕海牧渔的理想。45岁的潜水员王厚喜正在准备职业生涯中的最后一次入水。</p><p>河蟹，学名中华绒螯蟹。繁衍期，它们成群结队从栖息的支流和湖泊迁移到长江口。因为生态环境的改变，今天，野生中华绒螯蟹已经十分罕见。小太是人工繁育的一代。河塘里的水全部引自太湖，小太的食物是湖里的水草和小鱼虾，与吃饲料的同类相比，它拥有更长的生长期和更健壮的体魄。今天的中国，大闸蟹已经成为利益最高的养殖项目之一。</p><p>地处长三角北端的江苏兴化水乡，仿佛一片被时光遗忘的土地。盛夏的正午，夏俊台和王元凤把船划进了湖荡，给一种嗜水的高大蔬菜进行浇灌。他们脚下这块样貌独一无二的土地，叫垛田。</p><p>各种葱茏的蔬菜中，身形魁梧的芋头是绝对的多数。四面环水的垛田，恰好能够满足这个物种最大的嗜好：喝水。每天，老夏要给芋头浇四次水，每次浇够一个小时才能保证芋头的需水量。</p><p>在中国经济最活跃的地区，祖居兴化农村的夏俊台，可能是家族中最后一位从事农作的人。但这并不影响他安然享受这里的一切，天然的垛田、芋头、以及他和妻子的家。。</p><p>青藏高原，世界的屋脊。喜马拉雅山横亘于南部，它的北面，雅鲁藏布江从雪山冰峰间流出，奔向藏南的谷底，开辟了西藏最富庶的农业区——日喀则。</p><p>村外，人们种植的青稞就要成熟了。在寒冷的极地，人们需要借助饮食来补充生命的能量。4000米以上的海拔，自然的馈赠并不丰富，有限的食物当中，青稞，成了人们最依赖的主食。望果节在青稞成熟前举行，是一年中最盛大的节日。祭台上，铺满青稞粉的手印，被赋予了强大的精神力量。青稞粉被抛向空中。人们相信，祈祷的声音，可以直达天宇。</p><p>北京，繁华的国际化都市。林立的高楼，围绕着古老的紫禁城，也围绕着不同气质的老街小巷——胡同。住在胡同的贵春有一个不平凡的理想：拥有一片自己的菜园。于是，贵春把他的理想搬上了屋顶。</p><p>种子在地下静静地沉睡着，春天的北京，看不到一点绿意，屋顶上的鱼池还留有去年冬天的残冰。夏天一到，贵春的屋顶完全换了容装。当都市中的人们涌向菜场，将远道而来的蔬菜带回家，贵春却可以像个自在的农夫，就地取材，自给自足。</p><p>都市里，成片的屋顶仿佛被遗弃的空间，了无生气。而贵春的屋顶菜园却是一片清凉世界。不足100平方米的绿色屋顶，用它的每一个叶片，净化着都市的空气。它们是贵春送给这个城市的礼物。</p><p>不同地域的中国人，运用各自智慧，适度、巧妙的利用自然，获得质朴美味的食物。能把对土地的眷恋和对上天的景仰，如此密切系于一心的唯有农耕民族。一位作家这样描述中国人淳朴的生命观：他们在埋头种地和低头吃饭时，总不会忘记抬头看一看天。</p>]]></content>
    
    
    
    <tags>
      
      <tag>创作完成</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>短而美第4期 - VS Code快速保存用户代码片段</title>
    <link href="/post/snippet-factory/"/>
    <url>/post/snippet-factory/</url>
    
    <content type="html"><![CDATA[<p>在写文章或者敲代码的时候，会经常用到一些固定格式的文本，可以用vscode提供的用户代码片段来解决，但是编写配置非常麻烦，可以借助下面的插件来方便保存用户代码片段。</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装VS Code插件 snippet-factory<br><img src="https://image.glwsq.cn/img/VS-Code%E5%BF%AB%E6%8D%B7%E6%8F%92%E5%85%A5%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5-2022-02-03-22-15-20.png"></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>选中代码右键，选择：<code>Save as snippet</code><br>或者选中代码使用快捷键：<code>ctrl+shift+p</code><br>就会打开插入的代码片段，然后对应的修改一下，例如：</p><figure class="highlight json"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;输出debug&quot;</span>: &#123; <span class="hljs-comment">// 随便写个名称</span><br>        <span class="hljs-attr">&quot;prefix&quot;</span>: <span class="hljs-string">&quot;debug&quot;</span>, <span class="hljs-comment">// 触发前缀</span><br>        <span class="hljs-attr">&quot;scope&quot;</span>: <span class="hljs-string">&quot;javascript&quot;</span>, <span class="hljs-comment">// 对应语言</span><br>        <span class="hljs-attr">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment">// 代码片段说明</span><br>        <span class="hljs-attr">&quot;body&quot;</span>: [ <span class="hljs-comment">// 具体的代码片段</span><br>            <span class="hljs-string">&quot;console.log(&#x27;debug&#x27;)&quot;</span><br>        ]<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后就可以在VS Code中愉快的敲代码了。<br><img src="https://image.glwsq.cn/img/%E7%AC%AC4%E6%9C%9F-VS-Code%E5%BF%AB%E6%8D%B7%E6%8F%92%E5%85%A5%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5-2022-02-08-23-48-04.png"><br><img src="https://image.glwsq.cn/img/VS-Code%E5%BF%AB%E6%8D%B7%E6%8F%92%E5%85%A5%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5-2022-02-03-22-14-29.gif"></p><div class="note note-success">            <p>相关文章推荐：</p><ul><li><a href="/post/d003791c/">VS Code配置markdown代码片段</a></li><li><a href="/post/vscode-paste-image/">VScode中插入剪切板中的图片</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>短而美</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>vscode插件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VS Code配置markdown代码片段</title>
    <link href="/post/d003791c/"/>
    <url>/post/d003791c/</url>
    
    <content type="html"><![CDATA[<p>我的文章里面会经常用到一些固定的格式的文本，正好可以直接用vscode提供的用户代码片段。</p><span id="more"></span><p>但是即使添加好代码片段了，发现在markdown书写过程中并不会进行提示</p><p>打开vs code的设置，<code>文件 --&gt; 首选项 --&gt; 设置</code></p><p><img src="https://image.glwsq.cn/img/VS-Code%E9%85%8D%E7%BD%AEmarkdown%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5-2022-02-03-21-49-56.gif"></p><p>然后搜索quickSuggestions</p><p><img src="https://image.glwsq.cn/img/VS-Code%E9%85%8D%E7%BD%AEmarkdown%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5-2022-02-03-21-54-24.png"></p><p>追加代码，就可以了</p><figure class="highlight json"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs json"><span class="hljs-string">&quot;[markdown]&quot;</span>:&#123;<br>    <span class="hljs-attr">&quot;editor.quickSuggestions&quot;</span>: <span class="hljs-literal">true</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>vscode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作完成</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>短而美第3期 - GitHub Clone切换为ssh方式</title>
    <link href="/post/github-clone-ssh/"/>
    <url>/post/github-clone-ssh/</url>
    
    <content type="html"><![CDATA[<p>Git在clone的时候使用ssh链接，速度将会更快更稳定，本篇文章介绍如何配置ssh公钥，免密登录GitHub。</p><p><img src="https://image.glwsq.cn/img/202202031932922.png"></p><span id="more"></span><h2 id="向GitHub中添加ssh公钥"><a href="#向GitHub中添加ssh公钥" class="headerlink" title="向GitHub中添加ssh公钥"></a>向GitHub中添加ssh公钥</h2><ol><li>打开GitHub添加key的页面：<a href="https://github.com/settings/keys">https://github.com/settings/keys</a></li><li>new 一个 SSH key</li><li>把<code>%HOMEPATH%/.ssh/id_rsa.pub</code>中的内容复制到Key文本框中，Title随便写</li><li>Add SSH key</li></ol><p><img src="https://image.glwsq.cn/img/GitHub-clone%E5%88%87%E6%8D%A2%E4%B8%BAssh%E6%96%B9%E5%BC%8F-2022-02-03-21-11-48.png"></p><div class="note note-success">            <p>相关文章推荐：</p><ul><li><a href="/post/ssh-keygen/">ssh生成公钥</a></li><li><a href="/post/github-uu/">通过UU加速器免费加速GitHub</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>短而美</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>短而美第2期 - 用UU加速器免费加速GitHub</title>
    <link href="/post/github-uu/"/>
    <url>/post/github-uu/</url>
    
    <content type="html"><![CDATA[<p>GitHub访问很慢，但是最近发现了uu加速器可以进行加速，自己也使用了一段时间，发现体验很好。只需要下载安装<a href="https://uu.gdl.netease.com/4027/UU-4.15.0.exe">uu加速器</a>，然后选择【学术资源】加速就可以了</p><span id="more"></span><p><img src="https://image.glwsq.cn/img/202201201740818.png"></p><div class="note note-success">            <p>相关文章推荐：</p><ul><li><a href="/post/ssh-keygen/">ssh生成公钥</a></li><li><a href="/post/github-clone-ssh/">GitHub clone切换为ssh方式</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>短而美</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>短而美第1期 - 生成ssh公钥</title>
    <link href="/post/ssh-keygen/"/>
    <url>/post/ssh-keygen/</url>
    
    <content type="html"><![CDATA[<h2 id="生成公钥"><a href="#生成公钥" class="headerlink" title="生成公钥"></a>生成公钥</h2><p>生成公钥只需要一个命令：<code>ssh-keygen</code></p><p>一路回车就可以了<br><img src="https://image.glwsq.cn/img/ssh%E7%94%9F%E6%88%90%E5%85%AC%E9%92%A5-2022-02-03-21-24-44.png"><br>会在用户文件夹<code>%HOMEPATH%/.ssh</code>下面的文件夹中出现id_rsa.pub<br><img src="https://image.glwsq.cn/img/202202031928559.png"></p><div class="note note-success">            <p>相关文章推荐：</p><ul><li><a href="/post/github-clone-ssh/">GitHub clone切换为ssh方式</a></li><li><a href="/post/ssh-port/">修改ssh的访问端口</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>短而美</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>ssh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客仓库</title>
    <link href="/post/437f992e/"/>
    <url>/post/437f992e/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="04eae8d79cb549e5baaa0a5795cc857f0860c30fe5e91bf0b2dfeda360dd0d78">3cda45eb18a6d7e6d918c351ef05b50ad3280022857ff547b374b3c461cb6fdc33b0974cab4835850ec3006e5a8cae57109fb1cfa036fee04dd2a16157716d599b22bcaf24b968a668040f483a8164fe180985c8524bd82c1753cc0e4d0261c2eae7f5ae84b73347d61e989ca2a9fbfff4f83779f6cca891532c07d158e26c4ff705af093514f77a1a0f8f113255a438c979c0375f87de81855e041e991b0921dcaa89390fcea5f626e496841878181bb56c2ac63cb177547769ff3cdbfcbdfed162668a7428e8059896a4323b664387dbbcf4bd027571bc5db2e622f4d2b63e85d6b7038b5eddd4e7792967badc1b9d80cc4843123e3149d46ee876323eee3eddd1b09e51a1ee2bc5c92a764448f53d0f9f1289aa06d70276489581ca76b2ad8f50e7d6b0f632cd239e61f15bdc7503f8f64ae676424a4b7a6c129e8a1c06930da6a5a8ce3446a2dd4e9b9a76933245ee863fd29cac63329e34c1e91f8f4a0c27f3aa66d8ab060e6b07ff1af8895b261172928a23f475f8df955319f95f487680a6e48b64838d7e585a12c98bc62a8f098ba01e5497c4d4fb3040c3689e70e5da5049050e08943854a143a0ecf4197ca8889873c0fee69c1a8fbaa24159d587582d403d9ca1157450ce466f0b9621f7e17ea535fbd6c626bbfecc97d4bfc5f191906f419fc70bbadc2006d40817822125e1313060103b55b5988271d3a17458edabc6208ddf37de77ccebdb12bda72116e7048c29d67b68bf7b1b58f2524948c2fc17b2093e9e867dca6140ee794992</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>个人文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常用软件</title>
    <link href="/post/software/"/>
    <url>/post/software/</url>
    
    <content type="html"><![CDATA[<blockquote><p>记录自己常用到的一些软件，方便使用，下载链接都是经过加速的，如果你也需要，可以收藏这个网页</p></blockquote><span id="more"></span><p><a href="https://kodo-toolbox.qiniu.com/kodo-browser-Windows-x64-v1.0.15.zip">七牛对象存储图形化管理工具</a></p><p><a href="https://image.glwsq.cn/software/Obsidian.0.13.19.exe">Obsidian</a></p><p><a href="https://image.glwsq.cn/software/PicGo-Setup-2.3.1-beta.2-x64.exe">PicGo</a></p><p><a href="https://image.glwsq.cn/software/Windows%E7%94%B5%E8%84%91%E5%BC%80%E5%90%AF%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5-RDPW_installer-Black.exe">Windows电脑开启远程桌面连接-RDPW</a></p><p><a href="https://image.glwsq.cn/software/typora_0.11.18_64bit_Setup.exe">typora</a></p><p><a href="https://image.glwsq.cn/software/2345%E5%A5%BD%E5%8E%8B-%E7%BB%BF%E8%89%B2%E6%97%A0%E5%B9%BF%E5%91%8A.exe">2345好压-绿色无广告</a></p><p><a href="https://image.glwsq.cn/software/360%E9%A9%B1%E5%8A%A8%E5%A4%A7%E5%B8%88%E7%BB%BF%E8%89%B2%E5%85%8D%E5%AE%89%E8%A3%85.zip">360驱动大师绿色面安装</a></p><p><a href="https://image.glwsq.cn/software/DiskGeniusPro_x64.zip">DiskGeniusPro_x64</a></p><p><a href="https://image.glwsq.cn/software/Windows%E7%94%B5%E8%84%91%E6%BF%80%E6%B4%BBHEU_KMS_Activator_v24.5.0.zip">Windows电脑激活KMS</a></p><p><a href="https://image.glwsq.cn/software/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE-XMind2020.zip">思维导图-XMind2020</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PicGo配置文件</title>
    <link href="/post/983aebc4/"/>
    <url>/post/983aebc4/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="b0f40ea973abcebf5f71de8f2b76a91e008610397f62a5041cf6a53d2f88ea55">3cda45eb18a6d7e6d918c351ef05b50a240fb22f7c9b5e58f84306002ba41da95e2d42e207fd79f077742887a29aca637aed8c892def585b9e53a85b03083c9164a439c93644d2e27674f5162f1a008c2a70990e44f440e8c3561a8100a51dc821501529c8c0fb557948793ba3d639a8fcae30c8d89cc6a6f28d1df79b1b0ea5dac2eb5c3af66ce3d98c71ba810e86032df789967ede427cae3b3c9b0ff3b95b85ad232defcb73d0a928c28d071f59a6fadde21642a8743eb28d42bd7fb45215d6fe3e2209f50c4cccf97ee3df40a2097e4a2cbcc01bea2e79c790e0ee3499f7994c2b1eb2b158f2a676198ca111edcc3196dd6829957461e676c1f3617a1748f63fb7a6a5026fde80ceac39252082fd54de9afff54a19bdc37ba4dccf9b78b3a8fcce9b1f9198f5f96eca6f70e53547344b5246a4cc57d4a4d22ec361b31a2431d5d2e7925f8c6e54ff9c86d1b40fe54dda79b0bac5b1cb3de7d77be3727bbc593c54ab3a2fe0d08053cbde1d8abac975f9d50cea4a35f61313bfb0d18553dea35bd286a5da8868033610764f3a5cc2f69ad072513860dfd3905666dc672c192c1f04e29b1baa5f3de38464863a8ddc143d77f7f2e84776d52c0534169f0e8e595ec366cf1201d3a1724ab57aad2f04a6a27a0daa77db24594192000a2d6e333e3df0adad860a7ec13e26c6ef1852247a53af443ebd78f4398129d1a1352c40b34ea827ea490b98632908a28931492fe26b7593f3a12ceda4abeeed20d375f428804ea97c6a408a32ec95ba24aee73a2983fa08f4604276789a9a2185fef7937bb4995cb049ae7bd757ba02193dc4660bfc84d434aeee7736eae6dcd795fe82a6e7144017982bb6249676c2b4b9dc2de8c2665785050d81cd1da2a14812674157fac3cf374c49ca2b01dbd938842d4523595cd24df760e10a1137932f4880574fd232d147c281e8e2dd526b19066644a941b0c897a1b68e56ed4e74a93895a67def1846824041663bb871bdb148fd188ee0311997db5ba72e0945479a48a0fbc185e85d513b79555c4dcaf92c0fdfad04814eb479dff4f518521fed8b2831f6084b37ea764562eb345b2693ce46a714003a65b7e0689d2fc96ee3464336a28801ab470af8db7381a1068a16fd580a2c85458a364ce8ba1b509c062b0bf5eaa6113490bbab2438b29509be068ba7dddfda16e58dd134a6ad380bdf2295591a02a595fe4e12c0518bd2bb61a1bf0704c3c3503b5ac9e650ee3824f74448b6cfd9367d4a17c9b79654f14bf4f232b38648924523ec781fc7ee28b9d3ed4e32382ad52d4a4b9f8f4cb116e7f0ced05c2466e4ed25f7b1c9cad8d15e9b4a3f53fbe41d34e6729ff2134bf1af2df996ee23fba8e78fdcfd8d5deac9333e32e469bc0df55b5b2301d36e966b2f38cd2ce7366c9bcda5de61f3d10086a16d771ea283c24941322ef3476a4638fea0d9cd166e60d512a0f1bfc0ce7edb08018950f5109b9713801ebb97b8dbddd6f8a8d055654f3a316de3f17c20c6a68ec978c636a3dff408ee489c0ab2385b9fd45a57c5bcfc2cb40f79ed8d15d096e6e762791faad9a079a876c7edd5b741a24f8ebe7dcb62e4df9fb83ac59b1ba28620992c8c4a180ae04b7433e38ce5119676351bbebd3052dc07d532a15b19fa90a15e3f939be1ad8d7eb18e37f48ffa77c4a893499b6537a3a086f48ab1d4683643e22f413bd4baff3aee191653f7a28f51890a58e3eadd9929bd37f2433f82357aef0c18b90e85ff1511fccddfa1f5d49aa45ee977c58154ae42b8610d2d8affa412df11d4d048eb77f0040d73c401b07c5d2208cf710f875bf22b22ec1d44cca6e045635967ae7dcd607c72119c97c477847d00c8ad01e0b639907545d480ca9587d1b3aa2661f025f04af99b5041dd3f1b4a1a255d6a8cc01e56a5ed366da3466677a1cb611d39ad34d7fa95708cc40ea7cfd8ab9deda39f6c6dd5b6eb3132d0a102641c54bcfce67a053c9b01b7c184593e5ab3a68db92e39c037baa48723831e27db224fa85e9ae577563564048ee9e556d5ef8a54569a30609421a44abc4499a683db23b24804999f17f107e40cceb6fd6f0f13ef3eb637b373ef5868545dd120f6968e7b698e8ea51017e8a7d76c4a1d5911e3c673708d2f9360a37d273b6c29b8becd7daceb5eff8777d7331c3c7de2b9ab6fe5f972ff19071b781417e2182e37cd28c70eabf68570a7fba990a1ed1e782a783db85661946b47b6729464c47b933096e7e4b97006236ed260b3668a8664419f06769f812538ab0a8954e438e842ab45309ba16d2742a88e22e57b659fa54439bc5f4ec0be82f1bbc4417beb507d4cee878cb6f5062e52ce7827c001bd22b260fb26f1ca130a06fa48479a86decb29759d351951f0762c72ddb1874e255bb3acf6984f5b7d600a0f6e216aed3017f72c0ffd4d69c1465b48d3f262e7d6a4c5f2386187f5329f332fdeb2b819b3b5a883dd1fb667518df3bfcd8efd88c67135d157e877e32e3d0caeee7ea400c60832bb6bfb5b415e4fa09418ffaa422df4821fe200561918430ec865eafb7e4a3abcb5d09d3368a6192cd80fba693e323263e99417cb9ded13f8d49d2c01ee5ac20971f1d49fc5170bc8bf93366a7303a34d0ff02f85af9b0adeb94939c253a4456920d54efa863643415ea7e55c9ac84a4144caa6bdfb4f86bcda71b55980d3f56c33b3745a218cb01836145e1fefba2b77cbf29eba6994a394baee857ac99612d00742d9cb834ed21c593d8606bce8472dcd5c12d40f2c0e2eb0c6472290da15795ee06d1769b12e570c99a5b25a05b029c9b99ac939db1f827d03ba249605d7a3962f24648ad2257c4335412adfc0b5ad0fc0d42804b687c912ef9413b3b597edb528e87e0fe81c49d65f2c578764e73097</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>个人文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>个人文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>js爬虫神器puppeteer</title>
    <link href="/post/8e59b288/"/>
    <url>/post/8e59b288/</url>
    
    <content type="html"><![CDATA[<p>今天无意中发现一个js的爬虫神器，然后稍微学习了一下，感觉可以用来干很多事情。</p><span id="more"></span><p>一句话总结一下：这个就是一个浏览器，可以用来干浏览器能干的事情，可以爬取<strong>动态网页</strong>上的内容。</p><p>我感觉跟python的selenium很像，但是这个puppeteer是谷歌出的，感觉会更厉害吧，毕竟用的就是chromium内核。</p><p>之前想找一个网页预览截图的api，找到了几个外国的，但是非常不稳定，用这个轻轻松松写出来了。</p><p>先放一下官方文档，个人感觉，跟着官方文档学习是一个很好的学习方法。</p><p><a href="https://zhaoqize.github.io/puppeteer-api-zh_CN/#/">https://zhaoqize.github.io/puppeteer-api-zh_CN/#/</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>首先肯定需要安装一下puppeteer的npm包</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> i puppeteer<br></code></pre></td></tr></table></figure><h2 id="入门案例"><a href="#入门案例" class="headerlink" title="入门案例"></a>入门案例</h2><p>跳转到 <a href="https://www.glwsq.cn/">https://www.glwsq.cn</a> 并保存截图至 glwsq.png:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> puppeteer = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;puppeteer&#x27;</span>);<br><br>(<span class="hljs-keyword">async</span> () =&gt; &#123;<br>  <span class="hljs-keyword">const</span> browser = <span class="hljs-keyword">await</span> puppeteer.launch(&#123;<span class="hljs-attr">headless</span>:<span class="hljs-literal">true</span>&#125;); <span class="hljs-comment">// headless:true表示后台运行浏览器</span><br>  <span class="hljs-keyword">const</span> page = <span class="hljs-keyword">await</span> browser.newPage();<br>  page.setViewport(&#123;<span class="hljs-attr">width</span>: <span class="hljs-number">1280</span>, <span class="hljs-attr">height</span>: <span class="hljs-number">720</span>&#125;) <span class="hljs-comment">// 设置窗口分辨率</span><br>  <span class="hljs-keyword">await</span> page.goto(<span class="hljs-string">&#x27;https://www.glwsq.cn&#x27;</span>);<br>  <span class="hljs-keyword">await</span> page.screenshot(&#123;<span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;glwsq.png&#x27;</span>&#125;);<br><br>  <span class="hljs-keyword">await</span> browser.close();<br>&#125;)();<br></code></pre></td></tr></table></figure><p>在页面中执行js脚本，相当于在浏览器的控制台中输入js代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> puppeteer = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;puppeteer&#x27;</span>);<br><br>(<span class="hljs-keyword">async</span> () =&gt; &#123;<br>  <span class="hljs-keyword">const</span> browser = <span class="hljs-keyword">await</span> puppeteer.launch();<br>  <span class="hljs-keyword">const</span> page = <span class="hljs-keyword">await</span> browser.newPage();<br>  <span class="hljs-keyword">await</span> page.goto(<span class="hljs-string">&#x27;https://example.com&#x27;</span>);<br><br>  <span class="hljs-comment">// Get the &quot;viewport&quot; of the page, as reported by the page.</span><br>  <span class="hljs-keyword">const</span> dimensions = <span class="hljs-keyword">await</span> page.evaluate(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> &#123;<br>      <span class="hljs-attr">width</span>: <span class="hljs-built_in">document</span>.documentElement.clientWidth,<br>      <span class="hljs-attr">height</span>: <span class="hljs-built_in">document</span>.documentElement.clientHeight,<br>      <span class="hljs-attr">deviceScaleFactor</span>: <span class="hljs-built_in">window</span>.devicePixelRatio<br>    &#125;;<br>  &#125;);<br><br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Dimensions:&#x27;</span>, dimensions);<br><br>  <span class="hljs-keyword">await</span> browser.close();<br>&#125;)();<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>王道操作系统学习总结</title>
    <link href="/post/operating-system-note/"/>
    <url>/post/operating-system-note/</url>
    
    <content type="html"><![CDATA[<p>记录在学习操作系统这门课的过程中的知识点，方便复习，看的视频是王道考研的视频，正在学习…..</p><span id="more"></span><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><h3 id="第一章计算机系统概述"><a href="#第一章计算机系统概述" class="headerlink" title="第一章计算机系统概述"></a>第一章计算机系统概述</h3><ul><li><input checked="" disabled="" type="checkbox"> 1.1.1操作系统的概念、功能</li><li><input checked="" disabled="" type="checkbox"> 1.1.2操作系统的特征</li><li><input checked="" disabled="" type="checkbox"> 1.2操作系统的发展与分类</li><li><input checked="" disabled="" type="checkbox"> 1.3.1操作系统的运行机制</li><li><input checked="" disabled="" type="checkbox"> 1.3.2中断和异常<ul><li>中断：是让操作系统夺回CPU使用权的唯一途径</li><li>内中断：又称异常，与当前执行的指令有关，中断信号来源于CPU内部</li><li>陷入指令：应用程序想请求操作系统内核的服务，不是特权指令</li><li>系统调用是用陷入指令来完成的</li><li>外中断：又称中断，与当前执行的指令无关，中断信号来源于CPU外部</li><li>时钟中断：是外中断，由时钟部件发送，实现分时操作系统的必备硬件</li></ul></li><li><input checked="" disabled="" type="checkbox"> 1.3.3系统调用<ul><li>系统调用：应用程序可以通过汇编语言直接请求系统调用，现在是使用库函数，然后库函数去调用系统调用</li><li>系统调用使用场景：凡是与共享资源有关的操作（如存储分配、文件管理、I/O操作），都必须通过系统调用的方式向操作系统内核提出服务请求。</li><li>陷入指令=trap指令=访管指令</li></ul></li><li><input checked="" disabled="" type="checkbox"> 1.4操作系统的体系结构</li><li><input checked="" disabled="" type="checkbox"> 第一章知识点回顾</li></ul><h3 id="第二章进程管理"><a href="#第二章进程管理" class="headerlink" title="第二章进程管理"></a>第二章进程管理</h3><ul><li><input checked="" disabled="" type="checkbox"> 2.1.1进程的概念、组成、特征<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-22-11-55-41.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.1.2进程的状态与转换、进程的组织<details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-02-06-20-06-49.png"></p></details></li><li><input checked="" disabled="" type="checkbox"> 2.1.3进程控制<ul><li>进程的控制就是实现进程间的切换。</li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.1.4进程通信<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-22-15-24-15.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.1.5线程的概念<ul><li>线程的引入解决了一个QQ同时视频聊天和文字聊天的需求</li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.1.6线程的实现方式和多线程模型<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-22-15-58-43.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.1调度的概念、层次<details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-02-06-20-07-19.png" alt="三层调度的联系、对比"><br><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-22-16-07-28.png" alt="处理机调度"></p></details></li><li><input checked="" disabled="" type="checkbox"> 2.2.2进程调度的时机、切换与过程、方式<details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-02-06-20-22-59.png"></p></details></li><li><input checked="" disabled="" type="checkbox"> 2.2.3调度算法的评价指标<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-22-16-30-07.png" alt="调度算法的评价指标"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.4FCFS、SJF、HRRN调度算法<ul><li>先来先服务算法</li><li>最短作业优先 每当有进程加入就绪队列改变时就需<br>要调度，如果新到达的进程剩余时间比当前运行的进程剩余时<br>间更短，则由新进程抢占处理机</li><li>高响应比优先 </li><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-08-55-23.png" alt="先来先服务算法"><br><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-08-56-08.png" alt="短作业优先"><br><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-08-57-15.png" alt="高响应比优先"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.5调度算法：时间片轮转、优先级、多级反馈队列<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-08-58-58.png" alt="时间片轮转"><br><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-09-02-09.png" alt="优先级调度算法"><br><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-09-03-19.png" alt="多级反馈队列调度算法"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.1进程同步、进程互斥<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-09-10-24.png" alt="同步互斥"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.2进程互斥的软件实现方法<ul><li>单标志法</li><li>双标志先检查</li><li>双标志后检查</li><li>Peterson算法</li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.3进程互斥的硬件实现方法<ul><li>中断屏蔽方法</li><li>TestAndSet(TS指令/TSL指令)</li><li>Swap指令</li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.4信号量机制<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-09-53-22.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.5用信号量实现进程互斥、同步、前驱关系<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-10-05-58.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.6生产者-消费者问题<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-10-37-38.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.7多生产者-多消费者问题<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-10-40-53.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.8吸烟者问题<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-10-43-17.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.9读者写者问题<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-11-11-03.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.10哲学家进餐问题<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-11-21-53.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.11管程<ul><li>就是编程语言提供了一个功能，可以很方便的实现同步问题，不再用P和V来控制同步了，省去了编程的麻烦。</li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.4.1死锁的概念<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-15-38-35.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.4.2预防死锁<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-15-39-11.png"></p></details></li></ul></li><li><input disabled="" type="checkbox"> 2.4.3避免死锁(银行家算法)</li><li><input disabled="" type="checkbox"> 2.4.4死锁的检测和解除</li></ul><h3 id="第三章内存管理"><a href="#第三章内存管理" class="headerlink" title="第三章内存管理"></a>第三章内存管理</h3><ul><li><input disabled="" type="checkbox"> 3.1.1内存的基础知识</li><li><input disabled="" type="checkbox"> 3.1.2内存管理的概念</li><li><input disabled="" type="checkbox"> 3.1.3覆盖与交换</li><li><input disabled="" type="checkbox"> 3.1.4连续分配管理方式</li><li><input disabled="" type="checkbox"> 3.1.5动态分区分配算法</li><li><input disabled="" type="checkbox"> 3.1.6基本分页存储管理的概念</li><li><input disabled="" type="checkbox"> 3.1.7基本地址变换机构</li><li><input disabled="" type="checkbox"> 3.1.8具有快表的地址变换机构</li><li><input disabled="" type="checkbox"> 3.1.9两级页表</li><li><input disabled="" type="checkbox"> 3.1.10基本分段存储管理</li><li><input disabled="" type="checkbox"> 3.1.11段页式管理方式</li><li><input disabled="" type="checkbox"> 3.2_1_虚拟内存的基本概念</li><li><input disabled="" type="checkbox"> 3.2_2_请求分页管理方式</li><li><input disabled="" type="checkbox"> 3.2_3_页面置换算法</li><li><input disabled="" type="checkbox"> 3.2_4_页面分配策略、抖动、工作集</li></ul><h3 id="第四章文件管理"><a href="#第四章文件管理" class="headerlink" title="第四章文件管理"></a>第四章文件管理</h3><ul><li><input disabled="" type="checkbox"> 4.1.1初识文件管理</li><li><input disabled="" type="checkbox"> 4.1.2文件的逻辑结构</li><li><input disabled="" type="checkbox"> 4.1.3文件目录</li><li><input disabled="" type="checkbox"> 4.1.4文件保护</li><li><input disabled="" type="checkbox"> 4.1.5文件共享</li><li><input disabled="" type="checkbox"> 4.2.1文件实现（上）</li><li><input disabled="" type="checkbox"> 4.2.2文件实现（下）</li><li><input disabled="" type="checkbox"> 4.2.3逻辑结构V.S.物理结构</li><li><input disabled="" type="checkbox"> 4.2.4文件存储空间管理</li><li><input disabled="" type="checkbox"> 4.2.5文件的基本操作</li><li><input disabled="" type="checkbox"> 4.2.6文件系统的层次结构</li><li><input disabled="" type="checkbox"> 4.3.1磁盘的结构</li><li><input disabled="" type="checkbox"> 4.3.2磁盘调度算法</li><li><input disabled="" type="checkbox"> 4.3.3减少磁盘延迟时间的方法</li><li><input disabled="" type="checkbox"> 4.3.4磁盘的管理</li></ul><h3 id="第五章输入输出（IO）管理"><a href="#第五章输入输出（IO）管理" class="headerlink" title="第五章输入输出（IO）管理"></a>第五章输入输出（IO）管理</h3><ul><li><input disabled="" type="checkbox"> 5.1.1IO设备的概念和分类</li><li><input disabled="" type="checkbox"> 5.1.2IO控制器</li><li><input disabled="" type="checkbox"> 5.1.3IO控制方式</li><li><input disabled="" type="checkbox"> 5.1.4IO软件层次结构</li><li><input disabled="" type="checkbox"> 5.2_1_I-O核心子系统</li><li><input disabled="" type="checkbox"> 5.2_2_假脱机技术</li><li><input disabled="" type="checkbox"> 5.2_3_设备的分配与回收</li><li><input disabled="" type="checkbox"> 5.2_4_缓冲区管理</li></ul><h2 id="第一章计算机系统概述-1"><a href="#第一章计算机系统概述-1" class="headerlink" title="第一章计算机系统概述"></a>第一章计算机系统概述</h2><h3 id="知识大框架"><a href="#知识大框架" class="headerlink" title="知识大框架"></a>知识大框架</h3><p><img src="https://image.glwsq.cn/img/202201251207417.png"></p><h3 id="操作系统运行机制在中国古代的应用"><a href="#操作系统运行机制在中国古代的应用" class="headerlink" title="操作系统运行机制在中国古代的应用"></a>操作系统运行机制在中国古代的应用</h3><p><img src="https://image.glwsq.cn/img/202201251208004.png"></p><h3 id="特权指令和非特权指令"><a href="#特权指令和非特权指令" class="headerlink" title="特权指令和非特权指令"></a>特权指令和非特权指令</h3><p><img src="https://image.glwsq.cn/img/202201251212234.png"></p><p><img src="https://image.glwsq.cn/img/202201251217574.png"></p><h3 id="内核态切换到用户态"><a href="#内核态切换到用户态" class="headerlink" title="内核态切换到用户态"></a>内核态切换到用户态</h3><p><img src="https://image.glwsq.cn/img/202201251220736.png"></p><h3 id="用户态切换到内核态"><a href="#用户态切换到内核态" class="headerlink" title="用户态切换到内核态"></a>用户态切换到内核态</h3><h4 id="异常的方式"><a href="#异常的方式" class="headerlink" title="异常的方式"></a>异常的方式</h4><p><img src="https://image.glwsq.cn/img/202201251221358.png"></p><h4 id="系统调用的方式"><a href="#系统调用的方式" class="headerlink" title="系统调用的方式"></a>系统调用的方式</h4><p><img src="https://image.glwsq.cn/img/202201251221724.png"></p><h4 id="中断的方式"><a href="#中断的方式" class="headerlink" title="中断的方式"></a>中断的方式</h4><p><img src="https://image.glwsq.cn/img/202201251222740.png"></p>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>百度网盘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>正在学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ps修图记录</title>
    <link href="/post/42a7d7b8/"/>
    <url>/post/42a7d7b8/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="a685fbbb709fcc3e13ef255aa64ef82dab6dae5c3c5730497474c196c1a45a05">3cda45eb18a6d7e6d918c351ef05b50a59b4b1b3c645f92f1a57f9b3725e6f64ecf77cc655002357c2421d84be22ef38b1161b7697aab74c97994970d17c015d4e4d55c52e33dcabdd0a51e0cf9f36f3a92c54bd98203c496774776c2fb652055a95afbc6ad7a862228b93c40e5c1adbdef81504bb04b9b01b40080b46fa8ad8e08c8dd13a9ee9c7d141ae43a95acce82435f18aaa5c4bc82a55a5811d98403e1200316e997ca7def7679690961b5520a5a37841275eb9a45fd4299857ef4965bd91cdd204a336fc5a1c39764923fcc66c8578c8535ebf59a2a41e788219111349870c4347cfd9c705767e2c92dc3d594c0f6b76b24fca738587db5660afa2bcfc989a9ca8e006bd0e0ea99f65c2c75e74e026a7690601999f2ac405eb5f7a8a607fd1fb3a889cd93c7a7e908eaaa91e25376d0dfa32ddf1ab44e74fb1d64b512e467c97f192367cb5191d1f0e371839bc237fa04877d50ef5920a07d8ea2aeb9f07e36e084baaeb51000474fbbc0af6fd4b82d3f97ca9b99e02882a27a5d5c7c671fd6e51f0a26820c6099d3373c9dc8fee2164c372231836c538d18420babb3e6b2f83c77357e6892e4a9cc3adadd1b096ee068f612eaa9cc62883d5ccac0bc229c7bb8b560bc1db93138df156b428f5560589677742901c3a2dc91e8b0aac71d2cbe6ee27431b2527cf4af028a4205ec67562c87bf2f77bf8a367338d79f081849fb31a394d1ad82cf9efee4c4939e2addfbdcd368c36a2011f2932938e168f1e145f37eb2a47ffbfe8a936a4109885d067c668a7019dc15d473e692f028af2a66e31def718c6bc9f8ef595c5c6068bd97a114ef7a560b6015f8648d81f2f9b0714f42bb56f57a572ec6a0cfde71955b983cbd584b64cec3256300f00cbe10a21af9ed5bf89094867e927e7a5a5224fb51fa72097cd8ea31d9ccd2d17be97</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>个人文章</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>一天一个诈骗小技巧，让你一夜暴负</title>
    <link href="/post/swindle01/"/>
    <url>/post/swindle01/</url>
    
    <content type="html"><![CDATA[<h2 id="从一封邮件开始"><a href="#从一封邮件开始" class="headerlink" title="从一封邮件开始"></a>从一封邮件开始</h2><p>2022年1月18日QQ邮箱突然收到一个信息，还是一个GitHub邮箱，邮箱地址：<a href="mailto:&#x6e;&#111;&#116;&#x69;&#x66;&#105;&#99;&#97;&#116;&#105;&#111;&#x6e;&#x73;&#64;&#103;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#x63;&#111;&#109;">&#x6e;&#111;&#116;&#x69;&#x66;&#105;&#99;&#97;&#116;&#105;&#111;&#x6e;&#x73;&#64;&#103;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#x63;&#111;&#109;</a>，内容如下</p><p><img src="https://image.glwsq.cn/img/202201230959886.png" alt="收到的邮件截图"></p><h2 id="小赚一笔"><a href="#小赚一笔" class="headerlink" title="小赚一笔"></a>小赚一笔</h2><p>抱着看看他们如何骗人的心态加了这个人，同意好友以后会被拉入一个临时群。每半小时做一单任务，抖音点赞截图支付宝提现，这个确实很真，做完截图发给他，几分钟钱就到账了，总共三单3块钱，然后让你下载ParroT,R这软件关注福利员，关注这个是15块钱佣金。</p><p><img src="https://image.glwsq.cn/img/202201231015765.jpg" alt="3块钱一单，轻轻松松"></p><p><img src="https://image.glwsq.cn/img/202201231017926.jpg" alt="下个app就能赚15"></p><p><img src="https://image.glwsq.cn/img/202201231019789.jpg" alt="目前的收入截图"></p><h2 id="开始大赚"><a href="#开始大赚" class="headerlink" title="开始大赚"></a>开始大赚</h2><p>到目前为止已经赚了24了。下载ParroT,R注册关注福利员后，会被拉入一个新人群做几单任务，不过任务变成了淘宝订阅。每半小时一单几单后会被拉入正式群。他们这些人很守时每半小时一单，一单3块钱，这不一会儿外卖钱就有了。</p><p><img src="https://image.glwsq.cn/img/202201231024386.jpg" alt="开始在第三方app里赚钱"></p><blockquote><p>我现在已经被封了，不让说话，这个一会儿说原因</p></blockquote><h2 id="一单三块钱嫌少？"><a href="#一单三块钱嫌少？" class="headerlink" title="一单三块钱嫌少？"></a>一单三块钱嫌少？</h2><p>群里开启了晋升任务，要是能晋升到最后，关注一个淘宝店11块钱，一天关注他20个，想想都美好，这还考什么研究生，上什么学，打什么工，直接原地暴富。</p><p>最关键是打赏的越多赚的越多，打赏5000，赚6500，这更是原地起飞，天天躺着玩手机就行了。</p><p><img src="https://image.glwsq.cn/img/202201231029661.jpg"></p><p><img src="https://image.glwsq.cn/img/202201231035592.jpg"></p><h2 id="问题没这么简单"><a href="#问题没这么简单" class="headerlink" title="问题没这么简单"></a>问题没这么简单</h2><p>我刚开始想的，一单三块就三块，我就是不晋升，万一发给他钱了直接跑路了怎么办，而且他们也很“正规”，就是不主动来让我晋升。</p><p>群里一直有人在秀自己赚钱的截图，因为他们的要求就是你的钱到账了，必须在群里发截图。他们给的理由是群里有商家，需要让商家看。所以都是到账了主动在群里发截图，诱惑极大。群里也一直有人问怎么晋升，而且转好几千的人大有人在。</p><p><img src="https://image.glwsq.cn/img/202201231112850.jpg" alt="群里别人发的截图"></p><p>我就想着不晋升，默默地赚小钱，3块钱也是钱。但是好景不长，第三天提现的时候就不让提现了，必须打赏。</p><p><img src="https://image.glwsq.cn/img/202201231056852.jpg" alt="开始吃人了"></p><p>打赏最低100元，我到现在还没赚够100，就让我打赏这么多，而且用的软件都是他提供的，这个时候我就想把刚刚的聊天记录发到群里面，让他们少上当，然而我已经没办法在群里说话了。</p><p>能想象到，有些人转给她好多钱，然后被直接禁言不让提现，想提现必须打赏更多钱，到底打赏多少给你提现，完全看骗子的心情，感觉你这个羊毛薅完了，就直接删人，真的是叫天天不应，叫地地不灵。</p><h2 id="被骗统计"><a href="#被骗统计" class="headerlink" title="被骗统计"></a>被骗统计</h2><blockquote><p>因为我小心谨慎，没有被骗，反而还赚了一点</p></blockquote><p>稍微搜一搜，网上确实很多人被骗，相关的截图如下</p><p><img src="https://image.glwsq.cn/img/202201231048586.png"></p><p><img src="https://image.glwsq.cn/img/202201231049646.png"></p><p><img src="https://image.glwsq.cn/img/202201231049184.png"></p><h2 id="他们太正规了"><a href="#他们太正规了" class="headerlink" title="他们太正规了"></a>他们太正规了</h2><p>感觉他们有一套完整的规范，必须是他们发过邮件的人，才会让你进群，才能进行下一步的操作，而且群里面的人太守时了，说几点开始发任务就发任务，一点都不拖拉。都是受过专业培训的人。</p>]]></content>
    
    
    <categories>
      
      <category>心得体会</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何拥有一个自己的博客</title>
    <link href="/post/own-hexo-blog/"/>
    <url>/post/own-hexo-blog/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>按照这个教程一步一步的执行，就可以搭建一个属于自己的博客</p>          </div><span id="more"></span><h2 id="一、用到的技能"><a href="#一、用到的技能" class="headerlink" title="一、用到的技能"></a>一、用到的技能</h2><p>git 基本用法<br>GitHub 使用<br>nodejs 基本用法</p><h2 id="二、相关软件安装"><a href="#二、相关软件安装" class="headerlink" title="二、相关软件安装"></a>二、相关软件安装</h2><blockquote><p>点击下载的链接都是我找速度非常快的链接，可以直接点击下载</p></blockquote><h3 id="1-git"><a href="#1-git" class="headerlink" title="1. git"></a>1. git</h3><p>用来管理自己的文章，如果你是程序员就不用我过多介绍了。</p><p>如果不是程序员，可以理解为是一个类似于百度网盘的客户端</p><p><a href="https://dl.softmgr.qq.com/original/Development/Git-2.34.0-64-bit.exe">点击下载</a></p><p>安装的时候一路next就可以了</p><h3 id="2-nodejs"><a href="#2-nodejs" class="headerlink" title="2. nodejs"></a>2. nodejs</h3><p>是一个基础的软件，相当于是java的jdk运行环境，这个软件的npm命令用来安装对应的插件</p><p><a href="https://webcdn.m.qq.com/spcmgr/download/node-v16.13.1-x64.msi">点击下载</a></p><p>安装的时候一路next就可以了</p><h2 id="三、设置代理"><a href="#三、设置代理" class="headerlink" title="三、设置代理"></a>三、设置代理</h2><p>很多软件都是国外的，速度比较慢，所以需要配置镜像或者代理</p><h4 id="1-加速GitHub"><a href="#1-加速GitHub" class="headerlink" title="1. 加速GitHub"></a>1. 加速GitHub</h4><p>GitHub访问本来很慢，但是最近发现了uu加速器可以进行加速，只需要下载，然后选择【学术资源】加速就可以了</p><p>现在就可以下载好开启加速</p><p><a href="https://uu.gdl.netease.com/4027/UU-4.15.0.exe">点击下载uu加速器</a></p><p><img src="https://image.glwsq.cn/img/202201201740818.png"></p><h4 id="2-加速nodejs"><a href="#2-加速nodejs" class="headerlink" title="2. 加速nodejs"></a>2. 加速nodejs</h4><p>首先按 win + r 按键打开运行命令框，输入cmd</p><p><img src="https://image.glwsq.cn/img/202201201801759.png"></p><p>然后直接复制粘贴下面的内容</p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 设置淘宝镜像</span><br>npm config set registry https://registry.npm.taobao.org<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 查看是否设置成功，如果显示的是 https://registry.npm.taobao.org/ 就说明成功了</span><br>npm config get registry<br></code></pre></td></tr></table></figure><h2 id="四、相关插件安装"><a href="#四、相关插件安装" class="headerlink" title="四、相关插件安装"></a>四、相关插件安装</h2><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>这个是博客插件，需要nodejs的支持</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-cli -g<br></code></pre></td></tr></table></figure><p>官方文档，现在可以先不看：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p><h2 id="五、建立博客文件夹"><a href="#五、建立博客文件夹" class="headerlink" title="五、建立博客文件夹"></a>五、建立博客文件夹</h2><p>随便打开一个文件夹</p><p><img src="https://image.glwsq.cn/img/202201201814908.png"></p><p>然后在这里输入cmd按回车</p><p><img src="https://image.glwsq.cn/img/202201201814476.png"></p><p>在打开的小黑框里面依次输入下面的命令</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">hexo init <span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span>cd <span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span>npm <span class="hljs-keyword">install</span><br><span class="hljs-keyword"></span>hexo server<br></code></pre></td></tr></table></figure><p>执行结果<br><img src="https://image.glwsq.cn/img/202201201900998.png"></p><p>在浏览器打开就可以访问了: <a href="http://localhost:4000/">http://localhost:4000/</a></p><div class="note note-success">            <p>恭喜！！！你的博客已经跑起来了，现在要做的事情就是设置自己的网站和写博客了</p>          </div><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="PicGo图床"><a href="#PicGo图床" class="headerlink" title="PicGo图床"></a>PicGo图床</h3><p>可以更方便的管理自己的博客图片</p><p><a href="https://image.glwsq.cn/software/PicGo-Setup-2.3.1-beta.2-x64.exe">点击下载</a></p><p>recommend</p>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo插件推荐</title>
    <link href="/post/hexo-plugins/"/>
    <url>/post/hexo-plugins/</url>
    
    <content type="html"><![CDATA[<p>自己用的很好的hexo插件推荐，推荐指数按照顺序排列</p><h2 id="hexo-excerpt-block-更优雅的控制文章摘要"><a href="#hexo-excerpt-block-更优雅的控制文章摘要" class="headerlink" title="hexo-excerpt-block 更优雅的控制文章摘要"></a>hexo-excerpt-block 更优雅的控制文章摘要</h2><blockquote><p>这个很好用，强烈推荐</p></blockquote><p>如果用系统自带的<code>&lt;!--more--&gt;</code>来截取摘要，只能截取文章的最前面，很不友好，这个插件就能很好的解决这个问题。</p><p>可以把文章任意位置的任意文字截取正摘要，还不影响文章的结构样式。</p><blockquote><p><a href="https://github.com/ALiangLiang/hexo-excerpt-block">https://github.com/ALiangLiang/hexo-excerpt-block</a></p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">npm install --save hexo-excerpt-block<br></code></pre></td></tr></table></figure><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs md">---<br><span class="hljs-section">title: 自己文章</span><br><span class="hljs-section">---</span><br><span class="hljs-section">## 先有个标题</span><br><br>&lt;!-- block --&gt;<br>这里是摘要<br>&lt;!-- block --&gt;<br><br>文章的其他内容<br></code></pre></td></tr></table></figure><p>会渲染为:</p><hr><h3 id="先有个标题"><a href="#先有个标题" class="headerlink" title="先有个标题"></a>先有个标题</h3><p>这里是摘要<br>文章的其他内容</p><hr><h2 id="hexo-draft-tags-隐藏文章中的内容"><a href="#hexo-draft-tags-隐藏文章中的内容" class="headerlink" title="hexo-draft-tags 隐藏文章中的内容"></a>hexo-draft-tags 隐藏文章中的内容</h2><blockquote><p>强烈推荐，相当于在文章中插入一个草稿区域，别人不可见</p></blockquote><p><a href="https://github.com/CallumHewitt/hexo-draft-tags">https://github.com/CallumHewitt/hexo-draft-tags</a></p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="xml">这里是正文内容</span><br><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">draft</span> %&#125;</span><span class="xml"></span><br><span class="xml"></span><br><span class="xml">临时写点草稿，可以等到完全写完以后再去掉草稿标签</span><br><span class="xml">也可以运行服务器的时候查看 hexo server --draft</span><br><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">enddraft</span> %&#125;</span><span class="xml"></span><br><span class="xml"></span><br><span class="xml">这里是正文内容</span><br></code></pre></td></tr></table></figure><h2 id="hexo-tag-details-在文章中插入折叠展开区域"><a href="#hexo-tag-details-在文章中插入折叠展开区域" class="headerlink" title="hexo-tag-details 在文章中插入折叠展开区域"></a>hexo-tag-details 在文章中插入折叠展开区域</h2><blockquote><p>如果有需求，这个也比较好用</p></blockquote><p><a href="https://github.com/hinastory/hexo-tag-details">https://github.com/hinastory/hexo-tag-details</a></p><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><details><summary>点击</summary><p>展开了</p></details><details open="open"><summary>What food do you like?</summary><ol><li>Sushi</li><li>Tempura</li><li>Sukiyaki</li></ol></details><h3 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h3><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">details</span> 点击 %&#125;</span><span class="xml"></span><br><span class="xml"></span><br><span class="xml">展开了</span><br><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">enddetails</span> %&#125;</span><span class="xml"></span><br><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">details</span> mode:open What food do you like? %&#125;</span><span class="xml"></span><br><span class="xml"></span><br><span class="xml">1. Sushi</span><br><span class="xml">2. Tempura</span><br><span class="xml">3. Sukiyaki</span><br><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">enddetails</span> %&#125;</span><br></code></pre></td></tr></table></figure><h2 id="hexo-blog-encrypt-文章加密"><a href="#hexo-blog-encrypt-文章加密" class="headerlink" title="hexo-blog-encrypt 文章加密"></a>hexo-blog-encrypt 文章加密</h2><blockquote><p>这个插件必须开启https才可以正常使用</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save hexo-blog-encrypt<br></code></pre></td></tr></table></figure><p>说明文档: <a href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md">https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md</a></p><h3 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Hello</span> <span class="hljs-string">World</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2016-03-30 21:18:02</span><br><span class="hljs-attr">password:</span> <span class="hljs-string">hello</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><h3 id="更详细的配置-config-yml"><a href="#更详细的配置-config-yml" class="headerlink" title="更详细的配置 _config.yml"></a>更详细的配置 _config.yml</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Security</span><br><span class="hljs-attr">encrypt:</span> <span class="hljs-comment"># hexo-blog-encrypt</span><br>  <span class="hljs-attr">abstract:</span> <span class="hljs-string">有东西被加密了,</span> <span class="hljs-string">请输入密码查看.</span><br>  <span class="hljs-attr">message:</span> <span class="hljs-string">您好,</span> <span class="hljs-string">这里需要密码.</span><br>  <span class="hljs-attr">tags:</span><br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">tagName</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">密码A</span>&#125;<br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">tagName</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">密码B</span>&#125;<br>  <span class="hljs-attr">wrong_pass_message:</span> <span class="hljs-string">抱歉,</span> <span class="hljs-string">这个密码看着不太对,</span> <span class="hljs-string">请再试试.</span><br>  <span class="hljs-attr">wrong_hash_message:</span> <span class="hljs-string">抱歉,</span> <span class="hljs-string">这个文章不能被校验,</span> <span class="hljs-string">不过您还是能看看解密后的内容.</span><br><br></code></pre></td></tr></table></figure><h2 id="hexo-asset-image-解决开启post-asset-folder后本地无法正常查看图片"><a href="#hexo-asset-image-解决开启post-asset-folder后本地无法正常查看图片" class="headerlink" title="hexo-asset-image 解决开启post_asset_folder后本地无法正常查看图片"></a>hexo-asset-image 解决开启post_asset_folder后本地无法正常查看图片</h2><blockquote><p>这是一款让本地markdown和网页都能正常显示图片的插件，使写文章的体验更好</p></blockquote><p>如果使用VSCode，可以结合我的这一篇文章直接快速的从剪切板插入图片<a href="/post/vscode-paste-image/">VScode中插入剪切板中的图片</a></p><h3 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h3><ol><li>首先确认<code>_config.yml</code> 中有 <code>post_asset_folder:true</code>。<br>Hexo 提供了一种更方便管理 Asset 的设定：post_asset_folder<br>当您设置post_asset_folder为true参数后，在建立文件时，Hexo<br>会自动建立一个与文章同名的文件夹，您可以把与该文章相关的所有资源都放到那个文件夹，如此一来，您便可以更方便的使用资源。</li></ol><p><strong>注意: 必须把_config.yml中的post_asset_folder改为true，这样插入的图片才会被放到和文档一个目录。</strong></p><ol start="2"><li>在hexo的目录下执行<code>npm install hexo-asset-image --save</code>（需要等待一段时间）<a href="https://github.com/xcodebuild/hexo-asset-image">插件的GitHub主页</a></li><li>完成安装后用hexo新建文章的时候会发现_posts目录下面会多出一个和文章名字一样的文件夹。图片就可以放在文件夹下面。结构如下：<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus">图片测试<br>├── apppicker<span class="hljs-selector-class">.jpg</span><br>├── logo<span class="hljs-selector-class">.png</span><br>└── rules<span class="hljs-selector-class">.jpg</span><br>图片测试.md<br></code></pre></td></tr></table></figure></li></ol><p><img src="https://image.glwsq.cn/img/202201202359137.png"></p><p>这样的目录结构（目录名和文章名一致），只要使用 <code>![](图片测试/logo.png)</code> 就可以插入图片。</p><h3 id="可能会出现的问题"><a href="#可能会出现的问题" class="headerlink" title="可能会出现的问题"></a>可能会出现的问题</h3><p><img src="https://image.glwsq.cn/img/202201202359085.png"></p><p>更新图片的时候图片链接截取的不对，这是hexo-asset-image这个插件代码的问题，需要找到博客下这个插件的位置<code>node_modules\hexo-asset-image</code></p><p>打开<code>index.js</code></p><p>找到24行，修改为<code>var endPos = link.length-1; </code>就可以了</p><p><img src="https://image.glwsq.cn/img/202201210000969.png"></p><p><strong>修改完毕后记得重启服务器</strong></p><h2 id="hexo-generator-index2-自定义首页"><a href="#hexo-generator-index2-自定义首页" class="headerlink" title="hexo-generator-index2 自定义首页"></a>hexo-generator-index2 自定义首页</h2><blockquote><p>适合文章太多，并且想精简一下首页文章的情况下使用</p></blockquote><p>如果你在首页只显示某些分类或标签的文章，或者将一些文章生成一个聚合页，那么他适合你。</p><h2 id="hexo-generator-alias-网页重定向"><a href="#hexo-generator-alias-网页重定向" class="headerlink" title="hexo-generator-alias 网页重定向"></a>hexo-generator-alias 网页重定向</h2><blockquote><p>如果你的博客页面路径进行了大的更改并且访问量很大的话，那么建议你使用</p><p>可以给一篇文章设置多个网址，也可以让一篇博客跳到其他网站</p></blockquote><h3 id="一篇文章设置多个网址"><a href="#一篇文章设置多个网址" class="headerlink" title="一篇文章设置多个网址"></a>一篇文章设置多个网址</h3><p>例如我的一篇访问量很大的文章</p><p>我的一篇博客的原地址为: <a href="https://www.glwsq.cn/2020/03/12/174a4435/">https://www.glwsq.cn/2020/03/12/174a4435/</a></p><p>为了让url更好看，现在改为了: <a href="https://www.glwsq.cn/post/vmware-linux/">https://www.glwsq.cn/post/vmware-linux/</a></p><p>但是这样更改会导致原来的链接打开后404，所以可以在这一篇文章加一个属性，让一篇文章拥有两个url</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">alias:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/2020/03/12/174a4435/</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><h3 id="一篇博客跳到另一个网址"><a href="#一篇博客跳到另一个网址" class="headerlink" title="一篇博客跳到另一个网址"></a>一篇博客跳到另一个网址</h3><p>打开文章后跳到百度</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">redirect:</span> <span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><h2 id="hexo-inlucde-markdown-在文章中插入md源文件"><a href="#hexo-inlucde-markdown-在文章中插入md源文件" class="headerlink" title="hexo-inlucde-markdown 在文章中插入md源文件"></a>hexo-inlucde-markdown 在文章中插入md源文件</h2><p>如果你想在某些文章中插入固定的内容，并且方便以后更改的话，这个插件适合你。</p><p>原插件GitHub仓库：<a href="https://github.com/tea3/hexo-include-markdown">https://github.com/tea3/hexo-include-markdown</a></p><p>这个插件开发的时间比较早，有一些小bug，我在下面把bug修改的方法列出来了，如果不想照着修改，可以直接用我修改好的npm包</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> hexo-<span class="hljs-keyword">include</span>-markdown-glwhappen<br></code></pre></td></tr></table></figure><h3 id="第一个bug："><a href="#第一个bug：" class="headerlink" title="第一个bug："></a>第一个bug：</h3><blockquote><p>如果用的我的npm包，可以不用看这个</p></blockquote><p>hexo n 这样的命令执行的时候必须在根目录才可以运行，在其他地方会报错</p><p>只需要找到node_modules下的hexo-include-markdown</p><p>修改lib/orverwriteCache.js</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-6 </span><br><span class="hljs-addition">+6  let globle_hexo = &#123;&#125;</span><br><span class="hljs-deletion">-7   module.exports = ( hexo , option , PLUGIN_NM ) =&gt;</span><br><span class="hljs-addition">+7   module.exports = ( hexo , option , PLUGIN_NM ) =&gt; &#123;</span><br>8      readCacheFile(hexo , option , PLUGIN_NM)<br>...<br>12   .then(orverwriteCache)<br><span class="hljs-deletion">-13 </span><br><span class="hljs-addition">+13     globle_hexo = hexo</span><br><span class="hljs-deletion">-14</span><br><span class="hljs-addition">+14 &#125;</span><br>...<br>18new Promise( (resolve , reject) =&gt; &#123;<br><span class="hljs-deletion">-19  let dbPath = path.join( process.env.PWD || process.cwd() , &quot;db.json&quot; )</span><br><span class="hljs-addition">+19     let dbPath = path.join(hexo.source_dir, &#x27;../&#x27;, &quot;db.json&quot;)</span><br>20  fs.readFile( dbPath , (err , fileData) =&gt; &#123;<br>...<br>143new Promise( (resolve , reject) =&gt; &#123;<br><span class="hljs-deletion">-144let dbPath = path.join( process.env.PWD || process.cwd() , &quot;db.json&quot; )</span><br><span class="hljs-addition">+144let dbPath = path.join(globle_hexo.source_dir, &#x27;../&#x27;, &quot;db.json&quot;)</span><br></code></pre></td></tr></table></figure><p>修改lib/replace.js</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-7 </span><br><span class="hljs-addition">+7 let globle_hexo = &#123;&#125;</span><br>8 module.exports = (data , hexo , option , PLUGIN_NM) =&gt; &#123;<br><span class="hljs-deletion">-9</span><br><span class="hljs-addition">+9 globle_hexo = hexo</span><br>10let tags = data.content.match(/\&lt;\!\-\-\s+?md\s+?.+?\s+?\-\-\&gt;/g)<br>...<br><span class="hljs-deletion">-66let filePath = path.join( process.env.PWD || process.cwd() , option.dir , mdPath )</span><br><span class="hljs-addition">+66let filePath = path.join( globle_hexo.source_dir, &#x27;../&#x27;, option.dir , mdPath )</span><br>67fs.readFile( filePath , (err , fileData) =&gt; &#123;<br></code></pre></td></tr></table></figure><h3 id="第二个bug"><a href="#第二个bug" class="headerlink" title="第二个bug:"></a>第二个bug:</h3><p>hexo clean以后，db.json会删除，导致插件报错，这个时候手动创建就可以了，以后有时间的话我会把这两个bug修改一下，然后提交到npm库，挖个坑</p><h2 id="hexo-insert-markdown-在文章中插入markdown"><a href="#hexo-insert-markdown-在文章中插入markdown" class="headerlink" title="hexo-insert-markdown 在文章中插入markdown"></a>hexo-insert-markdown 在文章中插入markdown</h2><p>目前我没有使用这个插件</p>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>精选文章</tag>
      
      <tag>开发完成</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue学习笔记</title>
    <link href="/post/vue2-note/"/>
    <url>/post/vue2-note/</url>
    
    <content type="html"><![CDATA[<p>在学习Vue的过程中老师记录的笔记，总结一下，以便复习使用</p><span id="more"></span><blockquote><p>尚硅谷Vue2.0+Vue3.0全套教程丨vuejs从入门到精通<br><a href="https://www.bilibili.com/video/BV1Zy4y1K7SH">https://www.bilibili.com/video/BV1Zy4y1K7SH</a></p></blockquote><h2 id="1-初识Vue"><a href="#1-初识Vue" class="headerlink" title="1. 初识Vue"></a>1. 初识Vue</h2><ol><li><p>想让Vue工作，就必须创建一个Vue实例，且要传入一个配置对象；</p></li><li><p>root容器里的代码依然符合html规范，只不过混入了一些特殊的Vue语法；</p></li><li><p>root容器里的代码被称为【Vue模板】；</p></li><li><p>Vue实例和容器是一一对应的；</p></li><li><p>真实开发中只有一个Vue实例，并且会配合着组件一起使用；</p></li><li><p><code>&#123;&#123;xxx&#125;&#125;</code>中的xxx要写js表达式，且xxx可以自动读取到data中的所有属性；</p></li><li><p>一旦data中的数据发生改变，那么页面中用到该数据的地方也会自动更新；</p></li></ol><p><strong>注意区分：js表达式 和 js代码(语句)</strong></p><ol><li>表达式：一个表达式会产生一个值，可以放在任何一个需要值的地方：</li></ol><p>​         (1). a</p><p>​         (2). a+b</p><p>​         (3). demo(1)</p><p>​         (4). x === y ? ‘a’ : ‘b’</p><ol start="2"><li><p>js代码(语句)</p><figure class="highlight haskell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></div></td><td class="code"><pre><code class="hljs haskell">   (<span class="hljs-number">1</span>). <span class="hljs-keyword">if</span>()&#123;&#125;<br>   (<span class="hljs-number">2</span>). for()&#123;&#125;<br><br>​      <br><br><br><br><span class="hljs-meta">## 2. Vue模板语法有2大类</span><br><br><span class="hljs-number">1.</span> 插值语法：<br><br>​       功能：用于解析标签体内容。<br><br>​       写法：`&#123;&#123;xxx&#125;&#125;`，xxx是js表达式，且可以直接读取到<span class="hljs-class"><span class="hljs-keyword">data</span>中的所有属性。</span><br><br><span class="hljs-number">2.</span> 指令语法：<br><br>​       功能：用于解析标签（包括：标签属性、标签体内容、绑定事件.....）。<br><br>​       举例：v-bind:href=<span class="hljs-string">&quot;xxx&quot;</span> 或  简写为 :href=<span class="hljs-string">&quot;xxx&quot;</span>，xxx同样要写js表达式，<br><br>​          且可以直接读取到<span class="hljs-class"><span class="hljs-keyword">data</span>中的所有属性。</span><br><br>​       备注：<span class="hljs-type">Vue</span>中有很多的指令，且形式都是：v-????，此处我们只是拿v-bind举个例子。<br><br><br><br><span class="hljs-meta">## 3. Vue中有2种数据绑定的方式</span><br><br><span class="hljs-number">1.</span> 单向绑定(v-bind)：数据只能从<span class="hljs-class"><span class="hljs-keyword">data</span>流向页面。</span><br><br><span class="hljs-number">2.</span> 双向绑定(v-model)：数据不仅能从<span class="hljs-class"><span class="hljs-keyword">data</span>流向页面，还可以从页面流向<span class="hljs-keyword">data</span>。</span><br><br>&gt; 备注：<br>&gt;<br>&gt; <span class="hljs-number">1.</span> 双向绑定一般都应用在表单类元素上（如：input、select等）<br>&gt;<br>&gt; <span class="hljs-number">2.</span> v-model:value 可以简写为 v-model，因为v-model默认收集的就是value值。<br><br><br><br><span class="hljs-meta">## 4. data与el的2种写法</span><br><br><span class="hljs-number">1.</span> el有<span class="hljs-number">2</span>种写法<br><br>​         (<span class="hljs-number">1</span>).new <span class="hljs-type">Vue</span>时候配置el属性。<br><br>​         (<span class="hljs-number">2</span>).先创建<span class="hljs-type">Vue</span>实例，随后再通过vm.$mount(&#x27;#root&#x27;)指定el的值。<br><br><span class="hljs-number">2.</span> <span class="hljs-class"><span class="hljs-keyword">data</span>有2种写法</span><br><br>​         (<span class="hljs-number">1</span>).对象式<br><br>​         (<span class="hljs-number">2</span>).函数式<br><br>​         如何选择：目前哪种写法都可以，以后学习到组件时，<span class="hljs-class"><span class="hljs-keyword">data</span>必须使用函数式，否则会报错。</span><br><br><span class="hljs-number">3.</span> 一个重要的原则：<br><br>​         由<span class="hljs-type">Vue</span>管理的函数，一定不要写箭头函数，一旦写了箭头函数，this就不再是<span class="hljs-type">Vue</span>实例了。<br><br><br><br><span class="hljs-meta">## 5. MVVM模型</span><br><br><span class="hljs-number">1.</span> <span class="hljs-type">M</span>：模型(<span class="hljs-type">Model</span>) ：<span class="hljs-class"><span class="hljs-keyword">data</span>中的数据</span><br><br><span class="hljs-number">2.</span> <span class="hljs-type">V</span>：视图(<span class="hljs-type">View</span>) ：模板代码<br><br><span class="hljs-number">3.</span> <span class="hljs-type">VM</span>：视图模型(<span class="hljs-type">ViewModel</span>)：<span class="hljs-type">Vue</span>实例<br><br>   观察发现：<br><br><span class="hljs-number">1.</span> <span class="hljs-class"><span class="hljs-keyword">data</span>中所有的属性，最后都出现在了vm身上。</span><br><br><span class="hljs-number">2.</span> vm身上所有的属性 及 <span class="hljs-type">Vue</span>原型上所有属性，在<span class="hljs-type">Vue</span>模板中都可以直接使用。<br><br><br><br><span class="hljs-meta">## 6. Vue中的数据代理：</span><br><br>&gt; 通过vm对象来代理<span class="hljs-class"><span class="hljs-keyword">data</span>对象中属性的操作（读/写）</span><br><br><span class="hljs-number">1.</span> <span class="hljs-type">Vue</span>中数据代理的好处：<br><br>   更加方便的操作<span class="hljs-class"><span class="hljs-keyword">data</span>中的数据</span><br><br><span class="hljs-number">2.</span> 基本原理：<br><br>​       通过<span class="hljs-type">Object</span>.defineProperty()把<span class="hljs-class"><span class="hljs-keyword">data</span>对象中所有属性添加到vm上。</span><br><br>​       为每一个添加到vm上的属性，都指定一个getter/setter。<br><br>​       在getter/setter内部去操作（读/写）<span class="hljs-class"><span class="hljs-keyword">data</span>中对应的属性。</span><br><br>原始方法模拟数据代理<br><br>```js<br>&lt;!<span class="hljs-comment">-- 数据代理：通过一个对象代理对另一个对象中属性的操作（读/写）--&gt;</span><br>&lt;script <span class="hljs-class"><span class="hljs-keyword">type</span>=&quot;text/javascript&quot; &gt;</span><br><span class="hljs-keyword">let</span> obj = &#123;x:<span class="hljs-number">100</span>&#125;<br><span class="hljs-keyword">let</span> obj2 = &#123;y:<span class="hljs-number">200</span>&#125;<br><br><span class="hljs-type">Object</span>.defineProperty(obj2,&#x27;x&#x27;,&#123;<br>get()&#123;<br>return obj.x<br>&#125;,<br>set(value)&#123;<br>obj.x = value<br>&#125;<br>&#125;)<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure></li></ol><h2 id="7-事件处理"><a href="#7-事件处理" class="headerlink" title="7. 事件处理"></a>7. 事件处理</h2><h3 id="1-事件的基本使用："><a href="#1-事件的基本使用：" class="headerlink" title="1. 事件的基本使用："></a>1. 事件的基本使用：</h3><ol><li><p>使用v-on:xxx 或 @xxx 绑定事件，其中xxx是事件名；</p></li><li><p>事件的回调需要配置在methods对象中，最终会在vm上；</p></li><li><p>methods中配置的函数，不要用箭头函数！否则this就不是vm了；</p></li><li><p>methods中配置的函数，都是被Vue所管理的函数，this的指向是vm 或 组件实例对象；</p></li><li><p>@click=”demo” 和 @click=”demo($event)” 效果一致，但后者可以传参；</p></li></ol><h3 id="2-Vue中的事件修饰符："><a href="#2-Vue中的事件修饰符：" class="headerlink" title="2. Vue中的事件修饰符："></a>2. Vue中的事件修饰符：</h3><ol><li><p>prevent：阻止默认事件（常用）；</p></li><li><p>stop：阻止事件冒泡（常用）；</p></li><li><p>once：事件只触发一次（常用）；</p></li><li><p>capture：使用事件的捕获模式；</p></li><li><p>self：只有event.target是当前操作的元素时才触发事件；</p></li><li><p>passive：事件的默认行为立即执行，无需等待事件回调执行完毕；</p></li></ol><h3 id="3-键盘事件"><a href="#3-键盘事件" class="headerlink" title="3. 键盘事件"></a>3. 键盘事件</h3><ol><li>Vue中常用的按键别名：</li></ol><p>​       回车 =&gt; enter</p><p>​       删除 =&gt; delete (捕获“删除”和“退格”键)</p><p>​       退出 =&gt; esc</p><p>​       空格 =&gt; space</p><p>​       换行 =&gt; tab (特殊，必须配合keydown去使用)</p><p>​       上 =&gt; up</p><p>​       下 =&gt; down</p><p>​       左 =&gt; left</p><p>​       右 =&gt; right</p><p>​    2. Vue未提供别名的按键，可以使用按键原始的key值去绑定，但注意要转为kebab-case（短横线命名）</p><p>​    3. 系统修饰键（用法特殊）：ctrl、alt、shift、meta</p><p>​       (1).配合keyup使用：按下修饰键的同时，再按下其他键，随后释放其他键，事件才被触发。</p><p>​       (2).配合keydown使用：正常触发事件。</p><p>​    4. 也可以使用keyCode去指定具体的按键（不推荐）</p><p>​    5. ue.config.keyCodes.自定义键名 = 键码，可以去定制按键别名</p><h2 id="8-计算属性"><a href="#8-计算属性" class="headerlink" title="8. 计算属性"></a>8. 计算属性</h2><ol><li><p>定义：要用的属性不存在，要通过已有属性计算得来。</p></li><li><p>原理：底层借助了Objcet.defineproperty方法提供的getter和setter。</p></li><li><p>get函数什么时候执行？</p></li></ol><p>​        (1).初次读取时会执行一次。</p><p>​        (2).当依赖的数据发生改变时会被再次调用。</p><ol start="4"><li><p>优势：与methods实现相比，内部有缓存机制（复用），效率更高，调试方便。</p></li><li><p>备注：</p><ol><li>计算属性最终会出现在vm上，直接读取使用即可。</li><li>如果计算属性要被修改，那必须写set函数去响应修改，且set中要引起计算时依赖的数据发生改变。</li></ol></li><li><p>计算属性的完整写法</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js">fullName:&#123;<br><span class="hljs-comment">//get有什么作用？当有人读取fullName时，get就会被调用，且返回值就作为fullName的值</span><br><span class="hljs-comment">//get什么时候调用？1.初次读取fullName时。2.所依赖的数据发生变化时。</span><br><span class="hljs-function"><span class="hljs-title">get</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;get被调用了&#x27;</span>)<br><span class="hljs-comment">// console.log(this) //此处的this是vm</span><br><span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.firstName + <span class="hljs-string">&#x27;-&#x27;</span> + <span class="hljs-built_in">this</span>.lastName<br>&#125;,<br><span class="hljs-comment">//set什么时候调用? 当fullName被修改时。</span><br><span class="hljs-function"><span class="hljs-title">set</span>(<span class="hljs-params">value</span>)</span>&#123;<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;set&#x27;</span>,value)<br><span class="hljs-keyword">const</span> arr = value.split(<span class="hljs-string">&#x27;-&#x27;</span>)<br><span class="hljs-built_in">this</span>.firstName = arr[<span class="hljs-number">0</span>]<br><span class="hljs-built_in">this</span>.lastName = arr[<span class="hljs-number">1</span>]<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="9-监视属性watch"><a href="#9-监视属性watch" class="headerlink" title="9. 监视属性watch"></a>9. 监视属性watch</h2><h3 id="1-监听属性"><a href="#1-监听属性" class="headerlink" title="1. 监听属性"></a>1. 监听属性</h3><ol><li><p>当被监视的属性变化时, 回调函数自动调用, 进行相关操作</p></li><li><p>监视的属性必须存在，才能进行监视！！</p></li><li><p>监视的两种写法：</p><ol><li>new Vue时传入watch配置</li><li>通过vm.$watch监视</li></ol></li></ol><h3 id="2-深度监视"><a href="#2-深度监视" class="headerlink" title="2. 深度监视"></a>2. 深度监视</h3><ol><li><p>Vue中的watch默认不监测对象内部值的改变（一层）。</p></li><li><p>配置deep:true可以监测对象内部值改变（多层）。</p></li></ol><blockquote><p>备注：</p><ol><li>Vue自身可以监测对象内部值的改变，但Vue提供的watch默认不可以！</li><li>使用watch时根据数据的具体结构，决定是否采用深度监视。</li></ol></blockquote><h3 id="3-监听属性完整写法"><a href="#3-监听属性完整写法" class="headerlink" title="3. 监听属性完整写法"></a>3. 监听属性完整写法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js">watch:&#123;<br><span class="hljs-attr">numbers</span>:&#123;<br><span class="hljs-attr">immediate</span>:<span class="hljs-literal">true</span>, <span class="hljs-comment">//初始化时让handler调用一下</span><br><span class="hljs-attr">deep</span>:<span class="hljs-literal">true</span>, <span class="hljs-comment">// 深度监视</span><br><span class="hljs-function"><span class="hljs-title">handler</span>(<span class="hljs-params">val</span>)</span>&#123; <span class="hljs-comment">// handler什么时候调用？当number发生改变时。</span><br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;numbers改变了，值为&#x27;</span>, val)<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-computed和watch之间的区别"><a href="#4-computed和watch之间的区别" class="headerlink" title="4. computed和watch之间的区别"></a>4. computed和watch之间的区别</h3><ol><li><p>computed能完成的功能，watch都可以完成。</p></li><li><p>watch能完成的功能，computed不一定能完成，例如：watch可以进行异步操作。</p></li></ol><h3 id="总结：两个重要的小原则"><a href="#总结：两个重要的小原则" class="headerlink" title="总结：两个重要的小原则"></a>总结：两个重要的小原则</h3><ol><li><p>所被Vue管理的函数，最好写成普通函数，这样this的指向才是vm 或 组件实例对象。</p></li><li><p>所有不被Vue所管理的函数（定时器的回调函数、ajax的回调函数等、Promise的回调函数），最好写成箭头函数，</p></li></ol><p>​        这样this的指向才是vm 或 组件实例对象。</p><h2 id="10-绑定样式："><a href="#10-绑定样式：" class="headerlink" title="10. 绑定样式："></a>10. 绑定样式：</h2><ol><li>class样式</li></ol><p>​        写法:class=”xxx” xxx可以是字符串、对象、数组。</p><p>​          字符串写法适用于：类名不确定，要动态获取。</p><p>​          对象写法适用于：要绑定多个样式，个数不确定，名字也不确定。</p><p>​          数组写法适用于：要绑定多个样式，个数确定，名字也确定，但不确定用不用。</p><ol start="2"><li>style样式</li></ol><p>​        :style=”{fontSize: xxx}”其中xxx是动态值。</p><p>​        :style=”[a,b]”其中a、b是样式对象。</p><h2 id="11-条件渲染："><a href="#11-条件渲染：" class="headerlink" title="11. 条件渲染："></a>11. 条件渲染：</h2><h3 id="1-v-if"><a href="#1-v-if" class="headerlink" title="1. v-if"></a>1. v-if</h3><p>写法：</p><ol><li><code>v-if=&quot;表达式&quot;</code></li><li><code>v-else-if=&quot;表达式&quot;</code></li><li><code>v-else=&quot;表达式&quot;</code></li></ol><blockquote><p>适用于：切换频率较低的场景。</p><p>特点：不展示的DOM元素直接被移除。</p><p>注意：v-if 可以和 v-else-if、v-else 一起使用，但要求结构不能被“打断”。</p></blockquote><h3 id="2-v-show"><a href="#2-v-show" class="headerlink" title="2. v-show"></a>2. v-show</h3><p>写法：v-show=”表达式”</p><p>适用于：切换频率较高的场景。</p><p>特点：不展示的DOM元素未被移除，仅仅是使用样式隐藏掉</p><p>​        </p><blockquote><p>备注：使用v-if的时，元素可能无法获取到，而使用v-show一定可以获取到。</p></blockquote><h2 id="12-列表渲染"><a href="#12-列表渲染" class="headerlink" title="12. 列表渲染"></a>12. 列表渲染</h2><h3 id="1-基本列表"><a href="#1-基本列表" class="headerlink" title="1. 基本列表"></a>1. 基本列表</h3><p>​    v-for指令:</p><p>​      1.用于展示列表数据</p><p>​      2.语法：v-for=”(item, index) in xxx” :key=”yyy”</p><p>​      3.可遍历：数组、对象、字符串（用的很少）、指定次数（用的很少）</p><h3 id="2-key的原理（key有什么作用）"><a href="#2-key的原理（key有什么作用）" class="headerlink" title="2. key的原理（key有什么作用）"></a>2. key的原理（key有什么作用）</h3><blockquote><p>面试题：react、vue中的key有什么作用？（key的内部原理）</p></blockquote><p>​      </p><h4 id="1-虚拟DOM中key的作用"><a href="#1-虚拟DOM中key的作用" class="headerlink" title="1. 虚拟DOM中key的作用"></a>1. 虚拟DOM中key的作用</h4><p>key是虚拟DOM对象的标识，当数据发生变化时，Vue会根据【新数据】生成【新的虚拟DOM】, 随后Vue进行【新虚拟DOM】与【旧虚拟DOM】的差异比较，比较规则如下：</p><h4 id="2-对比规则"><a href="#2-对比规则" class="headerlink" title="2. 对比规则"></a>2. 对比规则</h4><p>​         (1).旧虚拟DOM中找到了与新虚拟DOM相同的key：</p><p>​            ①.若虚拟DOM中内容没变, 直接使用之前的真实DOM！</p><p>​            ②.若虚拟DOM中内容变了, 则生成新的真实DOM，随后替换掉页面中之前的真实DOM。</p><p>​         (2).旧虚拟DOM中未找到与新虚拟DOM相同的key</p><p>​            创建新的真实DOM，随后渲染到到页面。</p><p>​            </p><h4 id="3-用index作为key可能会引发的问题"><a href="#3-用index作为key可能会引发的问题" class="headerlink" title="3. 用index作为key可能会引发的问题"></a>3. 用index作为key可能会引发的问题</h4><ol><li>若对数据进行：逆序添加、逆序删除等破坏顺序操作:</li></ol><p>​               会产生没有必要的真实DOM更新 ==&gt; 界面效果没问题, 但效率低。</p><ol start="2"><li>如果结构中还包含输入类的DOM：</li></ol><p>​               会产生错误DOM更新 ==&gt; 界面有问题。</p><h4 id="4-开发中如何选择key"><a href="#4-开发中如何选择key" class="headerlink" title="4. 开发中如何选择key?"></a>4. 开发中如何选择key?</h4><ol><li><p>最好使用每条数据的唯一标识作为key, 比如id、手机号、身份证号、学号等唯一值。</p></li><li><p>如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，仅用于渲染列表用于展示，</p></li></ol><p>​            使用index作为key是没有问题的。</p><h3 id="3-Vue监视数据的原理："><a href="#3-Vue监视数据的原理：" class="headerlink" title="3. Vue监视数据的原理："></a>3. Vue监视数据的原理：</h3><ol><li>vue会监视data中所有层次的数据。</li></ol><ol start="2"><li>如何监测对象中的数据？</li></ol><p>​        通过setter实现监视，且要在new Vue时就传入要监测的数据。</p><p>​         (1).对象中后追加的属性，Vue默认不做响应式处理</p><p>​         (2).如需给后添加的属性做响应式，请使用如下API：</p><p>​             Vue.set(target，propertyName/index，value) 或 </p><p>​             vm.$set(target，propertyName/index，value)</p><ol start="3"><li>如何监测数组中的数据？</li></ol><p>​         通过包裹数组更新元素的方法实现，本质就是做了两件事：</p><p>​          (1).调用原生对应的方法对数组进行更新。</p><p>​          (2).重新解析模板，进而更新页面。</p><ol start="4"><li>在Vue修改数组中的某个元素一定要用如下方法：</li></ol><p>​       1.使用这些API:push()、pop()、shift()、unshift()、splice()、sort()、reverse()</p><p>​       2.Vue.set() 或 vm.$set()</p><p>​    </p><p>​    特别注意：Vue.set() 和 vm.$set() 不能给vm 或 vm的根数据对象 添加属性！！！</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs js">data:&#123;<br><span class="hljs-attr">student</span>:&#123;<br><span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;tom&#x27;</span>,<br><span class="hljs-attr">age</span>:<span class="hljs-number">18</span>,<br><span class="hljs-attr">hobby</span>:[<span class="hljs-string">&#x27;抽烟&#x27;</span>,<span class="hljs-string">&#x27;喝酒&#x27;</span>,<span class="hljs-string">&#x27;烫头&#x27;</span>],<br><span class="hljs-attr">friends</span>:[<br>&#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;jerry&#x27;</span>,<span class="hljs-attr">age</span>:<span class="hljs-number">35</span>&#125;,<br>&#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;tony&#x27;</span>,<span class="hljs-attr">age</span>:<span class="hljs-number">36</span>&#125;<br>]<br>&#125;<br>&#125;,<br><span class="hljs-attr">methods</span>: &#123;<br><span class="hljs-function"><span class="hljs-title">addSex</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-comment">// Vue.set(this.student,&#x27;sex&#x27;,&#x27;男&#x27;)</span><br><span class="hljs-built_in">this</span>.$set(<span class="hljs-built_in">this</span>.student,<span class="hljs-string">&#x27;sex&#x27;</span>,<span class="hljs-string">&#x27;男&#x27;</span>)<br>&#125;,<br><span class="hljs-function"><span class="hljs-title">addFriend</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-built_in">this</span>.student.friends.unshift(&#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;jack&#x27;</span>,<span class="hljs-attr">age</span>:<span class="hljs-number">70</span>&#125;)<br>&#125;,<br><span class="hljs-function"><span class="hljs-title">updateFirstFriendName</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-built_in">this</span>.student.friends[<span class="hljs-number">0</span>].name = <span class="hljs-string">&#x27;张三&#x27;</span><br>&#125;,<br><span class="hljs-function"><span class="hljs-title">addHobby</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-built_in">this</span>.student.hobby.push(<span class="hljs-string">&#x27;学习&#x27;</span>)<br>&#125;,<br><span class="hljs-function"><span class="hljs-title">updateHobby</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-comment">// this.student.hobby.splice(0,1,&#x27;开车&#x27;)</span><br><span class="hljs-comment">// Vue.set(this.student.hobby,0,&#x27;开车&#x27;)</span><br><span class="hljs-built_in">this</span>.$set(<span class="hljs-built_in">this</span>.student.hobby,<span class="hljs-number">0</span>,<span class="hljs-string">&#x27;开车&#x27;</span>)<br>&#125;,<br><span class="hljs-function"><span class="hljs-title">removeSmoke</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-built_in">this</span>.student.hobby = <span class="hljs-built_in">this</span>.student.hobby.filter(<span class="hljs-function">(<span class="hljs-params">h</span>)=&gt;</span>&#123;<br><span class="hljs-keyword">return</span> h !== <span class="hljs-string">&#x27;抽烟&#x27;</span><br>&#125;)<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="13-收集表单数据："><a href="#13-收集表单数据：" class="headerlink" title="13. 收集表单数据："></a>13. 收集表单数据：</h2><p>​     若：<code>&lt;input type=&quot;text&quot;/&gt;</code>，则v-model收集的是value值，用户输入的就是value值。</p><p>​     若：<code>&lt;input type=&quot;radio&quot;/&gt;</code>，则v-model收集的是value值，且要给标签配置value值。</p><p>​     若：<code>&lt;input type=&quot;checkbox&quot;/&gt;</code></p><p>​       1.没有配置input的value属性，那么收集的就是checked（勾选 or 未勾选，是布尔值）</p><p>​       2.配置input的value属性:</p><p>​         (1)v-model的初始值是非数组，那么收集的就是checked（勾选 or 未勾选，是布尔值）</p><p>​         (2)v-model的初始值是数组，那么收集的的就是value组成的数组</p><p>​     备注：v-model的三个修饰符：</p><p>​         lazy：失去焦点再收集数据</p><p>​         number：输入字符串转为有效的数字</p><p>​         trim：输入首尾空格过滤</p><h2 id="14-过滤器："><a href="#14-过滤器：" class="headerlink" title="14. 过滤器："></a>14. 过滤器：</h2><p>​    定义：对要显示的数据进行特定格式化后再显示（适用于一些简单逻辑的处理）。</p><p>​    语法：</p><p>​      1.注册过滤器：<code>Vue.filter(name,callback) </code>或 <code>new Vue&#123;filters:&#123;&#125;&#125;</code></p><p>​      2.使用过滤器：<code>&#123;&#123; xxx | 过滤器名&#125;&#125;</code>  或  v-bind:属性 = “xxx | 过滤器名”</p><p>​    备注：</p><p>​      1.过滤器也可以接收额外参数、多个过滤器也可以串联</p><p>​      2.并没有改变原本的数据, 是产生新的对应的数据</p><h2 id="15-内置指令"><a href="#15-内置指令" class="headerlink" title="15. 内置指令"></a>15. 内置指令</h2><h3 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h3><p>单向绑定解析表达式, 可简写为 :xxx</p><h3 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h3><p>双向数据绑定</p><h3 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h3><p>遍历数组/对象/字符串</p><h3 id="v-on"><a href="#v-on" class="headerlink" title="v-on"></a>v-on</h3><p>绑定事件监听, 可简写为@</p><h3 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h3><p>条件渲染（动态控制节点是否存存在）</p><h3 id="v-else"><a href="#v-else" class="headerlink" title="v-else"></a>v-else</h3><p>条件渲染（动态控制节点是否存存在）</p><h3 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h3><p>条件渲染 (动态控制节点是否展示)</p><h3 id="v-text"><a href="#v-text" class="headerlink" title="v-text"></a>v-text</h3><p>​      1.作用：向其所在的节点中渲染文本内容。</p><p>​      2.与插值语法的区别：v-text会替换掉节点中的内容，<code>&#123;&#123;xx&#125;&#125;</code>则不会。</p><h3 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h3><p>​      1.作用：向指定节点中渲染包含html结构的内容。</p><p>​      2.与插值语法的区别：</p><p>​         (1).v-html会替换掉节点中所有的内容，<code>&#123;&#123;xx&#125;&#125;</code>则不会。</p><p>​         (2).v-html可以识别html结构。</p><p>​      3.严重注意：v-html有安全性问题！！！！</p><p>​         (1).在网站上动态渲染任意HTML是非常危险的，容易导致XSS攻击。</p><p>​         (2).一定要在可信的内容上使用v-html，永不要用在用户提交的内容上！</p><h3 id="v-cloak指令"><a href="#v-cloak指令" class="headerlink" title="v-cloak指令"></a>v-cloak指令</h3><p>​      1.本质是一个特殊属性，Vue实例创建完毕并接管容器后，会删掉v-cloak属性。</p><p>​      2.使用css配合v-cloak可以解决网速慢时页面展示出<code>&#123;&#123;xxx&#125;&#125;</code>的问题。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-cloak</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="v-once"><a href="#v-once" class="headerlink" title="v-once"></a>v-once</h3><ol><li><p>v-once所在节点在初次动态渲染后，就视为静态内容了。</p></li><li><p>以后数据的改变不会引起v-once所在结构的更新，可以用于优化性能。</p></li></ol><h3 id="v-pre"><a href="#v-pre" class="headerlink" title="v-pre"></a>v-pre</h3><p>​     1.跳过其所在节点的编译过程。</p><p>​     2.可利用它跳过：没有使用指令语法、没有使用插值语法的节点，会加快编译。</p><h2 id="16-自定义指令"><a href="#16-自定义指令" class="headerlink" title="16. 自定义指令"></a>16. 自定义指令</h2><p>​    需求1：定义一个v-big指令，和v-text功能类似，但会把绑定的数值放大10倍。</p><p>​    需求2：定义一个v-fbind指令，和v-bind功能类似，但可以让其所绑定的input元素默认获取焦点。</p><p>​    自定义指令总结：</p><p>​      一、定义语法：</p><p>​         (1).局部指令：</p><p>​                在Vue中添加 directives</p><p>​         (2).全局指令：</p><p>​             <code>Vue.directive(指令名,配置对象) </code>或 <code>Vue.directive(指令名,回调函数)</code></p><p>​      二、配置对象中常用的3个回调：</p><p>​         (1).bind：指令与元素成功绑定时调用。</p><p>​         (2).inserted：指令所在元素被插入页面时调用。</p><p>​         (3).update：指令所在模板结构被重新解析时调用。</p><p>​      三、备注：</p><p>​         1.指令定义时不加v-，但使用时要加v-；</p><p>​         2.指令名如果是多个单词，要使用kebab-case命名方式，不要用camelCase命名。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs js">directives:&#123;<br><span class="hljs-function"><span class="hljs-title">big</span>(<span class="hljs-params">element,binding</span>)</span>&#123;<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;big&#x27;</span>,<span class="hljs-built_in">this</span>) <span class="hljs-comment">//注意此处的this是window</span><br>element.innerText = binding.value * <span class="hljs-number">10</span><br>&#125;,<br><span class="hljs-attr">fbind</span>:&#123;<br><span class="hljs-comment">//指令与元素成功绑定时（一上来）</span><br><span class="hljs-function"><span class="hljs-title">bind</span>(<span class="hljs-params">element,binding</span>)</span>&#123;<br>element.value = binding.value<br>&#125;,<br><span class="hljs-comment">//指令所在元素被插入页面时</span><br><span class="hljs-function"><span class="hljs-title">inserted</span>(<span class="hljs-params">element,binding</span>)</span>&#123;<br>element.focus()<br>&#125;,<br><span class="hljs-comment">//指令所在的模板被重新解析时</span><br><span class="hljs-function"><span class="hljs-title">update</span>(<span class="hljs-params">element,binding</span>)</span>&#123;<br>element.value = binding.value<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="17-声明周期"><a href="#17-声明周期" class="headerlink" title="17. 声明周期"></a>17. 声明周期</h2><h3 id="1-生命周期："><a href="#1-生命周期：" class="headerlink" title="1. 生命周期："></a>1. 生命周期：</h3><p>  1.又名：生命周期回调函数、生命周期函数、生命周期钩子。</p><p>  2.是什么：Vue在关键时刻帮我们调用的一些特殊名称的函数。</p><p>  3.生命周期函数的名字不可更改，但函数的具体内容是程序员根据需求编写的。</p><p>  4.生命周期函数中的this指向是vm 或 组件实例对象。</p><h3 id="2-常用的生命周期钩子："><a href="#2-常用的生命周期钩子：" class="headerlink" title="2. 常用的生命周期钩子："></a>2. 常用的生命周期钩子：</h3><p>​      1.mounted: 发送ajax请求、启动定时器、绑定自定义事件、订阅消息等【初始化操作】。</p><p>​      2.beforeDestroy: 清除定时器、解绑自定义事件、取消订阅消息等【收尾工作】。</p><h3 id="3-关于销毁Vue实例"><a href="#3-关于销毁Vue实例" class="headerlink" title="3. 关于销毁Vue实例"></a>3. 关于销毁Vue实例</h3><p>​      1.销毁后借助Vue开发者工具看不到任何信息。</p><p>​      2.销毁后自定义事件会失效，但原生DOM事件依然有效。</p><p>​      3.一般不会在beforeDestroy操作数据，因为即便操作数据，也不会再触发更新流程了。</p>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>汉诺塔问题</title>
    <link href="/post/e8c3a72d/"/>
    <url>/post/e8c3a72d/</url>
    
    <content type="html"><![CDATA[<p>游戏地址：<a href="http://www.htmleaf.com/Demo/201508272485.html">http://www.htmleaf.com/Demo/201508272485.html</a><br>代码教程：<a href="https://www.bilibili.com/video/BV12741157Zp">https://www.bilibili.com/video/BV12741157Zp</a></p><figure class="highlight reasonml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><pre><code class="hljs reasonml">#<span class="hljs-keyword">include</span> &lt;stdio.h&gt;<br><br>void <span class="hljs-constructor">Hanoi(<span class="hljs-params">int</span> <span class="hljs-params">n</span>, <span class="hljs-params">char</span> <span class="hljs-params">x</span>, <span class="hljs-params">char</span> <span class="hljs-params">y</span>, <span class="hljs-params">char</span> <span class="hljs-params">z</span>)</span> &#123;<br>    <span class="hljs-keyword">if</span>(n<span class="hljs-operator"> == </span><span class="hljs-number">0</span>) &#123;<br>        return ;<br>    &#125;<br>    <span class="hljs-constructor">Hanoi(<span class="hljs-params">n</span> - 1, <span class="hljs-params">x</span>, <span class="hljs-params">z</span>, <span class="hljs-params">y</span>)</span>;<br>    printf(<span class="hljs-string">&quot;把第%d个从%c移动到%c\n&quot;</span>, n, x, z);<br>    <span class="hljs-constructor">Hanoi(<span class="hljs-params">n</span> - 1, <span class="hljs-params">y</span>, <span class="hljs-params">x</span>, <span class="hljs-params">z</span>)</span>;<br>&#125;<br><br><span class="hljs-built_in">int</span> main<span class="hljs-literal">()</span> &#123;<br>    <span class="hljs-constructor">Hanoi(4, &#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;)</span>;<br>    return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>C语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C语言实例</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>不要使用软件下载站的高速下载</title>
    <link href="/post/3b34f99e/"/>
    <url>/post/3b34f99e/</url>
    
    <content type="html"><![CDATA[<h1 id="不要使用软件下载站的高速下载"><a href="#不要使用软件下载站的高速下载" class="headerlink" title="不要使用软件下载站的高速下载"></a>不要使用软件下载站的高速下载</h1><span id="more"></span><p>如果你在软件下载站下载过软件，那一定见过下面图片显示的内容。</p><p><img src="/images/uploads/%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%AB%99%E7%9A%84%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD/0.webp" alt="图片"></p><p><img src="/images/uploads/%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%AB%99%E7%9A%84%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD/1.webp" alt="图片"></p><p>可能你在有的网站只能看到高速下载。如果你使用过高速下载，那一定经历过安装一分钟、卸载3小时，或者根本无法卸载干净的情况。</p><p>你一旦执行下载的所谓安装程序，安装好软件后，会发现电脑里面出现了很多其他软件，有的不停的在弹窗，你还找不到。</p><p>最过分的是你通过高速下载安装的软件可能根本就不是你需要的软件。</p><p>因为软件下载站的高速下载实际就是一个广告插件，笔者觉得这是几十年前电脑插件的卷土重来。这个电脑广告插件会在运行后给你的电脑里面安装最少七八款其他你完全不需要的软件，有的还是恶意软件。</p><p>在软件下载站下载软件的正确操作就是不要使用软件下载站的高速下载。</p><p><img src="/images/uploads/%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%AB%99%E7%9A%84%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD/2.webp" alt="图片"></p><p><img src="/images/uploads/%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%AB%99%E7%9A%84%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD/3.webp" alt="图片"></p><p>除了不要点击软件下载页面的高速下载链接外，那怎么判断下载到的是不是软件下载站的高速下载广告插件呢？</p><p>第一：通过下载的exe名和大小判断。</p><p>你可以看下载的文件大小和软件描述的文件是否相同。高速下载器的大小一般只有2M左右，并且文件名带有其他的数码或字母。</p><p><img src="/images/uploads/%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%AB%99%E7%9A%84%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD/4.webp" alt="图片"></p><p>第二：通过软件运行后界面。  </p><p>如果你运行下载的软件后，是下面的窗口，那一定是高速下载广告插件了。</p><p><img src="/images/uploads/%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%AB%99%E7%9A%84%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD/5.webp" alt="图片"><br><img src="/images/uploads/%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%AB%99%E7%9A%84%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD/6.webp" alt="图片"></p><p>第一个窗口就要修改你的浏览器首页并且还要给你安装一个游戏，后面的会有很多软件软件安装到你的电脑里面。</p><p><img src="/images/uploads/%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%AB%99%E7%9A%84%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD/7.webp" alt="图片"></p><p>软件下载的高速下载器除了安装这些你不需要的软件外，还会在电脑中安装各种弹窗广告。</p><p>最后，笔者建议大家，下载软件最好是通过电脑上安全软件的软件管家，或者软件官网。如果确实需要在软件下载站下载软件，一定不要使用软件下载站的高速下载，要使用本地下载。下载后再运行前一定用我前面说的2个方法判断一下是否是高速下载器。</p><p>最后重要的事情说三遍：</p><p>不要使用软件下载的高速下载。</p><p>不要使用软件下载的高速下载。</p><p>不要使用软件下载的高速下载。</p><blockquote><p><a href="https://mp.weixin.qq.com/s/SGXLx7IKCeQcXJlyRdNZPw">https://mp.weixin.qq.com/s/SGXLx7IKCeQcXJlyRdNZPw</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>电脑使用技巧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>随机图片API</title>
    <link href="/post/image-api/"/>
    <url>/post/image-api/</url>
    
    <content type="html"><![CDATA[<p>收集的一些随机显示图片的API接口</p><span id="more"></span><blockquote><p>如果需要同时显示多张图片，可以在url后面加上?random=1<br>例如: </p><figure class="highlight awk"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>api.ixiaowai.cn<span class="hljs-regexp">/api/</span>api.php?random=<span class="hljs-number">1</span><br>https:<span class="hljs-regexp">//</span>api.ixiaowai.cn<span class="hljs-regexp">/api/</span>api.php?random=<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure></blockquote><p><a href="https://api.ixiaowai.cn/api/api.php">https://api.ixiaowai.cn/api/api.php</a>（二次元动漫）</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://api.ixiaowai.cn/api/api.php?random=1"></div><div class="group-image-wrap"><img src="https://api.ixiaowai.cn/api/api.php?random=2"></div></div></div><p><a href="https://api.ixiaowai.cn/mcapi/mcapi.php">https://api.ixiaowai.cn/mcapi/mcapi.php</a>（mc酱动漫）</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://api.ixiaowai.cn/mcapi/mcapi.php?random=1"></div><div class="group-image-wrap"><img src="https://api.ixiaowai.cn/mcapi/mcapi.php?random=2"></div></div></div><p><a href="https://api.ixiaowai.cn/gqapi/gqapi.php">https://api.ixiaowai.cn/gqapi/gqapi.php</a>（高清壁纸）</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://api.ixiaowai.cn/gqapi/gqapi.php?random=1"></div><div class="group-image-wrap"><img src="https://api.ixiaowai.cn/gqapi/gqapi.php?random=2"></div></div></div><p><a href="https://api.ixiaowai.cn/gqapi/gqapi.php?39c915de">https://api.ixiaowai.cn/gqapi/gqapi.php?39c915de</a> （高清壁纸）</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://api.ixiaowai.cn/gqapi/gqapi.php?39c915de?random=1"></div><div class="group-image-wrap"><img src="https://api.ixiaowai.cn/gqapi/gqapi.php?39c915de?random=2"></div></div></div>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>Api接口</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>这些场景你是否觉得熟悉</title>
    <link href="/post/39c915de/"/>
    <url>/post/39c915de/</url>
    
    <content type="html"><![CDATA[<p><strong>上课时</strong></p><p>清醒没有发呆的多，发呆没有睡觉的多，睡觉没有玩手机的多；下课时，自修没有吃零食多，吃零食没有看连续剧多，看连续剧没有游戏多。如此这般，就业时的失败怎能不比成功多？</p><p><strong>考试时</strong></p><p>不给范围就不会考试，给了范围也只是复印同学准备的答案。你如果是老板，会雇用你自己这样的员工吗？</p><p><strong>毕业前</strong>  </p><p>上大学前填报志愿，你说不知道自己的兴趣特长，好吧，大学毕业找工作了，同样不知道自己的兴趣特长。自己都不认识自己，还有谁能认识你？</p><p><strong>专业课</strong></p><p>学技术不肯动手，学理论不肯动脑。</p><p>等待你的除了失业还能是什么？你说，你修完了《计算机基础》，但真实水平却连个PPT都做不好。你的竞争力在哪里？</p><p>你说，你修了两年英语，然而，你的水平却连与外国人日常对话都打怵。有哪家用人单位需要你？</p><p>你说，你修了《思想修养》，但你根本就没听。你敢说，除了课堂上睡眠的抗干扰能力得到提升外，在思想修养和道德品德方面，得到了应有的提升吗？</p><p>你说，你修过《阅读与写作》，但你读的是手机，你写的是微信。对语文，自己都没信心，你还想指望别人对你有信心？</p><p><strong>这些话是否直戳你的痛点</strong></p><p>实习要让父母开假证明，评先进要让父母找关系，补办证书要父母跑学校。找工作的时候，你能有一分坦然和自信吗？</p><p>双休日你起来吃早饭吗？连吃饭都不会，还有谁会相信你会干活？军训的时候叠过被子，军训过后还叠过几次？</p><p>唯一投入的是游戏，耗时最多的是游戏，而你的自荐信对此又只字不提。  </p><p><strong>自己做的连自己都不认可，世界上，还有谁会认可你？</strong></p><p>讲大道理的时候你口若悬河，伸手要钱的时候你撒娇耍赖。你可以欺负你的父母亲，世界也能任由你欺负吗？</p><p>离开了电脑你还能做什么？离开了游戏你还喜欢什么？离开了家你还能到哪里去？离开了父母还有谁会给你送水端饭？对于这些问题，你都找不到答案，你还想找到前程吗？</p><p>图书馆里没有你的人影，运动场上没有你的人影，公益场上更没有你的人影。</p><p>你退化的不是肌肉，你退化的不是责任感，你退化的是最基本的生存能力。</p><p>找工作时，在工作岗位上的最大价值在于不可替代。</p><p><strong>责任心、吃苦精神、写作水平、做事能力、专业修养、操作技术、学问素养、人际处理，有哪一方面是你的看家本领？有哪一点是他人不可替代的？你不失业谁失业？</strong></p><p><strong>有没有想过当年那些不如你的人也许有一天会超过你</strong></p><p>L同学本科就读的大学是一所普通得不能再普通的高校。上大一的时候，身边大部分的同学都是挣脱出高考枷锁的飞鸟，渴望自由。大学对于他们来说，就好像是进了一个没有人管的”游乐场“，一进了“游乐场”的大门，他们便飞奔进去，奔向各自想要玩的游乐项目。</p><p>他们参加各种各样的社团，又或者去光明正大地恋爱。只是，课本知识对于他们来说，只要不挂科，大学便是圆满结束了。 </p><p><strong>你们是不是也有过这样的经历，也有过这样的同窗。</strong></p><p><strong>明明一同起跑****却走向了不同的人生旅途</strong></p><p>有时你会突然发现，当时看上去和你差不多的人，甚至是不如你的人，原来蕴藏着如此巨大的能量。</p><p>而这样的能量，是无法用一次的考试成绩，用她所在的大学，甚至用她的智商来衡量的。 </p><p>而其他人，那些还在“游乐场”里疯玩的孩子，等到游乐场打烊，等到灯光都熄灭的时候，甚至还没回过神来，究竟发生了什么。</p><p>L同学如愿考上了名牌大学的研究生，终于去了她想要的学校，过她想要的生活。再后来，硕士毕业，她找到了一份给应届生的special offer，刚入职年收入就有30万。</p><p>很多本科的同学都惊呆了，看着普普通通只知道死读书的她，究竟是怎么有了这么大的能量，在四年后、六年后与其他人走向了不同的人生旅途。</p><p>熬过的辛苦最后都换成了幸福。</p><p><strong>有人说，大学是一场长跑，这四年时光，有的人从一开始就踏上了其他跑道，也有人挤到了前面的队伍，是时间让大家变得不一样！</strong></p><blockquote><p><a href="https://mp.weixin.qq.com/s/0ZdjxdwPKrVs7eK1WHIkZQ">https://mp.weixin.qq.com/s/0ZdjxdwPKrVs7eK1WHIkZQ</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>心得体会</category>
      
    </categories>
    
    
    <tags>
      
      <tag>转载</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>功能测试</title>
    <link href="/post/test/"/>
    <url>/post/test/</url>
    
    <content type="html"><![CDATA[<h1 id="外部文件引用测试"><a href="#外部文件引用测试" class="headerlink" title="外部文件引用测试"></a>外部文件引用测试</h1><p><a href="https://github.com/tea3/hexo-include-markdown">https://github.com/tea3/hexo-include-markdown</a></p><h3 id="include-me"><a href="#include-me" class="headerlink" title="include me ?"></a>include me ?</h3><p>Here is the <code>template.md</code>‘s content . This content is read from an external markdown file.</p><div class="note note-success">            <p>相关推荐：</p><ul><li><a href="/post/english-words/">英语单词总结</a></li><li><a href="/post/reading-turning/">考研阅读中的转折</a></li></ul>          </div><h1 id="草稿测试"><a href="#草稿测试" class="headerlink" title="草稿测试"></a>草稿测试</h1><p><a href="https://github.com/CallumHewitt/hexo-draft-tags">https://github.com/CallumHewitt/hexo-draft-tags</a></p><p>hexo server –draft</p><p>This text should be shown in –draft mode and in production.</p><h2 id="include文件"><a href="#include文件" class="headerlink" title="include文件"></a>include文件</h2><h2 id="插入iframe"><a href="#插入iframe" class="headerlink" title="插入iframe"></a>插入iframe</h2><div class="code-wrapper"><pre><code class="html">&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;Title&lt;/title&gt;    &lt;style&gt;        #div1 &#123;            width: 100px;            height: 80px;            background-color: red;            border: 50px solid black;            border-top-color: green;            border-right-color: blue;            border-bottom-color: yellow;        &#125;        #div2 &#123;            width: 0;            height: 0;            border: 50px solid black;            border-top-color: transparent;            border-right-color: transparent;            border-bottom-color: transparent;        &#125;        #div3 &#123;            width: 0;            height: 0;            border: 50px solid transparent;            border-left-color: red;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;    &lt;div id=&quot;div2&quot;&gt;&lt;/div&gt;    &lt;div id=&quot;div3&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre></div><h1 id="adf-cpp-include-lt-iostream-gt"><a href="#adf-cpp-include-lt-iostream-gt" class="headerlink" title="adf cpp #include&lt;iostream&gt;"></a>adf <code>cpp #include&lt;iostream&gt;</code></h1><iframe allowtransparency="yes" frameborder="0" width="100%" height="60" src="/web/前端实战案例总结/div圆角实例.html"></iframe><figure class="highlight html"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></div></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">        <span class="hljs-selector-id">#div1</span> &#123;</span><br><span class="css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">80px</span>;</span><br><span class="css">            <span class="hljs-attribute">background-color</span>: red;</span><br><span class="css">            <span class="hljs-attribute">border</span>: <span class="hljs-number">50px</span> solid black;</span><br><span class="css">            <span class="hljs-attribute">border-top-color</span>: green;</span><br><span class="css">            <span class="hljs-attribute">border-right-color</span>: blue;</span><br><span class="css">            <span class="hljs-attribute">border-bottom-color</span>: yellow;</span><br><span class="css">        &#125;</span><br><span class="css">        <span class="hljs-selector-id">#div2</span> &#123;</span><br><span class="css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;</span><br><span class="css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;</span><br><span class="css">            <span class="hljs-attribute">border</span>: <span class="hljs-number">50px</span> solid black;</span><br><span class="css">            <span class="hljs-attribute">border-top-color</span>: transparent;</span><br><span class="css">            <span class="hljs-attribute">border-right-color</span>: transparent;</span><br><span class="css">            <span class="hljs-attribute">border-bottom-color</span>: transparent;</span><br><span class="css">        &#125;</span><br><span class="css">        <span class="hljs-selector-id">#div3</span> &#123;</span><br><span class="css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;</span><br><span class="css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;</span><br><span class="css">            <span class="hljs-attribute">border</span>: <span class="hljs-number">50px</span> solid transparent;</span><br><span class="css">            <span class="hljs-attribute">border-left-color</span>: red;</span><br><span class="css">        &#125;</span><br><span class="css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;div1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;div2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;div3&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>PDF编辑器</title>
    <link href="/post/pdf-edit/"/>
    <url>/post/pdf-edit/</url>
    
    <content type="html"><![CDATA[<p>分享一款完全无限制的PDF编辑软件，所有功能无限制。亲测可用</p><span id="more"></span><h2 id="软件安装教程"><a href="#软件安装教程" class="headerlink" title="软件安装教程"></a>软件安装教程</h2><p>以前给大家分享过金山PDF编辑专业版，尽管是专业版但似乎还有些功能被限制，这次推送的这款PDF编辑工具完全无限制，软件安装教程如下：</p><p>1.双击应用程序，然后选择同意用户许可协议。<br><img src="/images/uploads/PDF%E7%BC%96%E8%BE%91%E5%99%A8/0-1.png"></p><p>2.安装过程大概需要1-2分钟，仅需两部就安装完成了。<br><img src="/images/uploads/PDF%E7%BC%96%E8%BE%91%E5%99%A8/0-2.png"></p><p>3.安装完成后，切记不要立即启用，点击退出即可。<br><img src="/images/uploads/PDF%E7%BC%96%E8%BE%91%E5%99%A8/0-3.png"></p><h2 id="软件激活教程"><a href="#软件激活教程" class="headerlink" title="软件激活教程"></a>软件激活教程</h2><p>1.打开安装包的Crack文件夹，将里面的Files文件夹直接复制到到软件安装目录中，一般是在C:\Program Files (x86)里面。</p><p><img src="/images/uploads/PDF%E7%BC%96%E8%BE%91%E5%99%A8/1.png"></p><p>2.然后再将Crack里面的Patch.bat也复制到软件安装目录中，和上面的目录是一样的，这个不要出错哦。</p><p><img src="/images/uploads/PDF%E7%BC%96%E8%BE%91%E5%99%A8/2.png"></p><p>3.复制完成之后，以管理员身份运行Patch.bat文件，运行完之后按回车键即可实现完美激活，激活后打开桌面的应用图标即可。</p><p><img src="/images/uploads/PDF%E7%BC%96%E8%BE%91%E5%99%A8/3.png"></p><p>4.打开软件，所有编辑功能都可以无限制使用了。</p><p><img src="/images/uploads/PDF%E7%BC%96%E8%BE%91%E5%99%A8/4.png"></p><p>安装后请勿用于商业用途，仅供个人平时学习研究</p><a class="btn" href="https://pan.baidu.com/s/1OZPXY_vqgY4A5Yj1fw6bFQ"  target="_blank">点击下载 提取码:kmu3</a> <div class="note note-success">            <p><a href="https://pan.baidu.com/s/1OZPXY_vqgY4A5Yj1fw6bFQ">https://pan.baidu.com/s/1OZPXY_vqgY4A5Yj1fw6bFQ</a><br>提取码:kmu3</p>          </div>]]></content>
    
    
    <categories>
      
      <category>推荐分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件分享</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在文章中背单词</title>
    <link href="/post/tools-article-words/"/>
    <url>/post/tools-article-words/</url>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>如何知道自己的词汇量，最简单的办法就是把所有认识的单词全部标记一遍，这样就能精确的统计出自己的词汇量了。但是这样肯定又很无聊，所以最好的办法是通过自己阅读过的文章来这么做。</p><p>如果你已经读完一篇文章了，那么只需要把里面所有认识的单词打上标记，那么下一次再阅读另一篇文章的时候，只需要再标记没有标记过的单词，之前标记过的单词肯定就不用重复标记了，因此我写了一个小网页来辅助标记。</p><a class="btn" href="/tools/文章单词提取.html"  target="_blank">文章单词提取</a><h2 id="排除单词"><a href="#排除单词" class="headerlink" title="排除单词"></a>排除单词</h2><p>你学会的单词会在排除单词这个文本框中出现，当然，你也可以手动修改</p><p>我自己收集的一些简单词汇，如果需要，可以直接添加到里面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><pre><code class="hljs txt">介词<br>across behind below beside during near round under inside throughout upon within along apart front spite owing reguard considering reguarding including concerning <br>小学单词<br>unit go picture went play pencil water kite teacher let bike desk short watch clean green orange dog elephant boat morning small tall light floor computer room Chinese park eat climb hiking traffic pen ruler bag nose foot red yellow blue white cat rabbit duck pig bread chicken milk three five six seven eight nine ten boy friend afternoon father mother mom grandpa sister brother eleven twelve thirteen fifteen twenty pear watermelon apple banana grape bus chair window board door classroom wall fan bed fish shirt cold strong thin TV flower bedroom table wash clothe tree dinner evening visit weekend swim fly plant sleep insect leave collect post next buy violin stamp sore swimming fishing present skiing ice skating eraser crayon sharpener head face mouth eye ear arm finger leg body purple black pink brown monkey panda bear mouse squirrel cake hot hamburger French fries coke juice tea coffee doll ball balloon car plane am nice meet goodbye dad woman grandmother grandma grandfather really fourteen sixteen seventeen eighteen nineteen peach strawberry thank taxi jeep walkman lamp zoo giraffe deer rice beef egg driver doctor farmer nurse yes clock math music jacket skirt dress colour warm cool jeans pant sock shoe football snowy sunny horse aren funny Mr strict smart active quiet Monday Tuesday Wednesday Thursday Friday Saturday Sunday eggplant bean tofu potato tomato lunch tasty sweet sour fresh salty favourite fruit Cook meal sweep dishes curtain trash bin closet mirror kitchen bathroom river grass lake forest path bridge road building exercise breakfast sport usually noon mountain shopping piano grandparents sometime spring summer fall winter season skate snowman why Jan January Feb February Mar March Apr April May June July Aug August Sept September Oct October Nov November Dec December birthday uncle date aw cook phone listen letter mail jump walk run kangaroo fight swing drink pick experiment catch butterfly honey count report chess picnic train rule stop wait library office hospital cinema turn bookstore please left straight comic card hobby ride riding dive diving playing collecting teach teaches goes watches doesn singer writer actor actress artist reporter engineer accountant policeman salesperson cleaner rain cloud sun stream seed soil sprout taller shorter stronger older younger bigger heavy heavier thinner smaller fever throat toothache headache matter hurt tired excited angry bored sad watched washed cleaned played visited did learned sing dance sang danced ate took climbed bought row rowed saw got <br>阅读基本词<br>the a to of and in that B D C is it for on are be s not with they their we more have but you from by or at was your people this time an about can than text has answer work should which were t our most part I new do will who job one there point write student following how what would home much so up other them into all need direction sheet less when many make he some year been out state had life art women may way said even use according section because if these could after just paragraph author only no read like often each those government over day such good American think reading children get hi own firm help say us also world best word mark might well health first homework take high problem food newspaper give college become through mean two housing economic thing seem while toward market feel found still average live down before machine money last today my public very product right jury likely between believe question school bird example against different outside both system history happiness place longer rather federal long family yet human man making any director book business back working If off translation English re research since same power being now G self then writing gene too come hard instead without few learn based class used least don habit young great social spending around talk corporate themselves countries term future companies where true want better big reason plan set made ll generation end effect see study university poor case girl suggest paper know find sale change four experience increase going look information member group fact advance ago quickly percent fear men labor war among week society patent industry decision away education living once landscape court far full actually does old tend she house impact lot choice name chart worker past employment recession insurance her policy fast formation numbered happy greater spend kind U S <br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>英语</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>书信作文常用句</title>
    <link href="/post/english-letter-sentence/"/>
    <url>/post/english-letter-sentence/</url>
    
    <content type="html"><![CDATA[<p><img src="/images/uploads/%E5%8A%9B%E5%A9%89.png"></p><blockquote><ol><li>点击句子即可查看英语翻译，提供不同难度的句子。</li><li>方便自己复习，可以拿张纸看着中文写英语，顺带练练字。</li><li>如果有更好的句子，可以在评论区留言，会选择精选评论送小礼品。</li><li>当前句子数量：<span id="num"><span>句</li><li>持续更新中。。。。。。</li></ol></blockquote><h2 id="简单寒暄"><a href="#简单寒暄" class="headerlink" title="简单寒暄"></a>简单寒暄</h2><details><summary>最近过的怎么样？</summary><ul><li>How is everything going?</li><li>How are you getting on with your life recently?</li><li>I hope you are doing great!</li></ul></details><h2 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h2><details><summary>我是李明，你们网店的顾客之一。</summary><ul><li>I am Li Ming, one of the customers of your online store.</li></ul></details><details><summary>我是这所大学体育专业的本科生。</summary><ul><li>I am a undergard who majors in physical education in this university.</li></ul></details><h2 id="写信目的"><a href="#写信目的" class="headerlink" title="写信目的"></a>写信目的</h2><details><summary>写这封信的主要目的是</summary><ul><li>The main purpose of this email is to</li><li>The main purpose of my letter is to</li><li>I am writing to</li></ul></details><details><summary>向你表示衷心的感谢</summary><ul><li>express my heartfelt thanks to you</li><li>extend my heartfelt gratitude to you for</li></ul></details><details><summary>诚邀您参加</summary><ul><li>sincerely invite you to attend</li><li>cordially invite you to take</li></ul></details><details><summary>投诉</summary><p>make a complaint about <code>the quality of your product</code>.</p></details><details><summary>表达歉意</summary><p>express my apology to you, because <code>I have to cancel the travel plan to visit you at your university this Sunday morning</code>.</p></details><details><summary>祝贺你. 我们所有人都为你骄傲。</summary><p>congratulate you. All of us are proud of you.</p></details><details><summary>询问以下方面的信息。</summary><p>inquire some information about the following aspects.</p></details><details><summary>向你推荐《老人与海》这本书</summary><p>recommend you the book of “The Old Man and the Sea”.<br>向你推荐《老人与海》这本书。</p></details><details><summary>向您介绍此活动，并呼吁您的支持和参与。</summary><p>introduce this activity to you and call upon you for your support and participation.</p></details><details><summary>对`“城市交通”为题的辩论话题`提出建议，并告知您有关活动安排的细节。</summary><p>suggest <code>a topic for the debat on the theme of city traffic</code> and tell you some details about the arrangements.</p></details><details><summary>告诉你一些关于这个景点的事情，并提供一些实用的提示。</summary><p>tell you something about the scenic spot and provide some tips.</p></details><h2 id="内容要点"><a href="#内容要点" class="headerlink" title="内容要点"></a>内容要点</h2><h3 id="道歉"><a href="#道歉" class="headerlink" title="道歉"></a>道歉</h3><details><summary>我接收到通知，本周日要参加一场重要的考试，而且这场考试无法延期。</summary><ul><li>I am told that I will attend an important test this Sunday which cannot be put off.</li><li>I am told that I will take an important exam this Sunday, I can’t put it off.</li></ul></details><details><summary>我只能遗憾的取消此次拜访。</summary><ul><li>I have to cancel this visit with regret.</li><li>I have to cancel this visit.</li></ul></details><details><summary>为弥补这次失约，我计划下周日上午拜访您。</summary><ul><li>To make up for this, I plan to visit you next Sunday morning.</li><li>To make up for this, I will call on you next Sunday morning.</li></ul></details><details><summary>如果有必要的话，我愿意对此因此的任何麻烦提出补救翻案。</summary><ul><li>If necessary, I would like to compensate for any trouble (it may cause).</li></ul></details><h3 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h3><details><summary>我初步的计划如下</summary><ul><li>My primary plans are as follows.</li><li>The plans are as follows.</li></ul></details><details><summary>因为这一现象在当今人们的话题中很有名。</summary><p>because the <code>phenomenon</code> is famous [among the topics (of the people)] [nowadays].</p></details><details><summary>北京大学是中国最好的大学之一。</summary><p>Peking University is one of the best universities in China.</p></details><details><summary>作为一名大学生，时间规划和自主学习对你来说非常重要。</summary><p>As a college student, time management and self-study are quite important to you.</p></details><h3 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h3><details><summary>你和你的家庭给我留下了深刻的印象。</summary><p>You and your family left a deep impression on me.</p></details><details><summary>他将成为我人参中最精彩的记忆之一。</summary><p>It is one of the most wonderful memories in my life.</p></details><details><summary>在一次谈话中，你说你想来中国旅游。</summary><p>In a talk you said you wanted to travel in China.</p></details><details><summary>我很乐意做你的导游</summary><p>it would be my pleasure to be your guide.</p></details><h3 id="投诉"><a href="#投诉" class="headerlink" title="投诉"></a>投诉</h3><details><summary>前几天在你们网店买的</summary><p>I bought [at your online store] [the other day].</p></details><details><summary>一开始我对自己新买的英语学习机很满意，它运行良好。</summary><p>At first, I was quite happy with my new English-learning device (which worked just fine).</p></details><details><summary>我重启了数次，但问题依然存在</summary><p>I have reset the device several times but the problem still exists.</p></details><details><summary>我建议免费帮我换一台。</summary><p>I suggest a free replacement of my device.</p></details><h3 id="生活习惯"><a href="#生活习惯" class="headerlink" title="生活习惯"></a>生活习惯</h3><details><summary>我想和你分享一些我的生活习惯。</summary><p>I would like to share with you some of my living habits.</p></details><details><summary>我喜欢在早晨听音乐，这样可以让我精神换法。</summary><p>I perfer listening to music in the morning, which can refresh me.</p></details><h3 id="询问"><a href="#询问" class="headerlink" title="询问"></a>询问</h3><details><summary>如果你能提供一些关于住宿环境的信息，比如周边环境和交通规则，我将不胜感激。</summary><p>I really appreciate it | if you can offer me some information (about living there), such as the surroundings and traffic rules.</p></details><h3 id="通知"><a href="#通知" class="headerlink" title="通知"></a>通知</h3><details><summary>我很荣幸的宣布</summary><p>We have the great honor to announce that</p></details><details><summary>本校计划于7月4日至11日举办高中生夏令营活动。</summary><p>our university is planning to hold a summer camp for high school students from July 4th to 11th.</p></details><details><summary>在夏令营期间，我们会安排学生参观大学校园。</summary><p>During the camp, we’ll arrange students to visit our campus.</p></details><details><summary>我们急需志愿者</summary><p>we are badly in need of the volunteers.</p></details><details><summary>如果你愿意成为一名志愿者，请将你的简历发送至下面的邮箱:111@qq.com</summary><p>If you are willing to be a volunter, please send your resume to the following email address: <a href="mailto:&#x31;&#x31;&#x31;&#64;&#113;&#x71;&#x2e;&#99;&#x6f;&#x6d;">&#x31;&#x31;&#x31;&#64;&#113;&#x71;&#x2e;&#99;&#x6f;&#x6d;</a></p></details><h3 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h3><details><summary>你可以在业余时间看书。</summary><p>You can read in your leisure time.</p></details><details><summary>《老人与海》是海明威最著名的作品之一。</summary><p>The “Old Man and the Sea” is one of the Hemingway’s most famous works.</p></details><details><summary>这句名言“人可以毁灭，但不能被打败”摘自此书。</summary><p>This well-known saying that a man can be destroyed but not defeated is taken from this book.</p></details><details><summary>长城位于中国北方，有两千多年的历史。</summary><p>Located in northern China, the Great Wall has a history of over two thousand years.</p></details><details><summary>它是世界上最伟大的奇迹之一。</summary><p>it is one of the greatest wonders of the world.</p></details><details><summary>今天，长城不仅成为中国人的兴趣所在，也是全世界人民的兴趣所在。</summary><ul><li>Not only Chinese but also foreigners all are interested in the Great Wall Today, which is one of the greatest wonders of the world.</li><li>Today, the Great Wall has become a place of interest not only to the Chinese but to people from all over the world.</li></ul></details><h3 id="一个活动"><a href="#一个活动" class="headerlink" title="一个活动"></a>一个活动</h3><details><summary>我们将于5月15日上午9点到12点在操场举行慈善义卖。</summary><ul><li>A charity sale is to be hold form 9:00 to 12:00 a.m. on May 15th on our play ground.</li><li>There is a charity sale will to be held form 9:00 to 12:00 a.m. on May 15th on our play ground.</li></ul></details><details><summary>当天你们可以把自己不用的书，衣服和包等出售给需要的同学们。</summary><p>On that day, you can sell things (such as book, clothes, and bags that will not be used any more) to people who need them.</p></details><details><summary>你也可以从其他人那里买自己喜欢的东西。</summary><p>You can also buy {whatever you like} from others.</p></details><h3 id="哪儿都能用"><a href="#哪儿都能用" class="headerlink" title="哪儿都能用"></a>哪儿都能用</h3><details><summary>当我们到风景区旅游时，我们的视野可以开阔，因为实践经验可以成为我们书本知识的一个很好的补充。</summary><p>When <code>we travel to scenic spot</code>, our horizon can be broadened, as practical experience can be a great supplement for our book knowledge.</p></details><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><details><summary>请接受我真诚的道歉。</summary><p>Please accept my sincere apologies.</p></details><details><summary>希望您多多考虑我的计划。</summary><p>I hope that my plans could get your kind consideration.</p></details><details><summary>我期待着稍后与您讨论更多的细节。</summary><p>I’m looking forward to discussing more details with you later.</p></details><details><summary>我祝贺你在未来的岁月力取得成功</summary><p>I wish you success in the years ahead.</p></details><details><summary>祝你好运</summary><p>Wish you good luck!</p></details><details><summary>请带我向你的家人问好</summary><p>Please give my best regard to your family.</p></details><details><summary>期待你早日来中国旅游</summary><p>look forward to your early visit to China.</p></details><details><summary>我十分感谢您善意的帮助</summary><p>I am extremely grateful to you for your kind help.</p></details><details><summary>期待与你见面</summary><p>Look forword to meeting you.</p></details><details><summary>期待得到让人满意的答复。</summary><p>I look forward to a satisfactory reply.</p></details><h2 id="万能论点"><a href="#万能论点" class="headerlink" title="万能论点"></a>万能论点</h2><p>如果题目要求推荐电影，就推荐英语电影，原因就是英语很重要<br>如果题目要求请假，就说请假要去考英语考试，因为英语很重要<br>如果题目要求给一个上大学的人提建议，就说好好学英语，因为英语很重要<br>如果让帮助山区儿童，就教他们英语，因为英语很重要。</p><blockquote><p>就我而言，英语在人们的交流中起着至关重要的作用。因此，如果一个人真的很擅长的话，他可以在事业和日常生活中提高自己。</p></blockquote><details><summary>点击查看英语</summary><p>English, for my part, plays a crucial role in people’s communication. Therefore, if one really excels in it, he could improve himeself both in his carerrs and in his daily life.</p></details><h2 id="顺承"><a href="#顺承" class="headerlink" title="顺承"></a>顺承</h2><details><summary>第一点</summary><ul><li>to begin with</li><li>on the one hand</li></ul></details><details><summary>第二点</summary><ul><li>Then more importantly, </li><li>More imporantly</li></ul></details><details><summary>第三点</summary><ul><li>Another element I must point out here is that </li><li>last but not least</li></ul></details><script src="http://libs.baidu.com/jquery/2.0.0/jquery.min.js"></script><script src="/js/checkbox.js"></script>]]></content>
    
    
    <categories>
      
      <category>英语</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>英语二大作文模板</title>
    <link href="/post/english-composition/"/>
    <url>/post/english-composition/</url>
    
    <content type="html"><![CDATA[<h2 id="模板框架"><a href="#模板框架" class="headerlink" title="模板框架"></a>模板框架</h2><p>考研英语二中考三类作文</p><ul><li>柱状图 column</li><li>饼状图 pie chart</li><li>折线图 line graph</li></ul><p>参考：英语二模板 <a href="https://www.bilibili.com/video/BV1zv411w7Tg">https://www.bilibili.com/video/BV1zv411w7Tg</a><br>英语一模板 <a href="https://www.bilibili.com/video/BV1Pg41157X7">https://www.bilibili.com/video/BV1Pg41157X7</a></p><h3 id="必背词汇"><a href="#必背词汇" class="headerlink" title="必背词汇"></a>必背词汇</h3><p>表示上升趋势 increase; grow up; rocket up<br>表示下降趋势 decrease; go down; slump<br>表示平衡趋势 keep balance<br>表示波动趋势 fluctuate; wave<br>修饰副词 sharply(极速) dramatically(极速) steadily(平缓) slightly(一点点)</p><p>surged 飞增</p><h3 id="第一段"><a href="#第一段" class="headerlink" title="第一段"></a>第一段</h3><h4 id="开头"><a href="#开头" class="headerlink" title="开头"></a>开头</h4><details><summary>正如图表中准确反映的那样</summary><ul><li>① As is accurately reflected in the chart,</li></ul></details><h4 id="描述图片"><a href="#描述图片" class="headerlink" title="描述图片"></a>描述图片</h4><h5 id="饼状图"><a href="#饼状图" class="headerlink" title="饼状图"></a>饼状图</h5><details><summary>在做某事时影响某人的因素变化很大。</summary><ul><li>② factors, which <code>influenced somebody when doing something</code> , varied a lot. </li></ul></details><details><summary>根据给出的图表，做某件事的人所占比例相对较大，占37%，其次是做另一件事的人，占33%。</summary><ul><li>③ Based on the diagram given, <code>people</code> who <code>done something</code> take a comparatively large share, accounting for <code>37%</code>, followed by those <code>who done another thing</code>, a proportion of <code>33%</code>.</li></ul></details><h5 id="柱状图"><a href="#柱状图" class="headerlink" title="柱状图"></a>柱状图</h5><details><summary>第一件事是从2008年的25%左右增加到2009年的33%，</summary><p>The first thing increasing from around 25% in 2008 to 33% in 2009,</p></details><details><summary>而第二件事是从2008年的35%左右下降到2009年的25%。</summary><p>while the second thing declined from about 35% in 2008 to 25% in 2009.</p></details><details><summary>与此同时，第三件事的比例基本保持不变。</summary><p>Meanwhile, the proportion of the third thing remained basically the same.</p></details><details><summary>从2013年到2015年，这一现象在中国的数量都以不同的速度激增。</summary><ul><li>② the number of <code>what the phenomenon in China</code> both surged at a different increase from 2013 to 2015.</li></ul></details><h5 id="套话"><a href="#套话" class="headerlink" title="套话"></a>套话</h5><details><summary>这个图表所传达的远不止是这种现象的增长。相反，它反映了中国公民日益增长的文化需求。</summary><ul><li>③ What the diagram conveys goes far beyond merely the growth of <code>this phenomenon</code>. Instead, it reflected the ever-increasing cultural needs of Chinese citizens. </li></ul></details><h3 id="过渡句"><a href="#过渡句" class="headerlink" title="过渡句"></a>过渡句</h3><blockquote><p>可以放在第一段末尾，也可以放在第二段开头</p></blockquote><details><summary>至少有两个主要因素可以解释这种现象。</summary><ul><li>There are at least two primary factors accounting for such phenomenon.</li></ul></details><details><summary>有几个因素对这一现象产生了重大影响，其中有两个主要因素被搁置在最重要的位置，这一点不容忽视。</summary><ul><li>Several factors weigh heavily for this <code>phenomenon boom</code>, among which two major ones suspended on the top of the list which should never be overlooked.</li></ul></details><h3 id="第二段"><a href="#第二段" class="headerlink" title="第二段"></a>第二段</h3><h4 id="论点"><a href="#论点" class="headerlink" title="论点"></a>论点</h4><details><summary>当我们做某事时，我们的视野可以开阔，因为实践经验可以成为我们书本知识的一个很好的补充。</summary><ul><li>① In the first place, when <code>doing something</code>, our horizon can be broadened, as practical experience can be a great supplement for our book knowledge. </li></ul></details><h4 id="论据"><a href="#论据" class="headerlink" title="论据"></a>论据</h4><details><summary>根据最近的一项研究，越来越多的证据表明，大多数成功的社会精英也做过这件事。保持自己越来越好。</summary><ul><li>② Base on a most recent study, a growing body of evidence showd that most successful social elites, who <code>also done this thing</code>, hold themselves better and better.</li></ul></details><details><summary>例如，在学习了关于美丽文物的伟大诗篇之后，我们可以通过现场观景的印象来提高我们的鉴赏力。</summary><ul><li>② For example, after learning great poems of beautiful cultural relics, our appreciation can be enhanced by the impression of sight seeing on the spot.</li></ul></details><h4 id="二段末尾"><a href="#二段末尾" class="headerlink" title="二段末尾"></a>二段末尾</h4><details><summary>因此，从这个角度来看，没有什么比发展国家文化产业更有利、更具挑战性的了。</summary><ul><li>③ a classic case in point is one of my classmates, who _________, thus, from this standing point, there is nothing more beneficial and challenging than developing the nation’s cultural industry.</li></ul></details><h3 id="第三段"><a href="#第三段" class="headerlink" title="第三段"></a>第三段</h3><details><summary>鉴于上述论点，我们可以有把握地得出结论，随着物质和文化生活的不断增加，这种现象在未来十年将继续增长。</summary><p>In view of the arguments above, we can safely draw a conclusion that with the ever increasing material and cultural life, the phenomenon will keep growing in the forthcoming decade.</p></details><h2 id="完整模板"><a href="#完整模板" class="headerlink" title="完整模板"></a>完整模板</h2><h3 id="饼状图-1"><a href="#饼状图-1" class="headerlink" title="饼状图"></a>饼状图</h3><p>　　As is subtly mirrored in the pie chart, factors, which influenced somebody when doing something, varied a lot. Based on the diagram given, people who done something take a comparatively large share, accounting for 37%, followed by those who done another thing, a proportion of 33%.</p><p>　　正如饼图中微妙地反映的那样，在做某事时影响某人的因素变化很大。根据给出的图表，做某件事的人所占比例相对较大，占37%，其次是做另一件事的人，占33%。</p><p>　　There  are at least two primary factors accounting for such phenomenon. In the first place, when doing something, our horizon can be broadened, as practical experience can be a great supplement for our book knowledge. Based on a most recent study, a growing body of evidence showed that most successful social elites, who also done this thing. hold themselves better and better.</p><p>　　至少有两个主要因素可以解释这种现象。首先，当我们做某事时，我们的视野可以开阔，因为实践经验可以成为我们书本知识的一个很好的补充。根据最近的一项研究，越来越多的证据表明，大多数成功的社会精英也做过这件事。保持自己越来越好。</p><p>　　In view of the arguments above, we can safely draw a conclusion that with the ever increasing material and cultural life, the phenomenon will keep growing in the forthcoming decade.</p><p>　　鉴于上述论点，我们可以有把握地得出结论，随着物质和文化生活的不断增加，这种现象在未来十年将继续增长。</p><h3 id="折线图"><a href="#折线图" class="headerlink" title="折线图"></a>折线图</h3><p>　　As is subtly mirrored in the line chart, the number of what the phenomenon in China both surged at a different increace from 2013 to 2015. What the diagram conveys goes far beyond merely the growth of this phenomenon. Instead, it reflected the ever-increasing cultural needs of Chinese citizens.</p><p>　　正如折线图中微妙地反映的那样，2013年至2015年，中国这一现象的数量以不同的速度激增。这个图表所传达的远不止是这种现象的增长。相反，它反映了中国公民日益增长的文化需求。</p><p>　　There are at least two primary factors accounting for such phenomenon. In the first place, when we doing this thing, our horizon can be broadended, as practical expression can be a great supplement for our book knowledge. For example, after learning great poems of beautiful cultural relics, our appreciation can be enhanced by the impression of sight seeing on the spot. Thus, from this standing point, there is nothing more beneficial and challengiing than developing the nation’s cultural industry.</p><p>　　至少有两个主要因素可以解释这种现象。首先，当我们做这件事时，我们的视野可以成为我们书本知识的一个很好的补充。例如，在学习了关于美丽文物的伟大诗篇之后，我们可以通过现场观景的印象来提高我们的鉴赏力。因此，从这个角度来看，没有什么比发展民族文化产业更有利、更具挑战性的了。</p><p>　　In view of the arguments above, we can safely draw a conclusion that with the ever increasing material and cultural life, the phenomenon will keep growing in the forthcoming decade.</p><p>　　鉴于上述论点，我们可以有把握地得出结论，随着物质和文化生活的不断增加，这种现象在未来十年将继续增长。</p><script src="http://libs.baidu.com/jquery/2.0.0/jquery.min.js"></script><script src="/js/checkbox.js"></script>]]></content>
    
    
    <categories>
      
      <category>英语</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>通过刷题学习考研数据结构-排序</title>
    <link href="/post/data-structure-sort/"/>
    <url>/post/data-structure-sort/</url>
    
    <content type="html"><![CDATA[<blockquote><p>记录考研学习数据结构过程中写的代码，所有代码都有编译器可以直接运行的版本，理论与实践结合。</p></blockquote><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li><a href="/post/data-structure-list/">线性表</a></li><li><a href="/post/data-structure-bitree/">二叉树</a></li><li><a href="/post/data-structure-sort/">排序</a></li></ul><h1 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h1><p>掌握<strong>简单选择排序</strong>、<strong>直接插入排序</strong>、<strong>交换排序</strong>、<strong>希尔排序</strong>、<strong>快速排序</strong>、<strong>堆排序</strong>、<strong>二路归并排序</strong>、基数排序的算法思想和步骤，能够写出排序过程，能写出算法代码。</p><p>了解各种排序方法的特点，能够针对特定问题背景选择适当的排序方法。</p><h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><h3 id="直接插入排序"><a href="#直接插入排序" class="headerlink" title="直接插入排序"></a>直接插入排序</h3><figure class="highlight cpp"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">InsertSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j, t;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; len; i++) &#123; <span class="hljs-comment">// 数组是从0开始的，但是要从1开始比较</span><br>        <span class="hljs-keyword">if</span>(A[i - <span class="hljs-number">1</span>] &gt; A[i]) &#123; <span class="hljs-comment">// 如果前面元素大于当前的，则进行插入排序</span><br>            t = A[i]; <span class="hljs-comment">// 用临时变量存一下当前的元素，这样在后面的移动过程中就可以直接覆盖这个位置了</span><br>            <span class="hljs-keyword">for</span>(j = i; j &gt; <span class="hljs-number">0</span> &amp;&amp; A[j - <span class="hljs-number">1</span>] &gt; t; j--) &#123;  <span class="hljs-comment">// 如果前面的元素大于当前的，让前面的往后挪； 注意: 一定要和临时变量t比较，A[j - 1] 不能和A[j] 比较</span><br>                A[j] = A[j - <span class="hljs-number">1</span>];<br>            &#125;<br>            A[j] = t;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><details><summary>点击查看完整代码</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">InsertSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j, t;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; len; i++) &#123; <span class="hljs-comment">// 数组是从0开始的，但是要从1开始比较</span><br>        <span class="hljs-keyword">if</span>(A[i - <span class="hljs-number">1</span>] &gt; A[i]) &#123; <span class="hljs-comment">// 如果前面元素大于当前的，则进行插入排序</span><br>            t = A[i]; <span class="hljs-comment">// 用临时变量存一下当前的元素，这样在后面的移动过程中就可以直接覆盖这个位置了</span><br>            <span class="hljs-keyword">for</span>(j = i; j &gt; <span class="hljs-number">0</span> &amp;&amp; A[j - <span class="hljs-number">1</span>] &gt; t; j--) &#123;  <span class="hljs-comment">// 如果前面的元素大于当前的，让前面的往后挪； 注意: 一定要和临时变量t比较，A[j - 1] 不能和A[j] 比较</span><br>                A[j] = A[j - <span class="hljs-number">1</span>];<br>            &#125;<br>            A[j] = t;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">int</span> a[<span class="hljs-number">100005</span>];<br><span class="hljs-keyword">int</span> n;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a[i]);<br>    &#125;<br>    <span class="hljs-built_in">InsertSort</span>(a, n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>, a[i]);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">代码正确性测评：https://www.luogu.com.cn/problem/P1177</span><br><span class="hljs-comment">因为直接插入排序的时间复杂度为O(n^2) 所以会有两组数据超时 本题数据的超时时间是3.2秒</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure></details><h3 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ShellSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j, d, t;<br>    <span class="hljs-keyword">for</span>(d = len / <span class="hljs-number">2</span>; d &gt; <span class="hljs-number">0</span>; d /= <span class="hljs-number">2</span>) &#123; <span class="hljs-comment">// 步长变化</span><br>        <span class="hljs-keyword">for</span>(i = <span class="hljs-number">1</span>; i &lt; len; i += d) &#123; <span class="hljs-comment">// 下面跟直接插入排序一模一样，只是i每次加d</span><br>            <span class="hljs-keyword">if</span>(A[i - <span class="hljs-number">1</span>] &gt; A[i]) &#123;<br>                t = A[i];<br>                <span class="hljs-keyword">for</span>(j = i; j &gt; <span class="hljs-number">0</span> &amp;&amp; A[j - <span class="hljs-number">1</span>] &gt; t; j--) &#123;<br>                    A[j] = A[j - <span class="hljs-number">1</span>];<br>                &#125;<br>                A[j] = t;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><details><summary>点击查看完整代码</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ShellSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j, d, t;<br>    <span class="hljs-keyword">for</span>(d = len / <span class="hljs-number">2</span>; d &gt; <span class="hljs-number">0</span>; d /= <span class="hljs-number">2</span>) &#123; <span class="hljs-comment">// 步长变化</span><br>        <span class="hljs-keyword">for</span>(i = <span class="hljs-number">1</span>; i &lt; len; i += d) &#123; <span class="hljs-comment">// 下面跟直接插入排序一模一样，只是i每次加d</span><br>            <span class="hljs-keyword">if</span>(A[i - <span class="hljs-number">1</span>] &gt; A[i]) &#123;<br>                t = A[i];<br>                <span class="hljs-keyword">for</span>(j = i; j &gt; <span class="hljs-number">0</span> &amp;&amp; A[j - <span class="hljs-number">1</span>] &gt; t; j--) &#123;<br>                    A[j] = A[j - <span class="hljs-number">1</span>];<br>                &#125;<br>                A[j] = t;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">int</span> a[<span class="hljs-number">100005</span>];<br><span class="hljs-keyword">int</span> n;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a[i]);<br>    &#125;<br>    <span class="hljs-built_in">ShellSort</span>(a, n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>, a[i]);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">代码正确性测评：https://www.luogu.com.cn/problem/P1177</span><br><span class="hljs-comment">希尔排序的时间复杂度还没有解决，但是最坏的情况下是O(n^2) 当n在某个特定范围时，希尔排序的时间复杂度约为O(n^1.3) 所以会有两组数据超时</span><br><span class="hljs-comment">100,000 这个数据范围为需要执行相对时间 25,624,830</span><br><span class="hljs-comment">O(nlogn)的算法为  1,312,236 很明显差一个数量级</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure></details><h2 id="交换排序"><a href="#交换排序" class="headerlink" title="交换排序"></a>交换排序</h2><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">BubbleSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j;<br>    <span class="hljs-keyword">bool</span> flag;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; len - <span class="hljs-number">1</span>; i++) &#123;<br>        flag = <span class="hljs-literal">false</span>; <span class="hljs-comment">// 表示本趟是否发生交换</span><br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; len - i - <span class="hljs-number">1</span>; j++) &#123; <span class="hljs-comment">// 一趟冒泡排序，将最大的冒到最后面</span><br>            <span class="hljs-keyword">if</span>(A[j] &gt; A[j + <span class="hljs-number">1</span>]) &#123;<br>                <span class="hljs-built_in">swap</span>(A[j], A[j + <span class="hljs-number">1</span>]);<br>                flag = <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(flag == <span class="hljs-literal">false</span>) &#123;<br>            <span class="hljs-keyword">return</span> ; <span class="hljs-comment">// 本趟遍历后没有发生交换，说明已经有序了</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><details><summary>点击查看完整代码</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-keyword">int</span> &amp;a, <span class="hljs-keyword">int</span> &amp;b)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> t = a;<br>    a = b;<br>    b = t;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">BubbleSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j;<br>    <span class="hljs-keyword">bool</span> flag;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; len - <span class="hljs-number">1</span>; i++) &#123;<br>        flag = <span class="hljs-literal">false</span>; <span class="hljs-comment">// 表示本趟是否发生交换</span><br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; len - i - <span class="hljs-number">1</span>; j++) &#123; <span class="hljs-comment">// 一趟冒泡排序，将最大的冒到最后面</span><br>            <span class="hljs-keyword">if</span>(A[j] &gt; A[j + <span class="hljs-number">1</span>]) &#123;<br>                <span class="hljs-built_in">swap</span>(A[j], A[j + <span class="hljs-number">1</span>]);<br>                flag = <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(flag == <span class="hljs-literal">false</span>) &#123;<br>            <span class="hljs-keyword">return</span> ; <span class="hljs-comment">// 本趟遍历后没有发生交换，说明已经有序了</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">BubbleSort2</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j;<br>    <span class="hljs-keyword">bool</span> flag;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; len - <span class="hljs-number">1</span>; i++) &#123;<br>        flag = <span class="hljs-literal">false</span>; <span class="hljs-comment">// 表示本趟是否发生交换</span><br>        <span class="hljs-keyword">for</span>(j = len - <span class="hljs-number">1</span>; j &gt; i; j--) &#123; <span class="hljs-comment">// 一趟冒泡排序，将最小的冒到最前面</span><br>            <span class="hljs-keyword">if</span>(A[j] &lt; A[j - <span class="hljs-number">1</span>]) &#123;<br>                <span class="hljs-built_in">swap</span>(A[j], A[j - <span class="hljs-number">1</span>]);<br>                flag = <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(flag == <span class="hljs-literal">false</span>) &#123;<br>            <span class="hljs-keyword">return</span> ; <span class="hljs-comment">// 本趟遍历后没有发生交换，说明已经有序了</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">int</span> a[<span class="hljs-number">100005</span>];<br><span class="hljs-keyword">int</span> n;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a[i]);<br>    &#125;<br>    <span class="hljs-built_in">BubbleSort</span>(a, n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>, a[i]);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">代码正确性测评：https://www.luogu.com.cn/problem/P1177</span><br><span class="hljs-comment">因为冒泡排序的时间复杂度为O(n^2) 所以肯定会超时，至少在一般的情况下没有快速排序快</span><br><span class="hljs-comment">冒泡排序可以加一个flag标志位来进行优化，这样在好的情况下就能达到O(n)的时间复杂度</span><br><span class="hljs-comment">经过测试，不加flag的代码只能通过上面题目的1组测试数据，加上flag可以通过3组，明显快了很多</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure></details><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Partition</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> high)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> pivot = A[low]; <span class="hljs-comment">// n. 枢轴, 中心点;</span><br>    <span class="hljs-keyword">while</span>(low &lt; high) &#123;<br>        <span class="hljs-keyword">while</span>(low &lt; high &amp;&amp; A[high] &gt;= pivot) high--;<br>        <span class="hljs-comment">// 此时high指向的位置比pivot小，并且low这个位置的数字已经存到pivot里面了，可以直接覆盖</span><br>        A[low] = A[high];<br>        <span class="hljs-keyword">while</span>(low &lt; high &amp;&amp; A[low] &lt;= pivot) low++;<br>        <span class="hljs-comment">// 此时low指向的位置比pivotda，需要放到最右边需要的位置，high这个位置刚刚好</span><br>        A[high] = A[low];<br>    &#125;<br>    A[low] = pivot; <span class="hljs-comment">// 将枢轴元素放到中间</span><br>    <span class="hljs-keyword">return</span> low; <span class="hljs-comment">// 返回中间的值，以便二分查找使用</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">QuickSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> high)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(low &lt; high) &#123;<br>        <span class="hljs-keyword">int</span> mid = <span class="hljs-built_in">Partition</span>(A, low, high); <span class="hljs-comment">// 和二分查找很像，只不过不需要计算中间值了，而是通过Partition函数来划分</span><br>        <span class="hljs-built_in">QuickSort</span>(A, low, mid - <span class="hljs-number">1</span>); <span class="hljs-comment">// 中间的mid已经是正确的位置了，所以可以直接不管中间的mid</span><br>        <span class="hljs-built_in">QuickSort</span>(A, mid + <span class="hljs-number">1</span>, high);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><details><summary>点击查看完整代码</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Partition</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> high)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> pivot = A[low]; <span class="hljs-comment">// n. 枢轴, 中心点;</span><br>    <span class="hljs-keyword">while</span>(low &lt; high) &#123;<br>        <span class="hljs-keyword">while</span>(low &lt; high &amp;&amp; A[high] &gt;= pivot) high--;<br>        <span class="hljs-comment">// 此时high指向的位置比pivot小，并且low这个位置的数字已经存到pivot里面了，可以直接覆盖</span><br>        A[low] = A[high];<br>        <span class="hljs-keyword">while</span>(low &lt; high &amp;&amp; A[low] &lt;= pivot) low++;<br>        <span class="hljs-comment">// 此时low指向的位置比pivotda，需要放到最右边需要的位置，high这个位置刚刚好</span><br>        A[high] = A[low];<br>    &#125;<br>    A[low] = pivot; <span class="hljs-comment">// 将枢轴元素放到中间</span><br>    <span class="hljs-keyword">return</span> low; <span class="hljs-comment">// 返回中间的值，以便二分查找使用</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">QuickSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> high)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(low &lt; high) &#123;<br>        <span class="hljs-keyword">int</span> mid = <span class="hljs-built_in">Partition</span>(A, low, high); <span class="hljs-comment">// 和二分查找很像，只不过不需要计算中间值了，而是通过Partition函数来划分</span><br>        <span class="hljs-built_in">QuickSort</span>(A, low, mid - <span class="hljs-number">1</span>); <span class="hljs-comment">// 中间的mid已经是正确的位置了，所以可以直接不管中间的mid</span><br>        <span class="hljs-built_in">QuickSort</span>(A, mid + <span class="hljs-number">1</span>, high);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">int</span> a[<span class="hljs-number">100005</span>];<br><span class="hljs-keyword">int</span> n;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a[i]);<br>    &#125;<br>    <span class="hljs-built_in">QuickSort</span>(a, <span class="hljs-number">0</span>, n - <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>, a[i]);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">代码正确性测评：https://www.luogu.com.cn/problem/P1177</span><br><span class="hljs-comment">快速排序的平均时间复杂度为O(nlogn)，但是如果数组基本有序，则会降到O(n^2)，原因是每次划分的时候，选择的枢纽太不平均，可能每次都是最小的，这样就会划分成一个只有左孩子或右孩子的树，导致效率降低</span><br><span class="hljs-comment">这个代码时间太慢就是因为pivot每次都选择的第一个下标里面的数字，可能测试数据有基本排好序的情况</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure></details><h3 id="快速排序-随机选择枢纽"><a href="#快速排序-随机选择枢纽" class="headerlink" title="快速排序-随机选择枢纽"></a>快速排序-随机选择枢纽</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Partition</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> high)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> pos = low + <span class="hljs-built_in">rand</span>() % (high - low); <span class="hljs-comment">// 产生一个low到high的随机数</span><br>    <span class="hljs-keyword">int</span> t = A[low]; <span class="hljs-comment">// 直接与low位置的数字交换位置，这样以后的情况就和正常的快速排序一样了</span><br>    A[low] = A[pos];<br>    A[pos] = t;<br>    <span class="hljs-keyword">int</span> pivot = A[low]; <span class="hljs-comment">// n. 枢轴, 中心点;</span><br>    <span class="hljs-keyword">while</span>(low &lt; high) &#123;<br>        <span class="hljs-keyword">while</span>(low &lt; high &amp;&amp; A[high] &gt;= pivot) high--;<br>        <span class="hljs-comment">// 此时high指向的位置比pivot小，并且low这个位置的数字已经存到pivot里面了，可以直接覆盖</span><br>        A[low] = A[high];<br>        <span class="hljs-keyword">while</span>(low &lt; high &amp;&amp; A[low] &lt;= pivot) low++;<br>        <span class="hljs-comment">// 此时low指向的位置比pivotda，需要放到最右边需要的位置，high这个位置刚刚好</span><br>        A[high] = A[low];<br>    &#125;<br>    A[low] = pivot; <span class="hljs-comment">// 将枢轴元素放到中间</span><br>    <span class="hljs-keyword">return</span> low; <span class="hljs-comment">// 返回中间的值，以便二分查找使用</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">QuickSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> high)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(low &lt; high) &#123;<br>        <span class="hljs-keyword">int</span> mid = <span class="hljs-built_in">Partition</span>(A, low, high); <span class="hljs-comment">// 和二分查找很像，只不过不需要计算中间值了，而是通过Partition函数来划分</span><br>        <span class="hljs-built_in">QuickSort</span>(A, low, mid - <span class="hljs-number">1</span>); <span class="hljs-comment">// 中间的mid已经是正确的位置了，所以可以直接不管中间的mid</span><br>        <span class="hljs-built_in">QuickSort</span>(A, mid + <span class="hljs-number">1</span>, high);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><details><summary>点击查看完整代码</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;time.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Partition</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> high)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> pos = low + <span class="hljs-built_in">rand</span>() % (high - low); <span class="hljs-comment">// 产生一个low到high的随机数</span><br>    <span class="hljs-keyword">int</span> t = A[low]; <span class="hljs-comment">// 直接与low位置的数字交换位置，这样以后的情况就和正常的快速排序一样了</span><br>    A[low] = A[pos];<br>    A[pos] = t;<br>    <span class="hljs-keyword">int</span> pivot = A[low]; <span class="hljs-comment">// n. 枢轴, 中心点;</span><br>    <span class="hljs-keyword">while</span>(low &lt; high) &#123;<br>        <span class="hljs-keyword">while</span>(low &lt; high &amp;&amp; A[high] &gt;= pivot) high--;<br>        <span class="hljs-comment">// 此时high指向的位置比pivot小，并且low这个位置的数字已经存到pivot里面了，可以直接覆盖</span><br>        A[low] = A[high];<br>        <span class="hljs-keyword">while</span>(low &lt; high &amp;&amp; A[low] &lt;= pivot) low++;<br>        <span class="hljs-comment">// 此时low指向的位置比pivotda，需要放到最右边需要的位置，high这个位置刚刚好</span><br>        A[high] = A[low];<br>    &#125;<br>    A[low] = pivot; <span class="hljs-comment">// 将枢轴元素放到中间</span><br>    <span class="hljs-keyword">return</span> low; <span class="hljs-comment">// 返回中间的值，以便二分查找使用</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">QuickSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> high)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(low &lt; high) &#123;<br>        <span class="hljs-keyword">int</span> mid = <span class="hljs-built_in">Partition</span>(A, low, high); <span class="hljs-comment">// 和二分查找很像，只不过不需要计算中间值了，而是通过Partition函数来划分</span><br>        <span class="hljs-built_in">QuickSort</span>(A, low, mid - <span class="hljs-number">1</span>); <span class="hljs-comment">// 中间的mid已经是正确的位置了，所以可以直接不管中间的mid</span><br>        <span class="hljs-built_in">QuickSort</span>(A, mid + <span class="hljs-number">1</span>, high);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">int</span> a[<span class="hljs-number">100005</span>];<br><span class="hljs-keyword">int</span> n;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">srand</span>((<span class="hljs-keyword">unsigned</span>)<span class="hljs-built_in">time</span>(<span class="hljs-literal">NULL</span>));<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a[i]);<br>    &#125;<br>    <span class="hljs-built_in">QuickSort</span>(a, <span class="hljs-number">0</span>, n - <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>, a[i]);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">代码正确性测评：https://www.luogu.com.cn/problem/P1177</span><br><span class="hljs-comment">添加了随机选取枢纽的快速排序，只有开启O2优化才能通过，快速排序的写法很多，可能严蔚敏数据结构里面的这种写法比较适合理解，不适合实践，我用三色旗的写法写的快速排序是可以完美通过的</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure></details><h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><h3 id="简单选择排序"><a href="#简单选择排序" class="headerlink" title="简单选择排序"></a>简单选择排序</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SelectSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j, min;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; len; i++) &#123;<br>        min = i;<br>        <span class="hljs-keyword">for</span>(j = i + <span class="hljs-number">1</span>; j &lt; len; j++) &#123;<br>            <span class="hljs-keyword">if</span>(A[min] &gt; A[j]) &#123;<br>                min = j;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(min != i) &#123;<br>            <span class="hljs-built_in">swap</span>(A[min], A[i]);<br>        &#125;<br>        <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><details><summary>点击查看完整代码</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-keyword">int</span> &amp;a, <span class="hljs-keyword">int</span> &amp;b)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> t = a;<br>    a = b;<br>    b = t;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SelectSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j, min;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; len; i++) &#123;<br>        min = i;<br>        <span class="hljs-keyword">for</span>(j = i + <span class="hljs-number">1</span>; j &lt; len; j++) &#123;<br>            <span class="hljs-keyword">if</span>(A[min] &gt; A[j]) &#123;<br>                min = j;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(min != i) &#123;<br>            <span class="hljs-built_in">swap</span>(A[min], A[i]);<br>        &#125;<br>        <br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">int</span> a[<span class="hljs-number">100005</span>];<br><span class="hljs-keyword">int</span> n;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a[i]);<br>    &#125;<br>    <span class="hljs-built_in">SelectSort</span>(a, n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>, a[i]);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">代码正确性测评：https://www.luogu.com.cn/problem/P1177</span><br><span class="hljs-comment">因为简单选择排序的时间复杂度为O(n^2) 比较次数还很多 所以会有四组数据超时</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure></details><h3 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// 堆向下调整</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">HeapAdjust</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> k, <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    A[<span class="hljs-number">0</span>] = A[k];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = k * <span class="hljs-number">2</span>; i &lt;= len; i *= <span class="hljs-number">2</span>) &#123;<br>        <span class="hljs-keyword">if</span>(i &lt; len &amp;&amp; A[i] &lt; A[i + <span class="hljs-number">1</span>]) &#123; <span class="hljs-comment">// 比较左右子树节点 如果右边大，那么走右边</span><br>            i++;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(A[<span class="hljs-number">0</span>] &gt;= A[i]) &#123; <span class="hljs-comment">// 父节点与孩子节点比较 父节点比较大，不需要处理</span><br>            <span class="hljs-keyword">break</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-comment">// 如果父节点比较小，则需要交换</span><br>            A[k] = A[i]; <span class="hljs-comment">// 把孩子节点放到双亲</span><br>            k = i; <span class="hljs-comment">// 空出来孩子节点的位置，看这个孩子的孩子节点需不需要处理</span><br>        &#125;<br>    &#125;<br>    A[k] = A[<span class="hljs-number">0</span>]; <span class="hljs-comment">// 都交换完了，直接跳出</span><br>&#125;<br><br><span class="hljs-comment">// 建堆</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">BuildMaxHeap</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = len / <span class="hljs-number">2</span>; i &gt; <span class="hljs-number">0</span>; i--) &#123;<br>        <span class="hljs-built_in">HeapAdjust</span>(A, i, len);<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">HeapSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-built_in">BuildMaxHeap</span>(A, len);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = len; i &gt; <span class="hljs-number">1</span>; i--) &#123;<br>        <span class="hljs-built_in">swap</span>(A[<span class="hljs-number">1</span>], A[i]);<br>        <span class="hljs-built_in">HeapAdjust</span>(A, <span class="hljs-number">1</span>, i - <span class="hljs-number">1</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><details><summary>点击查看完整代码</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><br><span class="hljs-comment">// 堆向下调整</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">HeapAdjust</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> k, <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    A[<span class="hljs-number">0</span>] = A[k];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = k * <span class="hljs-number">2</span>; i &lt;= len; i *= <span class="hljs-number">2</span>) &#123;<br>        <span class="hljs-keyword">if</span>(i &lt; len &amp;&amp; A[i] &lt; A[i + <span class="hljs-number">1</span>]) &#123; <span class="hljs-comment">// 比较左右子树节点 如果右边大，那么走右边</span><br>            i++;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(A[<span class="hljs-number">0</span>] &gt;= A[i]) &#123; <span class="hljs-comment">// 父节点与孩子节点比较 父节点比较大，不需要处理</span><br>            <span class="hljs-keyword">break</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-comment">// 如果父节点比较小，则需要交换</span><br>            A[k] = A[i]; <span class="hljs-comment">// 把孩子节点放到双亲</span><br>            k = i; <span class="hljs-comment">// 空出来孩子节点的位置，看这个孩子的孩子节点需不需要处理</span><br>        &#125;<br>    &#125;<br>    A[k] = A[<span class="hljs-number">0</span>]; <span class="hljs-comment">// 都交换完了，直接跳出</span><br>&#125;<br><br><span class="hljs-comment">// 建堆</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">BuildMaxHeap</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = len / <span class="hljs-number">2</span>; i &gt; <span class="hljs-number">0</span>; i--) &#123;<br>        <span class="hljs-built_in">HeapAdjust</span>(A, i, len);<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-keyword">int</span> &amp;a, <span class="hljs-keyword">int</span> &amp;b)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> k = a;<br>    a = b;<br>    b = k;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">HeapSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-built_in">BuildMaxHeap</span>(A, len);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = len; i &gt; <span class="hljs-number">1</span>; i--) &#123;<br>        <span class="hljs-built_in">swap</span>(A[<span class="hljs-number">1</span>], A[i]);<br>        <span class="hljs-built_in">HeapAdjust</span>(A, <span class="hljs-number">1</span>, i - <span class="hljs-number">1</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> INF = <span class="hljs-number">1e6</span> + <span class="hljs-number">5</span>;<br><span class="hljs-keyword">int</span> a[INF];<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> n;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a[i]);<br>    &#125;<br>    <span class="hljs-built_in">HeapSort</span>(a, n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>, a[i]);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><h2 id="归并排序和基数排序"><a href="#归并排序和基数排序" class="headerlink" title="归并排序和基数排序"></a>归并排序和基数排序</h2><h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Merge</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> mid, <span class="hljs-keyword">int</span> heigh)</span> </span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = low; i &lt;= heigh; i++) &#123;<br>        B[i] = A[i];<br>    &#125;<br>    <span class="hljs-keyword">int</span> i = low, j = mid + <span class="hljs-number">1</span>, k = low;<br>    <span class="hljs-keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= heigh) &#123;<br>        <span class="hljs-keyword">if</span>(B[i] &lt;= B[j]) &#123; <span class="hljs-comment">// 比较i和j对应的数，谁大谁小</span><br>            A[k] = B[i++];<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            A[k] = B[j++];<br>        &#125;<br>        k++;<br>    &#125;<br>    <span class="hljs-keyword">while</span>(i &lt;= mid) A[k++] = B[i++];<br>    <span class="hljs-keyword">while</span>(j &lt;= heigh) A[k++] = B[j++];<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">MergeSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> heigh)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(low &lt; heigh) &#123;<br>        <span class="hljs-keyword">int</span> mid = (low + heigh) / <span class="hljs-number">2</span>;<br>        <span class="hljs-built_in">MergeSort</span>(A, low, mid);<br>        <span class="hljs-built_in">MergeSort</span>(A, mid + <span class="hljs-number">1</span>, heigh);<br>        <span class="hljs-built_in">Merge</span>(A, low, mid, heigh);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><details><summary>点击查看完整代码</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-keyword">int</span> n;<br><br><span class="hljs-keyword">int</span> *B; <span class="hljs-comment">// 辅助数组</span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Merge</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> mid, <span class="hljs-keyword">int</span> heigh)</span> </span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = low; i &lt;= heigh; i++) &#123;<br>        B[i] = A[i];<br>    &#125;<br>    <span class="hljs-keyword">int</span> i = low, j = mid + <span class="hljs-number">1</span>, k = low;<br>    <span class="hljs-keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= heigh) &#123;<br>        <span class="hljs-keyword">if</span>(B[i] &lt;= B[j]) &#123; <span class="hljs-comment">// 比较i和j对应的数，谁大谁小</span><br>            A[k] = B[i++];<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            A[k] = B[j++];<br>        &#125;<br>        k++;<br>    &#125;<br>    <span class="hljs-keyword">while</span>(i &lt;= mid) A[k++] = B[i++];<br>    <span class="hljs-keyword">while</span>(j &lt;= heigh) A[k++] = B[j++];<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">MergeSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> heigh)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(low &lt; heigh) &#123;<br>        <span class="hljs-keyword">int</span> mid = (low + heigh) / <span class="hljs-number">2</span>;<br>        <span class="hljs-built_in">MergeSort</span>(A, low, mid);<br>        <span class="hljs-built_in">MergeSort</span>(A, mid + <span class="hljs-number">1</span>, heigh);<br>        <span class="hljs-built_in">Merge</span>(A, low, mid, heigh);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">int</span> a[<span class="hljs-number">100005</span>];<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    B = (<span class="hljs-keyword">int</span> *)<span class="hljs-built_in">malloc</span>(n * <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(<span class="hljs-keyword">int</span>)); <span class="hljs-comment">// 辅助数组</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a[i]);<br>    &#125;<br>    <span class="hljs-built_in">MergeSort</span>(a, <span class="hljs-number">0</span>, n - <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>, a[i]);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><h2 id="基数排序"><a href="#基数排序" class="headerlink" title="基数排序"></a>基数排序</h2><p>暂未实现</p>]]></content>
    
    
    <categories>
      
      <category>数据结构</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>考研数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>英语单词总结</title>
    <link href="/post/english-words/"/>
    <url>/post/english-words/</url>
    
    <content type="html"><![CDATA[<p>自己总结的才有用，如果只是想找一些单词背，百度一大堆。</p><h2 id="容易弄混的"><a href="#容易弄混的" class="headerlink" title="容易弄混的"></a>容易弄混的</h2><p>背的单词多了，但是记得又不牢，这个时候很容易把一个单词当成另一个单词的意思，下面记录了我在学习英语过程中记混的单词，便于自己以后复习。可以尝试一下这个方法。</p><a class="btn" href="/tools/%E6%96%87%E7%AB%A0%E5%8D%95%E8%AF%8D%E6%8F%90%E5%8F%96.html?article=Nobel%20noble%20absorb%20absurd%20abundant%20boundary%20accelerate%20accumulate%20advance%20advanced%20advisable%20invisible%20affair%20affect%20affirm%20afford%20effect%20effort%20infect%20affiliate%20affluent%20fluent%20agency%20legacy%20ago%20ego%20analogy%20analyze%20ancestor%20assistant%20astronomy%20autonomy%20attempt%20tempt%20battle%20bottle%20belief%20relieve%20bell%20bill%20bench%20branch%20brunch%20bunch%20lunch%20biography%20biology%20bleak%20bless%20buck%20bulk%20campus%20couple%20captain%20caption%20cartoon%20cotton%20certain%20contain%20church%20coach%20couch%20command%20commend%20confer%20defer%20infer%20offer%20refer%20confidant%20confident%20contact%20contract%20contrast%20converse%20convert%20convey%20cooperate%20coordinate%20default%20defeat%20deficiency%20sufficient%20define%20definite%20deliberate%20elaborate%20deploy%20employ%20describe%20prescribe%20determine%20undermine%20disappear%20disappoint%20diversity%20university%20drag%20drug%20entire%20retire%20envy%20levy%20navy%20epidemic%20optimistic%20evolve%20revolve%20exaggerate%20extravagant%20extension%20extensive%20fail%20faith%20fall%20fell%20father%20further%20fear%20fever%20flatter%20flavor%20float%20flood%20floor%20giant%20grant%20grateful%20gratify%20hard%20hardly%20imitate%20intimate%20impart%20import%20impress%20suppress%20inherent%20inherit%20interpret%20interrupt%20issue%20tissue%20justice%20justify%20labour%20lobby%20lean%20loan%20liberty%20literate%20marry%20merry%20mouse%20mouth%20muscle%20musical%20nation%20notion%20nominal%20normal%20obese%20obsess%20parliament%20permanent%20partner%20paternal%20passive%20positive%20past%20post%20ponder%20powder%20power%20premise%20promise%20principal%20principle%20propose%20purpose%20race%20rare%20rate%20repetition%20reputation%20rough%20tough%20sentiment%20statement%20steep%20step%20submit%20summit%20surprise%20survey%20survive%20theater%20threat%20thrift%20thrive%20trap%20trip%20veto%20vote%20virtual%20visual%20wander%20wonder%20worse%20worst%20invert%20invent%20quite%20quiet%20faculty%20faulty%20ready%20readily%20temperature%20temporarily%20week%20weak%20solid%20sold%20insist%20consist%20sneak%20snake%20snack%20relief%20efficiency%20exact%20exert%20support%20suppose%20petrol%20patrol%20strangely%20strongly%20attribute%20contribute%20regime%20region%20option%20opinion"  title="传送门" target="_blank">点击背诵</a><ul><li><p>Nobel noble</p></li><li><p>absorb absurd</p></li><li><p>abundant boundary</p></li><li><p>accelerate accumulate</p></li><li><p>advance advanced</p></li><li><p>advisable invisible</p></li><li><p>affair affect affirm afford effect effort infect</p></li><li><p>affiliate affluent fluent</p></li><li><p>agency legacy</p></li><li><p>ago ego</p></li><li><p>analogy analyze</p></li><li><p>ancestor assistant</p></li><li><p>astronomy autonomy</p></li><li><p>attempt tempt</p></li><li><p>battle bottle</p></li><li><p>belief relieve</p></li><li><p>bell bill</p></li><li><p>bench branch brunch bunch lunch</p></li><li><p>biography biology</p></li><li><p>bleak bless</p></li><li><p>buck bulk</p></li><li><p>campus couple</p></li><li><p>captain caption</p></li><li><p>cartoon cotton</p></li><li><p>certain contain</p></li><li><p>church coach couch</p></li><li><p>command commend</p></li><li><p>confer defer infer offer refer</p></li><li><p>confidant confident</p></li><li><p>contact contract contrast</p></li><li><p>converse convert convey</p></li><li><p>cooperate coordinate</p></li><li><p>default defeat</p></li><li><p>deficiency sufficient</p></li><li><p>define definite</p></li><li><p>deliberate elaborate</p></li><li><p>deploy employ</p></li><li><p>describe prescribe</p></li><li><p>determine undermine</p></li><li><p>disappear disappoint</p></li><li><p>diversity university</p></li><li><p>drag drug</p></li><li><p>entire retire</p></li><li><p>envy levy navy</p></li><li><p>epidemic optimistic</p></li><li><p>evolve revolve</p></li><li><p>exaggerate extravagant</p></li><li><p>extension extensive</p></li><li><p>fail faith fall fell</p></li><li><p>father further</p></li><li><p>fear fever</p></li><li><p>flatter flavor</p></li><li><p>float flood floor</p></li><li><p>giant grant</p></li><li><p>grateful gratify</p></li><li><p>hard hardly</p></li><li><p>imitate intimate</p></li><li><p>impart import</p></li><li><p>impress suppress</p></li><li><p>inherent inherit</p></li><li><p>interpret interrupt</p></li><li><p>issue tissue</p></li><li><p>justice justify</p></li><li><p>labour lobby</p></li><li><p>lean loan</p></li><li><p>liberty literate</p></li><li><p>marry merry</p></li><li><p>mouse mouth</p></li><li><p>muscle musical</p></li><li><p>nation notion</p></li><li><p>nominal normal</p></li><li><p>obese obsess</p></li><li><p>parliament permanent</p></li><li><p>partner paternal</p></li><li><p>passive positive</p></li><li><p>past post</p></li><li><p>ponder powder power</p></li><li><p>premise promise</p></li><li><p>principal principle</p></li><li><p>propose purpose</p></li><li><p>race rare rate</p></li><li><p>repetition reputation</p></li><li><p>rough tough</p></li><li><p>sentiment statement</p></li><li><p>steep step</p></li><li><p>submit summit</p></li><li><p>suppress surprise</p></li><li><p>survey survive surgery</p></li><li><p>theater threat thrift thrive</p></li><li><p>trap trip</p></li><li><p>veto vote</p></li><li><p>virtual visual</p></li><li><p>wander wonder</p></li><li><p>worse worst</p></li><li><p>invert invent</p></li><li><p>quite quiet</p></li><li><p>faculty faulty</p></li><li><p>ready readily</p></li><li><p>temperature temporarily</p></li><li><p>week weak</p></li><li><p>determine undermine</p></li><li><p>parliament permanent</p></li><li><p>solid sold</p></li><li><p>purpose propose</p></li><li><p>contrast contract</p></li><li><p>insist consist</p></li><li><p>sneak snake snack</p></li><li><p>belief relief</p></li><li><p>deficiency efficiency</p></li><li><p>exact exert</p></li><li><p>support suppose</p></li><li><p>sneak snack</p></li><li><p>petrol patrol</p></li><li><p>strangely strongly</p></li><li><p>attribute contribute</p></li><li><p>regime region</p></li><li><p>option opinion</p></li><li><p>previous precious</p></li></ul><ul><li>concert conceit</li><li>cue clue</li><li>sold solid</li><li>objective objection</li><li>welfare wolf</li><li>aggravate aggressive</li><li>further future</li><li>temper tempt</li><li>plain plant</li><li>concert convert converse concern</li><li>refuge refuse</li><li>concert concern</li><li>sacred secret</li><li>loser laser</li><li>suggest suggestive</li><li>wildlife welfare</li><li>junior juror</li><li>recent resent</li><li>estimate esteem</li><li>obvious observe</li><li>phase phrase</li><li>quota quote</li><li>implement intimation</li><li>theory thorny</li><li>chamber charter</li><li>adapt adopt</li><li>community communicate</li><li>territory terrorist treasury</li><li>opinion option</li><li>quality qualify</li><li>infer refer confer</li><li>augment argument</li><li>farm firm</li><li>scarcity scrutiny</li><li>bleak leak</li><li>doom deem</li><li>giant grant</li><li>define definite confine finite</li><li>lane loan</li><li>portable suitable</li><li>regulate regular</li><li>liberate liberty</li><li>define definite</li><li>contempt attempt</li><li>ponder powder</li><li>blank bank</li><li>generate generous generation</li><li></li></ul><h2 id="同义词替换"><a href="#同义词替换" class="headerlink" title="同义词替换"></a>同义词替换</h2><ul><li>learn master</li><li>plan approch</li><li>interesting entertaining</li></ul><h2 id="单词自动排列代码"><a href="#单词自动排列代码" class="headerlink" title="单词自动排列代码"></a>单词自动排列代码</h2><p>因为上面的的单词在不断的增加，数量多了以后很不好管理，写了一个自动排序的小工具，可以将每行按字典序排列，并且根据每行的第一个单词进行整行的排序。</p><figure class="highlight cpp"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;map&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br>vector&lt;map&lt;string, <span class="hljs-keyword">int</span>&gt; &gt; V;<br><span class="hljs-keyword">int</span> row = <span class="hljs-number">-1</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(map&lt;string, <span class="hljs-keyword">int</span>&gt; a, map&lt;string, <span class="hljs-keyword">int</span>&gt; b )</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> a.<span class="hljs-built_in">begin</span>()-&gt;first &lt; b.<span class="hljs-built_in">begin</span>()-&gt;first;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    string a;<br>    <span class="hljs-keyword">while</span>(cin &gt;&gt; a) &#123;<br>        <span class="hljs-keyword">if</span>(a == <span class="hljs-string">&quot;-&quot;</span>) &#123;<br>            row++;<br>            map&lt;string, <span class="hljs-keyword">int</span>&gt; m;<br>            V.<span class="hljs-built_in">push_back</span>(m);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            V[row][a] = <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">sort</span>(V.<span class="hljs-built_in">begin</span>(), V.<span class="hljs-built_in">end</span>(), cmp);<br>    cout &lt;&lt; <span class="hljs-string">&quot;---------&quot;</span> &lt;&lt; endl;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt;= row; i++) &#123;<br>        map&lt;string, <span class="hljs-keyword">int</span>&gt; m = V[i];<br>        map&lt;string, <span class="hljs-keyword">int</span>&gt;::iterator it = m.<span class="hljs-built_in">begin</span>();<br>        cout &lt;&lt; <span class="hljs-string">&quot;-&quot;</span>; <br>        <span class="hljs-keyword">for</span>(; it != m.<span class="hljs-built_in">end</span>(); it++) &#123;<br>            cout &lt;&lt; <span class="hljs-string">&quot; &quot;</span> &lt;&lt; (*it).first;<br>        &#125;<br>        cout &lt;&lt; endl;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">处理前<br><span class="hljs-bullet">- </span>disappoint disappear<br><span class="hljs-bullet">- </span>caption captain<br><span class="hljs-bullet">- </span>confident confidant<br><span class="hljs-bullet">- </span>effrot effect affect afford infect affirm affair<br><span class="hljs-bullet">- </span>accumulate accelerate<br><span class="hljs-bullet">- </span>bleak bless<br><span class="hljs-bullet">- </span>marry merry<br><span class="hljs-bullet">- </span>couch coach<br><span class="hljs-bullet">- </span>race rate rare<br><span class="hljs-bullet">- </span>exaggerate extravagant<br>处理后<br><span class="hljs-bullet">- </span>accelerate accumulate<br><span class="hljs-bullet">- </span>affair affect affirm afford effect effrot infect<br><span class="hljs-bullet">- </span>bleak bless<br><span class="hljs-bullet">- </span>captain caption<br><span class="hljs-bullet">- </span>coach couch<br><span class="hljs-bullet">- </span>confidant confident<br><span class="hljs-bullet">- </span>disappear disappoint<br><span class="hljs-bullet">- </span>exaggerate extravagant<br><span class="hljs-bullet">- </span>marry merry<br><span class="hljs-bullet">- </span>race rare rate<br></code></pre></td></tr></table></figure><div class="note note-success">            <p>相关推荐：</p><ul><li><a href="/post/reciting-words/">背单词经验总结</a></li><li><a href="/post/reading-turning/">考研阅读中的转折</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>英语</category>
      
    </categories>
    
    
    <tags>
      
      <tag>英语</tag>
      
      <tag>考研</tag>
      
      <tag>背单词</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>背单词经验总结</title>
    <link href="/post/reciting-words/"/>
    <url>/post/reciting-words/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　学英语都这么多年了，一天背一个单词现在都背4745个单词了，然而我居然才背了2-3千个。其中2千个可能还是考研期间背的。</p><p>　　之前一直看到各式各样背单词相关的文章，光10天背完考研词汇这个话题都一大堆，然而我这样的梦都不敢做。</p><p>　　如果一个人真的10天背完考研词汇了，我感觉他肯定本身基础就比较好，对他来说可能一大半单词都已经会背了，现在背单词只是复习，常人很难模仿。</p><p>　　之前也听刘晓燕老师说过：“你们买的单词书都看过几页，是不是这么多年，买了那么多单词书，都没有看完过一本”。现在想想确实也是，买的单词书从来没看完过。</p><p>　　同时我看到了旁边的单词书，很新，就翻过前面几页。这个时候突然有个想法，要不要也把单词书翻一遍。<br><img src="/images/uploads/Reciting-Words-6.jpg"><br>　　想那么多不如实践实践，直接开干。</p><h2 id="第一遍翻单词书"><a href="#第一遍翻单词书" class="headerlink" title="第一遍翻单词书"></a>第一遍翻单词书</h2><p>　　2021年8月27号到8月28号下午，除了正常的复习单词时间，又专门增加了时间用来翻书，总共用了148分钟，把我的单词书翻了一遍，并且把每一单元用时也记录了一下。</p><p><img src="/images/uploads/Reciting-Words-1.jpg" alt="2021年9月8号"></p><p>　　虽然并没有把翻过的单词背会，但是突然就有了一种莫名其妙的成就感，形容不出来，请自行尝试后体会。</p><p>　　在背单词的过程中，用卡片挡着单词的中文意思，如果这个单词很简单，并且百分百会了，那么做一个标记，下次复习可以直接忽略这个单词。并且再以后的复习过程中，也要不断的进行标记。</p><p><img src="/images/uploads/Reciting-Words-2.jpg"></p><h2 id="第二遍过单词书"><a href="#第二遍过单词书" class="headerlink" title="第二遍过单词书"></a>第二遍过单词书</h2><p>　　这一次的目标是把每一单元的单词认真的学一遍，并且学会以后加入到墨墨背单词里面，每天只需要按着app复习就好了，毕竟单词是用来忘的，需要天天复习。不建议完全不会就跟着app背，这样很容易产生死循环，每天都在背那几个不会的单词。</p><p>　　第二遍复习的时间线很长，我用的墨墨背单词会在复习完今天单词的情况下，并且还有精力的时候才会选择背新单词。所以我到今天9月9号，也才复习了13单元，而且里面有7单元还是之前都背过的。</p><p>　　下面是我墨墨背单词最近一段时间的学习情况，每天复习单词的数量太多了，建议复习的时候把不会的单词写到本子上，然后一天之内多看几眼。</p><p><img src="/images/uploads/Reciting-Words-3.jpg"></p><p><img src="/images/uploads/Reciting-Words-5.jpg" alt="第二次的计划卡片-2021年9月8号"></p><h2 id="第三遍背单词书"><a href="#第三遍背单词书" class="headerlink" title="第三遍背单词书"></a>第三遍背单词书</h2><p>　　第三遍的目标是把前面没有标记的单词，也就是完全不会的单词复习一遍，并且记录复习一遍的时间。每一单元用时肯定不会多，这样只要有零散的时间，就可以复习一遍。你可以想想一下，当把这么多单元的时间全记录下来的时候，再复习的时候多爽，每次可以很有针对性的去复习。</p><p><img src="/images/uploads/Reciting-Words-4.jpg" alt="第三遍时候的计划卡-2021年9月8号"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>　　第一遍肯定是找了相对来说整块的时间看的，后面的就是零散的时间了，一次一单元，没事儿了就可以翻一遍，我有好几单元翻一遍才用1-2分钟，所以有空闲时间就能多翻翻。</p><p>　　这是目前我找到的很适合我的方法，这个方法很有成就感，一下子能复习很多单词，并且通过记录时间，看着复习时间一次比一次减少，很有打怪刷级的快感，根本停不下来。</p><p>　　希望你也能找到属于你的方法。</p><h2 id="后续记录"><a href="#后续记录" class="headerlink" title="后续记录"></a>后续记录</h2><h3 id="2021年9月18日"><a href="#2021年9月18日" class="headerlink" title="2021年9月18日"></a>2021年9月18日</h3><p>　　已经9天没有学过新单词了，现在每天写一篇阅读，然后看视频精讲，总共要花费2个小时。单词只是每天复习一下墨墨，最近几天遇到好多不会的单词，每天复习忘记的单词太多，今天晚上把前三天的单词复习了一遍，希望明天学习的时候不会的单词能少一点，这样就可以继续背新单词了。</p><p><img src="/images/uploads/reciting-words-0918.jpg"></p><p><img src="/images/uploads/reciting-words-0918-2.jpg"></p><p><img src="/images/uploads/reciting-words-0918-3.jpg" alt="今天晚上复习前三天单词，不会的单词"></p><div class="note note-success">            <p>相关推荐：</p><ul><li><a href="/post/english-words/">英语单词总结</a></li><li><a href="/post/reading-turning/">考研阅读中的转折</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>英语</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>英语</tag>
      
      <tag>考研</tag>
      
      <tag>背单词</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网站推荐</title>
    <link href="/post/best-loved-websits/"/>
    <url>/post/best-loved-websits/</url>
    
    <content type="html"><![CDATA[<blockquote><p>鼠标移动到网址上面，可以显示详细的介绍</p></blockquote><h2 id="小工具"><a href="#小工具" class="headerlink" title="小工具"></a>小工具</h2><a class="btn" href="https://tools.pdf24.org/zh/"  title="免费且易于使用的在线PDF工具" target="_blank">在线PDF工具</a> <a class="btn" href="https://getsimnum.caict.ac.cn/m/#/"  title="【工信部反诈中心】电话卡数量查询服务" target="_blank">电话卡数量查询</a> <a class="btn" href="https://cloudconvert.com/"  title="在线文档视频图片格式转换，能把包括.tex格式的文档转换成任意格式" target="_blank">在线格式转换</a> <a class="btn" href="https://wantwords.thunlp.org/"  title="通过深度学习算法" target="_blank">反向词典</a> <a class="btn" href="http://xiezuocat.com/"  title="AI自动帮你修改文档中的文字和句子错误" target="_blank">文档修订</a> <a class="btn" href="https://draw.io"  title="一款在线画流程图软件" target="_blank">流程图</a> <a class="btn" href="https://sina.lt/"  title="网址缩短" target="_blank">新浪短网址</a> <a class="btn" href="https://cowtransfer.com/"  title="文件临时分享工具，速度比较快" target="_blank">奶牛快传</a> <a class="btn" href="https://unlock.torfirefox.name/"  title="移除已购音乐的加密保护，可以将下载的只能用对应播放器播放的音乐解密" target="_blank">音乐解密</a> <a class="btn" href="https://123.w3cschool.cn/webtools"  title="整理一些开发者常用的在线工具" target="_blank">在线开发工具库</a> <h2 id="PDF工具"><a href="#PDF工具" class="headerlink" title="PDF工具"></a>PDF工具</h2><a class="btn" href="https://tools.pdf24.org/zh/"  title="免费且易于使用的在线PDF工具" target="_blank">在线PDF工具</a> <h2 id="图片壁纸"><a href="#图片壁纸" class="headerlink" title="图片壁纸"></a>图片壁纸</h2><a class="btn" href="https://bigjpg.com/"  title="使用最新人工智能深度学习技术——深度卷积神经网络。它会将噪点和锯齿的部分进行补充，实现图片的无损放大" target="_blank">AI人工智能图片放大</a> <a class="btn" href="https://bobopic.com/category/4k"  title="4K高清手绘壁纸，该网站还有其他好看的图片" target="_blank">4K高清手绘壁纸</a> <h2 id="PPT"><a href="#PPT" class="headerlink" title="PPT"></a>PPT</h2><a class="btn" href="https://www.52ppt.com"  title="免费的ppt模板下载" target="_blank">PPT模板</a> <h2 id="未分类"><a href="#未分类" class="headerlink" title="未分类"></a>未分类</h2><a class="btn" href="https://www.helloworld.net/html2md"  title="undefined" target="_blank">HTML转md</a> <h2 id="考研相关"><a href="#考研相关" class="headerlink" title="考研相关"></a>考研相关</h2><a class="btn" href="http://www.chinadegrees.cn/xwyyjsjyxx/xkpgjg/"  target="_blank">第四轮学科评估</a> <h2 id="英语学习"><a href="#英语学习" class="headerlink" title="英语学习"></a>英语学习</h2><a class="btn" href="http://www.en998.com/sentence/"  title="英语语法分析器：如果临时需要VIP可以私聊我" target="_blank">语法分析器</a> <a class="btn" href="testyourvocab.com"  title="undefined" target="_blank">词汇量测试</a> <h2 id="数学学习"><a href="#数学学习" class="headerlink" title="数学学习"></a>数学学习</h2><a class="btn" href="https://www.geogebra.org/"  title="免费的数字工具" target="_blank">数学工具箱</a> <h2 id="系统工具"><a href="#系统工具" class="headerlink" title="系统工具"></a>系统工具</h2><a class="btn" href="http://msdn.iseeyu.com/"  title="Windows原版镜像下载" target="_blank">Windows镜像下载</a> <h2 id="编程开发"><a href="#编程开发" class="headerlink" title="编程开发"></a>编程开发</h2><a class="btn" href="https://gitclone.com/docs/feature/gitclone_web"  title="GitHub clone提速" target="_blank">GitHub提速</a> <a class="btn" href="https://123.w3cschool.cn/webtools"  title="整理一些开发者常用的在线工具" target="_blank">在线开发工具库</a> <a class="btn" href="https://www.layoutit.com/build#"  title="undefined" target="_blank">bootstrap 4 可视化布局</a> <a class="btn" href="https://vscode.dev"  title="undefined" target="_blank">在线VScode</a> <a class="btn" href="ping.pe"  title="undefined" target="_blank">在线ping工具</a> <a class="btn" href="https://www.webpackjs.com/"  target="_blank">webpack 中文文档</a> <h2 id="学习教程"><a href="#学习教程" class="headerlink" title="学习教程"></a>学习教程</h2><a class="btn" href="https://www.runoob.com/"  title="提供了编程的基础技术教程" target="_blank">菜鸟教程</a> <a class="btn" href="http://www.atguigu.com/"  title="undefined" target="_blank">尚硅谷</a> <h2 id="代码版本控制"><a href="#代码版本控制" class="headerlink" title="代码版本控制"></a>代码版本控制</h2><a class="btn" href="https://svnbucket.com/"  target="_blank">SVN 代码托管平台</a> <h2 id="微信公众号"><a href="#微信公众号" class="headerlink" title="微信公众号"></a>微信公众号</h2><a class="btn" href="https://xiumi.us/#/"  title="undefined" target="_blank">秀米公众号排版</a> <a class="btn" href="https://mp.weixin.qq.com/"  title="微信公众号平台" target="_blank">微信公众号</a> <a class="btn" href="https://editor.mdnice.com/"  title="微信公众号md编辑器" target="_blank">微信公众号md编辑器</a> <h2 id="绿色软件下载"><a href="#绿色软件下载" class="headerlink" title="绿色软件下载"></a>绿色软件下载</h2><a class="btn" href="https://www.ghxi.com/"  title="绿色软件" target="_blank">果核剥壳</a> <h2 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h2><a class="btn" href="http://momentjs.cn/"  target="_blank">时间日期格式-moment-js</a> <h2 id="前端学习"><a href="#前端学习" class="headerlink" title="前端学习"></a>前端学习</h2><a class="btn" href="https://flukeout.github.io"  title="在线练习css选择器" target="_blank">css选择器练习</a> <a class="btn" href="http://www.flexboxdefense.com/"  title="undefined" target="_blank">flex布局练习小游戏</a> <a class="btn" href="https://animate.style/"  title="纯css动画库" target="_blank">css动画库</a> <h2 id="css练习"><a href="#css练习" class="headerlink" title="css练习"></a>css练习</h2><a class="btn" href="https://flukeout.github.io"  title="在线练习css选择器" target="_blank">css选择器练习</a> <a class="btn" href="http://www.flexboxdefense.com/"  title="undefined" target="_blank">flex布局练习小游戏</a> <h2 id="视频下载"><a href="#视频下载" class="headerlink" title="视频下载"></a>视频下载</h2><a class="btn" href="https://xbeibeix.com/api/bilibili/"  title="undefined" target="_blank">哔哩哔哩视频下载</a> <h2 id="前端设计"><a href="#前端设计" class="headerlink" title="前端设计"></a>前端设计</h2><a class="btn" href="http://loading.io"  title="undefined" target="_blank">各种各样的加载样式</a> <a class="btn" href="https://csslayout.io/"  title="好看的css布局" target="_blank">CSS 布局</a> <h2 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h2><a class="btn" href="https://www.yikm.net/"  title="模拟小霸王游戏机" target="_blank">小霸王，其乐无穷</a> <h2 id="ssh工具"><a href="#ssh工具" class="headerlink" title="ssh工具"></a>ssh工具</h2><a class="btn" href="https://mobaxterm.mobatek.net/"  title="很好用的ssh工具" target="_blank">MobaXterm</a> <a class="btn" href="https://sm.myapp.com/original/net_app/putty_V0.63.0.0.43510830.rar"  title="非常迷你的ssh工具" target="_blank">putty</a> ]]></content>
    
    
    <categories>
      
      <category>推荐分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>推荐</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows10家庭版VMWare15.5安装虚拟机启动蓝屏问题</title>
    <link href="/post/vmware-linux-error/"/>
    <url>/post/vmware-linux-error/</url>
    
    <content type="html"><![CDATA[<p>今天在自己的电脑上了装虚拟机，操作系统是windows10家庭版，vmware版本是15.5 ，安装操作系统centos7. 安装软件和创建虚拟机的方式很简单，也没啥问题，就是每次已启动就蓝屏，重启。</p><p><img src="https://img-blog.csdnimg.cn/20210627175615733.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xzcWluZ2Zlbmc=,size_16,color_FFFFFF,t_0"></p><p>然后就在网上找解决方案。</p><p>第一步是打开了win10家庭版的Hyper-V，并禁用。参考地址： <a href="http://www.china-tom.com/template.asp?articleid=498">运行VMware15.5.5虚拟机导致win10蓝屏死机 (china-tom.com)</a></p><p>主要就是打开了windows功能中的虚拟机平台，关闭了hyper-v,如果没有这个选项，文章中说明了如何执行脚本。</p><p><img src="https://img-blog.csdnimg.cn/2021062717580466.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xzcWluZ2Zlbmc=,size_16,color_FFFFFF,t_0"></p><p>按照文档进行了一番操作，最后发现这次确实不蓝屏了，但是虚拟机启动提示错误，不兼容。</p><p><img src="https://img-blog.csdnimg.cn/20210627180004388.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xzcWluZ2Zlbmc=,size_16,color_FFFFFF,t_0"></p><p>第二步，继续找解决方案，参考地址：<a href="https://blog.csdn.net/luckysign/article/details/101915064">VMware Workstation 与 Device/Credential Guard 不兼容!_luckysign的博客-CSDN博客</a></p><p>主要就是禁用里面的HV主机服务。 按照文章又干了一遍。再次重启启动虚拟机，发现又TMD的蓝屏了，这是转了一个圈么。</p><p>最后又查了解决方案。参考地址：<a href="https://www.zhihu.com/question/449762599">(43 封私信 / 46 条消息) 小新15装vmware虚拟机 运行蓝屏关机怎么? - 知乎 (zhihu.com)</a></p><p>这次主要是把15.5版本卸载了，重新下载了vmware16版本，安装后，启动。ok了。</p><p><img src="https://img-blog.csdnimg.cn/20210627180239649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xzcWluZ2Zlbmc=,size_16,color_FFFFFF,t_0"></p><p>如果大家也遇到了类似问题，可以参考下。我觉得如果也是家庭版，建议先安装vmware16，由于后面就正常了，所有我也不知道前两步骤的操作是否也有必要。这里也没法验证了。大家处理的时候还是先装16，如果16直接没问题最好了，如果有问题，在进行一二两个步骤。</p><blockquote><p>本文转自 <a href="https://blog.csdn.net/lsqingfeng/article/details/118277447">https://blog.csdn.net/lsqingfeng/article/details/118277447</a><br>如有侵权，请联系删除。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>理科生的浪漫之Python绘图</title>
    <link href="/post/eac5d358/"/>
    <url>/post/eac5d358/</url>
    
    <content type="html"><![CDATA[<p>整理了一下自己看到过的并且觉的好玩的Python代码，来源于网络，我知道位置的都注明有出处。</p><span id="more"></span><h2 id="动态draw-heart"><a href="#动态draw-heart" class="headerlink" title="动态draw heart"></a>动态draw heart</h2><p><img src="https://image.glwsq.cn/img/%E7%90%86%E7%A7%91%E7%94%9F%E7%9A%84%E6%B5%AA%E6%BC%AB%E4%B9%8BPython%E7%BB%98%E5%9B%BE-2022-04-21-17-59-38.gif"></p><details><summary>代码</summary><figure class="highlight py"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><pre><code class="hljs py"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-keyword">from</span> turtle <span class="hljs-keyword">import</span> *<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">curvemove</span>():</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">200</span>):<br>        right(<span class="hljs-number">1</span>)<br>        forward(<span class="hljs-number">1</span>)<br>color(<span class="hljs-string">&#x27;red&#x27;</span>,<span class="hljs-string">&#x27;pink&#x27;</span>)        <br>begin_fill()<br>left(<span class="hljs-number">140</span>)<br>forward(<span class="hljs-number">111.65</span>)<br>curvemove()<br>left(<span class="hljs-number">120</span>)<br>curvemove()<br>forward(<span class="hljs-number">111.65</span>)<br>end_fill()<br>done()<br><br></code></pre></td></tr></table></figure></details><h2 id="波动心形线"><a href="#波动心形线" class="headerlink" title="波动心形线"></a>波动心形线</h2><p><img src="https://image.glwsq.cn/img/%E7%90%86%E7%A7%91%E7%94%9F%E7%9A%84%E6%B5%AA%E6%BC%AB%E4%B9%8BPython%E7%BB%98%E5%9B%BE-heart2.gif"></p><details><summary>代码</summary><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-comment"># 原文链接：https://blog.csdn.net/qq_27017791/article/details/85040244</span><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> matplotlib.animation <span class="hljs-keyword">import</span> FuncAnimation<br>fig, ax = plt.subplots()<br>ln, = ax.plot([], [], <span class="hljs-string">&#x27;-&#x27;</span>,color=<span class="hljs-string">&#x27;r&#x27;</span>, lw=<span class="hljs-number">1</span>)<br>time_template = <span class="hljs-string">&#x27;LOVE = %.1fs&#x27;</span><br>time_text = ax.text(<span class="hljs-number">0.05</span>, <span class="hljs-number">0.9</span>, <span class="hljs-string">&#x27;&#x27;</span>, transform=ax.transAxes)<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">init</span>():</span><br>    ax.set_xlim(-<span class="hljs-number">3</span>,<span class="hljs-number">3</span>)<br>    ax.set_ylim(-<span class="hljs-number">2</span>, <span class="hljs-number">3</span>)<br>    <span class="hljs-keyword">return</span> ln,<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">update</span>(<span class="hljs-params">ii</span>):</span><br>    xdata, ydata = [], []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">183</span>):<br>        xi=(<span class="hljs-number">182</span>-i)/<span class="hljs-number">100</span><br>        xdata.append(<span class="hljs-number">0.01</span>*i-<span class="hljs-number">1.82</span>)<br>        yi=(xi**(<span class="hljs-number">2</span>/<span class="hljs-number">3</span>))+(<span class="hljs-number">0.9</span>*(<span class="hljs-number">3.3</span>-xi**<span class="hljs-number">2</span>)**<span class="hljs-number">0.5</span>)*np.cos(ii*(np.pi)*xi)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">type</span>(yi)==<span class="hljs-string">&#x27;complex&#x27;</span>:<br>            yi=np.around(<span class="hljs-built_in">abs</span>(yi),decimals=<span class="hljs-number">4</span>)<br>        yi=np.around(yi, decimals=<span class="hljs-number">3</span>)<br>        ydata.append(yi)<br>        <br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">182</span>):<br>        xi=i/<span class="hljs-number">100</span><br>        xdata.append(xi) <br>        yi=(xi**(<span class="hljs-number">2</span>/<span class="hljs-number">3</span>))+(<span class="hljs-number">0.9</span>*(<span class="hljs-number">3.3</span>-xi**<span class="hljs-number">2</span>)**<span class="hljs-number">0.5</span>)*np.cos(ii*(np.pi)*xi)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">type</span>(yi)==<span class="hljs-string">&#x27;complex&#x27;</span>:<br>            yi=np.around(<span class="hljs-built_in">abs</span>(yi),decimals=<span class="hljs-number">4</span>)<br>        yi=np.around(yi, decimals=<span class="hljs-number">3</span>)<br>        ydata.append(yi)<br>    ln.set_data(xdata, ydata)<br>    time_text.set_text(time_template %(ii))<br>    <span class="hljs-keyword">return</span> ln,<br>ani = FuncAnimation(fig, update, np.linspace(<span class="hljs-number">0</span>, <span class="hljs-number">13.14</span>, <span class="hljs-number">100</span>),init_func=init, interval=<span class="hljs-number">100</span>)<br>ani.save(<span class="hljs-string">&#x27;love.gif&#x27;</span>, writer=<span class="hljs-string">&#x27;imagemagick&#x27;</span>, fps=<span class="hljs-number">10</span>)<br>plt.show()<br></code></pre></td></tr></table></figure></details><h2 id="动态画-小猪佩奇"><a href="#动态画-小猪佩奇" class="headerlink" title="动态画-小猪佩奇"></a>动态画-小猪佩奇</h2><p><img src="https://image.glwsq.cn/img/%E7%90%86%E7%A7%91%E7%94%9F%E7%9A%84%E6%B5%AA%E6%BC%AB%E4%B9%8BPython%E7%BB%98%E5%9B%BE-2022-04-21-17-59-50.gif"></p><details><summary>代码</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><span class="hljs-keyword">import</span> turtle <span class="hljs-keyword">as</span> t<br><br>t.pensize(<span class="hljs-number">4</span>)<br>t.hideturtle()<br>t.colormode(<span class="hljs-number">255</span>)<br>t.color((<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>),<span class="hljs-string">&quot;pink&quot;</span>)<br>t.setup(<span class="hljs-number">840</span>,<span class="hljs-number">500</span>)<br>t.speed(<span class="hljs-number">1500</span>)<br><br><span class="hljs-comment">#鼻子</span><br>t.pu()<br>t.goto(-<span class="hljs-number">100</span>,<span class="hljs-number">100</span>)<br>t.pd()<br>t.seth(-<span class="hljs-number">30</span>)<br>t.begin_fill()<br>a=<span class="hljs-number">0.4</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">120</span>):<br>   <span class="hljs-keyword">if</span> <span class="hljs-number">0</span>&lt;=i&lt;<span class="hljs-number">30</span> <span class="hljs-keyword">or</span> <span class="hljs-number">60</span>&lt;=i&lt;<span class="hljs-number">90</span>:<br>       a=a+<span class="hljs-number">0.08</span><br>       t.lt(<span class="hljs-number">3</span>) <span class="hljs-comment">#向左转3度</span><br>       t.fd(a) <span class="hljs-comment">#向前走a的步长</span><br>   <span class="hljs-keyword">else</span>:<br>       a=a-<span class="hljs-number">0.08</span><br>       t.lt(<span class="hljs-number">3</span>)<br>       t.fd(a)<br>t.end_fill()<br><br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">25</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">10</span>)<br>t.pd()<br>t.pencolor(<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>)<br>t.seth(<span class="hljs-number">10</span>)<br>t.begin_fill()<br>t.circle(<span class="hljs-number">5</span>)<br>t.color(<span class="hljs-number">160</span>,<span class="hljs-number">82</span>,<span class="hljs-number">45</span>)<br>t.end_fill()<br><br>t.pu()<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">20</span>)<br>t.pd()<br>t.pencolor(<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>)<br>t.seth(<span class="hljs-number">10</span>)<br>t.begin_fill()<br>t.circle(<span class="hljs-number">5</span>)<br>t.color(<span class="hljs-number">160</span>,<span class="hljs-number">82</span>,<span class="hljs-number">45</span>)<br>t.end_fill()<br><br><span class="hljs-comment">#头</span><br>t.color((<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>),<span class="hljs-string">&quot;pink&quot;</span>)<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">41</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">0</span>)<br>t.pd()<br>t.begin_fill()<br>t.seth(<span class="hljs-number">180</span>)<br>t.circle(<span class="hljs-number">300</span>,-<span class="hljs-number">30</span>)<br>t.circle(<span class="hljs-number">100</span>,-<span class="hljs-number">60</span>)<br>t.circle(<span class="hljs-number">80</span>,-<span class="hljs-number">100</span>)<br>t.circle(<span class="hljs-number">150</span>,-<span class="hljs-number">20</span>)<br>t.circle(<span class="hljs-number">60</span>,-<span class="hljs-number">95</span>)<br>t.seth(<span class="hljs-number">161</span>)<br>t.circle(-<span class="hljs-number">300</span>,<span class="hljs-number">15</span>)<br>t.pu()<br>t.goto(-<span class="hljs-number">100</span>,<span class="hljs-number">100</span>)<br>t.pd()<br>t.seth(-<span class="hljs-number">30</span>)<br>a=<span class="hljs-number">0.4</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">60</span>):<br>   <span class="hljs-keyword">if</span> <span class="hljs-number">0</span>&lt;=i&lt;<span class="hljs-number">30</span> <span class="hljs-keyword">or</span> <span class="hljs-number">60</span>&lt;=i&lt;<span class="hljs-number">90</span>:<br>       a=a+<span class="hljs-number">0.08</span><br>       t.lt(<span class="hljs-number">3</span>) <span class="hljs-comment">#向左转3度</span><br>       t.fd(a) <span class="hljs-comment">#向前走a的步长</span><br>   <span class="hljs-keyword">else</span>:<br>       a=a-<span class="hljs-number">0.08</span><br>       t.lt(<span class="hljs-number">3</span>)<br>       t.fd(a)<br>t.end_fill()<br><br><span class="hljs-comment">#耳朵</span><br>t.color((<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>),<span class="hljs-string">&quot;pink&quot;</span>)<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(-<span class="hljs-number">7</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">70</span>)<br>t.pd()<br>t.begin_fill()<br>t.seth(<span class="hljs-number">100</span>)<br>t.circle(-<span class="hljs-number">50</span>,<span class="hljs-number">50</span>)<br>t.circle(-<span class="hljs-number">10</span>,<span class="hljs-number">120</span>)<br>t.circle(-<span class="hljs-number">50</span>,<span class="hljs-number">54</span>)<br>t.end_fill()<br><br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(-<span class="hljs-number">12</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">30</span>)<br>t.pd()<br>t.begin_fill()<br>t.seth(<span class="hljs-number">100</span>)<br>t.circle(-<span class="hljs-number">50</span>,<span class="hljs-number">50</span>)<br>t.circle(-<span class="hljs-number">10</span>,<span class="hljs-number">120</span>)<br>t.circle(-<span class="hljs-number">50</span>,<span class="hljs-number">56</span>)<br>t.end_fill()<br><br><span class="hljs-comment">#眼睛</span><br>t.color((<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>),<span class="hljs-string">&quot;white&quot;</span>)<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(-<span class="hljs-number">20</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(-<span class="hljs-number">95</span>)<br>t.pd()<br>t.begin_fill()<br>t.circle(<span class="hljs-number">15</span>)<br>t.end_fill()<br><br>t.color(<span class="hljs-string">&quot;black&quot;</span>)<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">12</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(-<span class="hljs-number">3</span>)<br>t.pd()<br>t.begin_fill()<br>t.circle(<span class="hljs-number">3</span>)<br>t.end_fill()<br><br>t.color((<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>),<span class="hljs-string">&quot;white&quot;</span>)<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(-<span class="hljs-number">25</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">40</span>)<br>t.pd()<br>t.begin_fill()<br>t.circle(<span class="hljs-number">15</span>)<br>t.end_fill()<br><br>t.color(<span class="hljs-string">&quot;black&quot;</span>)<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">12</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(-<span class="hljs-number">3</span>)<br>t.pd()<br>t.begin_fill()<br>t.circle(<span class="hljs-number">3</span>)<br>t.end_fill()<br><br><span class="hljs-comment">#腮</span><br>t.color((<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>))<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(-<span class="hljs-number">95</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">65</span>)<br>t.pd()<br>t.begin_fill()<br>t.circle(<span class="hljs-number">30</span>)<br>t.end_fill()<br><br><span class="hljs-comment">#嘴</span><br>t.color(<span class="hljs-number">239</span>,<span class="hljs-number">69</span>,<span class="hljs-number">19</span>)<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">15</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(-<span class="hljs-number">100</span>)<br>t.pd()<br>t.seth(-<span class="hljs-number">80</span>)<br>t.circle(<span class="hljs-number">30</span>,<span class="hljs-number">40</span>)<br>t.circle(<span class="hljs-number">40</span>,<span class="hljs-number">80</span>)<br><br><span class="hljs-comment">#身体</span><br>t.color(<span class="hljs-string">&quot;red&quot;</span>,(<span class="hljs-number">255</span>,<span class="hljs-number">99</span>,<span class="hljs-number">71</span>))<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(-<span class="hljs-number">20</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(-<span class="hljs-number">78</span>)<br>t.pd()<br>t.begin_fill()<br>t.seth(-<span class="hljs-number">130</span>)<br>t.circle(<span class="hljs-number">100</span>,<span class="hljs-number">10</span>)<br>t.circle(<span class="hljs-number">300</span>,<span class="hljs-number">30</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">230</span>)<br>t.seth(<span class="hljs-number">90</span>)<br>t.circle(<span class="hljs-number">300</span>,<span class="hljs-number">30</span>)<br>t.circle(<span class="hljs-number">100</span>,<span class="hljs-number">3</span>)<br>t.color((<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>),(<span class="hljs-number">255</span>,<span class="hljs-number">100</span>,<span class="hljs-number">100</span>))<br>t.seth(-<span class="hljs-number">135</span>)<br>t.circle(-<span class="hljs-number">80</span>,<span class="hljs-number">63</span>)<br>t.circle(-<span class="hljs-number">150</span>,<span class="hljs-number">24</span>)<br>t.end_fill()<br><br><span class="hljs-comment">#手</span><br>t.color((<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>))<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(-<span class="hljs-number">40</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(-<span class="hljs-number">27</span>)<br>t.pd()<br>t.seth(-<span class="hljs-number">160</span>)<br>t.circle(<span class="hljs-number">300</span>,<span class="hljs-number">15</span>)<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">15</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">0</span>)<br>t.pd()<br>t.seth(-<span class="hljs-number">10</span>)<br>t.circle(-<span class="hljs-number">20</span>,<span class="hljs-number">90</span>)<br><br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">30</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">237</span>)<br>t.pd()<br>t.seth(-<span class="hljs-number">20</span>)<br>t.circle(-<span class="hljs-number">300</span>,<span class="hljs-number">15</span>)<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">20</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">0</span>)<br>t.pd()<br>t.seth(-<span class="hljs-number">170</span>)<br>t.circle(<span class="hljs-number">20</span>,<span class="hljs-number">90</span>)<br><br><span class="hljs-comment">#脚</span><br>t.pensize(<span class="hljs-number">10</span>)<br>t.color((<span class="hljs-number">240</span>,<span class="hljs-number">128</span>,<span class="hljs-number">128</span>))<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(-<span class="hljs-number">75</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(-<span class="hljs-number">180</span>)<br>t.pd()<br>t.seth(-<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">40</span>)<br>t.seth(-<span class="hljs-number">180</span>)<br>t.color(<span class="hljs-string">&quot;black&quot;</span>)<br>t.pensize(<span class="hljs-number">15</span>)<br>t.fd(<span class="hljs-number">20</span>)<br><br>t.pensize(<span class="hljs-number">10</span>)<br>t.color((<span class="hljs-number">240</span>,<span class="hljs-number">128</span>,<span class="hljs-number">128</span>))<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">40</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">90</span>)<br>t.pd()<br>t.seth(-<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">40</span>)<br>t.seth(-<span class="hljs-number">180</span>)<br>t.color(<span class="hljs-string">&quot;black&quot;</span>)<br>t.pensize(<span class="hljs-number">15</span>)<br>t.fd(<span class="hljs-number">20</span>)<br><br><span class="hljs-comment">#尾巴</span><br>t.pensize(<span class="hljs-number">4</span>)<br>t.color((<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>))<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">70</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">95</span>)<br>t.pd()<br>t.seth(<span class="hljs-number">0</span>)<br>t.circle(<span class="hljs-number">70</span>,<span class="hljs-number">20</span>)<br>t.circle(<span class="hljs-number">10</span>,<span class="hljs-number">330</span>)<br>t.circle(<span class="hljs-number">70</span>,<span class="hljs-number">30</span>)<br><span class="hljs-built_in">input</span>()<br></code></pre></td></tr></table></figure></details><h2 id="动态画-一箭穿心"><a href="#动态画-一箭穿心" class="headerlink" title="动态画-一箭穿心"></a>动态画-一箭穿心</h2><p><img src="https://image.glwsq.cn/img/%E7%90%86%E7%A7%91%E7%94%9F%E7%9A%84%E6%B5%AA%E6%BC%AB%E4%B9%8BPython%E7%BB%98%E5%9B%BE-2022-04-21-18-00-32.gif"></p><details><summary>代码</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> turtle <span class="hljs-keyword">import</span> *<br>color(<span class="hljs-string">&#x27;black&#x27;</span>,<span class="hljs-string">&#x27;red&#x27;</span>)<br>pensize(<span class="hljs-number">5</span>)<br>begin_fill()<br>penup()<br>goto(<span class="hljs-number">50</span>,<span class="hljs-number">50</span>)<br>pendown()<br>right(<span class="hljs-number">45</span>)<br>goto(<span class="hljs-number">100</span>,<span class="hljs-number">0</span>)<br>left(<span class="hljs-number">90</span>)<br>fd(<span class="hljs-number">120</span>)<br>circle(<span class="hljs-number">50</span>,<span class="hljs-number">225</span>)<br>penup()<br>goto(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)<br>pendown()<br>left(<span class="hljs-number">135</span>)<br>fd(<span class="hljs-number">120</span>)<br>circle(<span class="hljs-number">50</span>,<span class="hljs-number">225</span>)<br>seth(<span class="hljs-number">90</span>)<br>circle(<span class="hljs-number">50</span>,<span class="hljs-number">225</span>)<br>fd(<span class="hljs-number">121</span>)<br>end_fill()<br>left(<span class="hljs-number">56</span>)<br>penup()<br>goto(-<span class="hljs-number">210</span>,<span class="hljs-number">40</span>)<br>pendown()<br>goto(<span class="hljs-number">0</span>,<span class="hljs-number">80</span>)<br>penup()<br>goto(<span class="hljs-number">160</span>,<span class="hljs-number">110</span>)<br>pendown()<br>goto(<span class="hljs-number">320</span>,<span class="hljs-number">140</span>)<br>done<br></code></pre></td></tr></table></figure></details><h2 id="动态画-樱花树"><a href="#动态画-樱花树" class="headerlink" title="动态画-樱花树"></a>动态画-樱花树</h2><p><img src="https://image.glwsq.cn/img/%E7%90%86%E7%A7%91%E7%94%9F%E7%9A%84%E6%B5%AA%E6%BC%AB%E4%B9%8BPython%E7%BB%98%E5%9B%BE-2022-04-21-18-01-44.gif"></p><details><summary>代码</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> turtle <span class="hljs-keyword">as</span> T<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> time<br><br><span class="hljs-comment"># 画樱花的躯干(60,t)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Tree</span>(<span class="hljs-params">branch, t</span>):</span><br>    time.sleep(<span class="hljs-number">0.0005</span>)<br>    <span class="hljs-keyword">if</span> branch &gt; <span class="hljs-number">3</span>:<br>        <span class="hljs-keyword">if</span> <span class="hljs-number">8</span> &lt;= branch &lt;= <span class="hljs-number">12</span>:<br>            <span class="hljs-keyword">if</span> random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>) == <span class="hljs-number">0</span>:<br>                t.color(<span class="hljs-string">&#x27;snow&#x27;</span>)  <span class="hljs-comment"># 白</span><br>            <span class="hljs-keyword">else</span>:<br>                t.color(<span class="hljs-string">&#x27;lightcoral&#x27;</span>)  <span class="hljs-comment"># 淡珊瑚色</span><br>            t.pensize(branch / <span class="hljs-number">3</span>)<br>        <span class="hljs-keyword">elif</span> branch &lt; <span class="hljs-number">8</span>:<br>            <span class="hljs-keyword">if</span> random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>) == <span class="hljs-number">0</span>:<br>                t.color(<span class="hljs-string">&#x27;snow&#x27;</span>)<br>            <span class="hljs-keyword">else</span>:<br>                t.color(<span class="hljs-string">&#x27;lightcoral&#x27;</span>)  <span class="hljs-comment"># 淡珊瑚色</span><br>            t.pensize(branch / <span class="hljs-number">2</span>)<br>        <span class="hljs-keyword">else</span>:<br>            t.color(<span class="hljs-string">&#x27;sienna&#x27;</span>)  <span class="hljs-comment"># 赭(zhě)色</span><br>            t.pensize(branch / <span class="hljs-number">10</span>)  <span class="hljs-comment"># 6</span><br>        t.forward(branch)<br>        a = <span class="hljs-number">1.5</span> * random.random()<br>        t.right(<span class="hljs-number">20</span> * a)<br>        b = <span class="hljs-number">1.5</span> * random.random()<br>        Tree(branch - <span class="hljs-number">10</span> * b, t)<br>        t.left(<span class="hljs-number">40</span> * a)<br>        Tree(branch - <span class="hljs-number">10</span> * b, t)<br>        t.right(<span class="hljs-number">20</span> * a)<br>        t.up()<br>        t.backward(branch)<br>        t.down()<br><br><span class="hljs-comment"># 掉落的花瓣</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Petal</span>(<span class="hljs-params">m, t</span>):</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(m):<br>        a = <span class="hljs-number">200</span> - <span class="hljs-number">400</span> * random.random()<br>        b = <span class="hljs-number">10</span> - <span class="hljs-number">20</span> * random.random()<br>        t.up()<br>        t.forward(b)<br>        t.left(<span class="hljs-number">90</span>)<br>        t.forward(a)<br>        t.down()<br>        t.color(<span class="hljs-string">&#x27;lightcoral&#x27;</span>)  <span class="hljs-comment"># 淡珊瑚色</span><br>        t.circle(<span class="hljs-number">1</span>)<br>        t.up()<br>        t.backward(a)<br>        t.right(<span class="hljs-number">90</span>)<br>        t.backward(b)<br><br><span class="hljs-comment"># 绘图区域</span><br>t = T.Turtle()<br><span class="hljs-comment"># 画布大小</span><br>w = T.Screen()<br>t.hideturtle()  <span class="hljs-comment"># 隐藏画笔</span><br>t.getscreen().tracer(<span class="hljs-number">5</span>, <span class="hljs-number">0</span>)<br>w.screensize(bg=<span class="hljs-string">&#x27;wheat&#x27;</span>)  <span class="hljs-comment"># wheat小麦</span><br>t.left(<span class="hljs-number">90</span>)<br>t.up()<br>t.backward(<span class="hljs-number">150</span>)<br>t.down()<br>t.color(<span class="hljs-string">&#x27;sienna&#x27;</span>)<br><br><span class="hljs-comment"># 画樱花的躯干</span><br>Tree(<span class="hljs-number">60</span>, t)<br><span class="hljs-comment"># 掉落的花瓣</span><br>Petal(<span class="hljs-number">200</span>, t)<br>w.exitonclick()<br></code></pre></td></tr></table></figure></details><h2 id="动态画-哆啦A梦"><a href="#动态画-哆啦A梦" class="headerlink" title="动态画-哆啦A梦"></a>动态画-哆啦A梦</h2><p><img src="https://image.glwsq.cn/img/%E7%90%86%E7%A7%91%E7%94%9F%E7%9A%84%E6%B5%AA%E6%BC%AB%E4%B9%8BPython%E7%BB%98%E5%9B%BE-2022-04-21-18-00-44.gif"></p><details><summary>代码</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># !/usr/bin/env python3 </span><br><span class="hljs-comment"># -*- coding: utf-8 -*- </span><br><span class="hljs-comment"># @Author: dong </span><br><span class="hljs-comment"># @Date: 2018-07-05 19:37:42 </span><br><span class="hljs-comment"># @Env: python 3.6 </span><br><span class="hljs-comment"># @Github: https://github.com/PerpetualSmile </span><br><br><span class="hljs-keyword">from</span> turtle <span class="hljs-keyword">import</span> *<br><br><br><span class="hljs-comment"># 无轨迹跳跃</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">my_goto</span>(<span class="hljs-params">x, y</span>):</span><br>    penup()<br>    goto(x, y)<br>    pendown()<br><br><span class="hljs-comment"># 眼睛</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">eyes</span>():</span><br>    fillcolor(<span class="hljs-string">&quot;#ffffff&quot;</span>)<br>    begin_fill()<br><br>    tracer(<span class="hljs-literal">False</span>)<br>    a = <span class="hljs-number">2.5</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">120</span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-number">0</span> &lt;= i &lt; <span class="hljs-number">30</span> <span class="hljs-keyword">or</span> <span class="hljs-number">60</span> &lt;= i &lt; <span class="hljs-number">90</span>:<br>            a -= <span class="hljs-number">0.05</span><br>            lt(<span class="hljs-number">3</span>)<br>            fd(a)<br>        <span class="hljs-keyword">else</span>:<br>            a += <span class="hljs-number">0.05</span><br>            lt(<span class="hljs-number">3</span>)<br>            fd(a)<br>    tracer(<span class="hljs-literal">True</span>)<br>    end_fill()<br><br><br><span class="hljs-comment"># 胡须</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">beard</span>():</span><br>    my_goto(-<span class="hljs-number">32</span>, <span class="hljs-number">135</span>)<br>    seth(<span class="hljs-number">165</span>)<br>    fd(<span class="hljs-number">60</span>)<br><br>    my_goto(-<span class="hljs-number">32</span>, <span class="hljs-number">125</span>)<br>    seth(<span class="hljs-number">180</span>)<br>    fd(<span class="hljs-number">60</span>)<br><br>    my_goto(-<span class="hljs-number">32</span>, <span class="hljs-number">115</span>)<br>    seth(<span class="hljs-number">193</span>)<br>    fd(<span class="hljs-number">60</span>)<br><br>    my_goto(<span class="hljs-number">37</span>, <span class="hljs-number">135</span>)<br>    seth(<span class="hljs-number">15</span>)<br>    fd(<span class="hljs-number">60</span>)<br><br>    my_goto(<span class="hljs-number">37</span>, <span class="hljs-number">125</span>)<br>    seth(<span class="hljs-number">0</span>)<br>    fd(<span class="hljs-number">60</span>)<br><br>    my_goto(<span class="hljs-number">37</span>, <span class="hljs-number">115</span>)<br>    seth(-<span class="hljs-number">13</span>)<br>    fd(<span class="hljs-number">60</span>)<br><br><span class="hljs-comment"># 嘴巴</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">mouth</span>():</span><br>    my_goto(<span class="hljs-number">5</span>, <span class="hljs-number">148</span>)<br>    seth(<span class="hljs-number">270</span>)<br>    fd(<span class="hljs-number">100</span>)<br>    seth(<span class="hljs-number">0</span>)<br>    circle(<span class="hljs-number">120</span>, <span class="hljs-number">50</span>)<br>    seth(<span class="hljs-number">230</span>)<br>    circle(-<span class="hljs-number">120</span>, <span class="hljs-number">100</span>)<br><br><span class="hljs-comment"># 围巾</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">scarf</span>():</span><br>    fillcolor(<span class="hljs-string">&#x27;#e70010&#x27;</span>)<br>    begin_fill()<br>    seth(<span class="hljs-number">0</span>)<br>    fd(<span class="hljs-number">200</span>)<br>    circle(-<span class="hljs-number">5</span>, <span class="hljs-number">90</span>)<br>    fd(<span class="hljs-number">10</span>)<br>    circle(-<span class="hljs-number">5</span>, <span class="hljs-number">90</span>)<br>    fd(<span class="hljs-number">207</span>)<br>    circle(-<span class="hljs-number">5</span>, <span class="hljs-number">90</span>)<br>    fd(<span class="hljs-number">10</span>)<br>    circle(-<span class="hljs-number">5</span>, <span class="hljs-number">90</span>)<br>    end_fill()<br><br><span class="hljs-comment"># 鼻子</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">nose</span>():</span><br>    my_goto(-<span class="hljs-number">10</span>, <span class="hljs-number">158</span>)<br>    seth(<span class="hljs-number">315</span>)<br>    fillcolor(<span class="hljs-string">&#x27;#e70010&#x27;</span>)<br>    begin_fill()<br>    circle(<span class="hljs-number">20</span>)<br>    end_fill()<br><br><span class="hljs-comment"># 黑眼睛</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">black_eyes</span>():</span><br>    seth(<span class="hljs-number">0</span>)<br>    my_goto(-<span class="hljs-number">20</span>, <span class="hljs-number">195</span>)<br>    fillcolor(<span class="hljs-string">&#x27;#000000&#x27;</span>)<br>    begin_fill()<br>    circle(<span class="hljs-number">13</span>)<br>    end_fill()<br><br>    pensize(<span class="hljs-number">6</span>)<br>    my_goto(<span class="hljs-number">20</span>, <span class="hljs-number">205</span>)<br>    seth(<span class="hljs-number">75</span>)<br>    circle(-<span class="hljs-number">10</span>, <span class="hljs-number">150</span>)<br>    pensize(<span class="hljs-number">3</span>)<br><br>    my_goto(-<span class="hljs-number">17</span>, <span class="hljs-number">200</span>)<br>    seth(<span class="hljs-number">0</span>)<br>    fillcolor(<span class="hljs-string">&#x27;#ffffff&#x27;</span>)<br>    begin_fill()<br>    circle(<span class="hljs-number">5</span>)<br>    end_fill()<br>    my_goto(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>)<br><br><br><br><span class="hljs-comment"># 脸</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">face</span>():</span><br><br>    fd(<span class="hljs-number">183</span>)<br>    lt(<span class="hljs-number">45</span>)<br>    fillcolor(<span class="hljs-string">&#x27;#ffffff&#x27;</span>)<br>    begin_fill()<br>    circle(<span class="hljs-number">120</span>, <span class="hljs-number">100</span>)<br>    seth(<span class="hljs-number">180</span>)<br>    <span class="hljs-comment"># print(pos())</span><br>    fd(<span class="hljs-number">121</span>)<br>    pendown()<br>    seth(<span class="hljs-number">215</span>)<br>    circle(<span class="hljs-number">120</span>, <span class="hljs-number">100</span>)<br>    end_fill()<br>    my_goto(<span class="hljs-number">63.56</span>,<span class="hljs-number">218.24</span>)<br>    seth(<span class="hljs-number">90</span>)<br>    eyes()<br>    seth(<span class="hljs-number">180</span>)<br>    penup()<br>    fd(<span class="hljs-number">60</span>)<br>    pendown()<br>    seth(<span class="hljs-number">90</span>)<br>    eyes()<br>    penup()<br>    seth(<span class="hljs-number">180</span>)<br>    fd(<span class="hljs-number">64</span>)<br><br><span class="hljs-comment"># 头型</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">head</span>():</span><br>    penup()<br>    circle(<span class="hljs-number">150</span>, <span class="hljs-number">40</span>)<br>    pendown()<br>    fillcolor(<span class="hljs-string">&#x27;#00a0de&#x27;</span>)<br>    begin_fill()<br>    circle(<span class="hljs-number">150</span>, <span class="hljs-number">280</span>)<br>    end_fill()<br><br><span class="hljs-comment"># 画哆啦A梦</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Doraemon</span>():</span><br>    <span class="hljs-comment"># 头部</span><br>    head()<br><br>    <span class="hljs-comment"># 围脖</span><br>    scarf()<br><br>    <span class="hljs-comment"># 脸</span><br>    face()<br><br>    <span class="hljs-comment"># 红鼻子</span><br>    nose()<br><br>    <span class="hljs-comment"># 嘴巴</span><br>    mouth()<br><br>    <span class="hljs-comment"># 胡须</span><br>    beard()<br><br>    <span class="hljs-comment"># 身体</span><br>    my_goto(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>)<br>    seth(<span class="hljs-number">0</span>)<br>    penup()<br>    circle(<span class="hljs-number">150</span>, <span class="hljs-number">50</span>)<br>    pendown()<br>    seth(<span class="hljs-number">30</span>)<br>    fd(<span class="hljs-number">40</span>)<br>    seth(<span class="hljs-number">70</span>)<br>    circle(-<span class="hljs-number">30</span>, <span class="hljs-number">270</span>)<br><br><br>    fillcolor(<span class="hljs-string">&#x27;#00a0de&#x27;</span>)<br>    begin_fill()<br><br>    seth(<span class="hljs-number">230</span>)<br>    fd(<span class="hljs-number">80</span>)<br>    seth(<span class="hljs-number">90</span>)<br>    circle(<span class="hljs-number">1000</span>, <span class="hljs-number">1</span>)<br>    seth(-<span class="hljs-number">89</span>)<br>    circle(-<span class="hljs-number">1000</span>, <span class="hljs-number">10</span>)<br><br>    <span class="hljs-comment"># print(pos())</span><br><br>    seth(<span class="hljs-number">180</span>)<br>    fd(<span class="hljs-number">70</span>)<br>    seth(<span class="hljs-number">90</span>)<br>    circle(<span class="hljs-number">30</span>, <span class="hljs-number">180</span>)<br>    seth(<span class="hljs-number">180</span>)<br>    fd(<span class="hljs-number">70</span>)<br><br>    <span class="hljs-comment"># print(pos())</span><br>    seth(<span class="hljs-number">100</span>)<br>    circle(-<span class="hljs-number">1000</span>, <span class="hljs-number">9</span>)<br><br>    seth(-<span class="hljs-number">86</span>)<br>    circle(<span class="hljs-number">1000</span>, <span class="hljs-number">2</span>)<br>    seth(<span class="hljs-number">230</span>)<br>    fd(<span class="hljs-number">40</span>)<br><br>    <span class="hljs-comment"># print(pos())</span><br><br><br>    circle(-<span class="hljs-number">30</span>, <span class="hljs-number">230</span>)<br>    seth(<span class="hljs-number">45</span>)<br>    fd(<span class="hljs-number">81</span>)<br>    seth(<span class="hljs-number">0</span>)<br>    fd(<span class="hljs-number">203</span>)<br>    circle(<span class="hljs-number">5</span>, <span class="hljs-number">90</span>)<br>    fd(<span class="hljs-number">10</span>)<br>    circle(<span class="hljs-number">5</span>, <span class="hljs-number">90</span>)<br>    fd(<span class="hljs-number">7</span>)<br>    seth(<span class="hljs-number">40</span>)<br>    circle(<span class="hljs-number">150</span>, <span class="hljs-number">10</span>)<br>    seth(<span class="hljs-number">30</span>)<br>    fd(<span class="hljs-number">40</span>)<br>    end_fill()<br><br>    <span class="hljs-comment"># 左手</span><br>    seth(<span class="hljs-number">70</span>)<br>    fillcolor(<span class="hljs-string">&#x27;#ffffff&#x27;</span>)<br>    begin_fill()<br>    circle(-<span class="hljs-number">30</span>)<br>    end_fill()<br><br>    <span class="hljs-comment"># 脚</span><br>    my_goto(<span class="hljs-number">103.74</span>, -<span class="hljs-number">182.59</span>)<br>    seth(<span class="hljs-number">0</span>)<br>    fillcolor(<span class="hljs-string">&#x27;#ffffff&#x27;</span>)<br>    begin_fill()<br>    fd(<span class="hljs-number">15</span>)<br>    circle(-<span class="hljs-number">15</span>, <span class="hljs-number">180</span>)<br>    fd(<span class="hljs-number">90</span>)<br>    circle(-<span class="hljs-number">15</span>, <span class="hljs-number">180</span>)<br>    fd(<span class="hljs-number">10</span>)<br>    end_fill()<br><br>    my_goto(-<span class="hljs-number">96.26</span>, -<span class="hljs-number">182.59</span>)<br>    seth(<span class="hljs-number">180</span>)<br>    fillcolor(<span class="hljs-string">&#x27;#ffffff&#x27;</span>)<br>    begin_fill()<br>    fd(<span class="hljs-number">15</span>)<br>    circle(<span class="hljs-number">15</span>, <span class="hljs-number">180</span>)<br>    fd(<span class="hljs-number">90</span>)<br>    circle(<span class="hljs-number">15</span>, <span class="hljs-number">180</span>)<br>    fd(<span class="hljs-number">10</span>)<br>    end_fill()<br><br>    <span class="hljs-comment"># 右手</span><br>    my_goto(-<span class="hljs-number">133.97</span>, -<span class="hljs-number">91.81</span>)<br>    seth(<span class="hljs-number">50</span>)<br>    fillcolor(<span class="hljs-string">&#x27;#ffffff&#x27;</span>)<br>    begin_fill()<br>    circle(<span class="hljs-number">30</span>)<br>    end_fill()<br><br>    <span class="hljs-comment"># 口袋</span><br>    my_goto(-<span class="hljs-number">103.42</span>, <span class="hljs-number">15.09</span>)<br>    seth(<span class="hljs-number">0</span>)<br>    fd(<span class="hljs-number">38</span>)<br>    seth(<span class="hljs-number">230</span>)<br>    begin_fill()<br>    circle(<span class="hljs-number">90</span>, <span class="hljs-number">260</span>)<br>    end_fill()<br><br>    my_goto(<span class="hljs-number">5</span>, -<span class="hljs-number">40</span>)<br>    seth(<span class="hljs-number">0</span>)<br>    fd(<span class="hljs-number">70</span>)<br>    seth(-<span class="hljs-number">90</span>)<br>    circle(-<span class="hljs-number">70</span>, <span class="hljs-number">180</span>)<br>    seth(<span class="hljs-number">0</span>)<br>    fd(<span class="hljs-number">70</span>)<br><br>    <span class="hljs-comment">#铃铛</span><br>    my_goto(-<span class="hljs-number">103.42</span>, <span class="hljs-number">15.09</span>)<br>    fd(<span class="hljs-number">90</span>)<br>    seth(<span class="hljs-number">70</span>)<br>    fillcolor(<span class="hljs-string">&#x27;#ffd200&#x27;</span>)<br>    <span class="hljs-comment"># print(pos())</span><br>    begin_fill()<br>    circle(-<span class="hljs-number">20</span>)<br>    end_fill()<br>    seth(<span class="hljs-number">170</span>)<br>    fillcolor(<span class="hljs-string">&#x27;#ffd200&#x27;</span>)<br>    begin_fill()<br>    circle(-<span class="hljs-number">2</span>, <span class="hljs-number">180</span>)<br>    seth(<span class="hljs-number">10</span>)<br>    circle(-<span class="hljs-number">100</span>, <span class="hljs-number">22</span>)<br>    circle(-<span class="hljs-number">2</span>, <span class="hljs-number">180</span>)<br>    seth(<span class="hljs-number">180</span>-<span class="hljs-number">10</span>)<br>    circle(<span class="hljs-number">100</span>, <span class="hljs-number">22</span>)<br>    end_fill()<br>    goto(-<span class="hljs-number">13.42</span>, <span class="hljs-number">15.09</span>)<br>    seth(<span class="hljs-number">250</span>)<br>    circle(<span class="hljs-number">20</span>, <span class="hljs-number">110</span>)<br>    seth(<span class="hljs-number">90</span>)<br>    fd(<span class="hljs-number">15</span>)<br>    dot(<span class="hljs-number">10</span>)<br>    my_goto(<span class="hljs-number">0</span>, -<span class="hljs-number">150</span>)<br><br>    <span class="hljs-comment"># 画眼睛</span><br>    black_eyes()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    screensize(<span class="hljs-number">800</span>,<span class="hljs-number">600</span>, <span class="hljs-string">&quot;#f0f0f0&quot;</span>)<br>    pensize(<span class="hljs-number">3</span>)  <span class="hljs-comment"># 画笔宽度</span><br>    speed(<span class="hljs-number">9</span>)    <span class="hljs-comment"># 画笔速度</span><br>    Doraemon()<br>    my_goto(<span class="hljs-number">100</span>, -<span class="hljs-number">300</span>)<br>    write(<span class="hljs-string">&#x27;by Jason&#x27;</span>, font=(<span class="hljs-string">&quot;Bradley Hand ITC&quot;</span>, <span class="hljs-number">30</span>, <span class="hljs-string">&quot;bold&quot;</span>))<br>    mainloop()<br></code></pre></td></tr></table></figure></details><h2 id="3d-heart"><a href="#3d-heart" class="headerlink" title="3d-heart"></a>3d-heart</h2><p><img src="https://image.glwsq.cn/img/%E7%90%86%E7%A7%91%E7%94%9F%E7%9A%84%E6%B5%AA%E6%BC%AB%E4%B9%8BPython%E7%BB%98%E5%9B%BE-2022-04-21-18-00-59.png"></p><details><summary>代码</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> mpl_toolkits.mplot3d <span class="hljs-keyword">import</span> Axes3D<br> <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">heart_3d</span>(<span class="hljs-params">x,y,z</span>):</span><br>    <span class="hljs-keyword">return</span> (x**<span class="hljs-number">2</span>+(<span class="hljs-number">9</span>/<span class="hljs-number">4</span>)*y**<span class="hljs-number">2</span>+z**<span class="hljs-number">2</span>-<span class="hljs-number">1</span>)**<span class="hljs-number">3</span>-x**<span class="hljs-number">2</span>*z**<span class="hljs-number">3</span>-(<span class="hljs-number">9</span>/<span class="hljs-number">80</span>)*y**<span class="hljs-number">2</span>*z**<span class="hljs-number">3</span><br> <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">plot_implicit</span>(<span class="hljs-params">fn,bbox=(<span class="hljs-params">-<span class="hljs-number">1.5</span>,<span class="hljs-number">1.5</span></span>)</span>):</span><br>    xmin,xmax,ymin,ymax,zmin,zmax = bbox*<span class="hljs-number">3</span><br>    fig = plt.figure(<span class="hljs-string">&#x27;HEART&#x27;</span>)<br>    ax = fig.add_subplot(<span class="hljs-number">111</span>,projection = <span class="hljs-string">&#x27;3d&#x27;</span>)<br>    A = np.linspace(xmin,xmax,<span class="hljs-number">80</span>)<br>    B = np.linspace(xmin,xmax,<span class="hljs-number">30</span>)<br>    A1,A2 = np.meshgrid(A,A)<br> <br>    <span class="hljs-keyword">for</span> z <span class="hljs-keyword">in</span> B:<br>        X,Y = A1,A2<br>        Z = fn(X,Y,z)<br>        cest = ax.contour(X,Y,z+Z,[z],zdir=<span class="hljs-string">&#x27;z&#x27;</span>,colors=(<span class="hljs-string">&#x27;r&#x27;</span>,))<br> <br>    <span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> B:<br>        X,Z = A1,A2<br>        Y = fn(X,y,Z)<br>        cest = ax.contour(X,Y+y,Z,[y],zdir = <span class="hljs-string">&#x27;y&#x27;</span>,colors = (<span class="hljs-string">&#x27;red&#x27;</span>,))<br> <br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> B :<br>        Y,Z=A1,A2<br>        X = fn(x,Y,Z)<br>        cest = ax.contour(X+x,Y,Z,[x],zdir = <span class="hljs-string">&#x27;x&#x27;</span>,colors = (<span class="hljs-string">&#x27;red&#x27;</span>,))<br> <br>    ax.set_zlim3d(zmin,zmax)<br>    ax.set_xlim3d(xmin,xmax)<br>    ax.set_ylim3d(ymin,ymax)<br>        <br>    plt.show()<br> <br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    plot_implicit(heart_3d)<br><br></code></pre></td></tr></table></figure></details>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>美食</title>
    <link href="/post/delicious-food-01/"/>
    <url>/post/delicious-food-01/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>单纯的记录一下自己做过的，并且自我感觉良好的美食</p>          </div><span id="more"></span><h2 id="鱼香茄龙"><a href="#鱼香茄龙" class="headerlink" title="鱼香茄龙"></a>鱼香茄龙</h2><p>一、蓑衣刀切茄子<br>第一面斜刀切，刀与案板45度<br>翻过来竖着切，刀与案板45度</p><p>二、调面糊<br>盆中放入四勺普通面粉、放入两勺玉米淀粉、放入少许泡打粉、打入一颗鸡蛋、放入少许食用油、加入适量清水，搅成稍微稠一点的面糊。</p><p>三、炸茄子<br>将面糊粘到茄子上，然后炸至定型、一面炸2分钟左右就可以</p><p>四、准备调汁<br>蒜蓉<br>鱼香汁：一勺料酒、两勺生抽、三勺陈醋、四勺白糖、五勺清水<br>少许盐<br>少许鸡精<br>少许玉米淀粉<br>五、调汁<br>锅中放底油，加入豆瓣酱和蒜炒出红油，导入鱼香汁，把汁熬成浓稠状</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://image.glwsq.cn/img/202201310928961.png"></div><div class="group-image-wrap"><img src="https://image.glwsq.cn/img/202201310928964.png"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="https://image.glwsq.cn/img/202201310929903.png"></div></div></div><blockquote><p>教程<br>视频教程：<a href="https://www.bilibili.com/video/BV1kt411c7Ua">https://www.bilibili.com/video/BV1kt411c7Ua</a><br><a href="https://b23.tv/aPhgCv">蓑衣刀法演示</a></p></blockquote><h2 id="懒人披萨"><a href="#懒人披萨" class="headerlink" title="懒人披萨"></a>懒人披萨</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-02-19.png"></p><blockquote><p>教程<br><a href="https://b23.tv/BV18t411g7e5">https://b23.tv/BV18t411g7e5</a></p></blockquote><h2 id="千叶豆腐"><a href="#千叶豆腐" class="headerlink" title="千叶豆腐"></a>千叶豆腐</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-02-39.png"></p><blockquote><p>教程<br><a href="http://m.jiaonizuocai.com/caipudaquan/78329178">http://m.jiaonizuocai.com/caipudaquan/78329178</a></p></blockquote><h2 id="炒土豆丝"><a href="#炒土豆丝" class="headerlink" title="炒土豆丝"></a>炒土豆丝</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-02-49.png"></p><blockquote><p>教程<br><a href="http://m.jiaonizuocai.com/caipudaquan/89551752">http://m.jiaonizuocai.com/caipudaquan/89551752</a></p></blockquote><h2 id="炒饭"><a href="#炒饭" class="headerlink" title="炒饭"></a>炒饭</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-02-58.png"></p><h2 id="爆炒杏鲍菇"><a href="#爆炒杏鲍菇" class="headerlink" title="爆炒杏鲍菇"></a>爆炒杏鲍菇</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-03-05.png"></p><blockquote><p>教程<br><a href="http://m.jiaonizuocai.com/caipudaquan/88212668">http://m.jiaonizuocai.com/caipudaquan/88212668</a></p></blockquote><h2 id="可乐焖鸡腿"><a href="#可乐焖鸡腿" class="headerlink" title="可乐焖鸡腿"></a>可乐焖鸡腿</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-03-15.png"></p><blockquote><p>教程<br><a href="http://m.jiaonizuocai.com/caipudaquan/87575052">http://m.jiaonizuocai.com/caipudaquan/87575052</a></p></blockquote><h2 id="麻辣串"><a href="#麻辣串" class="headerlink" title="麻辣串"></a>麻辣串</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-03-29.png"></p><blockquote><p>教程<br><a href="https://b23.tv/ok0pq4">https://b23.tv/ok0pq4</a></p></blockquote><h2 id="广式腊肠焖饭"><a href="#广式腊肠焖饭" class="headerlink" title="广式腊肠焖饭"></a>广式腊肠焖饭</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-03-39.png"></p><blockquote><p>教程<br><a href="https://b23.tv/uz5PHI">https://b23.tv/uz5PHI</a></p></blockquote><h2 id="鸡蛋酱香饼"><a href="#鸡蛋酱香饼" class="headerlink" title="鸡蛋酱香饼"></a>鸡蛋酱香饼</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-03-53.png"></p><blockquote><p>教程<br><a href="https://b23.tv/RHaWhI">https://b23.tv/RHaWhI</a></p></blockquote><h2 id="手工蛋糕"><a href="#手工蛋糕" class="headerlink" title="手工蛋糕"></a>手工蛋糕</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-04-04.png"></p><blockquote><p>教程<br><a href="https://b23.tv/5I2Frg">https://b23.tv/5I2Frg</a></p></blockquote><h2 id="香辣万州烤鱼"><a href="#香辣万州烤鱼" class="headerlink" title="香辣万州烤鱼"></a>香辣万州烤鱼</h2><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-04-16.png"></div><div class="group-image-wrap"><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-04-24.png"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-04-32.png"></div><div class="group-image-wrap"><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-04-40.png"></div></div></div><blockquote><p>教程<br><a href="http://m.jiaonizuocai.com/caipudaquan/83107931">http://m.jiaonizuocai.com/caipudaquan/83107931</a><br><a href="https://b23.tv/xuCfo5">https://b23.tv/xuCfo5</a></p></blockquote><h2 id="凉皮"><a href="#凉皮" class="headerlink" title="凉皮"></a>凉皮</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-04-53.png"></p><blockquote><p>教程<br><a href="https://b23.tv/QO8nf3">https://b23.tv/QO8nf3</a></p></blockquote><h2 id="正新鸡排"><a href="#正新鸡排" class="headerlink" title="正新鸡排"></a>正新鸡排</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-05-04.png"></p><blockquote><p>教程<br><a href="https://b23.tv/DSNqwd">https://b23.tv/DSNqwd</a><br><a href="https://b23.tv/0JId6p">https://b23.tv/0JId6p</a></p></blockquote><h2 id="奥尔良烤鸡腿"><a href="#奥尔良烤鸡腿" class="headerlink" title="奥尔良烤鸡腿"></a>奥尔良烤鸡腿</h2><blockquote><p>这个比较傻瓜，但是需要专门买腌料，然后就没然后了</p></blockquote><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-05-14.png"></p><blockquote><p>教程<br><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-05-22.png"></p></blockquote><h2 id="口水鸡"><a href="#口水鸡" class="headerlink" title="口水鸡"></a>口水鸡</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-06-02.png"></p><blockquote><p>做法非常简单，只需要把煮料放进去煮15分钟，然后放入冷水放凉后切片，最后把酱料和鸡汤混合浇到肉片上即可。下面有视频教程</p></blockquote><h3 id="材料"><a href="#材料" class="headerlink" title="材料"></a>材料</h3><p><strong>煮料</strong></p><ol><li>姜片</li><li>洋葱</li><li>葱</li><li>料酒</li><li>花椒</li></ol><p><strong>酱料</strong></p><ol><li>红油</li><li>酱油</li><li>白芝麻</li><li>香油</li><li>盐</li><li>白砂糖</li></ol><h2 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h2><video style="width:100%;" src="https://image.glwsq.cn/img/美食-口水鸡.mp4" controls="controls">your browser does not support the video tag</video><h2 id="鱼香肉丝"><a href="#鱼香肉丝" class="headerlink" title="鱼香肉丝"></a>鱼香肉丝</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-15-37.png"></p><p>蔬菜切丝: 黑木耳、青椒、红萝卜、莴笋<br>一碗酱汁: 白糖、料酒、香醋、酱油、生抽、淀粉、清水<br>肉切丝腌制: 鸡蛋清、盐、料酒、淀粉、玉米油</p><p>锅加油，放蒜和豆瓣酱炒出红油，然后放入肉丝炒变色，再加入蔬菜丝翻炒，可加入适量的盐，最后加入酱汁即可。</p><blockquote><p>教程<br><a href="https://www.bilibili.com/video/BV1Pt41127q5">https://www.bilibili.com/video/BV1Pt41127q5</a><br><a href="https://www.bilibili.com/video/BV11J411X7HH">https://www.bilibili.com/video/BV11J411X7HH</a></p></blockquote><h2 id="小炒西葫芦"><a href="#小炒西葫芦" class="headerlink" title="小炒西葫芦"></a>小炒西葫芦</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-15-48.png"></p><blockquote><p>教程<br><a href="https://www.xiachufang.com/recipe/104594835/">https://www.xiachufang.com/recipe/104594835/</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>个人文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Anaconda conda常用命令汇总</title>
    <link href="/post/a372d80e/"/>
    <url>/post/a372d80e/</url>
    
    <content type="html"><![CDATA[<p>记录一下在使用Anaconda的时候常用到的命令，和一些使用技巧。</p><span id="more"></span><blockquote><p>官网：<a href="https://www.anaconda.com/">https://www.anaconda.com/</a></p></blockquote><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="查看虚拟环境"><a href="#查看虚拟环境" class="headerlink" title="查看虚拟环境"></a>查看虚拟环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">conda info --env<br>conda env list<br></code></pre></td></tr></table></figure><h3 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda create -n <span class="hljs-built_in">test</span> python=3.7 <span class="hljs-comment"># 创建对应python版本的虚拟环境 (推荐)</span><br>conda create -n <span class="hljs-built_in">test</span> <span class="hljs-comment"># 创建一个test虚拟环境，默认python版本</span><br></code></pre></td></tr></table></figure><h3 id="激活退出虚拟环境"><a href="#激活退出虚拟环境" class="headerlink" title="激活退出虚拟环境"></a>激活退出虚拟环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda activate <span class="hljs-built_in">test</span> <span class="hljs-comment"># 激活test虚拟环境</span><br>conda deactivate <span class="hljs-comment"># 退出虚拟环境</span><br></code></pre></td></tr></table></figure><h3 id="删除虚拟环境"><a href="#删除虚拟环境" class="headerlink" title="删除虚拟环境"></a>删除虚拟环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda remove -n <span class="hljs-built_in">test</span> --all<br></code></pre></td></tr></table></figure><h3 id="克隆虚拟环境"><a href="#克隆虚拟环境" class="headerlink" title="克隆虚拟环境"></a>克隆虚拟环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda create -n test2 -<span class="hljs-built_in">clone</span> <span class="hljs-built_in">test</span> <span class="hljs-comment"># 完整复制某个环境，test2是由test克隆过来的</span><br></code></pre></td></tr></table></figure><h3 id="查看安装模块列表"><a href="#查看安装模块列表" class="headerlink" title="查看安装模块列表"></a>查看安装模块列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda list<br></code></pre></td></tr></table></figure><h3 id="安装卸载模块"><a href="#安装卸载模块" class="headerlink" title="安装卸载模块"></a>安装卸载模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install numpy=x.x.x <span class="hljs-comment"># 安装模块，不指定版本号默认最新</span><br>conda uninstall numpy <span class="hljs-comment"># 卸载</span><br></code></pre></td></tr></table></figure><h3 id="更新模块"><a href="#更新模块" class="headerlink" title="更新模块"></a>更新模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda upgrade --all <span class="hljs-comment"># 更新所有模块</span><br>conda upgrade numpy <br></code></pre></td></tr></table></figure><h2 id="更换清华镜像源"><a href="#更换清华镜像源" class="headerlink" title="更换清华镜像源"></a>更换清华镜像源</h2><blockquote><p>官方教程:<a href="https://mirror.tuna.tsinghua.edu.cn/help/anaconda/">https://mirror.tuna.tsinghua.edu.cn/help/anaconda/</a></p></blockquote><p>最简单的方法，用户目录下创建一个 .condarc 的文件，然后写入以下内容:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk">channels:<br>  - defaults<br>show_channel_urls: true<br>default_channels:<br>  - https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>pkgs/main<br>  - https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>pkgs/r<br>  - https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>pkgs/msys2<br>custom_channels:<br>  conda-forge: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  msys2: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  bioconda: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  menpo: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  pytorch: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  pytorch-lts: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  simpleitk: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br></code></pre></td></tr></table></figure><p>添加过后，最好运行 conda clean -i 清除索引缓存，保证用的是镜像站提供的索引。</p><h2 id="清理Anaconda"><a href="#清理Anaconda" class="headerlink" title="清理Anaconda"></a>清理Anaconda</h2><p>用久了会发现Anaconda非常的占用电脑磁盘空间，可以使用conda clean进行清理。<br><code>conda clean -h</code> 可以查看帮助文档</p><h3 id="删除从不使用的包"><a href="#删除从不使用的包" class="headerlink" title="删除从不使用的包"></a>删除从不使用的包</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">conda clean <span class="hljs-comment">--packages</span><br></code></pre></td></tr></table></figure><h3 id="删除tar包"><a href="#删除tar包" class="headerlink" title="删除tar包"></a>删除tar包</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">conda clean <span class="hljs-comment">--tarballs</span><br></code></pre></td></tr></table></figure><h3 id="删除索引缓存、锁定文件、未使用过的包和tar包。"><a href="#删除索引缓存、锁定文件、未使用过的包和tar包。" class="headerlink" title="删除索引缓存、锁定文件、未使用过的包和tar包。"></a>删除索引缓存、锁定文件、未使用过的包和tar包。</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">conda clean -<span class="hljs-selector-tag">a</span> <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>python</tag>
      
      <tag>conda</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网站推荐-老版</title>
    <link href="/post/best-loved-websits1/"/>
    <url>/post/best-loved-websits1/</url>
    
    <content type="html"><![CDATA[<p>我个人经常用的网站和软件</p><span id="more"></span><table><thead><tr><th align="center">网站名称</th><th align="center">简介</th></tr></thead><tbody><tr><td align="center"><a href="https://tongji.baidu.com/web/10000161110/overview/index?siteId=14529755">百度统计</a></td><td align="center">百度网站访问次数统计</td></tr><tr><td align="center"><a href="https://www.iconfont.cn/">IconFont</a></td><td align="center">好看的icon图标</td></tr><tr><td align="center"><a href="https://mermaidjs.github.io/mermaid-live-editor">Mermaid Live Editor</a></td><td align="center">在线Mermaid编辑</td></tr><tr><td align="center"><a href="https://engine.glwsq.cn/">博客留言</a></td><td align="center">自己本站博客留言数据</td></tr><tr><td align="center"><a href="https://labuladong.gitbook.io/">labuladong的算法小抄</a></td><td align="center">手把手撕LeetCode题目，扒各种算法套路的裤子</td></tr><tr><td align="center"><a href="http://www.slimego.cn/">史莱姆网盘搜索</a></td><td align="center">百度网盘资源搜索</td></tr><tr><td align="center"><a href="https://www.pansoso.com/">盘搜索</a></td><td align="center">百度网盘资源</td></tr><tr><td align="center"><a href="https://cloudconvert.com/">在线文档视频图片格式转换</a></td><td align="center">能把包括.tex格式的文档转换成任意格式</td></tr></tbody></table><!-- |[AI人工智能图片放大](https://bigjpg.com/)|使用最新人工智能深度学习技术——深度卷积神经网络。它会将噪点和锯齿的部分进行补充，实现图片的无损放大| --><p>|<a href="https://prod.zkqiang.cn/wxeditor/index.html#">公众号 Markdown 编辑器</a>||<br>|<a href="http://xiezuocat.com/">写作猫</a>|Ai自动帮你修改文档中的文字和句子错误|<br>|<a href="https://draw.io/">draw.io</a>|一款在线画流程图软件|<br>|<a href="https://www.tablesgenerator.com/">Tables Generator</a>|Tables Generator是一款线上表格语法产生器，可产生 LaTeX、HTML、纯文字、Markdown 和 MediaWiki 表格语法，是个非常方便好用的工具|<br>|<a href="https://www.codecogs.com/eqnedit.php">Latex在线公式</a>||<br>|<a href="http://play.typeracer.com/">http://play.typeracer.com/</a>|在线打字对战平台,可以好友对战|<br>|<a href="http://jdk.java.net/archive/">各个版本jdk下载</a>||</p><table><thead><tr><th align="center">软件名称</th><th align="center">简介</th></tr></thead><tbody><tr><td align="center"><a href="https://dl.softmgr.qq.com/original/Development/Git-2.26.0-64-bit.exe">git</a></td><td align="center">代码版本管理工具</td></tr></tbody></table><!-- |[putty](https://sm.myapp.com/original/net_app/putty_V0.63.0.0.43510830.rar)|迷你的ssh连接工具||[MobaXterm](https://mobaxterm.mobatek.net/)|很好用的ssh工具| --><p>|<a href="https://www.fotosizer.com/CompareFeatures">Fotosizer</a>|一款批量图片处理软件，包括批量黑白，负片，调整大小，旋转，重命名，调整品质等很多图片的批量操作|</p><h1 id="好用网站推荐"><a href="#好用网站推荐" class="headerlink" title="好用网站推荐"></a>好用网站推荐</h1><h2 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h2><h3 id="算法百科OI-Wiki"><a href="#算法百科OI-Wiki" class="headerlink" title="算法百科OI Wiki"></a><a href="https://hk2.oi-wiki.org/">算法百科OI Wiki</a></h3><p><a href="https://hk2.oi-wiki.org/">OI Wiki</a> 致力于成为一个免费开放且持续更新的知识整合站点，大家可以在这里获取关于 编程竞赛 (competitive programming) 有趣又实用的知识，我们为大家准备了竞赛中的基础知识、常见题型、解题思路以及常用工具等内容，帮助大家更快速深入地学习编程竞赛。</p><h3 id="菜鸟教程"><a href="#菜鸟教程" class="headerlink" title="菜鸟教程"></a><a href="https://www.runoob.com/">菜鸟教程</a></h3><p>菜鸟教程提供了编程的基础技术教程, 介绍了HTML、CSS、Javascript、Python，Java，Ruby，C，PHP , MySQL等各种编程语言的基础知识。 同时本站中也提供了大量的在线实例，通过实例，您可以更好的学习编程。</p><h3 id="51自学网"><a href="#51自学网" class="headerlink" title="51自学网"></a><a href="https://www.51zxw.net/">51自学网</a></h3><p>视频教学，很便宜很精致的视频，大部分视频免费，收费模式是按照每个视频单独收费的，看一个几毛钱，我很喜欢这种收费模式。</p><h3 id="变量命名神器"><a href="#变量命名神器" class="headerlink" title="变量命名神器"></a><a href="https://unbug.github.io/codelf/">变量命名神器</a></h3><p>自动帮你想变量名，不用为想变量名而苦恼</p><h3 id="打ACM竞赛常用的刷题网站"><a href="#打ACM竞赛常用的刷题网站" class="headerlink" title="打ACM竞赛常用的刷题网站"></a>打ACM竞赛常用的刷题网站</h3><h3 id="Vjudge"><a href="#Vjudge" class="headerlink" title="Vjudge"></a><a href="https://vjudge.net/">Vjudge</a></h3><h3 id="洛谷"><a href="#洛谷" class="headerlink" title="洛谷"></a><a href="https://www.luogu.org/">洛谷</a></h3><h3 id="牛客网"><a href="#牛客网" class="headerlink" title="牛客网"></a><a href="https://www.nowcoder.com/">牛客网</a></h3><h3 id="计蒜客"><a href="#计蒜客" class="headerlink" title="计蒜客"></a><a href="https://www.jisuanke.com/">计蒜客</a></h3><h3 id="codeforces"><a href="#codeforces" class="headerlink" title="codeforces"></a><a href="http://codeforces.com/">codeforces</a></h3><h3 id="51nod"><a href="#51nod" class="headerlink" title="51nod"></a><a href="http://www.51nod.com/">51nod</a></h3><h3 id="vijos"><a href="#vijos" class="headerlink" title="vijos"></a><a href="https://vijos.org/">vijos</a></h3><h2 id="网页学习"><a href="#网页学习" class="headerlink" title="网页学习"></a>网页学习</h2><h3 id="学习CSS布局"><a href="#学习CSS布局" class="headerlink" title="学习CSS布局"></a><a href="http://zh.learnlayout.com/">学习CSS布局</a></h3><p>本站教授的是现在广泛使用于网站布局领域的CSS基础。</p><h3 id="在线配色"><a href="#在线配色" class="headerlink" title="在线配色"></a><a href="http://colormind.io/">在线配色</a></h3><p>自动生成很搭配的配色</p><h3 id="很好看的网页CSS代码块"><a href="#很好看的网页CSS代码块" class="headerlink" title="很好看的网页CSS代码块"></a><a href="http://www.dowebok.com/">很好看的网页CSS代码块</a></h3><p>很潮流，很前端的代码</p><h3 id="好看的HTML5代码"><a href="#好看的HTML5代码" class="headerlink" title="好看的HTML5代码"></a><a href="https://html5up.net/">好看的HTML5代码</a></h3><h3 id="TinyPng"><a href="#TinyPng" class="headerlink" title="TinyPng"></a><a href="https://tinypng.com/">TinyPng</a></h3><p>图片在线压缩，压缩率很高</p><h2 id="未分类"><a href="#未分类" class="headerlink" title="未分类"></a>未分类</h2><h3 id="高清摄影素材下载"><a href="#高清摄影素材下载" class="headerlink" title="高清摄影素材下载"></a><a href="https://www.pexels.com/">高清摄影素材下载</a></h3><p>高清免费的图片素材下载站</p><h3 id="文件格式转换"><a href="#文件格式转换" class="headerlink" title="文件格式转换"></a><a href="https://smallpdf.com/">文件格式转换</a></h3><p>一个很万能的格式转换网站，现在好像需要收费，但是一天可以免费用几次，对于临时使用完全是可以的</p><h3 id="在线打字"><a href="#在线打字" class="headerlink" title="在线打字"></a><a href="https://dazi.kukuw.com/?4Q2HC">在线打字</a></h3><p>个人很推荐的一个在线打字平台，可以练指法，也可以测速度。反正很棒就对了</p><p>如果打字速度提上来了，推荐玩下面的打字游戏<a href="https://zty.pe/">https://zty.pe/</a></p><h3 id="国家统计局"><a href="#国家统计局" class="headerlink" title="国家统计局"></a><a href="http://www.stats.gov.cn/">国家统计局</a></h3><p>如果需要大量的数据，并且不想写爬虫自己去爬去的话，这个地方可以免费下载想要的数据</p><h3 id="免费的ppt模板下载"><a href="#免费的ppt模板下载" class="headerlink" title="免费的ppt模板下载"></a><a href="https://www.52ppt.com/">免费的ppt模板下载</a></h3><p>很潮流的设计，下载是需要输入密码，所有的密码都是:<code>52ppt</code></p><h1 id="好用软件推荐"><a href="#好用软件推荐" class="headerlink" title="好用软件推荐"></a>好用软件推荐</h1><h2 id="普通软件"><a href="#普通软件" class="headerlink" title="普通软件"></a>普通软件</h2><h3 id="VMware-Workstation"><a href="#VMware-Workstation" class="headerlink" title="VMware Workstation"></a>VMware Workstation</h3><p>虚拟机，在电脑里面模拟N台真实的物理电脑，只要你电脑配置够高<br>收费</p><h3 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h3><p>Markdown格式化书写，比较简洁，很方便的可以生成各种格式的文档<br>免费</p><h3 id="TeamViewer"><a href="#TeamViewer" class="headerlink" title="TeamViewer"></a>TeamViewer</h3><p>远程桌面连接工具</p><h3 id="OpenVPN"><a href="#OpenVPN" class="headerlink" title="OpenVPN"></a>OpenVPN</h3><p>一个开源的VPN服务和客户端，可以用自己的服务器搭建VPN用来模拟一个局域网，这样只能通过局域网联机的游戏就可以多人异地游玩了<br>免费开源</p><h3 id="Primo-Ramdisk"><a href="#Primo-Ramdisk" class="headerlink" title="Primo Ramdisk"></a>Primo Ramdisk</h3><p>内存虚拟硬盘，如果你的内存足够大并且过剩的话，可以用来虚拟一个超级快的硬盘，用来做一个缓存盘使用，有点是缓存的速度超级快<br>收费</p><h3 id="VNC"><a href="#VNC" class="headerlink" title="VNC"></a>VNC</h3><p>远程桌面连接工具</p><h3 id="UltraISO"><a href="#UltraISO" class="headerlink" title="UltraISO"></a>UltraISO</h3><p>将ISO镜像写入U盘的工具</p><h3 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h3><p>Anaconda是一个方便的python包管理和环境管理软件,一般用来配置不同的项目环境。</p><p>自带的Jupyter Notebook可以在网页页面中直接编写代码和运行代码，代码的运行结果也会直接在代码块下显示，让你用写笔记的方式敲代码。</p><h3 id="NotePad"><a href="#NotePad" class="headerlink" title="NotePad++"></a>NotePad++</h3><p>一个很好用的记事本工具</p><p>官网:<a href="https://notepad-plus-plus.org/">https://notepad-plus-plus.org/</a></p><h3 id="Splashtop-Wired-XDisplay-Agent"><a href="#Splashtop-Wired-XDisplay-Agent" class="headerlink" title="Splashtop Wired XDisplay Agent"></a>Splashtop Wired XDisplay Agent</h3><p>Splashtop Wired XDisplay Agent是一款非常好用的屏幕扩展工具，有了这款工具，我们就可以非常轻松的将移动设备作为第二块屏幕来进行使用，如果你平时对屏幕扩展需求很高的话，那么这款工具就可以派上用场</p><h3 id="Hasleo-Easy-UEFI"><a href="#Hasleo-Easy-UEFI" class="headerlink" title="Hasleo Easy UEFI"></a>Hasleo Easy UEFI</h3><p>你有装双系统吗？如果装了的话一定会面临一个很重要的问题，就是开机的系统启动顺序，用它可以轻易的来调整，如果你是比较老的电脑，可以使用EasyBCD</p><h3 id="HelloFont"><a href="#HelloFont" class="headerlink" title="HelloFont"></a>HelloFont</h3><p>每当你写Word文档或者制作ppt的时候有没有经常烦恼没有好看的字体，一个软件解君愁，可以很方便的寻找收藏和使用很多字体。</p><h3 id="JetBrains-PyCharm"><a href="#JetBrains-PyCharm" class="headerlink" title="JetBrains PyCharm"></a>JetBrains PyCharm</h3><p>一款Python开发软件<br>收费，学生免费用3年，也有对应的开源版本</p><h3 id="HBuilder"><a href="#HBuilder" class="headerlink" title="HBuilder"></a>HBuilder</h3><p>一款中国很不错的网页编辑软件，可以同时生成手机版的app，还支持在线打包，真机调试等多个功能。最关键的是官方自带绿色免安装版本，可以放到U盘里面随时随地愉快的写代码了。</p><h3 id="Cheat-Engine"><a href="#Cheat-Engine" class="headerlink" title="Cheat Engine"></a>Cheat Engine</h3><p>内存修改工具，可以根据内存地址的变化来寻找一个固定的值并且进行修改。<br>是一个<strong>单机</strong>游戏外挂，可以修改游戏里的各种参数</p><h3 id="Bz"><a href="#Bz" class="headerlink" title="Bz"></a>Bz</h3><p>一款很老的二进制编译器，麻雀虽小五脏俱全</p><h3 id="putty"><a href="#putty" class="headerlink" title="putty"></a>putty</h3><p>免安装的ssh远程连接工具，麻雀虽小五脏俱全</p><h3 id="ms-arbiter"><a href="#ms-arbiter" class="headerlink" title="ms_arbiter"></a>ms_arbiter</h3><p>扫雷游戏，可以进行全世界排名的扫雷游戏</p><h3 id="楼月免费iTunes备份管理器"><a href="#楼月免费iTunes备份管理器" class="headerlink" title="楼月免费iTunes备份管理器"></a>楼月免费iTunes备份管理器</h3><p>一款直接查看iphone备份文件的工具，都知道iphone的备份是散乱的不可查看的文件，如果里面有很想看的文件，例如手机QQ的聊天记录，都可以在里面轻松的找到并且备份。</p><h3 id="upupoo"><a href="#upupoo" class="headerlink" title="upupoo"></a>upupoo</h3><p>一个免费的动态桌面</p><h3 id="navicat"><a href="#navicat" class="headerlink" title="navicat"></a>navicat</h3><p>各种数据库的可视化管理软件<br>收费</p><h3 id="格式工厂"><a href="#格式工厂" class="headerlink" title="格式工厂"></a>格式工厂</h3><p>很齐全的格式相互转换工具，如果你还在为上传固定大小固定格式的图片烦恼，就可以用他来很轻松的转换格式。</p><h3 id="亿图图示"><a href="#亿图图示" class="headerlink" title="亿图图示"></a>亿图图示</h3><p>一个在线画各种图的软件，我当时下载他是为了画ER图</p><h3 id="PicPick图像编辑器"><a href="#PicPick图像编辑器" class="headerlink" title="PicPick图像编辑器"></a>PicPick图像编辑器</h3><p>PicPick 是一个免费且优秀的截图工具，汇集屏幕截取、图像编辑、颜色拾取、标尺、量角器、放大镜、坐标轴、白板功能于一身。<br>屏幕截取模式包括：全屏、活动窗口、滚动窗口、矩形区域、固定区域、手绘区域、重复上次截取等。<br>下载地址:<a href="https://www.portablesoft.org/picpick-portable/">https://www.portablesoft.org/picpick-portable/</a></p><h3 id="ActivePresenter"><a href="#ActivePresenter" class="headerlink" title="ActivePresenter"></a>ActivePresenter</h3><p>ActivePresenter是一款屏幕录制和交互式电子学习创作的视频录制工具，能创建视频截屏、讲义、手册、演示文档、交互式多媒体课件。虽然不是最好用的，但绝对是功能最全的，丰富的功能可以满足真正要制作专业教学 视频、编辑各种教材的好工具。</p><h3 id="avant"><a href="#avant" class="headerlink" title="avant"></a>avant</h3><p>一个便携式小巧的三核浏览器<br>下载地址:<a href="http://www.avantbrowser.com/">http://www.avantbrowser.com/</a></p><h3 id="Bandicam"><a href="#Bandicam" class="headerlink" title="Bandicam"></a>Bandicam</h3><p>一个很专业的录屏软件，支持各种方式的高清录屏<br>便携版:<a href="http://image.glwsq.cn/201910/18766235/Bandicam_4.1.4.1413_Portable.zip">http://image.glwsq.cn/201910/18766235/Bandicam_4.1.4.1413_Portable.zip</a></p><h3 id="伽卡他卡"><a href="#伽卡他卡" class="headerlink" title="伽卡他卡"></a>伽卡他卡</h3><p>伽卡他卡网络教室软件由伽卡他卡公司隆重推出，免费下载，免费使用。即安即用，无人数时间限制，不需注册码、无加密狗的电子教室软件。<br>下载地址:<a href="http://www.gakataka.com/netclass.php">http://www.gakataka.com/netclass.php</a></p><h3 id="Portable-VirtualBox"><a href="#Portable-VirtualBox" class="headerlink" title="Portable-VirtualBox"></a>Portable-VirtualBox</h3><p>便携版的虚拟机，对于爱折腾的人这个软件还是很不错的，可以随身带着一堆虚拟机乱跑。<br>Portable-VirtualBox is a free and open source software tool that lets you run any operating system from a usb stick without separate installation.<br>官网:<a href="https://www.vbox.me/">https://www.vbox.me/</a><br>中文教程:<a href="https://www.iplaysoft.com/portable-virtualbox.html">https://www.iplaysoft.com/portable-virtualbox.html</a><br><code>data\.VirtualBox\Machines</code>这个位置可以用来保存自己的系统</p><h3 id="DuplicateFileFinderPlus"><a href="#DuplicateFileFinderPlus" class="headerlink" title="DuplicateFileFinderPlus"></a>DuplicateFileFinderPlus</h3><p>如果你的电脑上有大量的重复文件，又不想手动去删除的话，这个软件可以帮助到你。</p><h2 id="专业软件"><a href="#专业软件" class="headerlink" title="专业软件"></a>专业软件</h2><h3 id="Intellij-IDEA"><a href="#Intellij-IDEA" class="headerlink" title="Intellij IDEA"></a>Intellij IDEA</h3><p>一款很不错的Java开发工具<br>收费，学生邮箱可以免费用3年，也有开源版本</p><h3 id="Wireshark"><a href="#Wireshark" class="headerlink" title="Wireshark"></a>Wireshark</h3><p>网络抓包软件<br>免费开源</p><h3 id="TeXstudio"><a href="#TeXstudio" class="headerlink" title="TeXstudio"></a>TeXstudio</h3><p>编写Latex的编辑器，但是并不能编译，如果需要编译的话还要结合<strong>texlive</strong></p><h3 id="魔方内存盘"><a href="#魔方内存盘" class="headerlink" title="魔方内存盘"></a>魔方内存盘</h3><p>如果你的电脑内存很大，可以用这个来把内存模拟成一块高速硬盘，用来缓存数据是很不错的，而且不会降低硬盘的寿命。<br><a href="http://image.glwsq.cn/software508824/ramdisk.exe">点击下载</a></p><h3 id="ScreenToGif"><a href="#ScreenToGif" class="headerlink" title="ScreenToGif"></a>ScreenToGif</h3><p>一款录制GIF的软件，免费开源</p>]]></content>
    
    
    <categories>
      
      <category>推荐分享</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>微软拼音快速插入当前时间</title>
    <link href="/post/aa4fd572/"/>
    <url>/post/aa4fd572/</url>
    
    <content type="html"><![CDATA[<p>有时候做笔记需要记录一下当前的时间，普通的方法就是看一下当前时间然后对着写一下。今天突然发现了一个好方法，不仅可以快速的插入当前的时间，而且还能设置时间格式，效果如下:<br><img src="/images/uploads/%E5%BE%AE%E8%BD%AF%E6%8B%BC%E9%9F%B3%E5%BF%AB%E9%80%9F%E6%8F%92%E5%85%A5%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4/time.gif"></p><span id="more"></span><h2 id="1-右键输入法打开设置"><a href="#1-右键输入法打开设置" class="headerlink" title="1. 右键输入法打开设置"></a>1. 右键输入法打开设置</h2><p><img src="/images/uploads/%E5%BE%AE%E8%BD%AF%E6%8B%BC%E9%9F%B3%E5%BF%AB%E9%80%9F%E6%8F%92%E5%85%A5%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4/20200313223907.png" alt="右键输入法打开设置"></p><h2 id="2-进入词库"><a href="#2-进入词库" class="headerlink" title="2. 进入词库"></a>2. 进入词库</h2><p><img src="/images/uploads/%E5%BE%AE%E8%BD%AF%E6%8B%BC%E9%9F%B3%E5%BF%AB%E9%80%9F%E6%8F%92%E5%85%A5%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4/20200313223938.png" alt="进入词库"></p><h2 id="3-添加用户自定义短语"><a href="#3-添加用户自定义短语" class="headerlink" title="3. 添加用户自定义短语"></a>3. 添加用户自定义短语</h2><p><img src="/images/uploads/%E5%BE%AE%E8%BD%AF%E6%8B%BC%E9%9F%B3%E5%BF%AB%E9%80%9F%E6%8F%92%E5%85%A5%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4/20200313224002.png" alt="添加用户自定义短语"></p><h2 id="4-编辑短语"><a href="#4-编辑短语" class="headerlink" title="4. 编辑短语"></a>4. 编辑短语</h2><p>这里提供2种格式，当然可以自己修改，然后保存就可以了</p><ol><li><p><code>%yyyy%年%MM%月%dd%日 %HH%:%mm%:%ss%</code></p></li><li><p><code>%yyyy%-%MM%-%dd% %HH%:%mm%:%ss%</code></p></li></ol><p><img src="/images/uploads/%E5%BE%AE%E8%BD%AF%E6%8B%BC%E9%9F%B3%E5%BF%AB%E9%80%9F%E6%8F%92%E5%85%A5%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4/20200313224059.png" alt="编辑短语"></p><p><strong>这个每次保存完以后就不要再打开查看了，查看完以后就必须重新修改成上面的格式保存</strong></p>]]></content>
    
    
    <categories>
      
      <category>电脑使用技巧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>电脑使用技巧</tag>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何在VMware中安装Linux</title>
    <link href="/post/vmware-linux/"/>
    <url>/post/vmware-linux/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>哔哩哔哩是个学习的地方，我自己也通过哔哩哔哩学习过很多技术，其中也发现了一些很好的视频，我都把它记录下来了，都是正在学习的或者已经学习完的，如果需要，可以点击查看：<a href="/bilibili-record/">哔哩哔哩学习记录</a></p></blockquote><h2 id="哔哩哔哩"><a href="#哔哩哔哩" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h2><p>哔哩哔哩的视频地址 <a href="https://www.bilibili.com/video/av43150343/">点击进入</a></p><h2 id="问题整理"><a href="#问题整理" class="headerlink" title="问题整理"></a>问题整理</h2><h3 id="1-启动以后电脑蓝屏重启"><a href="#1-启动以后电脑蓝屏重启" class="headerlink" title="1. 启动以后电脑蓝屏重启"></a>1. 启动以后电脑蓝屏重启</h3><p>因为Windows本身也有一个虚拟机，会和VMware冲突，一般需要关闭，如果关闭也还有问题，那么就用最新的VMware16，理论上换成这个版本就没有问题了，如果还有问题可以在下面的评论区提问</p><a class="btn" href="/post/vmware-linux-error"  target="_blank">详细解决过程</a><h3 id="2-打开以后关不掉"><a href="#2-打开以后关不掉" class="headerlink" title="2. 打开以后关不掉"></a>2. 打开以后关不掉</h3><p>q : 把虚拟机配置好后点启动一直黑屏，点关闭客户端就卡住一直关不掉</p><p>q : 下载好后关机就打不开了，虚拟机也删不掉，只能从服务里面禁掉再删除重装，试了三次都这样，我下的是vm14，Ubuntu18.04.4</p><p>a : 这是Win10最新版自带有一个虚拟机，和VM冲突了，最新版的VM解决了这个问题，您需要下载最新版的15.1以上的VMware</p><h3 id="3-Linux在哪里下载，高速下载"><a href="#3-Linux在哪里下载，高速下载" class="headerlink" title="3. Linux在哪里下载，高速下载"></a>3. Linux在哪里下载，高速下载</h3><p>很多小伙伴说下载的速度很慢，这里提供一下阿里的镜像站<a href="http://mirrors.aliyun.com/ubuntu-releases/">http://mirrors.aliyun.com/ubuntu-releases/</a>，这速度肯定杠杠的。</p><p>打开以后随便找个版本，然后下载desktop版本的iso<br><img src="/images/uploads/linux-VMware-20200312083615.png"><br>我来下载一下试试速度，好吧，这是我家网速的极限了，你们还能更快<br><img src="/images/uploads/linux-VMware-20200312083753.png"></p><h3 id="4-vmware安装ubuntu-“-Intel-VT-x-处于禁用状态"><a href="#4-vmware安装ubuntu-“-Intel-VT-x-处于禁用状态" class="headerlink" title="4. vmware安装ubuntu “ Intel VT-x 处于禁用状态"></a>4. vmware安装ubuntu “ Intel VT-x 处于禁用状态</h3><p><img src="/images/uploads/linux-VMware-interlerror.jpg"></p><p>重启系统，进入BIOS（具体可以百度一下，自己的电脑型号，然后加上怎么进去BIOS）</p><p>选择advanced选项卡，选择CPU setup,按enter键进入</p><p>选择Intel Virtualization Technology，选择，按enter</p><p>选择Enable，按enter键，状态改变如下图所示。</p><p>上面的步骤电脑不同也不一样，但是目的就是这样，需要修改主板的设置来开启这个功能。</p><p>如果需要详细的过程，可以百度一下，有很多针对于你的电脑的教程</p><h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><p>我的博客正在添加很多内容，如果需要可以点击首页查看，也欢迎关注我的微信公众号:<br><img max-width="50px" width="200px" src="https://image.glwsq.cn/img/202202052349959.jpg"></p><div class="note note-success">            <p>相关推荐：</p><ul><li><a href="/post/note-vue-element/">Vue后台管理系统项目实战/vue+element-ui/vue经典全套系统案例讲解</a></li><li><a href="/post/df99894b/">尚硅谷Vue2.0+Vue3.0全套教程丨vuejs从入门到精通</a></li><li><a href="/post/2ff98e51/">Docker最新超详细版教程通俗易懂</a></li><li><a href="/post/switch-node-version/">优雅的切换nodejs版本</a></li><li><a href="/post/vmware-linux/">如何在VMware中安装Linux</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>Linux</tag>
      
      <tag>虚拟机</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vscode-paste-image VScode中插入剪切板中的图片</title>
    <link href="/post/vscode-paste-image/"/>
    <url>/post/vscode-paste-image/</url>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>我自己喜欢用markdown记录一些笔记，但是在笔记中要插入很多图片，普通的方法很麻烦，不但要复制图片，还要手动的插入图片的地址。用一个插件，就可以直接<code>ctrl + alt + v</code>来粘贴图片了，并且还会自动写入图片的链接。</p><span id="more"></span><h2 id="插件用法"><a href="#插件用法" class="headerlink" title="插件用法"></a>插件用法</h2><p>我喜欢在一个markdown文件的同级下建立一个和这个文件名称一样的文件夹用来保存图片，在VSCode中安装好Paste Image插件经过自己的设置后，只需要复制想要的照片，<code>ctrl + alt + v</code>粘贴，就可以了。</p><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p>这是用过插件以后达到的效果，<code>ctrl + alt + v</code>粘贴后，自动生成了一张照片，并且根据当前的日期重命名。</p><p><img src="https://image.glwsq.cn/img/202201210004119.png"></p><h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><h3 id="1-首先在VSCode中安装Paste-Image插件"><a href="#1-首先在VSCode中安装Paste-Image插件" class="headerlink" title="1. 首先在VSCode中安装Paste Image插件"></a>1. 首先在VSCode中安装Paste Image插件</h3><p><img src="https://image.glwsq.cn/img/202201210004941.png"></p><h3 id="2-进行配置"><a href="#2-进行配置" class="headerlink" title="2. 进行配置"></a>2. 进行配置</h3><p>点击小齿轮，选择Extensions Settings(扩展设置)<br><img src="https://image.glwsq.cn/img/202201210005935.png"></p><p>找到设置里面的Path，并且把值改为:<code>$&#123;currentFileDir&#125;/$&#123;currentFileNameWithoutExt&#125;</code></p><p><img src="https://image.glwsq.cn/img/202201210004679.png"></p><p><strong>参数说明:</strong></p><p>这个插件在设置的时候是可以使用变量的，这次设置用到了两个变量，分别是<br>${currentFileDir}: 包含当前文件的目录</p><p>${currentFileNameWithoutExt}: 这个文件的名称，不包含扩展名。因为我要用文件名来作为目录名，目录中是不能有点的，所以要用这一个，这一点非常重要。</p><p><strong>到这里就完成了，如果有问题，欢迎留言。</strong></p>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>vscode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>VSCode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自动截屏工具</title>
    <link href="/post/d9b8d897/"/>
    <url>/post/d9b8d897/</url>
    
    <content type="html"><![CDATA[<h1 id="心路历程"><a href="#心路历程" class="headerlink" title="心路历程"></a>心路历程</h1><p>不知道你有没有遇到过这样的情景，老师布置了一个任务，安装一下某个软件，然后让把每一步截图，最后行程报告。<br>不管你烦不烦，我是很烦这个操作的，安装软件本来就是一项很简单的过程，因为需要时时刻刻的截图，变成了一项很艰巨的任务。</p><p>所以我就一直想找一个软件，这个软件的功能是实现自动截图的操作，当然还有几点要求：</p><ol><li>当我按下鼠标左键的时候自动截图，因为每次按下左键都会到下一个界面</li><li>我不想单纯的截一张全屏的图，我想让他截下来当前运行程序的截图。</li></ol><p>虽然就只有很少的两个要求，但是并没有发现满足这两个功能的截图软件。</p><p>所以我就想写一个这样的软件。</p><h1 id="开始操作"><a href="#开始操作" class="headerlink" title="开始操作"></a>开始操作</h1><p>要想写一个程序，首先选择的是要用哪一个编程语言。刚开始我选择了java，并且看开发文档写了下面的程序。<br>他只能实现截屏，然后并不能获取鼠标的状态，同样也就不能直接操作windows的句柄从而获取窗口的截图。</p><figure class="highlight java"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></div></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> javax.imageio.ImageIO;<br><span class="hljs-keyword">import</span> java.awt.*;<br><span class="hljs-keyword">import</span> java.awt.image.BufferedImage;<br><span class="hljs-keyword">import</span> java.io.File;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CaptureScreen</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">captureScreen</span><span class="hljs-params">(String folder, String fileName)</span> <span class="hljs-keyword">throws</span> AWTException, IOException </span>&#123;<br>        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();<br>        Rectangle screenRectangle = <span class="hljs-keyword">new</span> Rectangle(screenSize);<br>        Robot robot = <span class="hljs-keyword">new</span> Robot();<br>        BufferedImage image = robot.createScreenCapture(screenRectangle);<br><br>        File screenFile = <span class="hljs-keyword">new</span> File(folder);<br>        <span class="hljs-keyword">if</span>(!screenFile.exists()) &#123;<br>            screenFile.mkdir();<br>        &#125;<br>        File f = <span class="hljs-keyword">new</span> File(screenFile, fileName);<br>        ImageIO.write(image, <span class="hljs-string">&quot;png&quot;</span>, f);<br>        <span class="hljs-keyword">if</span>(Desktop.isDesktopSupported() &amp;&amp; Desktop.getDesktop().isSupported(Desktop.Action.OPEN)) &#123;<br>            Desktop.getDesktop().open(f);<br>        &#125;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span>&#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            captureScreen(<span class="hljs-string">&quot;hello&quot;</span>, <span class="hljs-string">&quot;11.png&quot;</span>);<br>        &#125; <span class="hljs-keyword">catch</span> (AWTException e) &#123;<br>            e.printStackTrace();<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>然后又找了一个python的代码，然后跟java是同样的问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> win32gui, win32ui, win32con, win32api<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">window_capture</span>(<span class="hljs-params">filename</span>):</span><br>    hwnd = <span class="hljs-number">0</span>  <span class="hljs-comment"># 窗口的编号，0号表示当前活跃窗口</span><br>    <span class="hljs-comment"># 根据窗口句柄获取窗口的设备上下文DC（Divice Context）</span><br>    hwndDC = win32gui.GetWindowDC(hwnd)<br>    <span class="hljs-comment"># 根据窗口的DC获取mfcDC</span><br>    mfcDC = win32ui.CreateDCFromHandle(hwndDC)<br>    <span class="hljs-comment"># mfcDC创建可兼容的DC</span><br>    saveDC = mfcDC.CreateCompatibleDC()<br>    <span class="hljs-comment"># 创建bigmap准备保存图片</span><br>    saveBitMap = win32ui.CreateBitmap()<br>    <span class="hljs-comment"># 获取监控器信息</span><br>    MoniterDev = win32api.EnumDisplayMonitors(<span class="hljs-literal">None</span>, <span class="hljs-literal">None</span>)<br>    w = MoniterDev[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>][<span class="hljs-number">2</span>]<br>    h = MoniterDev[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>][<span class="hljs-number">3</span>]<br>    <span class="hljs-comment"># print w,h　　　#图片大小</span><br>    <span class="hljs-comment"># 为bitmap开辟空间</span><br>    saveBitMap.CreateCompatibleBitmap(mfcDC, w, h)<br>    <span class="hljs-comment"># 高度saveDC，将截图保存到saveBitmap中</span><br>    saveDC.SelectObject(saveBitMap)<br>    <span class="hljs-comment"># 截取从左上角（0，0）长宽为（w，h）的图片</span><br>    saveDC.BitBlt((<span class="hljs-number">0</span>, <span class="hljs-number">0</span>), (w, h), mfcDC, (<span class="hljs-number">0</span>, <span class="hljs-number">0</span>), win32con.SRCCOPY)<br>    saveBitMap.SaveBitmapFile(saveDC, filename)<br><br><br>beg = time.time()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    window_capture(<span class="hljs-string">&quot;haha.jpg&quot;</span>)<br>end = time.time()<br><span class="hljs-built_in">print</span>(end - beg)<br></code></pre></td></tr></table></figure><p>没有办法，最终只能选择C语言了，他能直接操作Windows的句柄，并且可以通过hook来获取全局鼠标的状态。</p><p>一步一步来，第一个代码先获取一下鼠标的状态，如果我点击鼠标了，让他显示一下我点击了左键还是右键。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;windows.h&gt;</span></span><br><br>HHOOK   _glh_hook_ = <span class="hljs-literal">NULL</span>;  <span class="hljs-comment">//定义为全局变量</span><br><br><span class="hljs-function">LRESULT CALLBACK <span class="hljs-title">MouseProc</span><span class="hljs-params">(<span class="hljs-keyword">int</span> nCode, WPARAM wparam, LPARAM lparam)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (nCode &gt;= <span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-keyword">if</span>(wparam == WM_RBUTTONDOWN)<br>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;右键&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (wparam == WM_LBUTTONDOWN)<br>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;左键&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (wparam == WM_MBUTTONDOWN)<br>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;中键&quot;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> CallNextHookEx(_glh_hook_, nCode, wparam, lparam);<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    HINSTANCE   glhInstance = <span class="hljs-literal">NULL</span>;<br>glhInstance = GetModuleHandle(<span class="hljs-literal">NULL</span>);<br>_glh_hook_ = SetWindowsHookEx(WH_MOUSE_LL, MouseProc, glhInstance, <span class="hljs-number">0</span>);<br><span class="hljs-comment">//WH_MOUSE_LL指监控鼠标行为,MouseProc是回调函数</span><br><span class="hljs-keyword">if</span>(_glh_hook_ == <span class="hljs-literal">NULL</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;鼠标钩子获取失败&quot;</span>);<br>    &#125;<br>    MSG msg;<br>    <span class="hljs-keyword">while</span> (GetMessage(&amp;msg, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>))<br>    &#123;<br>        TranslateMessage(&amp;msg);<br>        DispatchMessage(&amp;msg);<br>    &#125;<br>    UnhookWindowsHookEx(_glh_hook_);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>关于全局鼠标钩子卡的原因分析</p><p>问题：注册全局钩子后，最大化或关闭时，某些电脑会卡顿，卡的时候不固定，同样的系统有的会卡，有的不会卡。</p><p>分析：基于这样的问题进行了大量的资料收集与分析，发现卡的问题其实是在windows 动画上，由于关闭窗口时线程退出消息循环而没结束钩子消息导致都不能接收，于是鼠标消息就在那耗着，直到超时所形成的卡顿现象，解决方案有如下二种：<br>1，在窗体发送WM_Close消息前先卸载钩子。<br>2，关闭窗口动画过渡效果，从而减少卡顿时间，比如使用性能模式或使用windows 经典主题。</p><p>完整的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;pch.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdint.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;time.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ShootScreen</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* filename, HWND hWnd)</span></span><br><span class="hljs-function"></span>&#123;<br>HDC hdc = CreateDC(<span class="hljs-string">&quot;DISPLAY&quot;</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>);<br><span class="hljs-keyword">int32_t</span> ScrWidth = <span class="hljs-number">0</span>, ScrHeight = <span class="hljs-number">0</span>;<br>RECT rect = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-keyword">if</span> (hWnd == <span class="hljs-literal">NULL</span>)<br>&#123;<br>ScrWidth = GetDeviceCaps(hdc, HORZRES);<br>ScrHeight = GetDeviceCaps(hdc, VERTRES);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>GetWindowRect(hWnd, &amp;rect);<br>ScrWidth = rect.right - rect.left;<br>ScrHeight = rect.bottom - rect.top;<br>&#125;<br>HDC hmdc = CreateCompatibleDC(hdc);<br><br>HBITMAP hBmpScreen = CreateCompatibleBitmap(hdc, ScrWidth, ScrHeight);<br>HBITMAP holdbmp = (HBITMAP)SelectObject(hmdc, hBmpScreen);<br><br>BITMAP bm;<br>GetObject(hBmpScreen, <span class="hljs-keyword">sizeof</span>(bm), &amp;bm);<br><br>BITMAPINFOHEADER bi = &#123; <span class="hljs-number">0</span> &#125;;<br>bi.biSize = <span class="hljs-keyword">sizeof</span>(BITMAPINFOHEADER);<br>bi.biWidth = bm.bmWidth;<br>bi.biHeight = bm.bmHeight;<br>bi.biPlanes = bm.bmPlanes;<br>bi.biBitCount = bm.bmBitsPixel;<br>bi.biCompression = BI_RGB;<br>bi.biSizeImage = bm.bmHeight * bm.bmWidthBytes;<br><br><span class="hljs-keyword">char</span> *buf = <span class="hljs-keyword">new</span> <span class="hljs-keyword">char</span>[bi.biSizeImage];<br>BitBlt(hmdc, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, ScrWidth, ScrHeight, hdc, rect.left, rect.top, SRCCOPY);<br>GetDIBits(hmdc, hBmpScreen, <span class="hljs-number">0L</span>, (DWORD)ScrHeight, buf, (LPBITMAPINFO)&amp;bi, (DWORD)DIB_RGB_COLORS);<br><br>BITMAPFILEHEADER bfh = &#123; <span class="hljs-number">0</span> &#125;;<br>bfh.bfType = ((WORD)(<span class="hljs-string">&#x27;M&#x27;</span> &lt;&lt; <span class="hljs-number">8</span>) | <span class="hljs-string">&#x27;B&#x27;</span>);<br>bfh.bfSize = <span class="hljs-keyword">sizeof</span>(BITMAPFILEHEADER) + <span class="hljs-keyword">sizeof</span>(BITMAPINFOHEADER) + bi.biSizeImage;<br>bfh.bfOffBits = <span class="hljs-keyword">sizeof</span>(BITMAPFILEHEADER) + <span class="hljs-keyword">sizeof</span>(BITMAPINFOHEADER);<br>HANDLE hFile = CreateFile(filename, GENERIC_WRITE, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, OPEN_ALWAYS, FILE_ATTRIBUTE_NORMAL, <span class="hljs-number">0</span>);<br>DWORD dwWrite;<br>WriteFile(hFile, &amp;bfh, <span class="hljs-keyword">sizeof</span>(BITMAPFILEHEADER), &amp;dwWrite, <span class="hljs-literal">NULL</span>);<br>WriteFile(hFile, &amp;bi, <span class="hljs-keyword">sizeof</span>(BITMAPINFOHEADER), &amp;dwWrite, <span class="hljs-literal">NULL</span>);<br>WriteFile(hFile, buf, bi.biSizeImage, &amp;dwWrite, <span class="hljs-literal">NULL</span>);<br>CloseHandle(hFile);<br>hBmpScreen = (HBITMAP)SelectObject(hmdc, holdbmp);<br>&#125;<br><br>HHOOK   _glh_hook_ = <span class="hljs-literal">NULL</span>;  <span class="hljs-comment">//定义为全局变量</span><br><br><span class="hljs-function">LRESULT CALLBACK <span class="hljs-title">MouseProc</span><span class="hljs-params">(<span class="hljs-keyword">int</span> nCode, WPARAM wparam, LPARAM lparam)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (nCode &gt;= <span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-keyword">if</span> (wparam == WM_RBUTTONDOWN)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;右键&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (wparam == WM_LBUTTONDOWN)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;左键&quot;</span>);<br>POINT pNow = &#123; <span class="hljs-number">0</span>,<span class="hljs-number">0</span> &#125;;<br><span class="hljs-keyword">if</span> (GetCursorPos(&amp;pNow))  <span class="hljs-comment">// 获取鼠标当前位置</span><br>&#123;<br><br>HWND hwndPointNow = <span class="hljs-literal">NULL</span>;<br>hwndPointNow = WindowFromPoint(pNow);  <span class="hljs-comment">// 获取鼠标所在窗口的句柄</span><br><span class="hljs-keyword">if</span> (hwndPointNow)<br>&#123;<br><span class="hljs-built_in">cout</span> &lt;&lt; hwndPointNow &lt;&lt; <span class="hljs-built_in">endl</span>;<br><span class="hljs-keyword">time_t</span> timep;<br><span class="hljs-keyword">int</span> t = time(&amp;timep);<br><br><span class="hljs-keyword">char</span> name[<span class="hljs-number">256</span>] = &#123; <span class="hljs-number">0</span> &#125;;<br><br>sprintf_s(name, <span class="hljs-number">256</span>, <span class="hljs-string">&quot;%d.bmp&quot;</span>, t);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;截图%s\n&quot;</span>, name);<br>ShootScreen(name, hwndPointNow);<br>&#125;<br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;Error!!&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>&#125;<br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;Error!!&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (wparam == WM_MBUTTONDOWN)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;中键&quot;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> CallNextHookEx(_glh_hook_, nCode, wparam, lparam);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;程序运行中&quot;</span>);<br>HINSTANCE   glhInstance = <span class="hljs-literal">NULL</span>;<br>glhInstance = GetModuleHandle(<span class="hljs-literal">NULL</span>);<br>_glh_hook_ = SetWindowsHookEx(WH_MOUSE_LL, MouseProc, glhInstance, <span class="hljs-number">0</span>);<br><span class="hljs-comment">//WH_MOUSE_LL指监控鼠标行为,MouseProc是回调函数</span><br><span class="hljs-keyword">if</span> (_glh_hook_ == <span class="hljs-literal">NULL</span>)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;鼠标钩子获取失败&quot;</span>);<br>&#125;<br>MSG msg;<br><span class="hljs-keyword">while</span> (GetMessage(&amp;msg, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>))<br>&#123;<br>TranslateMessage(&amp;msg);<br>DispatchMessage(&amp;msg);<br>&#125;<br>UnhookWindowsHookEx(_glh_hook_);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>但是这个代码是有问题的，Window10的动画冲突，会导致突然电脑变卡</p><p>没有办法，最后只能写一个通过按键来截图的工具了，而且进行了完善，可以通过修改配置文件来更改设置信息。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;pch.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdint.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;time.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;errno.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ctype.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdbool.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;io.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;direct.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span>  MAX_VALUE  64 <span class="hljs-comment">/* 定义section,key,value字符串最大长度 */</span></span><br><span class="hljs-comment">// printf(&quot;File = %s\nLine = %d\nFunc=%s\nDate=%s\nTime=%s\n&quot;, __FILE__, __LINE__, __FUNCTION__, __DATE__, __TIME__);</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span>  PRINT_ERRMSG(STR) fprintf(stderr,<span class="hljs-meta-string">&quot;line:%d,msg:%s,eMsg:%s\n&quot;</span>, __LINE__, STR, strerror(errno))</span><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">option</span></span><br><span class="hljs-class">&#123;</span><br><span class="hljs-keyword">char</span>    key[MAX_VALUE];   <span class="hljs-comment">/* 对应键 */</span><br><span class="hljs-keyword">char</span>    value[MAX_VALUE]; <span class="hljs-comment">/* 对应值 */</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span>  _<span class="hljs-title">option</span> *<span class="hljs-title">next</span>;</span>    <span class="hljs-comment">/* 链表连接标识 */</span><br>&#125; Option;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">data</span></span><br><span class="hljs-class">&#123;</span><br><span class="hljs-keyword">char</span>    section[MAX_VALUE]; <span class="hljs-comment">/* 保存section值          */</span><br>Option  *option;            <span class="hljs-comment">/* option链表头           */</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span>  _<span class="hljs-title">data</span> *<span class="hljs-title">next</span>;</span>        <span class="hljs-comment">/* 链表连接标识           */</span><br>&#125; Data;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span></span><br><span class="hljs-class">&#123;</span><br><span class="hljs-keyword">char</span>    comment;              <span class="hljs-comment">/* 表示注释的符号    */</span><br><span class="hljs-keyword">char</span>    separator;            <span class="hljs-comment">/* 表示分隔符        */</span><br><span class="hljs-keyword">char</span>    re_string[MAX_VALUE]; <span class="hljs-comment">/* 返回值字符串的值  */</span><br><span class="hljs-keyword">int</span>     re_int;               <span class="hljs-comment">/* 返回int的值       */</span><br><span class="hljs-keyword">bool</span>    re_bool;              <span class="hljs-comment">/* 返回bool的值      */</span><br><span class="hljs-keyword">double</span>  re_double;           <span class="hljs-comment">/* 返回double类型    */</span><br>Data    *data;                <span class="hljs-comment">/* 保存数据的头      */</span><br>&#125; Config;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 判断字符串是否为空</span><br><span class="hljs-comment">* 为空返回true,不为空返回false</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">str_empty</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *string)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span> == string || <span class="hljs-number">0</span> == <span class="hljs-built_in">strlen</span>(string);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 向链表添加section,key,value</span><br><span class="hljs-comment">* 如果添加时不存在section则新增一个</span><br><span class="hljs-comment">* 如果对应section的key不存在则新增一个</span><br><span class="hljs-comment">* 如果section已存在则不会重复创建</span><br><span class="hljs-comment">* 如果对应section的key已存在则只会覆盖key的值</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cnf_add_option</span><span class="hljs-params">(Config *cnf, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *section, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *key, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *value)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == cnf || <span class="hljs-built_in">str_empty</span>(section) || <span class="hljs-built_in">str_empty</span>(key) || <span class="hljs-built_in">str_empty</span>(value))<br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>; <span class="hljs-comment">/* 参数不正确,返回false */</span><br>&#125;<br><br>Data *p = cnf-&gt;data; <span class="hljs-comment">/* 让变量p循环遍历data,找到对应section */</span><br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != p &amp;&amp; <span class="hljs-number">0</span> != <span class="hljs-built_in">strcmp</span>(p-&gt;section, section))<br>&#123;<br>p = p-&gt;next;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == p)   <span class="hljs-comment">/* 说明没有找到section,需要加一个 */</span><br>&#123;<br>Data *ps = (Data*)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(Data));<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == ps)<br>&#123;<br><span class="hljs-built_in">exit</span>(<span class="hljs-number">-1</span>); <span class="hljs-comment">/* 申请内存错误 */</span><br>&#125;<br><span class="hljs-built_in">strcpy</span>(ps-&gt;section, section);<br>ps-&gt;option = <span class="hljs-literal">NULL</span>;    <span class="hljs-comment">/* 初始的option要为空 */</span><br>ps-&gt;next = cnf-&gt;data; <span class="hljs-comment">/* cnf-&gt;data可能为NULL */</span><br>cnf-&gt;data = p = ps;   <span class="hljs-comment">/* 头插法插入链表 */</span><br>&#125;<br><br>Option *q = p-&gt;option;<br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != q &amp;&amp; <span class="hljs-number">0</span> != <span class="hljs-built_in">strcmp</span>(q-&gt;key, key))<br>&#123;<br>q = q-&gt;next; <span class="hljs-comment">/* 遍历option,检查key是否已经存在 */</span><br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == q)   <span class="hljs-comment">/* 不存在option,则新建一个 */</span><br>&#123;<br>q = (Option*)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(Option));<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == q)<br>&#123;<br><span class="hljs-built_in">exit</span>(<span class="hljs-number">-1</span>); <span class="hljs-comment">/* 申请内存错误 */</span><br>&#125;<br><span class="hljs-built_in">strcpy</span>(q-&gt;key, key);<br>q-&gt;next = p-&gt;option; <span class="hljs-comment">/*这里p-&gt;option可能为NULL,不过也没关系 */</span><br>p-&gt;option = q; <span class="hljs-comment">/* 头插法插入链表 */</span><br>&#125;<br><span class="hljs-built_in">strcpy</span>(q-&gt;value, value); <span class="hljs-comment">/* 无论如何要把值改了 */</span><br><br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 去掉字符串内所有空白</span><br><span class="hljs-comment">* 且忽略注释部分</span><br><span class="hljs-comment">* 最终得到没有空白的字符串</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">strip_comments</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *string, <span class="hljs-keyword">char</span> comment)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == string || <span class="hljs-string">&#x27;\n&#x27;</span> == *string || <span class="hljs-string">&#x27;\r&#x27;</span> == *string)<br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>; <span class="hljs-comment">/* 第一个字符为回车或换行,表示空行 */</span><br>&#125;<br><br><span class="hljs-keyword">char</span> *p, *q; <span class="hljs-comment">/* 下面去掉字符串中所有空白字符 */</span><br><span class="hljs-keyword">for</span> (p = q = string; *p != <span class="hljs-string">&#x27;\0&#x27;</span> &amp;&amp; *p != comment; p++)<br>&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-number">0</span> == <span class="hljs-built_in">isspace</span>(*p))<br>&#123;<br>*q++ = *p; <span class="hljs-comment">/* 不是空白字符则重写字符串 */</span><br>&#125;<br>&#125;<br>*q = <span class="hljs-string">&#x27;\0&#x27;</span>;<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span> != <span class="hljs-built_in">strlen</span>(string); <span class="hljs-comment">/* 字符串长度不为0,表示数据可用 */</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 传递配置文件路径</span><br><span class="hljs-comment">* 参数有文件路径,注释字符,分隔符</span><br><span class="hljs-comment">* 返回Config结构体</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function">Config *<span class="hljs-title">cnf_read_config</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *filename, <span class="hljs-keyword">char</span> comment, <span class="hljs-keyword">char</span> separator)</span></span><br><span class="hljs-function"></span>&#123;<br>Config *cnf = (Config*)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(Config));<br>cnf-&gt;comment = comment; <span class="hljs-comment">/* 每一行该字符及以后的字符将丢弃 */</span><br>cnf-&gt;separator = separator; <span class="hljs-comment">/* 用来分隔Section 和 数据 */</span><br>cnf-&gt;data = <span class="hljs-literal">NULL</span>; <span class="hljs-comment">/* 初始数据为空 */</span><br><br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">str_empty</span>(filename))<br>&#123;<br><span class="hljs-keyword">return</span> cnf; <span class="hljs-comment">/* 空字符串则直接返回对象 */</span><br>&#125;<br><br><span class="hljs-keyword">char</span> *p, sLine[MAX_VALUE];    <span class="hljs-comment">/* 保存一行数据到字符串 */</span><br><span class="hljs-keyword">char</span> section[MAX_VALUE], key[MAX_VALUE], value[MAX_VALUE]; <span class="hljs-comment">/* 缓存section,key,value */</span><br>FILE *fp = <span class="hljs-built_in">fopen</span>(filename, <span class="hljs-string">&quot;r&quot;</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == fp)<br>&#123;<br><span class="hljs-built_in">PRINT_ERRMSG</span>(<span class="hljs-string">&quot;fopen&quot;</span>);<br><span class="hljs-built_in">exit</span>(errno); <span class="hljs-comment">/* 读文件错误直接按照错误码退出 */</span><br>&#125;<br><br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != <span class="hljs-built_in">fgets</span>(sLine, MAX_VALUE, fp))<br>&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">strip_comments</span>(sLine, cnf-&gt;comment))   <span class="hljs-comment">/* 去掉字符串所有空白,注释也忽略 */</span><br>&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-string">&#x27;[&#x27;</span> == sLine[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-string">&#x27;]&#x27;</span> == sLine[<span class="hljs-built_in">strlen</span>(sLine) - <span class="hljs-number">1</span>])<br>&#123;<br><span class="hljs-built_in">memset</span>(section, <span class="hljs-string">&#x27;\0&#x27;</span>, MAX_VALUE); <span class="hljs-comment">/* 清空section,因为strncpy不追加&#x27;\0&#x27; */</span><br><span class="hljs-built_in">strncpy</span>(section, sLine + <span class="hljs-number">1</span>, <span class="hljs-built_in">strlen</span>(sLine) - <span class="hljs-number">2</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> != (p = <span class="hljs-built_in">strchr</span>(sLine, cnf-&gt;separator)))      <span class="hljs-comment">/* 存在分隔符 */</span><br>&#123;<br><span class="hljs-built_in">memset</span>(key, <span class="hljs-string">&#x27;\0&#x27;</span>, MAX_VALUE); <span class="hljs-comment">/* 清空key,因为strncpy不追加&#x27;\0&#x27; */</span><br><span class="hljs-built_in">strncpy</span>(key, sLine, p - sLine);<br><span class="hljs-built_in">strcpy</span>(value, p + <span class="hljs-number">1</span>); <span class="hljs-comment">/* strcpy会追加&#x27;\0&#x27;,所以妥妥哒 */</span><br><span class="hljs-built_in">cnf_add_option</span>(cnf, section, key, value); <span class="hljs-comment">/* 添加section,key,value */</span><br>&#125; <span class="hljs-comment">/* 如果该行不存在分隔符则忽略这一行 */</span><br>&#125; <span class="hljs-comment">/* end strip_comments */</span><br>&#125; <span class="hljs-comment">/* end while */</span><br><br><span class="hljs-built_in">fclose</span>(fp);<br><span class="hljs-keyword">return</span> cnf;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 获取指定类型的值</span><br><span class="hljs-comment">* 根据不同类型会赋值给对应值</span><br><span class="hljs-comment">* 本方法需要注意,int和double的转换,不满足就是0</span><br><span class="hljs-comment">*     需要自己写代码时判断好</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cnf_get_value</span><span class="hljs-params">(Config *cnf, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *section, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *key)</span></span><br><span class="hljs-function"></span>&#123;<br>Data *p = cnf-&gt;data; <span class="hljs-comment">/* 让变量p循环遍历data,找到对应section */</span><br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != p &amp;&amp; <span class="hljs-number">0</span> != <span class="hljs-built_in">strcmp</span>(p-&gt;section, section))<br>&#123;<br>p = p-&gt;next;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == p)<br>&#123;<br><span class="hljs-built_in">PRINT_ERRMSG</span>(<span class="hljs-string">&quot;section not find!&quot;</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br>Option *q = p-&gt;option;<br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != q &amp;&amp; <span class="hljs-number">0</span> != <span class="hljs-built_in">strcmp</span>(q-&gt;key, key))<br>&#123;<br>q = q-&gt;next; <span class="hljs-comment">/* 遍历option,检查key是否已经存在 */</span><br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == q)<br>&#123;<br><span class="hljs-built_in">PRINT_ERRMSG</span>(<span class="hljs-string">&quot;key not find!&quot;</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-built_in">strcpy</span>(cnf-&gt;re_string, q-&gt;value);       <span class="hljs-comment">/* 将结果字符串赋值 */</span><br>cnf-&gt;re_int = <span class="hljs-built_in">atoi</span>(cnf-&gt;re_string);  <span class="hljs-comment">/* 转换为整形 */</span><br>cnf-&gt;re_bool = <span class="hljs-number">0</span> == <span class="hljs-built_in">strcmp</span>(<span class="hljs-string">&quot;true&quot;</span>, cnf-&gt;re_string); <span class="hljs-comment">/* 转换为bool型 */</span><br>cnf-&gt;re_double = <span class="hljs-built_in">atof</span>(cnf-&gt;re_string);  <span class="hljs-comment">/* 转换为double型 */</span><br><br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 判断section是否存在</span><br><span class="hljs-comment">* 不存在返回空指针</span><br><span class="hljs-comment">* 存在则返回包含那个section的Data指针</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function">Data *<span class="hljs-title">cnf_has_section</span><span class="hljs-params">(Config *cnf, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *section)</span></span><br><span class="hljs-function"></span>&#123;<br>Data *p = cnf-&gt;data; <span class="hljs-comment">/* 让变量p循环遍历data,找到对应section */</span><br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != p &amp;&amp; <span class="hljs-number">0</span> != <span class="hljs-built_in">strcmp</span>(p-&gt;section, section))<br>&#123;<br>p = p-&gt;next;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == p)   <span class="hljs-comment">/* 没找到则不存在 */</span><br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>&#125;<br><br><span class="hljs-keyword">return</span> p;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 判断指定option是否存在</span><br><span class="hljs-comment">* 不存在返回空指针</span><br><span class="hljs-comment">* 存在则返回包含那个section下key的Option指针</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function">Option *<span class="hljs-title">cnf_has_option</span><span class="hljs-params">(Config *cnf, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *section, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *key)</span></span><br><span class="hljs-function"></span>&#123;<br>Data *p = <span class="hljs-built_in">cnf_has_section</span>(cnf, section);<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == p)   <span class="hljs-comment">/* 没找到则不存在 */</span><br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>&#125;<br><br>Option *q = p-&gt;option;<br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != q &amp;&amp; <span class="hljs-number">0</span> != <span class="hljs-built_in">strcmp</span>(q-&gt;key, key))<br>&#123;<br>q = q-&gt;next; <span class="hljs-comment">/* 遍历option,检查key是否已经存在 */</span><br>&#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == q)   <span class="hljs-comment">/* 没找到则不存在 */</span><br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>&#125;<br><br><span class="hljs-keyword">return</span> q;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 将Config对象写入指定文件中</span><br><span class="hljs-comment">* header表示在文件开头加一句注释</span><br><span class="hljs-comment">* 写入成功则返回true</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cnf_write_file</span><span class="hljs-params">(Config *cnf, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *filename, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *header)</span></span><br><span class="hljs-function"></span>&#123;<br>FILE *fp = <span class="hljs-built_in">fopen</span>(filename, <span class="hljs-string">&quot;w&quot;</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == fp)<br>&#123;<br><span class="hljs-built_in">PRINT_ERRMSG</span>(<span class="hljs-string">&quot;fopen&quot;</span>);<br><span class="hljs-built_in">exit</span>(errno); <span class="hljs-comment">/* 读文件错误直接按照错误码退出 */</span><br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-number">0</span> &lt; <span class="hljs-built_in">strlen</span>(header))   <span class="hljs-comment">/* 文件注释不为空,则写注释到文件 */</span><br>&#123;<br><span class="hljs-built_in">fprintf</span>(fp, <span class="hljs-string">&quot;%c %s\n\n&quot;</span>, cnf-&gt;comment, header);<br>&#125;<br><br>Option *q;<br>Data   *p = cnf-&gt;data;<br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != p)<br>&#123;<br><span class="hljs-built_in">fprintf</span>(fp, <span class="hljs-string">&quot;[%s]\n&quot;</span>, p-&gt;section);<br>q = p-&gt;option;<br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != q)<br>&#123;<br><span class="hljs-built_in">fprintf</span>(fp, <span class="hljs-string">&quot;%s %c %s\n&quot;</span>, q-&gt;key, cnf-&gt;separator, q-&gt;value);<br>q = q-&gt;next;<br>&#125;<br>p = p-&gt;next;<br>&#125;<br><br><span class="hljs-built_in">fclose</span>(fp);<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 删除option</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cnf_remove_option</span><span class="hljs-params">(Config *cnf, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *section, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *key)</span></span><br><span class="hljs-function"></span>&#123;<br>Data *ps = <span class="hljs-built_in">cnf_has_section</span>(cnf, section);<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == ps)   <span class="hljs-comment">/* 没找到则不存在 */</span><br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>&#125;<br><br>Option *p, *q;<br>q = p = ps-&gt;option;<br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != p &amp;&amp; <span class="hljs-number">0</span> != <span class="hljs-built_in">strcmp</span>(p-&gt;key, key))<br>&#123;<br><span class="hljs-keyword">if</span> (p != q)<br>&#123;<br>q = q-&gt;next;    <span class="hljs-comment">/* 始终让q处于p的上一个节点 */</span><br>&#125;<br>p = p-&gt;next;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == p)   <span class="hljs-comment">/* 没找到则不存在 */</span><br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span> (p == q)   <span class="hljs-comment">/* 第一个option就匹配了 */</span><br>&#123;<br>ps-&gt;option = p-&gt;next;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>q-&gt;next = p-&gt;next;<br>&#125;<br><br><span class="hljs-built_in">free</span>(p);<br>q = p = <span class="hljs-literal">NULL</span>; <span class="hljs-comment">// 避免野指针</span><br><br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 删除section</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cnf_remove_section</span><span class="hljs-params">(Config *cnf, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *section)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">str_empty</span>(section))<br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br>Data *p, *q;<br>q = p = cnf-&gt;data; <span class="hljs-comment">/* 让变量p循环遍历data,找到对应section */</span><br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != p &amp;&amp; <span class="hljs-number">0</span> != <span class="hljs-built_in">strcmp</span>(p-&gt;section, section))<br>&#123;<br><span class="hljs-keyword">if</span> (p != q)<br>&#123;<br>q = q-&gt;next;    <span class="hljs-comment">/* 始终让q处于p的上一个节点 */</span><br>&#125;<br>p = p-&gt;next;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == p)   <span class="hljs-comment">/* 没有找到section */</span><br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span> (p == q)   <span class="hljs-comment">/* 这里表示第一个section,因此链表头位置改变 */</span><br>&#123;<br>cnf-&gt;data = p-&gt;next;<br>&#125;<br><span class="hljs-keyword">else</span>     <span class="hljs-comment">/* 此时是中间或尾部节点 */</span><br>&#123;<br>q-&gt;next = p-&gt;next;<br>&#125;<br><br>Option *o = p-&gt;option;<br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != o)<br>&#123;<br><span class="hljs-built_in">free</span>(o); <span class="hljs-comment">/* 循环释放所有option */</span><br>o = o-&gt;next;<br>&#125;<br>p-&gt;option = <span class="hljs-literal">NULL</span>; <span class="hljs-comment">// 避免野指针</span><br><span class="hljs-built_in">free</span>(p); <span class="hljs-comment">/* 释放删除的section */</span><br>q = p = <span class="hljs-literal">NULL</span>;  <span class="hljs-comment">// 避免野指针</span><br><br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 打印当前Config对象</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">print_config</span><span class="hljs-params">(Config *cnf)</span></span><br><span class="hljs-function"></span>&#123;<br>Data *p = cnf-&gt;data; <span class="hljs-comment">// 循环打印结果</span><br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != p)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;[%s]\n&quot;</span>, p-&gt;section);<br><br>Option *q = p-&gt;option;<br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != q)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;  %s %c %s\n&quot;</span>, q-&gt;key, cnf-&gt;separator, q-&gt;value);<br>q = q-&gt;next;<br>&#125;<br>p = p-&gt;next;<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">char</span> preName[<span class="hljs-number">255</span>];<br><span class="hljs-keyword">double</span> scale = <span class="hljs-number">1.0</span>;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ShootScreen</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* filename, HWND hWnd)</span></span><br><span class="hljs-function"></span>&#123;<br>HDC hdc = <span class="hljs-built_in">CreateDC</span>(<span class="hljs-string">&quot;DISPLAY&quot;</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>);<br><span class="hljs-keyword">int32_t</span> ScrWidth = <span class="hljs-number">0</span>, ScrHeight = <span class="hljs-number">0</span>;<br>RECT rect = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-keyword">if</span> (hWnd == <span class="hljs-literal">NULL</span>)<br>&#123;<br>ScrWidth = <span class="hljs-built_in">GetDeviceCaps</span>(hdc, HORZRES);<br>ScrHeight = <span class="hljs-built_in">GetDeviceCaps</span>(hdc, VERTRES);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-built_in">GetWindowRect</span>(hWnd, &amp;rect);<br>ScrWidth = (rect.right * scale - rect.left * scale) ;<br>ScrHeight = (rect.bottom * scale - rect.top * scale);<br>&#125;<br>HDC hmdc = <span class="hljs-built_in">CreateCompatibleDC</span>(hdc);<br><br>HBITMAP hBmpScreen = <span class="hljs-built_in">CreateCompatibleBitmap</span>(hdc, ScrWidth, ScrHeight);<br>HBITMAP holdbmp = (HBITMAP)<span class="hljs-built_in">SelectObject</span>(hmdc, hBmpScreen);<br><br>BITMAP bm;<br><span class="hljs-built_in">GetObject</span>(hBmpScreen, <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(bm), &amp;bm);<br><br>BITMAPINFOHEADER bi = &#123; <span class="hljs-number">0</span> &#125;;<br>bi.biSize = <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(BITMAPINFOHEADER);<br>bi.biWidth = bm.bmWidth;<br>bi.biHeight = bm.bmHeight;<br>bi.biPlanes = bm.bmPlanes;<br>bi.biBitCount = bm.bmBitsPixel;<br>bi.biCompression = BI_RGB;<br>bi.biSizeImage = bm.bmHeight * bm.bmWidthBytes;<br><br><span class="hljs-keyword">char</span> *buf = <span class="hljs-keyword">new</span> <span class="hljs-keyword">char</span>[bi.biSizeImage];<br><span class="hljs-built_in">BitBlt</span>(hmdc, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, ScrWidth, ScrHeight, hdc, rect.left * scale, rect.top * scale, SRCCOPY);<br><span class="hljs-built_in">GetDIBits</span>(hmdc, hBmpScreen, <span class="hljs-number">0L</span>, (DWORD)ScrHeight, buf, (LPBITMAPINFO)&amp;bi, (DWORD)DIB_RGB_COLORS);<br><br>BITMAPFILEHEADER bfh = &#123; <span class="hljs-number">0</span> &#125;;<br>bfh.bfType = ((WORD)(<span class="hljs-string">&#x27;M&#x27;</span> &lt;&lt; <span class="hljs-number">8</span>) | <span class="hljs-string">&#x27;B&#x27;</span>);<br>bfh.bfSize = <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(BITMAPFILEHEADER) + <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(BITMAPINFOHEADER) + bi.biSizeImage;<br>bfh.bfOffBits = <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(BITMAPFILEHEADER) + <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(BITMAPINFOHEADER);<br>HANDLE hFile = <span class="hljs-built_in">CreateFile</span>(filename, GENERIC_WRITE, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, OPEN_ALWAYS, FILE_ATTRIBUTE_NORMAL, <span class="hljs-number">0</span>);<br>DWORD dwWrite;<br><span class="hljs-built_in">WriteFile</span>(hFile, &amp;bfh, <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(BITMAPFILEHEADER), &amp;dwWrite, <span class="hljs-literal">NULL</span>);<br><span class="hljs-built_in">WriteFile</span>(hFile, &amp;bi, <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(BITMAPINFOHEADER), &amp;dwWrite, <span class="hljs-literal">NULL</span>);<br><span class="hljs-built_in">WriteFile</span>(hFile, buf, bi.biSizeImage, &amp;dwWrite, <span class="hljs-literal">NULL</span>);<br><span class="hljs-built_in">CloseHandle</span>(hFile);<br>hBmpScreen = (HBITMAP)<span class="hljs-built_in">SelectObject</span>(hmdc, holdbmp);<br>&#125;<br><br>HHOOK g_kb_hook = <span class="hljs-literal">NULL</span>;<br><span class="hljs-keyword">int</span> keyCode = <span class="hljs-number">0</span>;<br><span class="hljs-function">LRESULT CALLBACK <span class="hljs-title">kb_proc</span><span class="hljs-params">(<span class="hljs-keyword">int</span> code, WPARAM w, LPARAM lparam)</span></span><br><span class="hljs-function"></span>&#123;<br>PKBDLLHOOKSTRUCT p = (PKBDLLHOOKSTRUCT)lparam;<br><span class="hljs-keyword">if</span> (w == WM_KEYDOWN)<br>&#123;<br>cout &lt;&lt; <span class="hljs-string">&quot;你按下了键盘码为:&quot;</span> &lt;&lt; p-&gt;vkCode &lt;&lt; <span class="hljs-string">&quot;的键&quot;</span> &lt;&lt; endl;<br><span class="hljs-keyword">if</span> (p-&gt;vkCode == keyCode)<br>&#123;<br><span class="hljs-comment">//POINT pNow = &#123; 0,0 &#125;;</span><br><span class="hljs-comment">//if (GetCursorPos(&amp;pNow))  // 获取鼠标当前位置</span><br><span class="hljs-comment">//&#123;</span><br>HWND hwndPointNow = <span class="hljs-literal">NULL</span>;<br><span class="hljs-comment">//hwndPointNow = WindowFromPoint(pNow);  // 获取鼠标所在窗口的句柄</span><br><span class="hljs-comment">//hwndPointNow = GetActiveWindow();</span><br>hwndPointNow = <span class="hljs-built_in">GetForegroundWindow</span>();<br><br><span class="hljs-comment">//cout &lt;&lt; hwndPointNow &lt;&lt; endl;</span><br><span class="hljs-keyword">if</span> (hwndPointNow)<br>&#123;<br><span class="hljs-comment">//cout &lt;&lt; hwndPointNow &lt;&lt; endl;</span><br><span class="hljs-keyword">time_t</span> timep;<br><span class="hljs-keyword">int</span> t = <span class="hljs-built_in">time</span>(&amp;timep);<br><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> preT = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> cnt = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span> (preT == t) &#123;<br>cnt++;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>cnt = <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">char</span> name[<span class="hljs-number">256</span>] = &#123; <span class="hljs-number">0</span> &#125;;<br><br><span class="hljs-built_in">sprintf_s</span>(name, <span class="hljs-number">256</span>, <span class="hljs-string">&quot;%s/%d%d.bmp&quot;</span>, preName, t, cnt);<br>preT = t;<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;[截图捕获成功,名称为:%s]\n&quot;</span>, name);<br><span class="hljs-built_in">ShootScreen</span>(name, hwndPointNow);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>cout &lt;&lt; <span class="hljs-string">&quot;Error!!&quot;</span> &lt;&lt; endl;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">CallNextHookEx</span>(g_kb_hook, code, w, lparam);<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">char</span> fileName[] = <span class="hljs-string">&quot;config.ini&quot;</span>;<br><br>FILE *fp = <span class="hljs-built_in">fopen</span>(fileName, <span class="hljs-string">&quot;r&quot;</span>);<br>Config *cnf = <span class="hljs-literal">NULL</span>;<br><span class="hljs-keyword">if</span> (fp == <span class="hljs-literal">NULL</span>)<br>&#123;<br>cnf = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Config</span>();<br>cnf-&gt;comment = <span class="hljs-string">&#x27;#&#x27;</span>;<br>cnf-&gt;separator = <span class="hljs-string">&#x27;=&#x27;</span>;<br><br><span class="hljs-built_in">cnf_add_option</span>(cnf, <span class="hljs-string">&quot;config&quot;</span>, <span class="hljs-string">&quot;keyboard&quot;</span>, <span class="hljs-string">&quot;162&quot;</span>); <span class="hljs-comment">// 新增NEW下的new_1的值</span><br><span class="hljs-built_in">cnf_add_option</span>(cnf, <span class="hljs-string">&quot;config&quot;</span>, <span class="hljs-string">&quot;scale&quot;</span>, <span class="hljs-string">&quot;1.25&quot;</span>); <span class="hljs-comment">// 新增NEW下的new_1的值</span><br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>cnf = <span class="hljs-built_in">cnf_read_config</span>(fileName, <span class="hljs-string">&#x27;#&#x27;</span>, <span class="hljs-string">&#x27;=&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(fp != <span class="hljs-literal">NULL</span>)<br><span class="hljs-built_in">fclose</span>(fp);<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == cnf)<br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>; <span class="hljs-comment">/* 创建对象失败 */</span><br>&#125;<br><br><span class="hljs-built_in">cnf_get_value</span>(cnf, <span class="hljs-string">&quot;config&quot;</span>, <span class="hljs-string">&quot;keyboard&quot;</span>); <span class="hljs-comment">// 获取NEW1下的new_2值</span><br>keyCode = cnf-&gt;re_int;<br><span class="hljs-built_in">cnf_get_value</span>(cnf, <span class="hljs-string">&quot;config&quot;</span>, <span class="hljs-string">&quot;scale&quot;</span>); <span class="hljs-comment">// 获取NEW1下的new_2值</span><br>scale = cnf-&gt;re_double;<br><span class="hljs-comment">//printf(&quot;%d %f\n&quot;, key, scale);</span><br><span class="hljs-comment">//printf(&quot;cnf_get_value:%s,%d,%d,%f\n&quot;,cnf-&gt;re_string,cnf-&gt;re_int,cnf-&gt;re_bool,cnf-&gt;re_double);</span><br><br><span class="hljs-comment">//cnf-&gt;separator = &#x27;:&#x27;; // 将分隔符改成 : ,冒号</span><br><span class="hljs-built_in">cnf_write_file</span>(cnf, fileName, <span class="hljs-string">&quot;这是一个配置文件,keyboard表示截屏的快捷键，scale表示WIN10屏幕缩放的比例（右键桌面-&gt;显示设置-&gt;缩放与布局）&quot;</span>); <span class="hljs-comment">// 将对象写入cnf_new.ini文件</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;============================================================================================\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;说明:\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;这是一个方便大量截图的工具，只需要按键盘上的一个键，就可以很轻松的捕获当前活动窗口的截图\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;默认截图按键是Ctrl，键盘代码是162，如果想要更改，请打开软件同目录下的config.ini\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Win10有一个缩放与布局，如果截图与想要的不符，请修改config.ini下面的scale属性，默认是1.25\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;============================================================================================\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;为本次的截图任务起一个名字吧(请不能要含特殊符号):&quot;</span>);<br>cin &gt;&gt; preName;<br><span class="hljs-comment">// 文件夹不存在则创建文件夹</span><br><span class="hljs-keyword">if</span> (_access(preName, <span class="hljs-number">0</span>) == <span class="hljs-number">-1</span>)<br>&#123;<br>_mkdir(preName);<br>&#125;<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;开始截图，每当你按下对应按键的时候，都会产生鼠标下窗口的一张图片\n&quot;</span>);<br><br>HINSTANCE glhInstance = <span class="hljs-literal">NULL</span>;<br>glhInstance = <span class="hljs-built_in">GetModuleHandle</span>(<span class="hljs-literal">NULL</span>);<br>g_kb_hook = <span class="hljs-built_in">SetWindowsHookEx</span>(WH_KEYBOARD_LL, &amp;kb_proc, glhInstance, <span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span> (g_kb_hook == <span class="hljs-literal">NULL</span>)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;SetWindowsHookEx error!&quot;</span>);<br><span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>&#125;<br>MSG msg;<br><span class="hljs-keyword">while</span> (<span class="hljs-built_in">GetMessage</span>(&amp;msg, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>))<br>&#123;<br><span class="hljs-built_in">TranslateMessage</span>(&amp;msg);<br><span class="hljs-built_in">DispatchMessage</span>(&amp;msg);<br>&#125;<br><span class="hljs-built_in">UnhookWindowsHookEx</span>(g_kb_hook);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>C语言</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>保存Windows10的登陆页壁纸</title>
    <link href="/post/6e36c945/"/>
    <url>/post/6e36c945/</url>
    
    <content type="html"><![CDATA[<p>每次登陆Windows10系统的时候有没有被后面的壁纸惊艳呢？如果你也很想保存一下这些壁纸的话，不妨看看这篇文章。</p><span id="more"></span><h2 id="1-找到壁纸所在位置"><a href="#1-找到壁纸所在位置" class="headerlink" title="1. 找到壁纸所在位置"></a>1. 找到壁纸所在位置</h2><p>复制这个路径，直接打开就可以了</p><p><code>C:\Users\%username%\AppData\Local\Packages\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy\LocalState\Assets</code><br><img src="https://image.glwsq.cn/img/202210121459682.png"></p><h2 id="2-转移这些文件"><a href="#2-转移这些文件" class="headerlink" title="2. 转移这些文件"></a>2. 转移这些文件</h2><p>把这些文件复制到其他的文件夹</p><p><img src="https://image.glwsq.cn/img/202210121458521.png"></p><h2 id="3-将文件批量转换为图片"><a href="#3-将文件批量转换为图片" class="headerlink" title="3. 将文件批量转换为图片"></a>3. 将文件批量转换为图片</h2><p>把这些文件复制到你自己创建的文件夹后，在这个文件夹中创建一个bat文件（新建一个记事本，把txt改成bat就可以了）<br><img src="https://image.glwsq.cn/img/202210121458071.png"></p><h2 id="4-创建批处理文件"><a href="#4-创建批处理文件" class="headerlink" title="4. 创建批处理文件"></a>4. 创建批处理文件</h2><p>然后右键这个文件夹，选择【编辑】，这样会打开Windows自带的记事本软件</p><p><img src="https://image.glwsq.cn/img/202210121458653.png"></p><h2 id="5-写入代码"><a href="#5-写入代码" class="headerlink" title="5. 写入代码"></a>5. 写入代码</h2><p><code>ren *.* *.png</code></p><p><img src="https://image.glwsq.cn/img/202210121458585.png"></p><h2 id="6-运行批处理脚本"><a href="#6-运行批处理脚本" class="headerlink" title="6. 运行批处理脚本"></a>6. 运行批处理脚本</h2><p>保存退出，然后双击这个bat文件，就ok了，所有的文件都会变成图片<br><img src="https://image.glwsq.cn/img/202210121459115.png"></p><h2 id="7-进行查看"><a href="#7-进行查看" class="headerlink" title="7. 进行查看"></a>7. 进行查看</h2><p>换一种方式查看一下，一般会有两张壁纸，一张手机的一张电脑的<br><img src="https://image.glwsq.cn/img/202210121459341.png"></p><h2 id="这里是我自己找的壁纸"><a href="#这里是我自己找的壁纸" class="headerlink" title="这里是我自己找的壁纸"></a>这里是我自己找的壁纸</h2><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_14ed227687a0fd729747ea63309b4b79"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_8e8e470fa0a8f0770d3a2007b96a1b15"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_edccad77dd46b4fbb4118e6d989edf9c"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_42d934fac9c83bf79f20a9774a7ce4f5"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_843a3ef9c72ccfde39e1915e14aa4a3b"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_5e697268b4209316918e1cc9e6c0df0e"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_3272674a135e623a1fd9b4ce623050ca"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_aeddc1870462a2e41e671063151a0c21"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_1ded984c9920d3e4deba2da3cdeef7cb"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_69e6e51b25decfd2742285778873dc22"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_b60bc0036f92329d54985db113ffe167"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_deb28517eb68043374ca4081c9e0b115"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_3be1e991ecad9f67c5a727dc6dadcaad"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_1763ffac585f36ec2c4073069e7c8453"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_6f9169d19a53bad807cf03377a244a0f"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_287ff647fc3bce4f99f4ada67e86097d"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_ca669e07c214657138f67e70376da855"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_e4790325e7b13f3df8fc8967b1698cdc"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_484ebdeb452b414fc41c73ede281624d"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_096153e163e873f8c5ca936fc762f4ec"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_089002e33e90beb426d056e16c69e002"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_fc7489202b68fb4095d97faaeecf2155"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_d1de9907888383c00ca128326c964733"></p><p><img src="http://image.glwsq.cn/201910%E5%A3%81%E7%BA%B8_e29ea2f72f8a3558f29c67f56f3ee42f"></p>]]></content>
    
    
    <categories>
      
      <category>电脑使用技巧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>电脑使用技巧</tag>
      
      <tag>壁纸</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git用法总结</title>
    <link href="/post/git-notes/"/>
    <url>/post/git-notes/</url>
    
    <content type="html"><![CDATA[<p>为了防止代码越改越凉，一定要选择一款代码版本控制工具，目前用的人数最多的就是git了，我把使用过程中遇到的问题，和自己常用的命令在此总结一下。</p><span id="more"></span><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>本身git的官方网站就有很详细的教程<a href="https://git-scm.com/book/zh/v2">点击进入</a>，而且还是中文的，所以我建议直接把官方的教程看一遍就可以了，如果是初学者的话，只需要认真的把前两章看完就完全够用了，第三章大概看一下，如果不理解以后慢慢消化。<br><img src="/images/uploads/git%E7%94%A8%E6%B3%95%E6%80%BB%E7%BB%93-20200312223140.png"></p><h2 id="git命令"><a href="#git命令" class="headerlink" title="git命令"></a>git命令</h2><h3 id="配置文件解释"><a href="#配置文件解释" class="headerlink" title="配置文件解释"></a>配置文件解释</h3><p>如果命令是<code>git config</code>说明是修改配置文件用的，后面如果加上了<code>--global</code>说明修改的是全局的配置文件，对所有的本地仓库生效，如果不加，则修改的是当前项目的config文件。</p><ul><li>全局配置文件默认在用户目录下，文件名是<code>.gitconfig</code></li><li>项目配置文件则在项目对应.git目录中</li></ul><h3 id="经常使用的命令"><a href="#经常使用的命令" class="headerlink" title="经常使用的命令"></a>经常使用的命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">git init <span class="hljs-comment"># 把当前目录变为git仓库</span><br>git status <span class="hljs-comment"># 查看当前的状态</span><br>git add .  <span class="hljs-comment"># 添加目录下的所有文件到缓存</span><br>git add a.txt <span class="hljs-comment"># 添加a.txt到缓存</span><br>git commit -m <span class="hljs-string">&quot;first commit&quot;</span> <span class="hljs-comment"># 进行一次提交，提交到本地仓库</span><br>git push -u username master  <span class="hljs-comment"># 将本地仓库提交到远程</span><br>git push -f orgin master  <span class="hljs-comment"># 将本地仓库强制提交到远端</span><br>git <span class="hljs-built_in">clone</span> --recursive https://....git <span class="hljs-comment"># 克隆带子仓库的项目</span><br></code></pre></td></tr></table></figure><h3 id="不是很常用的命令"><a href="#不是很常用的命令" class="headerlink" title="不是很常用的命令"></a>不是很常用的命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config core.ignorecase <span class="hljs-literal">false</span> <span class="hljs-comment"># 设置git目录区分大小写</span><br>git config --global credential.helper store <span class="hljs-comment"># 设置git记住密码</span><br>git config credential.helper <span class="hljs-string">&#x27;cache --timeout=3600&#x27;</span> <span class="hljs-comment"># 设置自动保存密码过期时间</span><br>git diff <span class="hljs-comment"># 比较为加入缓存区的文件和缓存区的区别</span><br>git diff --cached <span class="hljs-comment"># 比较缓存区的文件和提交后的文件的区别</span><br>git <span class="hljs-built_in">log</span> <span class="hljs-comment"># 显示提交日志</span><br>git <span class="hljs-built_in">log</span> --pretty=oneline <span class="hljs-comment"># 用一行来显示提交日志</span><br>git <span class="hljs-built_in">log</span> -2 -p <span class="hljs-comment"># 显示最后两次提交 和详细信息</span><br>git pull --rebase origin master <span class="hljs-comment"># 推送之前，进行合并 解决远程有文件 而本地没有时的报错</span><br>git rm -r --cached . <span class="hljs-comment"># 清空本地缓存，然后再重新添加文件，就可以去除不必要的垃圾文件了</span><br>git branch new <span class="hljs-comment"># 新开一个分支，</span><br>git checkout master <span class="hljs-comment"># 跳到master这个分支；</span><br></code></pre></td></tr></table></figure><h2 id="提高git-clone的速度"><a href="#提高git-clone的速度" class="headerlink" title="提高git clone的速度"></a>提高git clone的速度</h2><h3 id="使用ssh地址"><a href="#使用ssh地址" class="headerlink" title="使用ssh地址"></a>使用ssh地址</h3><p>克隆项目的时候选择ssh的地址，https和ssh的速度差距超级大，优先推荐</p><h3 id="添加代理"><a href="#添加代理" class="headerlink" title="添加代理"></a>添加代理</h3><p>因为git clone项目的话，一般克隆的是GitHub上的项目，然而GitHub的服务器在国外，所以速度你懂的。</p><p>如果受不了这个速度的话，可以自己搭建或者找一个代理，然后用代理来克隆项目，这个时候速度就飞起了。</p><p>下面的代码只有代理能用的时候才可以使用，要不就无法上网了。如果不需要使用了，或者不小心输入错误了，可以打开全局配置文件，把里面的这几行代码删除即可。</p><p>注意看代理后的端口是啥，我这里是1080</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global http.https://github.com.proxy socks5://127.0.0.1:1080<br>git config --global https.https://github.com.proxy socks5://127.0.0.1:1080<br></code></pre></td></tr></table></figure><h2 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h2><h3 id="Git修改区分目录大小写"><a href="#Git修改区分目录大小写" class="headerlink" title="Git修改区分目录大小写"></a>Git修改区分目录大小写</h3><p>通过代码规范，修改了包名为全小写（修改了文件夹目录），但发现push后，git服务器的文件夹目录还是为大写<br><strong>解决方法：</strong><br>git默认是不区分大小写的，意思是你修改一个文件名/文件夹的时候，git status 是不会提示你有修改的<br>可以通过<code>git config --get core.ignorecase</code>查看默认配置<br>通过<code>git config core.ignorecase false</code>设置为区分大小写<br>然后<code>git status</code>就可以看到变动<br>然后push到远程服务器</p><h3 id="Git-工具-打包"><a href="#Git-工具-打包" class="headerlink" title="Git 工具 - 打包"></a>Git 工具 - 打包</h3><p>这些情况下 <code>git bundle</code> 就会很有用。 bundle 命令会将 <code>git push</code> 命令所传输的所有内容打包成一个二进制文件， 你可以将这个文件通过邮件或者U盘传给其他人，然后解压到其他的仓库中。</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">git <span class="hljs-keyword">bundle </span>create repo.<span class="hljs-keyword">bundle </span>HEAD main <span class="hljs-comment"># 创建一个名字为repo.bundle的包</span><br>git <span class="hljs-keyword">clone </span>repo.<span class="hljs-keyword">bundle </span>repo <span class="hljs-comment"># 通过repo.bundle创建repo项目</span><br></code></pre></td></tr></table></figure><h3 id="Git-笔记：将两个提交合并为一个"><a href="#Git-笔记：将两个提交合并为一个" class="headerlink" title="Git 笔记：将两个提交合并为一个"></a>Git 笔记：将两个提交合并为一个</h3><ol><li><p>命令行输入：<code>git rebase -i HEAD~2 </code>（i的意思是：interactive，HEAD~2为在历史的前两个提交）</p></li><li><p>将第二行的pick改成s, 也就是squash(挤压合并)，作用是：使用提交，将此提交与之前的提交合并。   然后保存文件退出vim。</p></li><li><p>提交你的代码，git commit -a, vim出现如下所以文件信息：注意看：第4行和第8行分别对应这你第一次和第二次的提交描述信息，这时你就要将这两条描述信息合并为一条。</p></li><li><p>将之前的两条提交描述信息，修改合并为一条，然后保存退出vim，如下所示：</p></li><li><p>保存退出后，push代码：<code>git push origin master -f</code> (注意：因为时rebase操作，所以要加-f, 强制push), 推送完成， 如下所以，完成将两个提交合并为一个。</p></li></ol><p><a href="https://blog.csdn.net/jerechen/article/details/89556281">https://blog.csdn.net/jerechen/article/details/89556281</a></p><h3 id="给git瘦身"><a href="#给git瘦身" class="headerlink" title="给git瘦身"></a>给git瘦身</h3><p><a href="https://linux.cn/article-8556-1.html">https://linux.cn/article-8556-1.html</a></p><h3 id="push时报错"><a href="#push时报错" class="headerlink" title="push时报错"></a>push时报错</h3><blockquote><p>git提交本地代码到远程仓库之前没有pull导致push失败解决办法</p></blockquote><p>git push错误failed to push some refs to的解决<br>当我们在github版本库中发现一个问题后，你在github上对它进行了在线的修改；或者你直接在github上的某个库中添加readme文件或者其他什么文件，但是没有对本地库进行同步。这个时候当你再次有commit想要从本地库提交到远程的github库中时就会出现push失败的问题。</p><p>如下图所示<br>我在github库中对某个文件进行了在线的编辑，并且没有同步到本地库，之后我在本地库添加了文件test.txt，并想提交到github，出现以下错误：error：failed to push some refs to。<br><img src="/images/uploads/git%E7%94%A8%E6%B3%95%E6%80%BB%E7%BB%93-20191119155631.png"><br>解决方案<br>这个问题是因为远程库与本地库不一致造成的，那么我们把远程库同步到本地库就可以了。<br>使用指令<br><code>git pull --rebase origin master</code><br>这条指令的意思是把远程库中的更新合并到本地库中，–rebase的作用是取消掉本地库中刚刚的commit，并把他们接到更新后的版本库之中。<br>具体细节可以<a href="https://blog.csdn.net/qq_25135655/article/details/81781185">点击查看</a></p><h3 id="清理垃圾"><a href="#清理垃圾" class="headerlink" title="清理垃圾"></a>清理垃圾</h3><blockquote><p>参考GitHub官网: <a href="https://help.github.com/articles/removing-sensitive-data-from-a-repository">https://help.github.com/articles/removing-sensitive-data-from-a-repository</a></p></blockquote><p>例如, 我的jekyll博客代码库提交了大量mp3文件, 使用下面命令清除后代码库由233M缩小为1.3M, 提交到GitHub部署博客轻快飞速</p><h4 id="清除垃圾文件-大量无用的mp3文件"><a href="#清除垃圾文件-大量无用的mp3文件" class="headerlink" title="清除垃圾文件(大量无用的mp3文件)"></a>清除垃圾文件(大量无用的mp3文件)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git filter-branch --force --index-filter <span class="hljs-string">&#x27;git rm --cached --ignore-unmatch *.mp3&#x27;</span> --prune-empty --tag-name-filter cat -- --all<br></code></pre></td></tr></table></figure><h4 id="提交到远程仓库-如GitHub-我再次从git-clone-GitHub代码库会变小为1-3M"><a href="#提交到远程仓库-如GitHub-我再次从git-clone-GitHub代码库会变小为1-3M" class="headerlink" title="提交到远程仓库(如GitHub, 我再次从git clone GitHub代码库会变小为1.3M)"></a>提交到远程仓库(如GitHub, 我再次从git clone GitHub代码库会变小为1.3M)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push origin --force --all<br></code></pre></td></tr></table></figure><h4 id="必须回收垃圾-本地仓库才变小"><a href="#必须回收垃圾-本地仓库才变小" class="headerlink" title="必须回收垃圾,本地仓库才变小"></a>必须回收垃圾,本地仓库才变小</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">git for-each-ref --format=<span class="hljs-string">&#x27;delete %(refname)&#x27;</span> refs/original | git update-ref --stdin<br>git reflog expire --expire=now --all<br>git gc --prune=now<br><br>rm -rf .git/refs/original<br>git reflog expire --expire=now --all<br>git gc --prune=now<br>git gc --aggressive --prune=now<br></code></pre></td></tr></table></figure><h2 id="Git仓库下子模块仓库简单操作"><a href="#Git仓库下子模块仓库简单操作" class="headerlink" title="Git仓库下子模块仓库简单操作"></a>Git仓库下子模块仓库简单操作</h2><h3 id="新建一个仓库"><a href="#新建一个仓库" class="headerlink" title="新建一个仓库"></a>新建一个仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">//新建文件夹demo1<br>mkdir demo1<br>//进入将要创建的仓库<br><span class="hljs-built_in">cd</span> demo1<br>//初始化仓库<br>git init<br></code></pre></td></tr></table></figure><h3 id="添加子仓库"><a href="#添加子仓库" class="headerlink" title="添加子仓库"></a>添加子仓库</h3><p><code>git submodule add url</code></p><p><em>把url替换成你想添加的子仓库；执行成功后，可以在demo1文件夹下看到.gitsubmodule文件</em></p><h3 id="推送到远程仓库"><a href="#推送到远程仓库" class="headerlink" title="推送到远程仓库"></a>推送到远程仓库</h3><p><em>在推送到远程仓库前，我们还要给本地仓库添加一个远程仓库地址,可以到git.oschina 或github上创建</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">//添加远程仓库地址<br>git remote add origin https://....git //origin 是该远程仓库在本地的别名，可自定义。<br>//添加所有文件到缓存<br>git add .<br>//提交到本地仓库<br>git commit -m <span class="hljs-string">&quot;first commit&quot;</span><br>//推送到远程仓库<br>git push origin master //master是分支名称`<br></code></pre></td></tr></table></figure><h2 id="子仓库的常用操作"><a href="#子仓库的常用操作" class="headerlink" title="子仓库的常用操作"></a>子仓库的常用操作</h2><h3 id="克隆带子仓库的仓库"><a href="#克隆带子仓库的仓库" class="headerlink" title="克隆带子仓库的仓库"></a>克隆带子仓库的仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">//回到demo1的上级目录<br><span class="hljs-built_in">cd</span> ..<br>//克隆仓库到demo2<br>git <span class="hljs-built_in">clone</span> https://....git demo2  //demo2为指定的文件夹，也可以不指定。<br></code></pre></td></tr></table></figure><p><em>克隆主仓库后，子仓库是没有代码的，所以继续</em></p><h3 id="初始化子仓库"><a href="#初始化子仓库" class="headerlink" title="初始化子仓库"></a>初始化子仓库</h3><p><code>git submodule init</code> </p><p><em>有子仓库的文件夹了，但是没有代码</em></p><h3 id="克隆子仓库代码。"><a href="#克隆子仓库代码。" class="headerlink" title="克隆子仓库代码。"></a>克隆子仓库代码。</h3><p><code>git submodule update</code> </p><p><em>此时可以看到在下载子仓库代码了</em></p><h2 id="参考笔记"><a href="#参考笔记" class="headerlink" title="参考笔记"></a>参考笔记</h2><p>很不错的一个笔记<br><a href="https://www.jianshu.com/p/86c44bef4ea1">https://www.jianshu.com/p/86c44bef4ea1</a></p><div class="note note-success">            <p>相关推荐：</p><ul><li><a href="/post/note-vue-element/">Vue后台管理系统项目实战/vue+element-ui/vue经典全套系统案例讲解</a></li><li><a href="/post/df99894b/">尚硅谷Vue2.0+Vue3.0全套教程丨vuejs从入门到精通</a></li><li><a href="/post/2ff98e51/">Docker最新超详细版教程通俗易懂</a></li><li><a href="/post/switch-node-version/">优雅的切换nodejs版本</a></li><li><a href="/post/vmware-linux/">如何在VMware中安装Linux</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>简单C语言例题</title>
    <link href="/post/212887e4/"/>
    <url>/post/212887e4/</url>
    
    <content type="html"><![CDATA[<p>一些C语言入门的题目，有代码</p><span id="more"></span><ol><li>输入一个整数，输出其符号（若&gt;= 0, 输出 1；若&lt;0，输出-1）</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-comment">// 输入一个整数，输出其符号（若&gt;= 0, 输出 1；若&lt;0，输出-1）</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> a;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a);<br>    <span class="hljs-keyword">if</span>(a &gt;= <span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;-1&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><ol start="2"><li>输入3个数，输出其中最小值</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-comment">// 输入3个数，输出其中最小值</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> a, b, c;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);<br>    <span class="hljs-keyword">if</span>(a &lt; b)<br>    &#123;<br>        b = a;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(b &lt; c)<br>    &#123;<br>        c = b;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, c);<br>&#125;<br><br></code></pre></td></tr></table></figure><ol start="3"><li>输入一个整数，是否既是5又是7的整倍数，若是，则输出Yes，否则输出No。</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-comment">// 输入一个整数，是否既是5又是7的整倍数，若是，则输出Yes，否则输出No。</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> a;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a);<br>    <span class="hljs-keyword">if</span>(a % <span class="hljs-number">5</span> == <span class="hljs-number">0</span> &amp;&amp; a % <span class="hljs-number">7</span> == <span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Yes\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;No\n&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><ol start="4"><li>有一分段函数$y=<br>\begin{cases}<br>x&amp; (-5&lt;x&lt;0) \\<br>x-1&amp; (x=0) \\<br>x+1&amp; (0&lt;x&lt;10)<br>\end{cases}$ 编写程序，要求输入x的值后，输出y的值。</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> x;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;x);<br>    <span class="hljs-keyword">if</span>(x &gt; <span class="hljs-number">-5</span> &amp;&amp; x &lt; <span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, x);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x == <span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, x - <span class="hljs-number">1</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x &gt; <span class="hljs-number">0</span> &amp;&amp; x &lt; <span class="hljs-number">10</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, x + <span class="hljs-number">1</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>C语言</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>C语言可变参数</title>
    <link href="/post/7620d597/"/>
    <url>/post/7620d597/</url>
    
    <content type="html"><![CDATA[<p>一般写的C语言函数，传入的参数都是固定的，但是有时候再开发的过程中不能确定参数的准确个数，这个时候就需要可变参数了</p><span id="more"></span><p>第一个简单的例子，演示了C语言传入可变参数</p><figure class="highlight cpp"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">test</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num, ...)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">//传入的参数的地址是连续的，所以可以通过地址获取值</span><br>    cout &lt;&lt; <span class="hljs-string">&quot;传入了&quot;</span> &lt;&lt; num &lt;&lt; <span class="hljs-string">&quot;个参数:&quot;</span> &lt;&lt; endl;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= num; i++)<br>    &#123;<br>        cout &lt;&lt; *(&amp;num + i) &lt;&lt; endl;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">test</span>(<span class="hljs-number">5</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>C语言提供了一个宏，能更好的处理传入的参数</p><p><strong>stdarg宏</strong>：可变参数列表是通过宏来实现的，这些宏定义与<strong>stdarg.h</strong>头文件，它是标准库的一部分。</p><p>这个头文件包含了一个申明类型 <strong>va_list</strong> 和三个宏：<strong>va_start</strong>，<strong>va_arg</strong>，<strong>va_end</strong>。</p><p>我们可以申明一个类型为<strong>va_list</strong>的变量，与这几个宏配合使用，访问参数的值。</p><p>第二个例子，用C语言的可变参数来写一个求n个数最大值的函数max</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdarg.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-comment">//求n个数的最大值，n是整数的个数</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">max</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n, ...)</span></span><br><span class="hljs-function"></span>&#123;<br>    va_list args; <span class="hljs-comment">//定义一个va_list指针来访问参数列表</span><br>    <span class="hljs-built_in">va_start</span>(args, n);<span class="hljs-comment">// 初始化args让它指向第一个变参</span><br>    <span class="hljs-keyword">int</span> maximum = <span class="hljs-number">-0x7FFFFFFF</span>;<br>    <span class="hljs-keyword">int</span> tmp;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>    &#123;<br>        tmp = <span class="hljs-built_in">va_arg</span>(args, <span class="hljs-keyword">int</span>); <span class="hljs-comment">// 获取一个int型参数,并且args指向下一个参数。这里取的是整数所以是这样,但是如果是比较字符串则使用的char*;</span><br>        <span class="hljs-keyword">if</span>(maximum &lt; tmp)<br>        &#123;<br>            maximum = tmp;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">va_end</span>(args); <span class="hljs-comment">//关闭args</span><br>    <span class="hljs-keyword">return</span> maximum;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    cout &lt;&lt; <span class="hljs-built_in">max</span>(<span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">123</span>) &lt;&lt; endl;<br>    cout &lt;&lt; <span class="hljs-built_in">max</span>(<span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">124</span>, <span class="hljs-number">32</span>) &lt;&lt; endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>第三个例子，自己实现一下printf这个函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;assert.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">my_printf</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *str,...)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">int</span> x = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">char</span> *pstr = <span class="hljs-literal">NULL</span>;<br>    va_list arg;     <span class="hljs-comment">//定义va_list类型变量arg</span><br>    <span class="hljs-built_in">va_start</span>(arg,str); <span class="hljs-comment">//arg初始化，将arg指向第一个可选参数</span><br>    <span class="hljs-built_in">assert</span>(str);     <span class="hljs-comment">//保证str不为空</span><br>    <span class="hljs-keyword">while</span> (*str)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(*str == <span class="hljs-string">&#x27;%&#x27;</span>)<br>        &#123;<br>            str++;<br>            <span class="hljs-built_in"><span class="hljs-keyword">switch</span></span>(*str)<br>            &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;s&#x27;</span>:<br>                pstr = <span class="hljs-built_in">va_arg</span>(arg,<span class="hljs-keyword">char</span>*);  <span class="hljs-comment">//va_arg的第二个参数是你要返回的参数的类型，此处是char*</span><br>                <span class="hljs-keyword">while</span>(*pstr)<br>                &#123;<br>                    <span class="hljs-built_in">putchar</span>(*pstr);<br>                    pstr++;<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;c&#x27;</span>:<br>                x = <span class="hljs-built_in">va_arg</span>(arg,<span class="hljs-keyword">int</span>); <span class="hljs-comment">//返回参数列表中的当前参数,并使arg指向参数列表中的下一个参数</span><br>                <span class="hljs-built_in">putchar</span>(x);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;d&#x27;</span>:<br>                x = <span class="hljs-built_in">va_arg</span>(arg, <span class="hljs-keyword">int</span>);<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>, x);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">default</span>:<br>                <span class="hljs-built_in">putchar</span>(*(str<span class="hljs-number">-1</span>));<br>                <span class="hljs-built_in">putchar</span>(*str);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            str++;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-built_in">putchar</span>(*str);<br>            str++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">va_end</span>(arg);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">my_printf</span>(<span class="hljs-string">&quot;%d %c %s\n&quot;</span>,<span class="hljs-number">123</span>,<span class="hljs-string">&#x27;t&#x27;</span>, <span class="hljs-string">&quot;hello&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>C语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C语言知识点</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windowsAPI函数</title>
    <link href="/post/94e00d98/"/>
    <url>/post/94e00d98/</url>
    
    <content type="html"><![CDATA[<p>学了很久C语言，每次运行程序看到的都是小黑框，是否感到无聊呢？</p><p>当你学会下面的函数后，你就可以让小黑框随意的改变颜色。</p><span id="more"></span><h3 id="必要的一些说明"><a href="#必要的一些说明" class="headerlink" title="必要的一些说明"></a>必要的一些说明</h3><p>肯定需要<strong>windows.h</strong>头文件</p><p>HANDLE 是windows句柄，一个windows部件对应的id</p><p>COORD是一个坐标的结构体，里面有x和y</p><h3 id="gotoxy"><a href="#gotoxy" class="headerlink" title="gotoxy"></a>gotoxy</h3><figure class="highlight cpp"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">gotoxy</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br>    COORD pos = &#123;x, y&#125;;<br>    HANDLE hOut = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<span class="hljs-comment">// 获取标准输出设备句柄</span><br>    <span class="hljs-built_in">SetConsoleCursorPosition</span>(hOut, pos);<span class="hljs-comment">//两个参数分别是指定哪个窗体，具体位置</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="隐藏控制台光标"><a href="#隐藏控制台光标" class="headerlink" title="隐藏控制台光标"></a>隐藏控制台光标</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">hideCursor</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>HANDLE handle = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<br>CONSOLE_CURSOR_INFO CursorInfo;<br><span class="hljs-built_in">GetConsoleCursorInfo</span>(handle, &amp;CursorInfo);<span class="hljs-comment">//获取控制台光标信息</span><br>CursorInfo.bVisible = <span class="hljs-literal">false</span>; <span class="hljs-comment">//隐藏控制台光标</span><br><span class="hljs-built_in">SetConsoleCursorInfo</span>(handle, &amp;CursorInfo);<span class="hljs-comment">//设置控制台光标状态</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="显示控制台光标"><a href="#显示控制台光标" class="headerlink" title="显示控制台光标"></a>显示控制台光标</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">showCursor</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>HANDLE handle = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<br>CONSOLE_CURSOR_INFO CursorInfo;<br><span class="hljs-built_in">GetConsoleCursorInfo</span>(handle, &amp;CursorInfo);<span class="hljs-comment">//获取控制台光标信息</span><br>CursorInfo.bVisible = <span class="hljs-literal">true</span>; <span class="hljs-comment">//隐藏控制台光标</span><br><span class="hljs-built_in">SetConsoleCursorInfo</span>(handle, &amp;CursorInfo);<span class="hljs-comment">//设置控制台光标状态</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="设置窗口标题"><a href="#设置窗口标题" class="headerlink" title="设置窗口标题"></a>设置窗口标题</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setTitle</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *title)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">SetConsoleTitle</span>(title);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="获取窗口标题"><a href="#获取窗口标题" class="headerlink" title="获取窗口标题"></a>获取窗口标题</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">char</span>* <span class="hljs-title">getTitle</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">char</span> strTitle[<span class="hljs-number">255</span>];<br><span class="hljs-built_in">GetConsoleTitle</span>(strTitle, <span class="hljs-number">255</span>); <span class="hljs-comment">// 获取窗口标题</span><br><span class="hljs-keyword">return</span> strTitle;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="获取控制台窗口大小"><a href="#获取控制台窗口大小" class="headerlink" title="获取控制台窗口大小"></a>获取控制台窗口大小</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function">COORD <span class="hljs-title">getScreenSize</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>HANDLE hOut = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<br>CONSOLE_SCREEN_BUFFER_INFO bInfo;<br><span class="hljs-built_in">GetConsoleScreenBufferInfo</span>(hOut, &amp;bInfo);<br><span class="hljs-keyword">return</span> bInfo.dwSize;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="设置控制台窗口大小"><a href="#设置控制台窗口大小" class="headerlink" title="设置控制台窗口大小"></a>设置控制台窗口大小</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setScreenSize</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br>HANDLE hOut = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<br>COORD size = &#123;x, y&#125;;<br><span class="hljs-built_in">SetConsoleScreenBufferSize</span>(hOut, size); <span class="hljs-comment">// 重新设置缓冲区大小</span><br>SMALL_RECT rc = &#123;<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, x - <span class="hljs-number">1</span>, y - <span class="hljs-number">1</span>&#125;; <span class="hljs-comment">// 重置窗口位置和大小</span><br><span class="hljs-built_in">SetConsoleWindowInfo</span>(hOut, <span class="hljs-literal">true</span>, &amp;rc);<br><span class="hljs-built_in">SetConsoleScreenBufferSize</span>(hOut, size); <span class="hljs-comment">// 重新设置缓冲区大小</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="禁止改变窗口大小"><a href="#禁止改变窗口大小" class="headerlink" title="禁止改变窗口大小"></a>禁止改变窗口大小</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">forbidChengeScreenSize</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">char</span> strTitle[<span class="hljs-number">255</span>];<br><span class="hljs-built_in">GetConsoleTitle</span>(strTitle, <span class="hljs-number">255</span>);<br>HWND hWnd = <span class="hljs-built_in">FindWindow</span>(<span class="hljs-literal">NULL</span>, strTitle); <span class="hljs-comment">//获得cmd窗口句柄</span><br>RECT rc;<br><span class="hljs-built_in">GetWindowRect</span>(hWnd, &amp;rc); <span class="hljs-comment">//获得cmd窗口对应矩形</span><br><span class="hljs-comment">//改变cmd窗口风格</span><br><span class="hljs-built_in">SetWindowLongPtr</span>(hWnd, GWL_STYLE, <span class="hljs-built_in">GetWindowLong</span>(hWnd, GWL_STYLE) &amp; ~WS_THICKFRAME &amp; ~WS_MAXIMIZEBOX &amp; ~WS_MINIMIZEBOX);<br><span class="hljs-comment">//因为风格涉及到边框改变，必须调用SetWindowPos，否则无效果</span><br><span class="hljs-built_in">SetWindowPos</span>(hWnd, <span class="hljs-literal">NULL</span>, rc.left, rc.top, rc.right - rc.left, rc.bottom - rc.top, <span class="hljs-literal">NULL</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="一些例子"><a href="#一些例子" class="headerlink" title="一些例子"></a>一些例子</h1><h3 id="带颜色的格式化输出"><a href="#带颜色的格式化输出" class="headerlink" title="带颜色的格式化输出"></a>带颜色的格式化输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;assert.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">gotoxy</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br>    COORD pos = &#123;x, y&#125;;<br>    HANDLE hOut = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<span class="hljs-comment">// 获取标准输出设备句柄</span><br>    <span class="hljs-built_in">SetConsoleCursorPosition</span>(hOut, pos);<span class="hljs-comment">//两个参数分别是指定哪个窗体，具体位置</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">colorPrintf</span><span class="hljs-params">(<span class="hljs-keyword">int</span> color, <span class="hljs-keyword">char</span> *str,...)</span></span><br><span class="hljs-function"></span>&#123;<br>    HANDLE hOut = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<br>    <span class="hljs-built_in">SetConsoleTextAttribute</span>(hOut, color);<br>    <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">int</span> x = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">char</span> *pstr = <span class="hljs-literal">NULL</span>;<br>    va_list arg;     <span class="hljs-comment">//定义va_list类型变量arg</span><br>    <span class="hljs-built_in">va_start</span>(arg,str); <span class="hljs-comment">//arg初始化，将arg指向第一个可选参数</span><br>    <span class="hljs-built_in">assert</span>(str);     <span class="hljs-comment">//保证str不为空</span><br>    <span class="hljs-keyword">while</span> (*str)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(*str == <span class="hljs-string">&#x27;%&#x27;</span>)<br>        &#123;<br>            str++;<br>            <span class="hljs-built_in"><span class="hljs-keyword">switch</span></span>(*str)<br>            &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;s&#x27;</span>:<br>                pstr = <span class="hljs-built_in">va_arg</span>(arg,<span class="hljs-keyword">char</span>*);  <span class="hljs-comment">//va_arg的第二个参数是你要返回的参数的类型，此处是char*</span><br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>, pstr);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;c&#x27;</span>:<br>                x = <span class="hljs-built_in">va_arg</span>(arg,<span class="hljs-keyword">int</span>); <span class="hljs-comment">//返回参数列表中的当前参数,并使arg指向参数列表中的下一个参数</span><br>                <span class="hljs-built_in">putchar</span>(x);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;d&#x27;</span>:<br>                x = <span class="hljs-built_in">va_arg</span>(arg, <span class="hljs-keyword">int</span>);<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>, x);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">default</span>:<br>                <span class="hljs-built_in">putchar</span>(*(str<span class="hljs-number">-1</span>));<br>                <span class="hljs-built_in">putchar</span>(*str);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            str++;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-built_in">putchar</span>(*str);<br>            str++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">va_end</span>(arg);<br>    <span class="hljs-built_in">SetConsoleTextAttribute</span>(hOut, FOREGROUND_BLUE | FOREGROUND_RED | FOREGROUND_GREEN);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">16</span>; i++)<br>    &#123;<br>        <span class="hljs-built_in">gotoxy</span>(i * <span class="hljs-number">2</span>, i);<br>        <span class="hljs-built_in">colorPrintf</span>(i, <span class="hljs-string">&quot;□这是第%d句带颜色的字符串■\n&quot;</span>, i);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>在输出字符的时候控制台会</p>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>C语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C语言知识点</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>纯C语言打字游戏</title>
    <link href="/post/c-typing-game/"/>
    <url>/post/c-typing-game/</url>
    
    <content type="html"><![CDATA[<p>纯C语言打字游戏</p><p>最基础的是一个单线程的版本，刚学会C语言是可以看懂的，也可以自己写出来，但是游戏体验不好。</p><p>后续增加的多线程版本，优化了游戏体验，也会添加更多的游戏模式，让这个小游戏变得不那么枯燥。</p><span id="more"></span><h2 id="单线程版本的代码"><a href="#单线程版本的代码" class="headerlink" title="单线程版本的代码"></a>单线程版本的代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">/*************************************</span><br><span class="hljs-comment">    游戏名称:   打字游戏</span><br><span class="hljs-comment">    单线程，玩的过程中会卡顿，可以继续学习多线程版本 https://www.glwsq.cn/post/c-typing-game</span><br><span class="hljs-comment">    但是已经是一个完整的游戏了，适合初学者入门</span><br><span class="hljs-comment">*************************************/</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;time.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;conio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ctype.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LETTER_COUNT 30 <span class="hljs-comment">//总共多少个单词下落</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SPEED 500       <span class="hljs-comment">//单词下落的速度</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BULLET_SPEED 30 <span class="hljs-comment">//子弹射击的速度</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BULLET_TYPE <span class="hljs-meta-string">&#x27;A&#x27;</span> <span class="hljs-comment">// 子弹其实就是一个字母,子弹的样式可以自行修改 如果设置为了 L，则会和字母一样。ascii 12会好很多，但是很多系统会显示错误，</span></span><br><br><span class="hljs-comment">/***************初始化***************/</span><br><span class="hljs-comment">//设计字母、子弹</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">tag_letter</span></span><br><span class="hljs-class">&#123;</span><br>    <span class="hljs-comment">//位置</span><br>    <span class="hljs-keyword">int</span> x, y;<br>    <span class="hljs-comment">//字母</span><br>    <span class="hljs-keyword">char</span> ch;<br>    <span class="hljs-comment">//是否显示 0-不显示，1-显示</span><br>    <span class="hljs-keyword">int</span> isDisplay;<br>    <span class="hljs-comment">//生命 0-死亡，1-生存</span><br>    <span class="hljs-keyword">int</span> life;<br>&#125;Letter;<br><br>Letter letters[LETTER_COUNT];<br>Letter bullet;<br><span class="hljs-comment">//游戏字母初始化</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">initLetters</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">srand</span>((<span class="hljs-keyword">unsigned</span>)<span class="hljs-built_in">time</span>(<span class="hljs-literal">NULL</span>));<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; LETTER_COUNT; i++)<br>    &#123;<br>        letters[i].ch = <span class="hljs-built_in">rand</span>() % <span class="hljs-number">26</span> + <span class="hljs-string">&#x27;A&#x27;</span>;<br>        letters[i].x = <span class="hljs-built_in">rand</span>() % <span class="hljs-number">80</span>;<br>        letters[i].y = - i * <span class="hljs-number">2</span>; <span class="hljs-comment">// 这里是负值，生成的字母会全部在屏幕外面，当控制字母下落的时候所有字母会一格一格的掉下来</span><br>        letters[i].life = <span class="hljs-number">1</span>;<br>    &#125;<br>&#125;<br><span class="hljs-comment">//子弹初始化</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">initBullet</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span></span><br><span class="hljs-function"></span>&#123;<br>    bullet.ch =BULLET_TYPE; <span class="hljs-comment">// 子弹其实就是一个字母，子弹的样式可以自行修改</span><br>    bullet.x = x;<br>    bullet.y = <span class="hljs-number">25</span>;<br>    bullet.life = <span class="hljs-number">1</span>;<br>&#125;<br><br><span class="hljs-comment">/***************功能函数***************/</span><br><span class="hljs-comment">//定位到屏幕的某个位置</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">gotoxy</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br>    HANDLE handle = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<br>    COORD coord;<br>    coord.X = x;<br>    coord.Y = y;<br>    <span class="hljs-built_in">SetConsoleCursorPosition</span>(handle, coord);<br>&#125;<br><br><span class="hljs-comment">//绘制字母</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">drawLetter</span><span class="hljs-params">(<span class="hljs-keyword">char</span> ch, <span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">gotoxy</span>(x, y);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, ch);<br>&#125;<br><br><span class="hljs-comment">//用来判断所有字母是否应该显示</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">judgeLetterDisplay</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; LETTER_COUNT; i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(letters[i].life == <span class="hljs-number">0</span>) <span class="hljs-comment">// 字母是否被击中</span><br>        &#123;<br>            letters[i].isDisplay = <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-keyword">if</span>(letters[i].y &lt; <span class="hljs-number">0</span> || letters[i].y &gt; <span class="hljs-number">24</span>) <span class="hljs-comment">// 在屏幕外面</span><br>            &#123;<br>                letters[i].isDisplay = <span class="hljs-number">0</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                letters[i].isDisplay = <span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//letterMoving:让所有字母下降</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">letterMoving</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">judgeLetterDisplay</span>();<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; LETTER_COUNT; i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(letters[i].y &lt; <span class="hljs-number">25</span>) <span class="hljs-comment">// 是否落到了屏幕下面</span><br>        &#123;<br>            <span class="hljs-keyword">if</span>(letters[i].isDisplay == <span class="hljs-number">1</span>) <span class="hljs-comment">// 进行显示</span><br>            &#123;<br>                <span class="hljs-built_in">drawLetter</span>(<span class="hljs-string">&#x27; &#x27;</span>, letters[i].x, letters[i].y); <span class="hljs-comment">// 把当前位置的变成空白</span><br>                <span class="hljs-built_in">drawLetter</span>(letters[i].ch, letters[i].x, letters[i].y + <span class="hljs-number">1</span>); <span class="hljs-comment">// 下一个位置变成对应的字母</span><br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-comment">// 不显示</span><br>            &#123;<br>                <span class="hljs-built_in">drawLetter</span>(<span class="hljs-string">&#x27; &#x27;</span>, letters[i].x, letters[i].y); <span class="hljs-comment">// 把当前位置的变成空白</span><br>            &#125;<br>            letters[i].y++;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-built_in">drawLetter</span>(<span class="hljs-string">&#x27; &#x27;</span>, letters[i].x, letters[i].y);<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-comment">//子弹飞行</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">bulletMoving</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(bullet.life == <span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-built_in">drawLetter</span>(<span class="hljs-string">&#x27; &#x27;</span>, bullet.x, bullet.y);<br>        <span class="hljs-built_in">drawLetter</span>(bullet.ch, bullet.x, bullet.y - <span class="hljs-number">1</span>);<br>    &#125;<br>    bullet.y--;<br>&#125;<br><span class="hljs-comment">//计算答案</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">calcResult</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> counter = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; LETTER_COUNT; i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(letters[i].life == <span class="hljs-number">0</span>)<br>        &#123;<br>            counter++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> counter;<br>&#125;<br><span class="hljs-comment">//隐藏控制台光标</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">hideCursor</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>        HANDLE handle = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<br>        CONSOLE_CURSOR_INFO CursorInfo;<br>        <span class="hljs-built_in">GetConsoleCursorInfo</span>(handle, &amp;CursorInfo);<span class="hljs-comment">//获取控制台光标信息</span><br>        CursorInfo.bVisible = <span class="hljs-number">0</span>; <span class="hljs-comment">//隐藏控制台光标</span><br>        <span class="hljs-built_in">SetConsoleCursorInfo</span>(handle, &amp;CursorInfo);<span class="hljs-comment">//设置控制台光标状态</span><br>&#125;<br><br><span class="hljs-comment">//提示信息</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">menu</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;一个迷你的打字游戏\n\n把输入法调成英文状态就可以开始玩了\n\n&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d个字母即将来袭！！！\n\n&quot;</span>, LETTER_COUNT);<br>    <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;pause&quot;</span>);<br>    <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cls&quot;</span>);<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">hideCursor</span>(); <span class="hljs-comment">// 隐藏控制台的光标，绘制字母的时候不会出现干扰，更有沉浸感</span><br>    <span class="hljs-built_in">menu</span>();<br>    <span class="hljs-built_in">initLetters</span>(); <span class="hljs-comment">// 准备所有的字母，一下子全部准备好了，相当于放到了屏幕的外面，每次控制所有的字母向下移动，到屏幕里面的进行显示</span><br>    <span class="hljs-keyword">while</span>(letters[LETTER_COUNT - <span class="hljs-number">1</span>].y &lt; <span class="hljs-number">25</span>) <span class="hljs-comment">// 当你的最后一个字母还在屏幕里面的时候，会一直循环</span><br>    &#123;<br>        bullet.life = <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span>(_kbhit())<span class="hljs-comment">//获取键盘按键</span><br>        &#123;<br>            <span class="hljs-keyword">char</span> ch = _getch(); <span class="hljs-comment">// 获取键盘按键内容</span><br>            ch = <span class="hljs-built_in">toupper</span>(ch); <span class="hljs-comment">// 转换为大写</span><br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>; k &lt; LETTER_COUNT; k++)<span class="hljs-comment">//遍历每个子弹，看看有没有对应按键的字母</span><br>            &#123;<br>                <span class="hljs-keyword">if</span>(letters[k].isDisplay == <span class="hljs-number">1</span> &amp;&amp; letters[k].ch == ch) <span class="hljs-comment">// 如果字母还没有消失，并且字母和你输入的字母一样的话，执行</span><br>                &#123;<br>                    <span class="hljs-built_in">initBullet</span>(letters[k].x); <span class="hljs-comment">// 初始化子弹，子弹的x坐标就是这个字母的x坐标，这样可以实现子弹和字母相撞的感觉</span><br><br>                    <span class="hljs-keyword">if</span>(BULLET_TYPE == <span class="hljs-string">&#x27;L&#x27;</span>) &#123; <span class="hljs-comment">// 如果子弹类型是L的话，那么让他显示的和字母一样</span><br>                        bullet.ch = letters[k].ch;<br>                    &#125;<br><br>                    <span class="hljs-keyword">while</span>(bullet.y &gt; <span class="hljs-number">0</span>) <span class="hljs-comment">// 子弹从下往上飞，飞到屏幕外面的话就小于0了</span><br>                    &#123;<br>                        <span class="hljs-built_in">bulletMoving</span>();<br>                        <span class="hljs-keyword">if</span>(bullet.y == letters[k].y) <span class="hljs-comment">// 子弹的y和字母的y重叠，说明相碰了，让他们同时消失，这里也可以加一个相撞的动画和声音</span><br>                        &#123;<br>                            letters[k].life = <span class="hljs-number">0</span>;<br>                            bullet.life = <span class="hljs-number">0</span>;<br>                            <span class="hljs-built_in">drawLetter</span>(<span class="hljs-string">&#x27; &#x27;</span>, bullet.x, bullet.y);<br>                        &#125;<br>                        <span class="hljs-built_in">Sleep</span>(BULLET_SPEED); <span class="hljs-comment">// 子弹的飞行速度</span><br>                    &#125;<br>                    <span class="hljs-keyword">break</span>;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-built_in">Sleep</span>(SPEED); <span class="hljs-comment">// 稍微停顿一下，可以控制游戏的难度，也就是字母的掉落速度</span><br>        <span class="hljs-built_in">letterMoving</span>(); <span class="hljs-comment">// 控制所有字母向下移动</span><br>    &#125;<br>    <span class="hljs-comment">/*******************游戏结束******************/</span><br>    <span class="hljs-built_in">gotoxy</span>(<span class="hljs-number">30</span>, <span class="hljs-number">12</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;总共有%d个字母，你打掉了%d个&quot;</span>,LETTER_COUNT, <span class="hljs-built_in">calcResult</span>());<br>    <span class="hljs-built_in">getchar</span>();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="多线程版本"><a href="#多线程版本" class="headerlink" title="多线程版本"></a>多线程版本</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;process.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;time.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ctype.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;conio.h&gt;</span></span><br><br><span class="hljs-comment">//字母结构体</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">tag_letter</span></span><br><span class="hljs-class">&#123;</span><br>    <span class="hljs-keyword">int</span> x, y;   <span class="hljs-comment">//字母下落位置</span><br>    <span class="hljs-keyword">char</span> ch;    <span class="hljs-comment">//字母</span><br>    <span class="hljs-keyword">int</span> life;   <span class="hljs-comment">//字母是否存活</span><br>&#125;Letter;<br><br><span class="hljs-comment">/********************全局变量区************************/</span><br><span class="hljs-keyword">int</span> letterCount = <span class="hljs-number">100</span>;  <span class="hljs-comment">//下落字母的总数量</span><br><span class="hljs-keyword">int</span> beginFlag = <span class="hljs-number">1</span>;  <span class="hljs-comment">//游戏何时结束，0-表示结束</span><br><span class="hljs-keyword">int</span> downCount;  <span class="hljs-comment">//下落字母数量统计</span><br><span class="hljs-keyword">int</span> dropLetter; <span class="hljs-comment">//打掉字母数量统计</span><br><span class="hljs-keyword">int</span> errorCount; <span class="hljs-comment">//按键错误统计</span><br><span class="hljs-keyword">int</span> speed = <span class="hljs-number">500</span>;    <span class="hljs-comment">//下落速度</span><br><span class="hljs-keyword">int</span> bulletSpeed = <span class="hljs-number">30</span>;   <span class="hljs-comment">//子弹速度</span><br><span class="hljs-comment">//多线程-线程锁</span><br>CRITICAL_SECTION csCursor;<span class="hljs-comment">//光标锁</span><br><br><br>Letter *letters;    <span class="hljs-comment">//创建字母序列</span><br><span class="hljs-keyword">int</span> *vis;           <span class="hljs-comment">//标记字母是否出现过</span><br><span class="hljs-keyword">int</span> *visBullet;     <span class="hljs-comment">//标记对应字母是否有子弹正在发射</span><br><span class="hljs-keyword">int</span> *bulletflag;    <span class="hljs-comment">//子弹编号</span><br><br><span class="hljs-comment">//初始化全局变量，和开辟对应数组空间</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    downCount = <span class="hljs-number">0</span>;<br>    dropLetter = <span class="hljs-number">0</span>;<br>    errorCount = <span class="hljs-number">0</span>;<br>    vis = (<span class="hljs-keyword">int</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(<span class="hljs-keyword">int</span>) * letterCount);<br>    visBullet = (<span class="hljs-keyword">int</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(<span class="hljs-keyword">int</span>) * letterCount);<br>    bulletflag = (<span class="hljs-keyword">int</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(<span class="hljs-keyword">int</span>) * letterCount);<br>    <span class="hljs-built_in">memset</span>(vis, <span class="hljs-number">0</span>, <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(<span class="hljs-keyword">int</span>) * letterCount);<br>    <span class="hljs-built_in">memset</span>(visBullet, <span class="hljs-number">0</span>, <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(<span class="hljs-keyword">int</span>) * letterCount);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; letterCount; i++)<br>    &#123;<br>        bulletflag[i] = i;<br>    &#125;<br>&#125;<br><span class="hljs-comment">//初始化字母序列</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">initLetters</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    letters = (struct tag_letter *)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(struct tag_letter) * letterCount);<br>    <span class="hljs-built_in">srand</span>((<span class="hljs-keyword">unsigned</span>)<span class="hljs-built_in">time</span>(<span class="hljs-literal">NULL</span>));<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; letterCount; i++)<br>    &#123;<br>        letters[i].ch = <span class="hljs-built_in">rand</span>() % <span class="hljs-number">26</span> + <span class="hljs-string">&#x27;A&#x27;</span>;<br>        letters[i].x = <span class="hljs-built_in">rand</span>() % <span class="hljs-number">80</span>;<br>        letters[i].y = - i * <span class="hljs-number">2</span>;<br>        letters[i].life = <span class="hljs-number">1</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/***************功能函数***************/</span><br><span class="hljs-comment">//定位到屏幕的某个位置</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">gotoxy</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br>    HANDLE handle = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<br>    COORD coord;<br>    coord.X = x;<br>    coord.Y = y;<br>    <span class="hljs-built_in">SetConsoleCursorPosition</span>(handle, coord);<br>&#125;<br><br><span class="hljs-comment">//绘制字母</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">drawLetter</span><span class="hljs-params">(<span class="hljs-keyword">char</span> ch, <span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">EnterCriticalSection</span>(&amp;csCursor);<br>    <span class="hljs-built_in">gotoxy</span>(x, y);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, ch);<br>    <span class="hljs-built_in">LeaveCriticalSection</span>(&amp;csCursor);<br>&#125;<br><span class="hljs-comment">//设置窗口标题</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setTitle</span><span class="hljs-params">(<span class="hljs-keyword">void</span> *p)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-keyword">char</span> str[<span class="hljs-number">30</span>] = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-built_in">sprintf</span>(str, <span class="hljs-string">&quot;title 总字母:%d 下落字母:%d 击落:%d&quot;</span>, letterCount, downCount, dropLetter);<br>        <span class="hljs-built_in">system</span>(str);<br>    &#125;<br>&#125;<br><span class="hljs-function">DWORD WINAPI <span class="hljs-title">runBullet</span><span class="hljs-params">(<span class="hljs-keyword">void</span> *p)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> letterId = *(<span class="hljs-keyword">int</span> *) p;<br>    <span class="hljs-keyword">if</span>(!visBullet[letterId])<br>    &#123;<br>        visBullet[letterId] = <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">int</span> y = <span class="hljs-number">25</span>;<br>    <span class="hljs-keyword">int</span> x = letters[letterId].x;<br>    <span class="hljs-keyword">while</span>(y &gt; letters[letterId].y)<br>    &#123;<br><br>        <span class="hljs-built_in">drawLetter</span>(<span class="hljs-string">&#x27; &#x27;</span>, x, y);<br>        <span class="hljs-built_in">drawLetter</span>(<span class="hljs-number">12</span>, x, y - <span class="hljs-number">1</span>);<br><br>        <span class="hljs-built_in">Sleep</span>(bulletSpeed);<br>        y--;<br>    &#125;<br>    <span class="hljs-built_in">drawLetter</span>(<span class="hljs-string">&#x27; &#x27;</span>, x, y);<br>    letters[letterId].life = <span class="hljs-number">0</span>;<br>    <span class="hljs-built_in">drawLetter</span>(<span class="hljs-string">&#x27; &#x27;</span>, letters[letterId].x, letters[letterId].y);<br>&#125;<br><span class="hljs-comment">//letterMoving:让所有字母下降一个位置</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">letterMoving</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> cnt = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; letterCount; i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(letters[i].life == <span class="hljs-number">1</span>)<br>        &#123;<br>            cnt++;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(letters[i].y &lt; <span class="hljs-number">25</span> &amp;&amp; letters[i].y &gt;= <span class="hljs-number">0</span> &amp;&amp; letters[i].life == <span class="hljs-number">1</span>)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(!vis[i])<br>            &#123;<br>                downCount++;<br>                vis[i] = <span class="hljs-number">1</span>;<br>            &#125;<br>            <span class="hljs-built_in">drawLetter</span>(<span class="hljs-string">&#x27; &#x27;</span>, letters[i].x, letters[i].y);<br>            <span class="hljs-built_in">drawLetter</span>(letters[i].ch, letters[i].x, letters[i].y + <span class="hljs-number">1</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(letters[i].y &gt; <span class="hljs-number">25</span>)<br>        &#123;<br>             letters[i].life = <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(letters[i].y == <span class="hljs-number">25</span>)<br>        &#123;<br>            <span class="hljs-built_in">drawLetter</span>(<span class="hljs-string">&#x27; &#x27;</span>, letters[i].x, letters[i].y);<br>        &#125;<br>        letters[i].y++;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(cnt == <span class="hljs-number">0</span>)<br>    &#123;<br>        beginFlag = <span class="hljs-number">0</span>;<br>    &#125;<br>&#125;<br><span class="hljs-comment">//字母不断下降</span><br><span class="hljs-function">DWORD WINAPI <span class="hljs-title">runLetter</span><span class="hljs-params">(<span class="hljs-keyword">void</span> *p)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">while</span>(letters[letterCount - <span class="hljs-number">1</span>].y &lt; <span class="hljs-number">25</span>)<br>    &#123;<br>        <span class="hljs-built_in">letterMoving</span>();<br>        <span class="hljs-built_in">Sleep</span>(speed);<br>    &#125;<br>    beginFlag = <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-comment">//隐藏控制台光标</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">hideCursor</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>        HANDLE handle = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<br>        CONSOLE_CURSOR_INFO CursorInfo;<br>        <span class="hljs-built_in">GetConsoleCursorInfo</span>(handle, &amp;CursorInfo);<span class="hljs-comment">//获取控制台光标信息</span><br>        CursorInfo.bVisible = <span class="hljs-number">0</span>; <span class="hljs-comment">//隐藏控制台光标</span><br>        <span class="hljs-built_in">SetConsoleCursorInfo</span>(handle, &amp;CursorInfo);<span class="hljs-comment">//设置控制台光标状态</span><br>&#125;<br><span class="hljs-comment">//开始游戏提示</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">gameBegin</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;-------------------------------------\n&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;    一个简单的打字游戏，按ESC退出\n&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;       建议提前切换成英文输入法\n&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;-------------------------------------\n&quot;</span>);<br><br>    <span class="hljs-keyword">int</span> type;<br>    <span class="hljs-keyword">int</span> flag = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span>(flag)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1-简单\n2-中等\n3-困难\n4-魔鬼\n&quot;</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请选择你要打字的等级:&quot;</span>);<br>        <span class="hljs-keyword">while</span>(<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;type) != <span class="hljs-number">1</span>)<br>        &#123;<br>            <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cls&quot;</span>);<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%*s&quot;</span>);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;您输入的值有问题，请输入数字！\n&quot;</span>);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1-简单\n2-中等\n3-困难\n4-魔鬼\n&quot;</span>);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请选择你要打字的等级:&quot;</span>);<br>        &#125;<br>        <span class="hljs-built_in"><span class="hljs-keyword">switch</span></span>(type)<br>        &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>            speed = <span class="hljs-number">500</span>;<br>            bulletSpeed = <span class="hljs-number">30</span>;<br>            flag = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>            speed = <span class="hljs-number">350</span>;<br>            bulletSpeed = <span class="hljs-number">25</span>;<br>            flag = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>            speed = <span class="hljs-number">250</span>;<br>            bulletSpeed = <span class="hljs-number">20</span>;<br>            flag = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:<br>            speed = <span class="hljs-number">150</span>;<br>            bulletSpeed = <span class="hljs-number">10</span>;<br>            flag = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;你选择的值有误，请重新选择\n&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入你要打字的数量:&quot;</span>);<br>    <span class="hljs-keyword">while</span>(<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;letterCount) != <span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cls&quot;</span>);<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%*s&quot;</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;您输入的值有问题，请输入数字！\n&quot;</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入你要打字的数量:&quot;</span>);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;字母已准备就绪,&quot;</span>);<br>    <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;pause&quot;</span>);<br>    <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cls&quot;</span>);<br>&#125;<br><span class="hljs-comment">//结束游戏提示</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">gameOver</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">gotoxy</span>(<span class="hljs-number">30</span>, <span class="hljs-number">12</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;总字母:%d个 您击落:%d个 错误按键:%d次&quot;</span>, letterCount, dropLetter, errorCount);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;title 打字游戏&quot;</span>);<br>    <span class="hljs-built_in">gameBegin</span>();<br>    <span class="hljs-built_in">hideCursor</span>();<br>    <span class="hljs-built_in">InitializeCriticalSection</span>(&amp;csCursor);<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-built_in">initLetters</span>();<br>    <span class="hljs-built_in">CreateThread</span>(<span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, runLetter, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>);<br>    _beginthread(setTitle, <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>);<br>    <span class="hljs-keyword">while</span>(beginFlag)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(_kbhit())<br>        &#123;<br>            <span class="hljs-keyword">char</span> ch = _getch();<br>            ch = <span class="hljs-built_in">toupper</span>(ch);<br>            <span class="hljs-keyword">if</span>(ch == <span class="hljs-number">27</span>)<br>            &#123;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">int</span> flag = <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; letterCount; i++)<br>            &#123;<br>                <span class="hljs-keyword">if</span>(letters[i].y &lt; <span class="hljs-number">25</span> &amp;&amp; letters[i].y &gt;= <span class="hljs-number">0</span> &amp;&amp; letters[i].life == <span class="hljs-number">1</span> &amp;&amp; letters[i].ch == ch &amp;&amp; visBullet[i] == <span class="hljs-number">0</span>)<br>                &#123;<br>                    flag = <span class="hljs-number">0</span>;<br>                    dropLetter++;<br>                    <span class="hljs-built_in">CreateThread</span>(<span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, runBullet, &amp;bulletflag[i], <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>);<br>                    <span class="hljs-keyword">break</span>;<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">if</span>(flag) errorCount++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">gameOver</span>();<br>    <span class="hljs-built_in">InitializeCriticalSection</span>(&amp;csCursor);<br>    <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;\n\n\npause&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>2019年4月26日更新日志:</p><p>1.增加了很多注释</p><p>2019年4月25日更新日志:</p><p>1.后续完全开发多线程版本，单线程版本不再进行大更新。</p><div class="note note-success">            <p>相关推荐：</p><ul><li><a href="/post/note-vue-element/">Vue后台管理系统项目实战/vue+element-ui/vue经典全套系统案例讲解</a></li><li><a href="/post/df99894b/">尚硅谷Vue2.0+Vue3.0全套教程丨vuejs从入门到精通</a></li><li><a href="/post/2ff98e51/">Docker最新超详细版教程通俗易懂</a></li><li><a href="/post/switch-node-version/">优雅的切换nodejs版本</a></li><li><a href="/post/vmware-linux/">如何在VMware中安装Linux</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>C语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C语言实例</tag>
      
      <tag>C语言游戏</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
