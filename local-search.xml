<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>水浒传最美镜头</title>
    <link href="/post/af7aff2/"/>
    <url>/post/af7aff2/</url>
    
    <content type="html"><![CDATA[<p>水浒传发现了一个很美的镜头，截图记录一下。</p><span id="more"></span><p><a href="https://www.bilibili.com/bangumi/play/ep327325?spm_id_from=333.1007.top_right_bar_window_history.content.click&amp;from_spmid=666.25.player.continue&amp;t=1502.0">https://www.bilibili.com/bangumi/play/ep327325?spm_id_from=333.1007.top_right_bar_window_history.content.click&amp;from_spmid=666.25.player.continue&amp;t=1502.0</a></p><p><img src="https://image.glwsq.cn/img/%E6%B0%B4%E6%B5%92%E4%BC%A0%E6%9C%80%E7%BE%8E%E9%95%9C%E5%A4%B4-2022-04-22-23-28-58.png"></p><p><img src="https://image.glwsq.cn/img/%E6%B0%B4%E6%B5%92%E4%BC%A0%E6%9C%80%E7%BE%8E%E9%95%9C%E5%A4%B4-2022-04-22-23-29-17.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>通过python和websocket将RTSP视频流显示到网页上</title>
    <link href="/post/dd06a4e4/"/>
    <url>/post/dd06a4e4/</url>
    
    <content type="html"><![CDATA[<p><img src=""></p><p>在工作中遇到一个问题，有一个网络摄像头，打开摄像头自带的监控软件以后，可以转发出来RTSP的视频流，现在需要在web端显示。</p><p>因为html是没办法直接显示这样的视频数据的，所以需要通过其他的语言来进行处理一下。</p><p>我的思路是：</p><ol><li>通过python语言将rtsp的视频数据捕获</li><li>将捕获的数据转换成一帧一帧的图片数据</li><li>将图片数据转换成base64格式的形式，方便发送到前端</li><li>通过websocket实时的将数据发送到html</li></ol><h2 id="需要安装的依赖"><a href="#需要安装的依赖" class="headerlink" title="需要安装的依赖"></a>需要安装的依赖</h2><figure class="highlight cmake"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs cmake">pip <span class="hljs-keyword">install</span> opencv-python<br>pip <span class="hljs-keyword">install</span> websockets<br></code></pre></td></tr></table></figure><h2 id="Python捕获视频数据"><a href="#Python捕获视频数据" class="headerlink" title="Python捕获视频数据"></a>Python捕获视频数据</h2><p>rtsp_path 可以为一个地址，也可以为0，当为0时表示本机的摄像头</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><br><span class="hljs-comment"># 0 表示本地的摄像头</span><br>rtsp_path = <span class="hljs-number">0</span> <span class="hljs-comment"># &#x27;rtsp://admin:@192.168.1.11:554&#x27;</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">capture_videp</span>():</span><br>    capture = cv2.VideoCapture(rtsp_path)<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        ret, frame = capture.read()<br>        <span class="hljs-built_in">print</span>(frame)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> ret:<br>            <span class="hljs-keyword">break</span><br>        cv2.imshow(<span class="hljs-string">&#x27;video&#x27;</span>, frame)<br>        <span class="hljs-keyword">if</span> cv2.waitKey(<span class="hljs-number">50</span>) == <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;q&#x27;</span>): <span class="hljs-comment"># 按q键退出</span><br>            <span class="hljs-keyword">break</span><br><br>capture_videp()<br><br>cv2.destroyAllWindows()<br></code></pre></td></tr></table></figure><h2 id="python发送websocket"><a href="#python发送websocket" class="headerlink" title="python发送websocket"></a>python发送websocket</h2><p>python提供了一个高级库websockets来实现websocket。<br>官网链接：<a href="https://websockets.readthedocs.io/en/stable/">https://websockets.readthedocs.io/en/stable/</a></p><p>它需要借助asyncio这个异步框架来实现。官网上有详细的教程。</p><blockquote><p>也可以参考这个博客来进行学习：<a href="https://www.jianshu.com/p/b7df44b7c7f7">https://www.jianshu.com/p/b7df44b7c7f7</a></p></blockquote><h2 id="完整的python代码-后端"><a href="#完整的python代码-后端" class="headerlink" title="完整的python代码-后端"></a>完整的python代码-后端</h2><blockquote><p>自己随便写的，可以使用，但是代码很丑，但是思路就是这个思路</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> threading<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> asyncio<br><span class="hljs-keyword">import</span> websockets<br><br>rtsp_path = <span class="hljs-string">&#x27;rtsp://admin:@192.168.1.11:554&#x27;</span><br>camera1 = <span class="hljs-literal">None</span><br>frame = <span class="hljs-literal">None</span><br>base64img = <span class="hljs-string">&#x27;&#x27;</span><br>flag = <span class="hljs-literal">True</span><br>speed = <span class="hljs-number">0.1</span> <span class="hljs-comment"># 视频帧率 表示多少秒一帧</span><br><br><span class="hljs-comment"># 视频获取</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">vedioCapture_thread2</span>(<span class="hljs-params">n</span>):</span><br><span class="hljs-keyword">global</span> camera1<br>camera1 = cv2.VideoCapture(rtsp_path)<br><span class="hljs-keyword">global</span> frame<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>_, img_bgr = camera1.read()<br><br><span class="hljs-keyword">if</span> img_bgr <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>camera1 = cv2.VideoCapture(rtsp_path)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;丢失帧&#x27;</span>)<br><span class="hljs-keyword">else</span>:<br>frame=img_bgr<br><span class="hljs-comment"># cv2.imshow(&#x27;video&#x27;, frame)</span><br><span class="hljs-keyword">if</span> cv2.waitKey(<span class="hljs-number">50</span>) == <span class="hljs-number">27</span>:<br><span class="hljs-keyword">break</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">vedioSend_thread1</span>(<span class="hljs-params">n</span>):</span><br><span class="hljs-keyword">global</span> base64img<br><span class="hljs-keyword">global</span> flag<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;send&#x27;</span>)<br>time.sleep(<span class="hljs-number">3</span>)<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>image = cv2.imencode(<span class="hljs-string">&#x27;.jpg&#x27;</span>, frame)[<span class="hljs-number">1</span>]<br>base64_data = base64.b64encode(image)<br>s = base64_data.decode()<br><span class="hljs-comment"># print(&#x27;data:image/jpeg;base64,%s&#x27;%s)</span><br>base64img = <span class="hljs-string">&#x27;data:image/jpeg;base64,&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(s)<br>flag = <span class="hljs-literal">True</span><br><span class="hljs-comment"># server.send_message_to_all(&#x27;data:image/jpeg;base64,%s&#x27;%s)</span><br>time.sleep(speed)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">from_vedio</span>():</span><br>    thread1 = threading.Thread(target=vedioSend_thread1, args=(<span class="hljs-number">1</span>,))<br>    thread1.start()<br>    thread2 = threading.Thread(target=vedioCapture_thread2, args=(<span class="hljs-number">1</span>,))<br>    thread2.start()<br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">sendImg</span>(<span class="hljs-params">websocket, path</span>):</span><br><span class="hljs-keyword">global</span> flag<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br><span class="hljs-keyword">if</span> flag:<br><span class="hljs-keyword">try</span>:<br><span class="hljs-keyword">await</span> websocket.send(base64img)<br><span class="hljs-keyword">except</span> websockets.exceptions.ConnectionClosedError <span class="hljs-keyword">as</span> e:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;connection closed error&quot;</span>)<br><span class="hljs-keyword">break</span><br><span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br><span class="hljs-built_in">print</span>(e)<br><span class="hljs-keyword">break</span><br>flag = <span class="hljs-literal">False</span><br><br><br><span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span><br>    <span class="hljs-comment"># start a websocket server</span><br><br>    <span class="hljs-keyword">async</span> <span class="hljs-keyword">with</span> websockets.serve(sendImg, <span class="hljs-string">&quot;localhost&quot;</span>, <span class="hljs-number">8765</span>):<br>        <span class="hljs-keyword">await</span> asyncio.Future()  <span class="hljs-comment"># run forever</span><br><br>from_vedio()<br>asyncio.run(main())<br></code></pre></td></tr></table></figure><h2 id="完整的html代码-前端"><a href="#完整的html代码-前端" class="headerlink" title="完整的html代码-前端"></a>完整的html代码-前端</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>websocket练习<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;capture&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"><span class="hljs-built_in">window</span>.onload = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">let</span> vedio = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;capture&#x27;</span>)</span><br><span class="javascript">    <span class="hljs-keyword">var</span> ws = <span class="hljs-keyword">new</span> WebSocket(<span class="hljs-string">&#x27;ws://localhost:8765&#x27;</span>);</span><br><span class="javascript">    ws.onopen = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">        ws.send(<span class="hljs-string">&#x27;the request from client&#x27;</span>);</span><br><span class="javascript">    &#125;;</span><br><span class="javascript">    ws.onmessage = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;</span><br><span class="javascript">        <span class="hljs-comment">// console.log(&#x27;from server: &#x27; + e.data);</span></span><br><span class="javascript">        vedio.setAttribute(<span class="hljs-string">&#x27;src&#x27;</span>, e.data)</span><br><span class="javascript"></span><br><span class="javascript">    &#125;;</span><br><span class="javascript">&#125;</span><br><span class="javascript"></span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
      <tag>python</tag>
      
      <tag>html</tag>
      
      <tag>websocket</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网页调用摄像头</title>
    <link href="/post/1659d89e/"/>
    <url>/post/1659d89e/</url>
    
    <content type="html"><![CDATA[<p>html调用电脑自带的摄像头，并且实时显示视频数据，还可以截图保存</p><figure class="highlight html"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></div></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;ie=edge&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>摄像头拍照<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;video&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;480&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;320&quot;</span> <span class="hljs-attr">controls</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;capture&quot;</span>&gt;</span>拍照<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;canvas&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;480&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;320&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">        <span class="hljs-comment">//访问用户媒体设备的兼容方法</span></span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getUserMedia</span>(<span class="hljs-params">constraints, success, error</span>) </span>&#123;</span><br><span class="javascript">            <span class="hljs-keyword">if</span> (navigator.mediaDevices.getUserMedia) &#123;</span><br><span class="javascript">                <span class="hljs-comment">//最新的标准API</span></span><br><span class="javascript">                navigator.mediaDevices.getUserMedia(constraints).then(success).catch(error);</span><br><span class="javascript">            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (navigator.webkitGetUserMedia) &#123;</span><br><span class="javascript">                <span class="hljs-comment">//webkit核心浏览器</span></span><br><span class="javascript">                navigator.webkitGetUserMedia(constraints, success, error)</span><br><span class="javascript">            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (navigator.mozGetUserMedia) &#123;</span><br><span class="javascript">                <span class="hljs-comment">//firfox浏览器</span></span><br><span class="javascript">                navigator.mozGetUserMedia(constraints, success, error);</span><br><span class="javascript">            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (navigator.getUserMedia) &#123;</span><br><span class="javascript">                <span class="hljs-comment">//旧版API</span></span><br><span class="javascript">                navigator.getUserMedia(constraints, success, error);</span><br><span class="javascript">            &#125;</span><br><span class="javascript">        &#125;</span><br><span class="javascript"></span><br><span class="javascript">        <span class="hljs-keyword">let</span> video = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;video&#x27;</span>);</span><br><span class="javascript">        <span class="hljs-keyword">let</span> canvas = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;canvas&#x27;</span>);</span><br><span class="javascript">        <span class="hljs-keyword">let</span> context = canvas.getContext(<span class="hljs-string">&#x27;2d&#x27;</span>);</span><br><span class="javascript"></span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">success</span>(<span class="hljs-params">stream</span>) </span>&#123;</span><br><span class="javascript">            <span class="hljs-comment">//兼容webkit核心浏览器</span></span><br><span class="javascript">            <span class="hljs-keyword">let</span> CompatibleURL = <span class="hljs-built_in">window</span>.URL || <span class="hljs-built_in">window</span>.webkitURL;</span><br><span class="javascript">            <span class="hljs-comment">//将视频流设置为video元素的源</span></span><br><span class="javascript">            <span class="hljs-built_in">console</span>.log(stream);</span><br><span class="javascript"></span><br><span class="javascript">            <span class="hljs-comment">//video.src = CompatibleURL.createObjectURL(stream);</span></span><br><span class="javascript">            video.srcObject = stream;</span><br><span class="javascript">            video.play();</span><br><span class="javascript">        &#125;</span><br><span class="javascript"></span><br><span class="javascript">        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">error</span>(<span class="hljs-params">error</span>) </span>&#123;</span><br><span class="javascript">            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`访问用户媒体设备失败<span class="hljs-subst">$&#123;error.name&#125;</span>, <span class="hljs-subst">$&#123;error.message&#125;</span>`</span>);</span><br><span class="javascript">        &#125;</span><br><span class="javascript"></span><br><span class="javascript">        <span class="hljs-keyword">if</span> (navigator.mediaDevices.getUserMedia || navigator.getUserMedia || navigator.webkitGetUserMedia || navigator</span><br><span class="javascript">            .mozGetUserMedia) &#123;</span><br><span class="javascript">            <span class="hljs-comment">//调用用户媒体设备, 访问摄像头</span></span><br><span class="javascript">            getUserMedia(&#123;</span><br><span class="javascript">                <span class="hljs-attr">video</span>: &#123;</span><br><span class="javascript">                    <span class="hljs-attr">width</span>: <span class="hljs-number">480</span>,</span><br><span class="javascript">                    <span class="hljs-attr">height</span>: <span class="hljs-number">320</span></span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;, success, error);</span><br><span class="javascript">        &#125; <span class="hljs-keyword">else</span> &#123;</span><br><span class="javascript">            alert(<span class="hljs-string">&#x27;不支持访问用户媒体&#x27;</span>);</span><br><span class="javascript">        &#125;</span><br><span class="javascript"></span><br><span class="javascript">        <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;capture&#x27;</span>).addEventListener(<span class="hljs-string">&#x27;click&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">            context.drawImage(video, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">480</span>, <span class="hljs-number">320</span>);</span><br><span class="javascript">        &#125;)</span><br><span class="javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue-cli 3.x和2.x共存</title>
    <link href="/post/38b4b8a6/"/>
    <url>/post/38b4b8a6/</url>
    
    <content type="html"><![CDATA[<p><img src="https://image.glwsq.cn/img/vue-cli-3-x%E5%92%8C2-x%E5%85%B1%E5%AD%98-2022-04-21-17-32-41.png"><br>遇到了一个很老的vue项目，是用vue-cli2.x创建的，现在需要把里面的一部分功能提取出来，然后进行一些改动，但是发现创建完vue项目之后和之前的老项目的项目结构不一样，没办法直接进行复制粘贴。</p><p>然后发现现在使用<code>vue create test</code>命令创建的项目是用的最新的脚手架。现在有个需求就是使用之前老版本的vue-cli2.x。</p><p><strong>解决办法:</strong></p><p>Vue CLI 3 和旧版使用了相同的vue命令，所以 Vue CLI 2 (vue-cli) 被覆盖了。如果你仍然需要使用旧版本的vue init功能，你可以全局安装一个桥接工具：</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> install -g @vue/cli-init<br></code></pre></td></tr></table></figure><p>然后用这个命令来创建项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vue init webpack <span class="hljs-built_in">test</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第一次拍照分享</title>
    <link href="/post/photography-20220404/"/>
    <url>/post/photography-20220404/</url>
    
    <content type="html"><![CDATA[<blockquote><p>心血来潮，买了一个微单，就用来记录一下生活吧。</p></blockquote><p>今天早上特意早起去公园拍了几张照片，把公园转了3圈，步数倒是走了不少，最后只选出来了4张能看的照片。</p><p><img src="https://image.glwsq.cn/img/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8B%8D%E7%85%A7%E5%88%86%E4%BA%AB-2022-04-04-17-31-18.jpg"></p><p><img src="https://image.glwsq.cn/img/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8B%8D%E7%85%A7%E5%88%86%E4%BA%AB-2022-04-04-17-31-28.jpg"></p><p><img src="https://image.glwsq.cn/img/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8B%8D%E7%85%A7%E5%88%86%E4%BA%AB-2022-04-04-17-31-34.jpg"></p><p><img src="https://image.glwsq.cn/img/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8B%8D%E7%85%A7%E5%88%86%E4%BA%AB-2022-04-04-17-31-41.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>摄影</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【28个前端精品实战案例，助你入门前端开发】，前端案例练习，WEB前端开发的实战项目练习HTML+CSS</title>
    <link href="/post/6641f455/"/>
    <url>/post/6641f455/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>是一门实践性非常强的课程，适合复习和强化自己的html+css的知识</p><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi">https://www.bilibili.com/video/BV1Wo4y1Q7Mi</a><br>自己写的代码:</p></blockquote><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=1">P1. 00-开课导语</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=2">P2. 01-淘宝官网搜索框圆角实现</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=3">P3. 02-淘宝官网中小三角实现</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=4">P4. 03-拼多多首页导航条布局(1)</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=5">P5. 04-拼多多首页导航条布局(2)</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=6">P6. 05-拼多多首页导航条布局(3)</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=7">P7. 06-拼多多首页导航条布局(4)</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=8">P8. 07-拼多多首页二维码图片布局</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=9">P9. 08-百度新闻页面右侧电梯雪碧图应用</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=10">P10. 09-百度新闻页面右侧电梯动画</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=11">P11. 10-央视官网顶部banner及导航布局</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=12">P12. 11-百度新闻页面返回顶部</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=13">P13. 12-返回顶部(匀速和缓冲方式)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=14">P14. 13-百度新闻页面内容搜索功能实现</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=15">P15. 14-京东官网放大镜功能实现(1)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=16">P16. 15-京东官网放大镜功能实现(2)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=17">P17. 16- 京东官网手风琴特效(1)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=18">P18. 17- 京东官网手风琴特效(2)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=19">P19. 18-实时圆形时钟特效(1)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=20">P20. 19-实时圆形时钟特效(2)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=21">P21. 20-购物官网或App的五星好评功能实现</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=22">P22. 21-遮罩层动画</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=23">P23. 22-碰撞检测1</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=24">P24. 23-碰撞检测2</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=25">P25. 24-物体吸附效果</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=26">P26. 25-旋转木马效果</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=27">P27. 26-万年历1</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=28">P28. 27-万年历2</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=29">P29. 28-万年历3</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=30">P30. 29-万年历4</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=31">P31. 30-3D旋转立方体1</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=32">P32. 31-3D旋转立方体2</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=33">P33. 32-随机抽奖功能1</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=34">P34. 33-随机抽奖功能2</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=35">P35. 34-随机抽奖功能3</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=36">P36. 35-省市区三级联动1</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=37">P37. 36-省市区三级联动2</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=38">P38. 37-省市区三级联动3</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=39">P39. 38-省市区三级联动4</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=40">P40. 40-轮播图2</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=41">P41. 41-轮播图3</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=42">P42. 42-轮播图4</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Wo4y1Q7Mi?p=43">P43. 43-轮播图5</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>win11右键默认显示更多选项</title>
    <link href="/post/8146e869/"/>
    <url>/post/8146e869/</url>
    
    <content type="html"><![CDATA[<p>我平时用右键的功能有点频繁，Win11现在右键需要点击更多选项才能展开所有，有点麻烦，这个方法可以直接展开最全的右键菜单。</p><p>反正可以再改回去，想尝试了可以试试，我现在体验很好<br><img src="https://image.glwsq.cn/img/win11%E5%8F%B3%E9%94%AE%E9%BB%98%E8%AE%A4%E6%98%BE%E7%A4%BA%E6%9B%B4%E5%A4%9A%E9%80%89%E9%A1%B9-2022-03-10-19-44-38.png"></p><h2 id="快速修改"><a href="#快速修改" class="headerlink" title="快速修改"></a>快速修改</h2><p>最简单方法，直接用下面这个批处理文件</p><figure class="highlight bat"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></div></td><td class="code"><pre><code class="hljs bat"><span class="hljs-built_in">echo</span> off<br><span class="hljs-built_in">color</span> <span class="hljs-number">1</span>f<br>:<span class="hljs-built_in">start</span><br><span class="hljs-built_in">cls</span><br><span class="hljs-built_in">echo</span>,<br><span class="hljs-built_in">echo</span>     修改右键菜单模式<br><span class="hljs-built_in">echo</span>,<br><span class="hljs-built_in">echo</span>   <span class="hljs-number">1</span> Windows <span class="hljs-number">10</span> 传统模式<br><span class="hljs-built_in">echo</span>,<br><span class="hljs-built_in">echo</span>   <span class="hljs-number">2</span> Windows <span class="hljs-number">11</span> 默认模式<br><span class="hljs-built_in">echo</span>,<br><span class="hljs-built_in">echo</span>,<br><span class="hljs-built_in">echo</span>,<br><span class="hljs-built_in">echo</span>   <span class="hljs-number">0</span> 放弃修改，退出<br><span class="hljs-built_in">echo</span>,<br><span class="hljs-built_in">echo</span>,<br>choice /c:<span class="hljs-number">120</span> /n /m:&quot;请选择要使用的模式&quot;<br><span class="hljs-keyword">if</span> <span class="hljs-variable">%errorlevel%</span>==<span class="hljs-number">0</span> <span class="hljs-keyword">exit</span><br><span class="hljs-keyword">if</span> <span class="hljs-variable">%errorlevel%</span>==<span class="hljs-number">2</span> <span class="hljs-keyword">goto</span> cmd2<br><span class="hljs-keyword">if</span> <span class="hljs-variable">%errorlevel%</span>==<span class="hljs-number">1</span> <span class="hljs-keyword">goto</span> cmd1<br><span class="hljs-keyword">exit</span><br><br><br>:cmd1<br>reg.exe add &quot;HKCU\Software\Classes\CLSID\&#123;<span class="hljs-number">86</span>ca1aa0-<span class="hljs-number">34</span>aa-<span class="hljs-number">4</span>e8b-a509-<span class="hljs-number">50</span>c905bae2a2&#125;\InprocServer32&quot; /f /ve<br>shutdown -l<br><span class="hljs-keyword">exit</span><br><br>:cmd2<br>reg.exe delete &quot;HKCU\Software\Classes\CLSID\&#123;<span class="hljs-number">86</span>ca1aa0-<span class="hljs-number">34</span>aa-<span class="hljs-number">4</span>e8b-a509-<span class="hljs-number">50</span>c905bae2a2&#125;&quot; /f<br>shutdown -l<br><span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>通过修改注册表，我们就可以将Win11的右键菜单改为老样式。下面是具体的方法。</p><ol><li><p>运行“regedit”，开启注册表编辑器，定位到“HKEY_CURRENT_USER\SOFTWARE\CLASSES\CLSID”；</p></li><li><p>接着，右键点击“CLSID”键值，新建一个名为{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}的项；</p></li><li><p>右键点击新创建的项，新建一个名为InprocServer32的项，按下回车键保存；</p></li><li><p>最后选择新创建的项，然后双击右侧窗格中的默认条目，什么内容都不需要输入，按下回车键。</p></li><li><p>保存注册表后，重启explorer.exe，即可看到右键菜单恢复成旧样式了。</p></li></ol><p>如果想要恢复成为Win11的设计，那么删掉InprocServer32的项就可以了。</p>]]></content>
    
    
    <categories>
      
      <category>电脑使用技巧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>springboot+vue练手级项目，真实的在线博客系统</title>
    <link href="/post/springboot-vue-mszl-blog/"/>
    <url>/post/springboot-vue-mszl-blog/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>一个springboot+vue博客的练手项目，学了一段时间，感觉适合有一点点项目经验的人，没必要非得是springboot的项目经验。如果有网站后台开发经验，写过一个后台的项目，就会对这个项目更加的得心应手，因为这个老师在讲解的过程中没有讲项目的结构和数据库的表结构，如果没有一点点基础的话可能会不知道他在干啥。</p><p>我自己没有按照他的项目结构来，因为感觉刚开始他说的项目结构很乱，也可能是我太菜理解不了，所以我是直接用Spring Initializr创建了一个初始化的项目，然后跟着他一步一步来，如果需要的maven包没有的话，直接去他提供的资料里找</p><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb">https://www.bilibili.com/video/BV1Gb4y1d7zb</a><br>项目资料: <a href="https://pan.baidu.com/s/1YD8pi_bxDucY1rtrAiPXYQ?pwd=6666">https://pan.baidu.com/s/1YD8pi_bxDucY1rtrAiPXYQ?pwd=6666</a> </p></blockquote><h2 id="用到的依赖"><a href="#用到的依赖" class="headerlink" title="用到的依赖"></a>用到的依赖</h2><ul><li>jdk 1.8</li><li>spring-boot 2.4.1</li><li>mysql-connector</li><li>mybatis-plus 3.5.1</li><li>lombok</li></ul><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><p>P4后形成的目录结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></div></td><td class="code"><pre><code class="hljs txt">src/cn.glwsq.blog<br>│  BlogApplication.java # 启动文件<br>│<br>├─config # 配置文件<br>│      MyBatisPlusConfig.java # MyBatisPlus配置文件<br>│      WebMVCConfig.java # 跨域配置<br>│<br>├─controller<br>│      ArticleController.java<br>│<br>├─domain<br>│      Article.java<br>│      SysUser.java<br>│      Tag.java<br>│<br>├─mapper # 会去寻找resources下面的同名mapper<br>│      ArticleMapper.java<br>│      SysUserMapper.java<br>│      TagMapper.java<br>│<br>├─service<br>│  │  ArticleService.java<br>│  │  SysUserService.java<br>│  │  TagService.java<br>│  │<br>│  └─impl<br>│          ArticleServiceImpl.java<br>│          SysUserServiceImpl.java<br>│          TagServiceImpl.java<br>│<br>└─vo<br>    │  ArticleVo.java<br>    │  Result.java<br>    │  TagVo.java<br>    │<br>    └─params<br>            PageParams.java<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs txt">resources<br>│  application.yml # 项目配置<br>│<br>├─mapper # mapper映射文件<br>│      ArticleMapper.xml<br>│      SysUserMapper.xml<br>│      TagMapper.xml<br>│<br>├─static<br>└─templates<br></code></pre></td></tr></table></figure><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=1">P1. 项目介绍</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=2">P2. 项目搭建</a><ul><li>用自己的方法搭建博客后台项目</li><li>加入mybatis-plus的分页插件</li><li>跨域配置</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=3">P3. 首页文章列表实现-1</a><ul><li>idea的MybatisX插件真好用，直接通过mysql数据库把相关的代码实现了，具体的代码如下<ol><li>domain层，包含了数据库的表结构</li><li>mapper层，包含了mybatis的数据库操作Mapper</li><li>service层，逻辑处理层</li><li>和resources下的mapper.xml</li></ol></li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=4">P4. 首页文章列表实现-2</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=5">P5. 首页-最热标签</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=6">P6. 统一异常处理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=7">P7. 首页-最热文章</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=8">P8. 首页-最新文章</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=9">P9. 首页-文章归档</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=10">P10. 登录JWT技术</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=11">P11. 登录功能</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=12">P12. 登录后获取用户信息</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=13">P13. 退出登录</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=14">P14. 注册功能</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=15">P15. 登录拦截器</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=16">P16. ThreadLocal保存登录用户信息</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=17">P17. ThreadLocal内存泄漏</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=18">P18. 文章详情</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=19">P19. 线程池的使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=20">P20. 阅读次数bug修正</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=21">P21. 评论列表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=22">P22. 评论功能</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=23">P23. 写文章-所有分类</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=24">P24. 写文章-所有标签</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=25">P25. 发布文章</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=26">P26. AOP记录日志</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=27">P27. 文章归档bug修复</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=28">P28. 文章图片上传</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=29">P29. 导航-文章分类</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=30">P30. 分类文章列表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=31">P31. 标签文章列表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=32">P32. 归档文章列表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=33">P33. 统一缓存处理（优化）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=34">P34. 统一缓存精度bug</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=35">P35. 思考别的优化+作业</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=36">P36. 管理后台-搭建工程</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=37">P37. 管理后台-页面讲解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=38">P38. 权限表增删改查</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=39">P39. security配置说明</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=40">P40. 登录认证</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=41">P41. 权限认证</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=42">P42. 管理台权限布置作业</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=43">P43. 总结-面试技术亮点</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=44">P44. 前端代码讲解1</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=45">P45. 前端代码讲解2</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=46">P46. 部署-云服务器购买</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=47">P47. 部署-域名和备案</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=48">P48. 部署-打包</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=49">P49. 部署-安装mysql和redis</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=50">P50. 部署-app镜像制作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=51">P51. 部署-服务编排</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=52">P52. 部署-网络错误解决</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=53">P53. 补充-53-缓存一致性问题</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=54">P54. 补充-54-缓存一致性问题-消费者逻辑</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Gb4y1d7zb?p=55">P55. 补充-55-缓存一致性问题-文章列表解决方案</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>学习中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>王道组成原理学习总结</title>
    <link href="/post/7cd0071e/"/>
    <url>/post/7cd0071e/</url>
    
    <content type="html"><![CDATA[<p>记录在学习组成原理这门课的过程中的知识点，方便复习，看的视频是王道考研的视频，正在学习…..</p><span id="more"></span><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><h3 id="01-第一章计算机系统概述"><a href="#01-第一章计算机系统概述" class="headerlink" title="01.第一章计算机系统概述"></a>01.第一章计算机系统概述</h3><ul><li><input checked="" disabled="" type="checkbox"> 1.0 - 你好，我是计算机组成原理<ul><li>没啥要学的</li></ul></li><li><input checked="" disabled="" type="checkbox"> 1.1 - 计算机的发展（大纲已删但建议看看）<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-10-12-14-39.png"><br>中国的超级计算机：神威·太湖之光  </p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 1.2.1 - 计算机硬件的基本组成<ul><li><details><summary>笔记</summary><h4 id="早期的冯诺依曼计算机"><a href="#早期的冯诺依曼计算机" class="headerlink" title="早期的冯诺依曼计算机"></a>早期的冯诺依曼计算机</h4><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-10-15-32-12.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-10-15-34-04.png"><br>早期的冯诺依曼计算机可以类比为一个加工厂<br>因此很明显可以看到缺点，就是存储部门可以直接和采购部门销售部门对接，但是现在非要经过生产加工部门，因此需要改进，这也就出现了现代计算机<br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-10-16-05-06.png"></p><h4 id="现代计算机"><a href="#现代计算机" class="headerlink" title="现代计算机"></a>现代计算机</h4><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-10-16-06-45.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 1.2.2 - 认识各个硬件部件<ul><li>这节课还是比较硬核的</li><li>字(word): 跟计算机的硬件有关 如果是32位系统则一个字是4个字节,如果是64位,则是8个字节。</li><li>字节(Byte): 1字节 = 8bit</li><li>运算器<ul><li>ACC：累加器 Accumulator</li><li>MQ：乘商寄存器 Multiple-Quotient Register</li><li>X：通用的操作数寄存器 </li><li>ALU：算术逻辑单元 Arithmetic and Logic Unit</li></ul></li><li>控制器<ul><li>CU：控制单元 Control Unit</li><li>IR：指令寄存器 Instruction Register</li><li>PC：程序寄存器 Program Counter</li></ul></li><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-10-22-34-50.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-10-22-36-46.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-10-22-37-11.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 1.2.3 - 计算机系统的层次结构<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-11-20-11-23.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-11-20-12-10.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 1.3 - 计算机的性能指标<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-11-20-12-54.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-11-20-17-04.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-11-20-18-12.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-11-20-35-08.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-11-20-35-52.png">  </p></details><h3 id="02-第二章数据的表示和运算"><a href="#02-第二章数据的表示和运算" class="headerlink" title="02.第二章数据的表示和运算"></a>02.第二章数据的表示和运算</h3></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.1.1 - 进位计数制<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-11-03-39.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-11-04-10.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.1.2 - BCD码（大纲已删408考生可不看）<ul><li>用四位的二进制来保存一个十进制数，会有冗余</li><li>方便一位一位的进行进制转换</li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.1.3 - 字符与字符串<ul><li>太神奇了，ASCII码的低4位居然是BCD码</li><li>大小写字母的低5位转换为数字居然正好是1-26，我之前以为他们的ASCII是随便写的。</li><li>汉字的GB2312是用区位码来表示的，94*94的格子，每一个表示一个汉字</li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.1.4 - 奇偶校验码（计组大纲已删但计网要考）<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-15-44-07.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.1.5 - 海明校验码（计组大纲已删但计网要考）<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-15-44-57.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-15-46-11.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-15-46-46.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.1.6 - 循环冗余校验码（计组大纲已删但计网要考）<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-16-27-47.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.1 - 定点数的表示<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-16-52-38.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-11-01-54.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.2 - 原码补码移码的作用<ul><li>补码的作用是为了把负数相加转换为整数相加，这样就可以致设计加法电路，来完成减法的需求</li><li>移码的作用是方便比较大小</li><li>反码没啥用，是一个中间变量</li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.3 - 移位运算<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-17-30-45.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-13-17-30-59.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.4 - 加减运算和溢出判断<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-09-07-30.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-09-08-27.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-09-09-07.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-09-10-20.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-09-10-41.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-09-12-11.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-09-12-43.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.5 - 原码的乘法运算<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-09-46-20.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.5 - 补码的乘法运算<ul><li><strong>好难，没听懂，回头再来学学</strong></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.6 - 原码的除法运算<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-17-53-11.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-17-54-23.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.6 - 补码的除法运算<ul><li><details><summary>笔记</summary><p>发现补码的都比较难<br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-15-18-08-49.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.7 - 强制类型转换<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-16-15-41-08.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.8 - 数据的存储和排列<ul><li>大小端模式</li><li>边界对齐</li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.1 - 浮点数的表示<ul><li>内容有点多，感觉不是很好算</li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.2 - IEEE75<ul><li><details><summary>笔记</summary><p>重点学一下十进制和二进制的相互转换<br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-16-22-54-43.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-16-22-56-04.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-16-22-57-04.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.3 - 浮点数的运算<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-10-38-13.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-10-39-29.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-10-39-47.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.4.1 - 电路的基本原理、加法器设计<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-11-19-39.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-11-20-59.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-11-21-27.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-11-22-38.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-11-22-56.png" alt="一位全加器"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-11-23-36.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-11-24-01.png"></p></details></li></ul></li><li><input disabled="" type="checkbox"> 2.4.2 - 加法器、ALU的改进<ul><li>听不懂，跳过 <h3 id="03-第三章存储系统"><a href="#03-第三章存储系统" class="headerlink" title="03.第三章存储系统"></a>03.第三章存储系统</h3></li></ul></li><li><input checked="" disabled="" type="checkbox"> 3.1+3.2 - 存储系统基本概念<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-15-52-37.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-15-53-12.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 3.3.1 - 主存储器的基本组成<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-16-12-57.png" alt="主存储器的简单模型"></p></details></li></ul></li><li><input disabled="" type="checkbox"> 3.3.2 - SRAM和DRAM<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-16-23-09.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-16-55-09.png" alt="DRAM v.s SRAM"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-16-56-32.png" alt="DRAM的刷新"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 3.3.3 - 只读存储器ROM<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-17-09-35.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 3.4 - 主存储器与CPU的连接<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-17-51-06.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-17-51-54.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-17-52-34.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-17-17-53-01.png"></p></details></li></ul></li><li><input disabled="" type="checkbox"> 3.5 - 双端口RAM和多模块存储器<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-15-56-54.png" alt="双端口RAM"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-15-57-34.png" alt="多体并行存储器"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-15-59-00.png" alt="都体块存储器"></p></details></li></ul></li><li><input disabled="" type="checkbox"> 3.6.1 - Cache的基本概念和原理<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-16-01-29.png" alt="Cache的工作原理"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-16-02-09.png" alt="局部性原理"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-16-03-28.png" alt="性能分析"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-16-04-22.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-16-04-48.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 3.6.2 - Cache和主存的映射方式<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-16-52-55.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-16-58-19.png" alt="Cache-主存映射方式"></p></details></li></ul></li><li><input disabled="" type="checkbox"> 3.6.3 - Cache替换算法<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-17-00-35.png" alt="随机算法"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-17-01-10.png" alt="先进先出算法"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-17-03-33.png" alt="近期最少使用算法"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-17-04-18.png" alt="最不经常使用算法"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 3.6.4 - Cache写策略<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-17-15-56.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 3.7.1 - 页式存储器<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-17-51-21.png" alt="快表和Cache总结"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-17-49-41.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-17-50-47.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 3.7.2 - 虚拟存储器<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-18-06-05.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-18-18-06-27.png"></p></details><h3 id="04-第四章指令系统"><a href="#04-第四章指令系统" class="headerlink" title="04.第四章指令系统"></a>04.第四章指令系统</h3></li></ul></li><li><input checked="" disabled="" type="checkbox"> 4.1.1 - 指令格式<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-10-41-03.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 4.1.2 - 扩展操作码指令格式<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-10-42-25.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-10-43-23.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 4.2.1 - 指令寻址<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-10-45-06.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 4.2.2 - 数据寻址<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-10-45-41.png" alt="数据寻址方法"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-10-46-58.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 4.2.3 - 数据寻址2_偏移寻址<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-20-01-42.png" alt="基址寻址"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-20-02-08.png" alt="变址寻址"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-20-06-12.png" alt="相对寻址"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 4.2.4 - 数据寻址3_堆栈寻址<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-20-07-18.png" alt="堆栈寻址"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 4.3 - CISC和RISC<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-20-10-55.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-19-20-11-30.png"></p></details><h3 id="05-第五章中央处理器"><a href="#05-第五章中央处理器" class="headerlink" title="05.第五章中央处理器"></a>05.第五章中央处理器</h3></li></ul></li><li><input checked="" disabled="" type="checkbox"> 5.0 - 回忆过去</li><li><input checked="" disabled="" type="checkbox"> 5.1 - CPU的功能和基本结构<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-11-08-36.png" alt="CPU的基本结构"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-11-09-19.png" alt="CPU的功能和基本结构"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 5.2 - 指令周期的数据流<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-15-41-50.png" alt="指令周期流程"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-15-42-50.png" alt="取值周期"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-15-43-12.png" alt="间址周期"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-15-44-21.png" alt="中断周期"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-15-44-58.png" alt="指令执行方案"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 5.3.1 - 数据通路-单总线结构<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-18-20-35.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 5.3.2 - 数据通路-专用通路结构<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-18-23-43.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 5.4.1 - 硬布线控制器的设计<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-18-16-29.png" alt="硬布线控制器"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-18-17-24.png" alt="硬布线控制器的设计"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 5.4.2 - 微程序控制器的基本原理<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-18-50-50.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-18-51-38.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 5.4.3 - 微指令的设计<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-20-22-49.png"></p></details></li></ul></li><li><input disabled="" type="checkbox"> 5.4.4 - 微程序控制单元的设计</li><li><input checked="" disabled="" type="checkbox"> 5.5.1 - 指令流水线的基本概念<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-20-59-01.png"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-20-59-42.png" alt="指令流水线的表示方法"><br><img src="https://image.glwsq.cn/img/%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-20-21-00-29.png" alt="指令流水线"></p></details></li></ul></li><li><input disabled="" type="checkbox"> 5.5.2 - 指令流水线的影响因素和分类</li><li><input disabled="" type="checkbox"> 5.5.3 - 五段式指令流水线<h3 id="06-第六章总线"><a href="#06-第六章总线" class="headerlink" title="06.第六章总线"></a>06.第六章总线</h3></li><li><input disabled="" type="checkbox"> 6.1.1 - 总线概述</li><li><input disabled="" type="checkbox"> 6.1.2 - 总线的性能指标</li><li><input disabled="" type="checkbox"> 6.2 - 总线仲裁</li><li><input disabled="" type="checkbox"> 6.3 - 总线操作和定时</li><li><input disabled="" type="checkbox"> 6.4 - 总线标准<h3 id="07-第七章IO系统"><a href="#07-第七章IO系统" class="headerlink" title="07.第七章IO系统"></a>07.第七章IO系统</h3></li><li><input disabled="" type="checkbox"> 7.1 IO系统基本概念</li><li><input disabled="" type="checkbox"> 7.2.1 输入输出设备</li><li><input disabled="" type="checkbox"> 7.2.2 外存储器</li><li><input disabled="" type="checkbox"> 7.3 I-O接口</li><li><input disabled="" type="checkbox"> 7.4.1 程序查询方式</li><li><input disabled="" type="checkbox"> 7.4.2 中断的作用和原理</li><li><input disabled="" type="checkbox"> 7.4.3 多重中断</li><li><input disabled="" type="checkbox"> 7.4.4 程序中断方式</li><li><input disabled="" type="checkbox"> 7.4.5 DMA方式</li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>百度网盘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>研究生信息保存</title>
    <link href="/post/2ffc594e/"/>
    <url>/post/2ffc594e/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4b145b06db56ac8197033420bb3b4f59f71e5b0bceb5955b0dcf13b86ec60b16">3cda45eb18a6d7e6d918c351ef05b50a59b4b1b3c645f92f1a57f9b3725e6f64e4e342a1947fdcd6f9555d842b2de30f3da69fbdd846ea347344334467af812b6c74e7576b654dab83f67ec3842e071871140852c92f9210944eb86ddac7e1aed2fd3ae670173c4da12b1b7d52d31e41ce66c7c14261045e727080661bfe5149ac11a4b76c1f753f871a8d4d6b7c0e53f3a85a91ea2db29db45045229716e74c5fce3254316292c0ce1c49badc58e95a7173a5399001bdeac2f3182093d64664b1279f2a461b39b7bfc2ca683aad28eba0af89c08a9a4e5225f11a1904ee431e8d97f1edfb453af6db182381fde73a17c795ae073322e9178cd7cebdfdeaf1bbab463b891be41589371f0f73b52e31fb5e9e5166377087f365a8271244ab222a6d68741488638070c0061445b1e230f482e0c7497f07d123359690702c28d9e11e2526c1ea08c14f28c967ed45afc739a2e3eb34cb6b29f81f85ecea711632a79d90fef076a57e932cad8f772f503636b67449b8c7a570330712c83bf605cbf9f8be0bbef532ef330baa711ab99c395cb10a8e6ef7c2a52df012ba2b740f8c04825f04b8ccf93783b6f60862148666d52e458046ac9ba7c9ea8ad0d443d8cb8c59e95c6933f8b89c230fd193921238aa1ce4d916b51ccd773875ac1f1bba351a3b63ae04f9a42129e5fafbf96106ca93cd03e3d3abf781df9fa909b01b084e58e6f9a0f14fcdf2e504e5ff99c6c565219c4ed7e75031e94d0426c4f2e773940f7f4883502f1631f3c9e9b264f11b319efb5417a9224eabb3031e448c8935546c3c36fdbc4f060a99e2348ff34cb93a1116b6ef8b87cf96bad645b42cb2dd80e1e5b915bf0e24a020a7203981fa2c904e</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>推荐分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>考研复试英语口语问题整理学习</title>
    <link href="/post/introduce-myself-in-english/"/>
    <url>/post/introduce-myself-in-english/</url>
    
    <content type="html"><![CDATA[<h2 id="Question-amp-Answer"><a href="#Question-amp-Answer" class="headerlink" title="Question &amp; Answer"></a>Question &amp; Answer</h2><details><summary>1. introduce yourself</summary><p>Good afternoon, I am glad to be here for this interview. First let me introduce myself. My name is Max, 24 yesrs old. I come from Jiaozuo, Henan Province. I graduated from Nanyang Institute of Technology</p></details><details><summary>What hobbies do you have</summary><p>I like coding because it not only helps my thinking ability, but also very interesting. I also like running. I can run up to 500 kilometres a year. Sometimes I like playing badminton and cycling with my friends.</p></details><details><summary>Where is your hometown? And introduce it.</summary><p>I come from Jiaozuo, Henan Province. It is very famous in it’s Yuntai mountain wherein many tourist wants to visit and see it’s fascinating beauty. My hometown is very rich with so many natural resources just like crops from the mountain and it’s fresh and clean water from the river of the mountain. </p></details><details><summary>Your favorite book</summary><p>I like reading books about computer and I don’t have an interest to read some other kinds of books. Reading about computer is very useful and I can learn so many thing about it. </p></details><details><summary>Why apply for Beijing University of Chemical Technology</summary><p>Because this university is one of the top performing school in China. So, I want to take part in the excellency of this University. The Postgraduate examination content of your University is about data structure which I am very confident and I can say that it’s my strength. </p></details><p>In my word, I find it necessary to broaden my horizons in Programming, That’s why I long for entering your prestigious university.</p><p>用我的话说，我觉得有必要拓宽我在沟通方面的视野，这就是我渴望进入贵校的原因。</p><p>Plans in the postgraduate study</p><p>If luckily I got the chance to learn Computer Technology engineering</p><p>I beleve after 3 years of learning, my dream will finally come true.</p><blockquote><p>Hello, teacher. This is my notes from yesterday’s class. I modified them a little.</p><p>I also want to continue to learn the standard pronunciation. Can you help me</p></blockquote><hr><blockquote><p>Hello, teacher. I want to simulate the interview. Here are some questions.</p><p>I also want to learn the standard pronunciation.</p><p>The interview is on Thursday.</p></blockquote><p>老师们大家好，我叫郭力玮，毕业于南阳理工学院的软件学院。来自河南省焦作市。在校期间我担任ACM集训队负责人。并且也拿过一些奖牌。获得过国家励志奖学金。</p><p>我个人对计算机非常的感兴趣，兴趣驱使我学习过很多的东西。而且我也善于将编程应用于生活当中。每次我发现一个问题的时候，我首先会想到的是能不能用计算机来解决。通过兴趣的驱使，在实践过程中，我学习过好几种编程语言，很多计算机相关的知识。但是学的不是很精通，我想通过研究生阶段来找到一个属于自己的方向。</p><p>我也很喜欢分享一些学习中遇到过的问题，因此我也自学了网页相关的内容，创建了自己的博客，并且也有好几万人访问。</p><p>在平时的生活当中，我经常跑步，一年最多跑500公里，也喜欢和朋友一块儿打羽毛球骑自行车。</p><p>我的英语不是很好，但是通过考研对英语产生了很大的兴趣，至少找到了属于自己的学习方法，因此我的毕业设计就设计了一个基于艾宾浩斯遗忘曲线的背单词系统，不管考研的结果如何，感觉在这个过程中学到了很多学习的能力和抗压的能力，我能对英语提起兴趣，这是我考研之前想都没想过的。</p><p>首先是学长的推荐，然后经过我的了解，发现这个学校非常的适合我，首先贵校是211双一流，足以看出是非常的有实力的，相信如果能顺利进入北化工学习的话，一定能学到很多专业的知识。而且地理位置非常好，我最大的愿望就是毕业以后要去大城市闯荡一下，如果考上这所学校，对我以后的规划很有帮助，很幸运的是学校的考试内容是数据结构，而我认为我的数据结构学的还算可以，所以这样的话就有更多的时间来学习自己薄弱的科目，增加上岸的几率。</p><p>我学习的计算机相关的内容很广泛，但是有很多只是用到了稍微学了一下，但是有些再次系统的遇到的时候，就会很系统的学，但是有些只是学了一下用法，可以进行正常的使用。例如docker还有git平时一直在用，但是目前也没有必要去把里面的核心知识学习完毕，如果需要的话，我可以集中一段时间，来快速的把所有内容系统的过一遍。</p><p>我一直认为，学习一门技术，一定要从实践开始，例如学习mysql，如果上来就学习他的各种原理，学习内部的很多高级核心知识，那么一定会对他提不起兴趣，感觉学习的很累，不知道为什么学他，只是感觉到了压力，但是如果老师换了一个思路，先教了一下c语言连接mysql，然后用mysql的增删改查来写一个迷你的通讯录，或者说很简单的东西，sql语句简单用法并不难，上手也很快，当会用了以后，再去研究怎么写更快，或者说内部的原理是啥，我感觉这样才会非常好。</p><p>编程语言有很多，我感觉都是相通的，虽然现在看很多语言干的事情有很大的不同，但是这个不同感觉都是人来定义的，没人说后台必须用java来写，c语言也可以写web后台的啊，我就写过一个。但是可能第一次提供框架的大佬用到了java上，并且感觉c语言确实有点麻烦的时候，才这样的，我感觉如果这个世界一瞬间java语言人间蒸发了，那么一定会有人在c语言上开发各种网页设计的框架，最后打造成一个很趁手的兵器。</p><p>毕业以后干了啥。</p><h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><ol><li><strong>Please introduce yourself.</strong></li><li><strong>Why apply for Beijing University of Chemical Technology</strong></li><li><strong>Your favorite book</strong></li><li><strong>Your postgraduate study plan</strong></li><li><strong>Introduce your family</strong></li><li><strong>Do you know BUCT?</strong></li></ol><h2 id="Question-amp-Answer-1"><a href="#Question-amp-Answer-1" class="headerlink" title="Question &amp; Answer"></a>Question &amp; Answer</h2><p><strong>Please introduce yourself.</strong></p><p>Good morning, my respected professors! It’s my honor to be here for your interview. I am Guo Liwei, 24 years old, live in Jiaozuo, Henan province. I graduated from the Nanyang Institute of Technology. Now, I am doing my best to obtaining a chance to attend Beijing University of Chemical Technology.</p><p>First, let me introduce my family. I have a harmonious small family. My parents, my little sister and my little brother. My father is a accountant and my mother is a housewife who is taking good care of us. My brother is a college student and my sister is a high school student. I love them very much.</p><p>Next, I like coding because it not only helps my thinking ability, but also very interesting. I also like running. I can run up to 500 kilometres a year. Sometimes I like playing badminton and cycling with my friends.</p><p>Last but not least, during my college years, I took part in the International Collegiate Programming Contest and won some awards. I am interested in Web Design, So I taught myself how to develop web application. and I also like to write some tutorial articles to share other people. Many people visit my personal blog.</p><p>that’s all, thank you!</p><p><strong>Why apply for Beijing University of Chemical Technology</strong></p><p>Because Beijing University of Chemical Technology is one of the top performing school in China. it has a history of more than 60 years and entered the “211 program” and “Double-First Class” program of country’s rank. So, I beleve I will be able to get more professional knowledge and skills here. It be fortunate that the Postgraduate Examination content of your University is data structure which I am very confident and I can say that it’s my strength. I believe it is a very suitable place to study and live.</p><p>that’s all, thank you!</p><p><strong>Your favorite book</strong></p><p>I like reading books about computer and I recently read a book by Liu Xin, <em>turning over from coder farmer</em>. I think it is a nice and a funny book about computer. Reading about computer is very useful and I can learn so many things about it.  </p><p><strong>Your postgraduate study plan</strong></p><p>I want to further improve my professional knowledge and practical ability and improve my spoken English level by reading more books and do a research.</p><p><strong>Do you know BUCT?</strong></p><p>BUCT is the shorter from the Beijing University of Chemical Technology which is one of the top performing school in China. BUCT has a history of more than 60 years and entered the “211 program” and “Double-First Class” program of country’s rank. I believe BUCT is a very suitable place to study and live.</p><p><strong>Can you tell me your strengths and weaknesses?</strong><br>My advantage is that I am very interested in computer-related knowledge and would like to learn related knowledge by myself.</p><p>But my disadvantage is that I don’t know enough about computers. I want to find a direction in my next study career.</p><p><strong>Where is your hometown? And introduce it.</strong></p><p>I live in Jiaozuo, Henan Province. It is very famous in it’s Yuntai mountain wherein many tourist wants to visit and see it’s fascinating beauty. My hometown is very rich with so many natural resources just like crops from the mountain and it’s fresh and clean water from the river of the mountain. </p><hr><p><strong>Introduce your family</strong></p><p>I have a harmonious small family. My parents, my little sister and my little brother. My father is a accountant and my mother is a housewife who is taking good care of us. My brother is a college student and my sister is a high school student. I love them very much.</p><p>There are five members in my family. my parents, my little sister and little brother. My father works outside. My brother is a college student. My sister is a high school student. I Love them very much.</p><p><strong>Can you tell me your strengths and weaknesses?</strong></p><p>Well, I am good at designing websites and you can count on me when it talk about software. In the other hand, my understanding towards something is not that deep and I think I have to learn more and I am now starting to do a research about what I know to have a better understanding of everyting. </p><p>我的优点是对计算机相关的知识非常的感兴趣，并且很乐意去自学相关的知识。<br>My advantage is that I am very interested in computer-related knowledge and would like to learn related knowledge by myself.</p><p>但是我的缺点就是对计算机相关知识的了解不够深入。<br>But my disadvantage is that I don’t know enough about computers.</p><p>我想在接下来的学习生涯中找到方向。<br>I want to find a direction in my next study career.</p><ol><li>我的优点是很热爱计算机，对计算机的每一方面都很感兴趣，都想学一学相关的内容。<br>My advantage is that I love computers very much. I am very interested in every aspect of computers and want to learn relevant contents.</li><li>但是缺点就是对每一方面的了解不够深入。<br>But the disadvantage is that the understanding of each aspect is not deep enough.</li></ol><p><strong>Where is your hometown? And introduce it.</strong></p><p>I live in Jiaozuo, Henan Province. It is very famous in it’s Yuntai mountain wherein many tourist wants to visit and see it’s fascinating beauty. My hometown is very rich with so many natural resources just like crops from the mountain and it’s fresh and clean water from the river of the mountain. </p><p><strong>What hobbies do you have</strong></p><p>I like coding because it not only helps my thinking ability, but also very interesting. I also like running. I can run up to 500 kilometres a year. Sometimes I like playing badminton and cycling with my friends.</p><p><strong>Introduce undergraduate major</strong></p><p>during my college years, I participated in the International Collegiate Programming Contest and won some awards. I am interested in Web Design, So I taught myself how to develop web application. and I also like to write some tutorial articles to share other people. Many people visit my personal blog.</p><h2 id="可能会问的问题"><a href="#可能会问的问题" class="headerlink" title="可能会问的问题"></a>可能会问的问题</h2><ol><li>为什么要报考北京化工大学？<br>Why apply for Beijing University of Chemical Technology<ol><li>因为有学长的推荐，他们说这个学校适合我<br>Because of the recommendation of the fellow student, they say this school suits me</li><li>贵校的考试内容是数据结构，我大学学的比较好<ul><li>The examination content of your university is data structure, and I studied better in University</li><li>the postgraduate exams content of your university is data structure</li></ul></li><li>完整答案<br>Because Beijing University of Chemical Technology is one of the top performing school in China. So, I want to take part in the excellency of this University. The examination of your University is about data structure which I am very confident and I can say that it’s my strength.  </li></ol></li><li>你的家乡是哪里？并介绍一下。<br>Where is your hometown? And introduce it.<ol><li>我家在河南焦作<ul><li>My home is in Jiaozuo, Henan Province</li><li>I come from Jiaozuo City, Henan Province.</li></ul></li><li>这里有5A级景区——云台山风景区<br>There is a 5A scenic spot - Yuntai Mountain scenic spot</li><li>完整答案<br>My hometown is in Jiaozuo, Henan Province. It is very famous in it’s Yuntai mountain wherein many tourist wants to visit and see it’s fascinating beauty. My hometown is very rich with so many natural resources just like crops from the mountain and it’s fresh and clean water from the river of the mountain.  </li></ol></li><li>有什么爱好<br>What hobbies do you have<ol><li>喜欢跑步，大学期间经常跑步，最多一年跑了500多公里<br>I like running. I often ran during college. I ran more than 500 kilometers a year at most</li><li>最近喜欢上了骑行<br>I like cycling recently</li><li>还喜欢和朋友一起打羽毛球<br>I also like playing badminton with my friends</li><li>完整答案<br>I like running, playing badminton, cycling and I like to play mobile games and I often do coding. I really like coding for it really helps my mental ability and it’s really interesting. </li></ol></li><li>你喜欢的书<br>Your favorite book<ol><li>我平时看的书都是和计算机相关的。<br>The books I usually read are related to computers.</li><li>完整答案<br>I like reading books about computer and I don’t have an interest to read some other kinds of book. Reading about computer is very useful and I can learn so many thing about it.  </li></ol></li><li>你能说一下你有什么优缺点吗？<br>Can you tell me your strengths and weaknesses?<ol><li>我的优点是很热爱计算机，对计算机的每一方面都很感兴趣，都想学一学相关的内容。<br>My advantage is that I love computers very much. I am very interested in every aspect of computers and want to learn relevant contents.</li><li>但是缺点就是对每一方面的了解不够深入。<br>But the disadvantage is that the understanding of each aspect is not deep enough.</li><li>完整答案<br>Well, I am good at designing websites and you can count on me when it talk about software. In the other hand, my understanding towards something is not that deep and I think I have to learn more and I am now starting to do a research about what I know to have a better understanding of everyting. </li></ol></li><li>介绍一下本科专业<br>Introduce undergraduate major<ol><li>我大学是学的大数据专业，但是自己对网页设计比较感兴趣，平时也是喜欢写一些教程类的文章分享出来，自己的个人博客也有很多人访问。<br>My major is big data, but I am interested in Web design. I also like to write some tutorial articles to share them. Many people visit my personal blog.</li></ol></li><li>个人介绍<br>Good afternoon, I am glad to be here for this interview.<br>First let me introduce myself.<br>My English name is Max, 24 yesrs old.<br>I come from Jiaozuo City, Henan Province.<br>I graduated from Nanyang Institute of Technology</li><li>参加研究生考试的原因<br>Reasons for taking postgraduate exams</li></ol><h2 id="英语自我介绍"><a href="#英语自我介绍" class="headerlink" title="英语自我介绍"></a>英语自我介绍</h2><p>Hi! How do you do? I’m Max.</p><p>Please call me nickname.</p><p>Please call me Matt.</p><p>Nice to meet you.</p><p>I don’t know how to say it in English.</p><p>I’m very glad to introduce myself to you here.</p><p>I’m Max.</p><p>I was born in shanghai.</p><p>I am a programmer.</p><p>I used to work for Google.</p><p>Sorry, I don’t know how to say it in English</p><p>Could you please say it again?</p><p>I’m the eldest child in my family.</p><p>My father is a docker. He is a fan of Yao Ming.</p><p>各位老师，大家早上好，我叫郭力玮，今年24岁了，毕业于河南省南阳理工学院。</p><p>你毕业以后做什么了？</p><p>在学校我就想到了要考研，所以毕业以后就一直准备，由于疫情的影响当时在家准备了很久，导致了一战成绩不是太好。第二次考研吸取经验教训，同时也找了一个在线编程教育的机构在里面当助教，赚的钱在外面找了一个考研自习室，安静的学习了半年，然后就走到了这里。</p>]]></content>
    
    
    <categories>
      
      <category>个人文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DeskSave - 桌面图标记录工具</title>
    <link href="/post/desk-save/"/>
    <url>/post/desk-save/</url>
    
    <content type="html"><![CDATA[<p>DeskSave是一款老牌的桌面图标记录工具，有时候会因为自己的误操作打乱桌面图标，如果你还是个强迫症患者，肯定还会再手动调整回去（我好像这样干过，而且我每隔一段时间会截屏记录一下图标的位置）</p><p>如果你拥有了这一款软件，就能完美解决这个问题。</p><p>使用 DeskSave，你可以把当前的桌面图标排列方式保存，以后可以直接恢复。</p><p>除此之外，还可以设置每隔一段时间自动保存当前桌面图标排列方式。</p><p><a href="https://image.glwsq.cn/software/DeskSave.zip">点击下载</a></p><p>只需要下载DeskSave，然后右键管理员方式运行就可以了。</p>]]></content>
    
    
    <categories>
      
      <category>推荐分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>软件推荐</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>为什么头发会越洗越油？</title>
    <link href="/post/f57fc629/"/>
    <url>/post/f57fc629/</url>
    
    <content type="html"><![CDATA[<p><img src="https://image.glwsq.cn/img/%E6%B4%97%E5%A4%B4%E9%A2%91%E7%8E%87-2022-03-03-10-13-06.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>转载</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>尚硅谷雷神SpringBoot2零基础入门springboot全套完整版（spring boot2）</title>
    <link href="/post/spring-boot-2/"/>
    <url>/post/spring-boot-2/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>最近需要学习一下spring boot，正在学习中</p><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV19K4y1L7MT">https://www.bilibili.com/video/BV19K4y1L7MT</a><br>上课笔记: <a href="https://www.yuque.com/atguigu/springboot">https://www.yuque.com/atguigu/springboot</a><br>源码地址：<a href="https://gitee.com/leifengyang/springboot2">https://gitee.com/leifengyang/springboot2</a><br>后台管理系统静态页：<a href="https://image.glwsq.cn/bilibili/admin.zip">https://image.glwsq.cn/bilibili/admin.zip</a></p></blockquote><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=1">01、基础入门-SpringBoot2课程介绍</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=2">02、基础入门-Spring生态圈</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=3">03、基础入门-SpringBoot的大时代背景</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=4">04、基础入门-SpringBoot官方文档架构</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=5">05、基础入门-SpringBoot-HelloWorld</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=6">06、基础入门-SpringBoot-依赖管理特性</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=7">07、基础入门-SpringBoot-自动配置特性</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=8">08、底层注解-@Configuration详解</a><ul><li>这里没听懂，云里雾里的，可能是因为没有学spring吧，回头学一下再来</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=9">09、底层注解-@Import导入组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=10">10、底层注解-@Conditional条件装配</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=11">11、底层注解-@ImportResource导入Spring配置文件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=12">12、底层注解-@ConfigurationProperties配置绑定</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=13">13、自动配置【源码分析】-自动包规则原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=14">14、自动配置【源码分析】-初始加载自动配置类</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=15">15、自动配置【源码分析】-自动配置流程</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=16">16、最佳实践-SpringBoot应用如何编写</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=17">17、最佳实践-Lombok简化开发</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=18">18、最佳实践-dev-tools</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=19">19、最佳实践-Spring Initailizr</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=20">20、配置文件-yaml的用法</a><ul><li>这节课讲的太好了，受益匪浅。</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=21">21、配置文件-自定义类绑定的配置提示</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=22">22、web场景-web开发简介</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=23">23、web场景-静态资源规则与定制化</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=24">24、web场景-welcome与favicon功能</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=25">25、web场景-【源码分析】-静态资源原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=26">26、请求处理-【源码分析】-Rest映射及源码解析</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=27">27、请求处理-【源码分析】-怎么改变默认的_method</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=28">28、请求处理-【源码分析】-请求映射原理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=29">29、请求处理-常用参数注解使用</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=30">30、请求处理-@RequestAttribute</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=31">31、请求处理-@MatrixVariable与UrlPathHelper</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=32">32、请求处理-【源码分析】-各种类型参数解析原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=33">33、请求处理-【源码分析】-Servlet API参数解析原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=34">34、请求处理-【源码分析】-Model、Map原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=35">35、请求处理-【源码分析】-自定义参数绑定原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=36">36、请求处理-【源码分析】-自定义Converter原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=37">37、响应处理-【源码分析】-ReturnValueHandler原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=38">38、响应处理-【源码分析】-HTTPMessageConverter原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=39">39、响应处理-【源码分析】-内容协商原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=40">40、响应处理-【源码分析】-基于请求参数的内容协商原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=41">41、响应处理-【源码分析】-自定义MessageConverter</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=42">42、响应处理-【源码分析】-浏览器与PostMan内容协商完全适配</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=43">43、视图解析-Thymeleaf初体验</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=44">44、web实验-后台管理系统基本功能</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=45">45、web实验-抽取公共页面</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=46">46、web实验-遍历数据与页面bug修改</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=47">47、视图解析-【源码分析】-视图解析器与视图</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=48">48、拦截器-登录检查与静态资源放行</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=49">49、拦截器-【源码分析】-拦截器的执行时机和原理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=50">50、文件上传-单文件与多文件上传的使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=51">51、文件上传-【源码流程】文件上传参数解析器</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=52">52、错误处理-SpringBoot默认错误处理机制</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=53">53、错误处理-【源码分析】底层组件功能分析</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=54">54、错误处理-【源码流程】异常处理流程</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=55">55、错误处理-【源码流程】几种异常处理原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=56">56、原生组件注入-原生注解与Spring方式注入</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=57">57、原生组件注入-【源码分析】DispatcherServlet注入原理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=58">58、嵌入式Servlet容器-【源码分析】切换web服务器与定制化</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=59">59、定制化原理-SpringBoot定制化组件的几种方式</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=60">60、数据访问-数据库场景的自动配置分析与整合测试</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=61">61、数据访问-自定义方式整合druid数据源</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=62">62、数据访问-druid数据源starter整合方式</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=63">63、数据访问-整合mybatis-配置版</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=64">64、数据访问-整合Mybatis-注解配置混合版</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=65">65、数据访问-整合MyBatisPlus操作数据库</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=66">66、数据访问-crud实验-数据列表展示【补录】</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=67">67、数据访问-crud实验-分页数据展示</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=68">68、数据访问-crud实验-删除用户完成</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=69">69、数据访问-准备阿里云redis环境</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=70">70、数据访问-redis操作与统计小实验</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=71">71、单元测试-Junit5简介</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=72">72、单元测试-常用测试注解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=73">73、单元测试-断言机制</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=74">74、单元测试-前置条件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=75">75、单元测试-嵌套测试</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=76">76、单元测试-参数化测试</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=77">77、指标监控-SpringBoot Actuator与Endpoint</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=78">78、指标监控-开启与禁用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=79">79、指标监控-定制Endpoint</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=80">80、指标监控-Boot Admin Server</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=81">81、高级特性-Profile环境切换</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=82">82、高级特性-配置加载优先级</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=83">83、高级特性-自定义starter细节</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=84">84、原理解析-SpringApplication创建初始化流程</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=85">85、原理解析-SpringBoot完整启动过程</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=86">86、原理解析-自定义事件监听组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV19K4y1L7MT?p=87">87、后会有期</a></li></ul><div class="note note-success">            <p>相关推荐：</p><ul><li><a href="/post/note-vue-element/">Vue后台管理系统项目实战/vue+element-ui/vue经典全套系统案例讲解</a></li><li><a href="/post/df99894b/">尚硅谷Vue2.0+Vue3.0全套教程丨vuejs从入门到精通</a></li><li><a href="/post/2ff98e51/">Docker最新超详细版教程通俗易懂</a></li><li><a href="/post/switch-node-version/">优雅的切换nodejs版本</a></li><li><a href="/post/vmware-linux/">如何在VMware中安装Linux</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>学习中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何发布自己的npm包</title>
    <link href="/post/public-npm-package/"/>
    <url>/post/public-npm-package/</url>
    
    <content type="html"><![CDATA[<p>经常用npm安装各种包，现在来试试自己发布一个吧。</p><span id="more"></span><h2 id="1-注册账号"><a href="#1-注册账号" class="headerlink" title="1. 注册账号"></a>1. 注册账号</h2><p><a href="https://www.npmjs.com/">https://www.npmjs.com/</a></p><h2 id="2-发送验证邮件"><a href="#2-发送验证邮件" class="headerlink" title="2. 发送验证邮件"></a>2. 发送验证邮件</h2><p><img src="https://image.glwsq.cn/img/%E5%A6%82%E4%BD%95%E5%8F%91%E5%B8%83%E8%87%AA%E5%B7%B1%E7%9A%84npm%E5%8C%85-2022-02-22-23-10-30.png"></p><p>一定要记得验证，要不会一直报错<br><img src="https://image.glwsq.cn/img/%E5%A6%82%E4%BD%95%E5%8F%91%E5%B8%83%E8%87%AA%E5%B7%B1%E7%9A%84npm%E5%8C%85-2022-02-22-23-14-07.png"></p><h2 id="3-切换镜像站"><a href="#3-切换镜像站" class="headerlink" title="3. 切换镜像站"></a>3. 切换镜像站</h2><p>一定要切换到官方镜像站</p><figure class="highlight arduino"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs arduino">npm config set registry https:<span class="hljs-comment">//registry.npmjs.org/</span><br></code></pre></td></tr></table></figure><h2 id="4-登录"><a href="#4-登录" class="headerlink" title="4. 登录"></a>4. 登录</h2><p>这里一定要切换到官方镜像才能登录成功</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> login<br></code></pre></td></tr></table></figure><h2 id="5-创建目录"><a href="#5-创建目录" class="headerlink" title="5. 创建目录"></a>5. 创建目录</h2><p>可以<code>npm init</code>一个目录，或者直接GitHub克隆一个。<br>然后再package.json文件中修改以下信息</p><p>package name：比较重要，会显示到npm仓库，不能和现有的名称重复<br>version: 版本号<br>license：开源协议</p><h2 id="5-发布"><a href="#5-发布" class="headerlink" title="5. 发布"></a>5. 发布</h2><p>进入包所在的目录</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> publish<br></code></pre></td></tr></table></figure><p>第一个包发布成功</p><p><img src="https://image.glwsq.cn/img/%E5%A6%82%E4%BD%95%E5%8F%91%E5%B8%83%E8%87%AA%E5%B7%B1%E7%9A%84npm%E5%8C%85-2022-02-22-23-16-17.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>哔哩哔哩学习记录</title>
    <link href="/post/bilibili-record/"/>
    <url>/post/bilibili-record/</url>
    
    <content type="html"><![CDATA[<!DOCTYPE html><html><head><meta charset="utf-8"><title>Redirecting...</title><link rel="canonical" href="https://www.glwsq.cn/bilibili-record/"><meta http-equiv="refresh" content="0; url=https://www.glwsq.cn/bilibili-record/"></head></html>]]></content>
    
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>内容聚合</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS flex布局练习小游戏-flexboxdefense</title>
    <link href="/post/flexboxdefense/"/>
    <url>/post/flexboxdefense/</url>
    
    <content type="html"><![CDATA[<p>游戏网址：<a href="http://www.flexboxdefense.com/">http://www.flexboxdefense.com/</a></p><h2 id="游戏介绍"><a href="#游戏介绍" class="headerlink" title="游戏介绍"></a>游戏介绍</h2><p>这是一款练习css flex布局的塔防小游戏，有12个关卡，可以学习jusfity-content, align-items, flex-direction, order, align-self相关用法，如果你也想学习的话可以试一试。 </p><p>游戏是纯英文的，建议边翻译边玩，还能顺带学一下英语。不要被英语吓到，因为英文虽然很多，但是都是重复的，反复介绍flex布局的用法。</p>]]></content>
    
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>CSS</tag>
      
      <tag>flex布局</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue后台管理系统项目实战/vue+element-ui/vue经典全套系统案例讲解</title>
    <link href="/post/note-vue-element/"/>
    <url>/post/note-vue-element/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>讲的太好了，而且老师说话很好听，适合刚学完vue来练手，正在学习中。。。</p><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV1j5411o7xH">https://www.bilibili.com/video/BV1j5411o7xH</a></p></blockquote><h2 id="后台管理系统"><a href="#后台管理系统" class="headerlink" title="后台管理系统"></a>后台管理系统</h2><p>包含商品管理 用户管理 订单等等信息。</p><p>欢迎预览我当前的写后台：<a href="http://api.glwsq.cn/">传送门</a></p><h3 id="技术点"><a href="#技术点" class="headerlink" title="技术点"></a>技术点</h3><p>  Vue + Vue-router + Vuex + Element-ui + Axios + 其他三方库</p><h3 id="项目准备"><a href="#项目准备" class="headerlink" title="项目准备"></a>项目准备</h3><ol><li>mysql </li><li>iconfont <a href="https://at.alicdn.com/t/font_2448847_4xsojqvt7qt.css">https://at.alicdn.com/t/font_2448847_4xsojqvt7qt.css</a></li></ol><h3 id="项目搭建"><a href="#项目搭建" class="headerlink" title="项目搭建"></a>项目搭建</h3><ol><li><code>vue create vue-ego</code></li><li>依赖：Vue 2, less, babel, router, vuex</li><li><code>npm i axios</code></li><li><code>vue add element</code> 按需导入，这里视频里讲的很好，按需全部导入，省了很多事，而且后续可以删除</li></ol><h3 id="项目初始化"><a href="#项目初始化" class="headerlink" title="项目初始化"></a>项目初始化</h3><ol><li>删除无用的组件 home.vue about.vue hello…</li><li>css 初始化</li><li>引入iconfont 图表导入</li></ol><h3 id="路由的配置"><a href="#路由的配置" class="headerlink" title="路由的配置"></a>路由的配置</h3><ol><li>页面布局配置 同级登录页面</li></ol><h3 id="后台服务"><a href="#后台服务" class="headerlink" title="后台服务"></a>后台服务</h3><ol><li>node.js 服务</li><li><code>npm i express</code></li><li>jwt（生成token）</li><li><code>npm i mysql</code></li></ol><h3 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h3><ol><li>后台安装 multer 模块   同时引入fs模块</li><li>router.js入口文件导入模块<br>const fs=require(‘fs’)<br>const multer=require(‘multer’)</li><li>上传图片</li></ol><h3 id="富文本编译器"><a href="#富文本编译器" class="headerlink" title="富文本编译器"></a>富文本编译器</h3><p>wangEditor <a href="https://www.wangeditor.com/doc/">https://www.wangeditor.com/doc/</a></p><h3 id="国际化"><a href="#国际化" class="headerlink" title="国际化"></a>国际化</h3><ol><li>使用：vuei18n <a href="https://kazupon.github.io/vue-i18n/zh/introduction.html">https://kazupon.github.io/vue-i18n/zh/introduction.html</a></li><li>安装<code>npm install vue-i18n@8.26.7</code> 如果跟着视频来，必须安装这个，要不会报错</li><li>引入<figure class="highlight js"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> VueI18n <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-i18n&#x27;</span><br>Vue.use(VueI18n)<br></code></pre></td></tr></table></figure></li></ol><h3 id="element-国际化"><a href="#element-国际化" class="headerlink" title="element 国际化"></a>element 国际化</h3><p>视频里的方法最后一步报错，参考了这个人的教程就可以了<br><a href="https://blog.csdn.net/songhsia/article/details/104800966">vue+element+vue-i18n@8.x 国际化中英文切换</a></p><p>安装</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm i wangeditor <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>引入使用</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-keyword">import</span> E <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;wangeditor&quot;</span><br><span class="hljs-keyword">const</span> editor = <span class="hljs-keyword">new</span> E(<span class="hljs-string">&quot;<span class="hljs-subst">#div1</span>&quot;</span>)<br>editor.create()<br></code></pre></td></tr></table></figure><p>常用配置</p><ol><li>清空内容<br><code>editor.txt.clear()</code></li><li>获取html<br><code>editor.txt.html()</code></li><li>配置菜单<ol><li>默认显示所有</li><li></li></ol></li></ol><h3 id="登录–路由拦截"><a href="#登录–路由拦截" class="headerlink" title="登录–路由拦截"></a>登录–路由拦截</h3><h3 id="Echarts使用"><a href="#Echarts使用" class="headerlink" title="Echarts使用"></a>Echarts使用</h3><p><a href="https://echarts.apache.org/handbook/zh/basics/import">https://echarts.apache.org/handbook/zh/basics/import</a></p><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=1">P1. 01 项目介绍</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=2">P2. 02 项目搭建-初始化</a><ul><li>项目初始化<ul><li>删除无用的组件</li><li>初始化css</li><li>引入iconfont</li></ul></li><li>安装了以下内容<ul><li>axios</li><li>element</li></ul></li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=3">P3. 03 首页-路由界面基础搭建</a><ul><li>左边导航栏已经实现了，用的element里面的navmenu</li><li>并且创建了大量的页面</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=4">P4. 04 首页-导航折叠</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=5">P5. 05 商品列表-静态布局</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=6">P6. 06 商品列表-动态数据</a><ul><li>实现后台接口 express + Mysql <a href="https://image.glwsq.cn/bilibili/Vue%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-ego.7z">sql文件</a></li><li>简单的展示数据</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=7">P7. 07 商品列表-分页实现</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=8">P8. 01 商品管理-搜索</a><ul><li>实现了商品的搜索，并且还前端模拟了分页</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=9">P9. 02 商品-页面添加</a><ul><li>新增了一个添加商品的页面</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=10">P10. 03 商品-弹框添加</a><ul><li>新增了一个添加商品的页面-dialog方法实现</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=11">P11. 04 商品-分页功能bug</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=12">P12. 05 类目选择</a><ul><li>实现静态页面</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=13">P13. 06 类目选择实现</a><ul><li>实现完整的动态数据获取</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=14">P14. 01 项目补充说明</a><ul><li>没实现功能，讲了一些基本的前后台知识</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=15">P15. 02 上传图片实现</a><ul><li>实现了上传图片的后台和前台</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=16">P16. 03 富文本编译器</a><ul><li>使用了wangEditor</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=17">P17. 04 商品添加-清空表单</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=18">P18. 05 删除商品</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=19">P19. 06 编辑商品</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=20">P20. 01 Vue-i8n国际化</a><ul><li>如果跟着视频来，必须这样安装<code>npm install vue-i18n@8.26.7</code>要不会报错</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=21">P21. 02 Element-国际化</a><ul><li>视频里的方法最后一步报错，参考了这个人的教程就可以了 <a href="https://blog.csdn.net/songhsia/article/details/104800966">vue+element+vue-i18n@8.x 国际化中英文切换</a></li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=22">P22. 03 登录布局</a><ul><li>实现了登录页面</li><li>我自己也做了很多优化，非常好看</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=23">P23. 04 登录-功能实现-数据持久化-vuex</a><ul><li>后台安装 jsonwebtoken <code>npm install jsonwebtoken</code></li><li>前台安装 jwt-decode 解析jsonwebtoken中的数据 <code>npm install jwt-decode</code></li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=24">P24. 05 Echarts使用</a><ul><li>安装：<code>npm install echarts</code></li><li>使用方式<ol><li>导入echarts在组件中使用</li><li>导入全局 挂载在原型上 全局使用 【推荐】</li><li>开发成vue插件</li></ol></li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=25">P25. 06 Mock.js模拟数据</a><ul><li>安装：<code>npm install mockjs</code></li><li>前端引用 import Mock from ‘mockjs’</li><li>语法 Mock.mock()</li></ul></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=26">P26. 01 规格参数列表获取</a><ul><li>创建页面</li><li>获取后台数据</li></ul></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=27">P27. 02 添加规格参数-动态表单</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=28">P28. 03 规格参数配置</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=29">P29. 01 Vue-pdf打印合同</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=30">P30. 02 Vue项目-下载图片资源</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1j5411o7xH?p=31">P31. 03 Vue项目-实现表格导出EXCEL表格</a></li></ul><div class="note note-success">            <p>相关推荐：</p><ul><li><a href="/post/note-vue-element/">Vue后台管理系统项目实战/vue+element-ui/vue经典全套系统案例讲解</a></li><li><a href="/post/df99894b/">尚硅谷Vue2.0+Vue3.0全套教程丨vuejs从入门到精通</a></li><li><a href="/post/2ff98e51/">Docker最新超详细版教程通俗易懂</a></li><li><a href="/post/switch-node-version/">优雅的切换nodejs版本</a></li><li><a href="/post/vmware-linux/">如何在VMware中安装Linux</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>vue</tag>
      
      <tag>学习中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker最新超详细版教程通俗易懂</title>
    <link href="/post/2ff98e51/"/>
    <url>/post/2ff98e51/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>讲的太好了，一天看了20多个视频，如果学Docker，推荐学习。</p><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=1">1、Docker学习大纲</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=2">2、聊聊Docker为什么会出现</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=3">3、聊聊Docker的历史</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=4">4、Docker能做什么</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=5">5、Docker中的名词概念</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=6">6、安装Docker</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=7">7、配置阿里云镜像加速</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=8">8、Run的流程和Docker原理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=9">9、镜像的基本命令</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=10">10、容器的基本命令</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=11">11、日志、元数据、进程的查看</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=12">12、进入容器的命令和拷贝命令</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=13">13、常用命令小结</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=14">14、作业一：部署Nginx</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=15">15、作业二：部署Tomcat</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=16">16、作业三：部署ES+Kibana</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=17">17、Portainer可视化面板安装</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=18">18、镜像原理之联合文件系统</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=19">19、镜像原理之分层理解</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=20">20、Commit镜像</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=21">21、容器数据卷使用</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=22">22、实战：MySQL同步数据</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=23">23、具名挂载和匿名挂载</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=24">24、数据卷之Dockerfile</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=25">25、数据卷容器</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=26">26、DockerFile介绍</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=27">27、DockerFile指令说明</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=28">28、实战：构建自己的centos</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=29">29、CMD和ENTRYPOINT的区别</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=30">30、实战：Dockerfile制作tomcat镜像</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=31">31、发布镜像到DockerHub</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=32">32、发布镜像到阿里云容器服务</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=33">33、Docker所有流程小结</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=34">34、Docker0网络详解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=35">35、容器互联–link</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=36">36、自定义网络</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=37">37、网络连通</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=38">38、Redis集群部署实战</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=39">39、SpringBoot微服务打包Docker镜像</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1og4y1q7M4?p=40">40、结语</a></li></ul><h2 id="学习笔记"><a href="#学习笔记" class="headerlink" title="学习笔记"></a>学习笔记</h2><blockquote><p>弱小和无知不是生存的障碍，傲慢才是。</p></blockquote><blockquote><p>看视频快速记录的笔记，格式可能不太好，但是每一行命令都是运行过的</p></blockquote><ol><li><p>系统内核版本查看</p><figure class="highlight ebnf"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">uname -r</span><br></code></pre></td></tr></table></figure></li><li><p>系统信息</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/etc/</span>os-release<br></code></pre></td></tr></table></figure></li><li><p>帮助文档<br><a href="https://docs.docker.com/engine/install/ubuntu/">https://docs.docker.com/engine/install/ubuntu/</a></p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 启动docker</span><br>systemctl start docker<br><span class="hljs-comment"># hello word</span><br>sudo docker run hello-world<br><span class="hljs-comment"># 运行镜像</span><br>sudo docker run -it ubuntu bash<br><span class="hljs-comment"># 查看镜像</span><br>sudo docker images<br></code></pre></td></tr></table></figure><p>每次输入命令都需要sudo很不方便，可以查看这个官方文档修改</p><p><a href="https://docs.docker.com/engine/install/linux-postinstall/">https://docs.docker.com/engine/install/linux-postinstall/</a></p><p>如果不想看，最简单的办法是执行下面的命令，作用是将当前登录的用户加入docker用户组，这样就不需要sudo了，然后记得注销用户重新登录一下。</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">sudo groupadd docker<br>sudo usermod -aG docker $USER<br></code></pre></td></tr></table></figure><p>镜像加速</p><ol><li><p>创建或修改 <code>/etc/docker/daemon.json</code> 文件，并写入以下内容：</p><p>直接用tee来快速创建文件，并且写入内容</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class="hljs-string">&#x27;EOF&#x27;</span><br>&#123;<br>   <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<br>       <span class="hljs-string">&quot;https://mirror.ccs.tencentyun.com&quot;</span><br>  ]<br>&#125;<br>EOF<br></code></pre></td></tr></table></figure><ol><li>重新启动 Docker 服务 。重启之前可以 <code>docker ps</code>看下自己起了哪些服务，别忘了重启</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl daemon-reload<br>service docker restart<br></code></pre></td></tr></table></figure><ol><li><code>docker info</code>查看是否生效<br> 在最下面有这两行即为成功</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs json">Registry Mirrors:<br> https:<span class="hljs-comment">//mirror.ccs.tencentyun.com</span><br></code></pre></td></tr></table></figure><ol><li>重启第 2 步中停掉的服务</li></ol><h2 id="Docker常用命令"><a href="#Docker常用命令" class="headerlink" title="Docker常用命令"></a>Docker常用命令</h2><p>帮助命令</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">docker <span class="hljs-keyword">version</span> <span class="hljs-comment"># 显示docker的版本信息</span><br>docker info    <span class="hljs-comment"># 显示docker的系统信息，镜像容器的数量</span><br>docker 命令 <span class="hljs-params">--help</span>  <span class="hljs-comment"># docker帮助命令</span><br></code></pre></td></tr></table></figure><p>镜像命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs powershell">docker images <span class="hljs-comment"># 查看所有镜像</span><br>docker search <span class="hljs-comment"># 搜索镜像</span><br>docker pull mysql:<span class="hljs-number">5.7</span> <span class="hljs-comment"># 下载拉取镜像</span><br>docker rmi <span class="hljs-operator">-f</span> id <span class="hljs-comment"># 删除镜像</span><br><span class="hljs-comment"># 批量删除全部</span><br>docker rmi <span class="hljs-operator">-f</span> <span class="hljs-variable">$</span>(docker images <span class="hljs-literal">-aq</span>)<br></code></pre></td></tr></table></figure><p>容器命令</p><p>有了镜像才可以创建容器</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker pull centos <span class="hljs-comment"># 下载容器</span><br>docker run [可选参数] image<br>--name=<span class="hljs-string">&quot;Name&quot;</span> 容器名字<br>-d 后台方式运行<br>-it 使用交互方式运行，进入容器查看内容<br>-p 指定容器的端口 -p <span class="hljs-number">8080</span>:<span class="hljs-number">8080</span> ip:主机端口:容器端口<br>-P 随机指定端口<br>docker ps <span class="hljs-comment"># 列出运行的容器</span><br>-a <span class="hljs-comment"># 列出当前和历史运行的容器</span><br>-n=? <span class="hljs-comment"># 列出最近创建的容器</span><br>-q <span class="hljs-comment"># 只显示容器的编号</span><br>docker rm 容器id<br>-f 强制删除<br><span class="hljs-comment"># 批量删除全部</span><br>docker rm -f $(docker ps -aq)<br>docker start 容器id <span class="hljs-comment"># 启动容器</span><br>docker restart 容器id <span class="hljs-comment"># 重启容器</span><br>docker stop 容器id <span class="hljs-comment"># 停止当前运行的容器</span><br>docker kill 容器id <span class="hljs-comment"># 强制停止当前容器</span><br><br><span class="hljs-keyword">exit</span> <span class="hljs-comment"># 直接停止容器退出</span><br>ctrl + P + Q <span class="hljs-comment"># 容器不停止退出</span><br></code></pre></td></tr></table></figure><p>常用的其他命令</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker <span class="hljs-built_in">run</span> -d centos <span class="hljs-comment"># 后台启动</span><br>docker logs -tf <span class="hljs-comment">--tail 10 容器id</span><br></code></pre></td></tr></table></figure><p>一直输出内容的脚本</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker run -d centos <span class="hljs-regexp">/bin/</span>sh -c <span class="hljs-string">&quot;while true;do echo hello; sleep 1;done&quot;</span><br></code></pre></td></tr></table></figure><p>查看容器中的进程信息</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker top 容器<span class="hljs-built_in">id</span><br></code></pre></td></tr></table></figure><p>查看镜像的元数据</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker inspect 容器<span class="hljs-built_in">id</span><br></code></pre></td></tr></table></figure><p>进入当前正在运行的容器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">docker <span class="hljs-built_in">exec</span> -it 容器<span class="hljs-built_in">id</span> /<span class="hljs-built_in">bin</span>/bash <span class="hljs-comment"># 会创建一个新的窗口</span><br>docker attach 容器<span class="hljs-built_in">id</span> <span class="hljs-comment"># 进入正在运行的</span><br></code></pre></td></tr></table></figure><p>从容器内拷贝文件到主机上</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> cp <span class="hljs-number">408</span>e<span class="hljs-number">026</span>ee<span class="hljs-number">14</span>e:/home/test.java ./<br></code></pre></td></tr></table></figure><p><img src="https://image.glwsq.cn/img/2018071915491757" alt="img"></p><p>docker 安装nginx</p><p><a href="https://registry.hub.docker.com/search?q=nginx">https://registry.hub.docker.com/search?q=nginx</a></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docker search nginx</span><br></code></pre></td></tr></table></figure><p>docker 安装 tomcat</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker <span class="hljs-built_in">run</span> -<span class="hljs-keyword">it</span> <span class="hljs-comment">--rm tomcat:9.0 # 用完就删 一般用来测试</span><br></code></pre></td></tr></table></figure><p>docker 安装es+kibana</p><p>es暴露的端口很多，耗内存</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs console">docker run -d --name elasticsearch02 -p 9200:9200 -p 9300:9300 -e &quot;discovery.type=single-node&quot; -e ES_JAVA_OPTS=&quot;-Xms64m -Xmx512m&quot; elasticsearch:7.6.2<br></code></pre></td></tr></table></figure><p>docker stats</p><h2 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h2><p>portainer</p><p>Docker图形化界面管理工具！提供一个后台面板让我们操作</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">docker run -d -p <span class="hljs-number">8088</span>:<span class="hljs-number">9000</span> --restart=always -v <span class="hljs-regexp">/var/</span>run<span class="hljs-regexp">/docker.sock:/</span>var<span class="hljs-regexp">/run/</span>docker.sock --privileged=<span class="hljs-keyword">true</span> portainer/portainer<br></code></pre></td></tr></table></figure><p>访问测试</p><p>Rancher</p><h2 id="提交镜像"><a href="#提交镜像" class="headerlink" title="提交镜像"></a>提交镜像</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> commit -a=<span class="hljs-string">&quot;happen&quot;</span> -m <span class="hljs-string">&quot;add webapps app&quot;</span> id tomcate<span class="hljs-number">02</span>:<span class="hljs-number">1</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="Docker-容器数据卷"><a href="#Docker-容器数据卷" class="headerlink" title="Docker 容器数据卷"></a>Docker 容器数据卷</h2><p>如果数据都在数据卷中，那么我们删除容器，数据就会丢失！需求：数据持久化</p><p>使用数据卷</p><p>方式一：使用命令来挂载</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker run -it -v 主机目录:容器内目录  -p 主机端口:容器内端口<br>docker run -it -v <span class="hljs-regexp">/home/u</span>buntu<span class="hljs-regexp">/test:/</span>home centos <span class="hljs-regexp">/bin/</span>bash<br></code></pre></td></tr></table></figure><h3 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker pull mysql:<span class="hljs-number">5.7</span><br>docker run -d -p <span class="hljs-number">3310</span>:<span class="hljs-number">3306</span> -v <span class="hljs-regexp">/home/u</span>buntu<span class="hljs-regexp">/mysql/</span>conf:<span class="hljs-regexp">/etc/my</span>sql<span class="hljs-regexp">/conf.d -v /</span>home<span class="hljs-regexp">/ubuntu/my</span>sql<span class="hljs-regexp">/data:/</span>var<span class="hljs-regexp">/lib/my</span>sql -e MYSQL_ROOT_PASSWORD=<span class="hljs-number">123456</span> --name mysql01 mysql:<span class="hljs-number">5.7</span><br></code></pre></td></tr></table></figure><p>具名挂载</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker <span class="hljs-built_in">run</span> -d -P <span class="hljs-comment">--name nginx03 -v name-nginx:/etc/nginx nginx</span><br></code></pre></td></tr></table></figure><p>匿名挂载</p><p>-v 容器路径</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">docker <span class="hljs-keyword">run</span><span class="bash"> -d -P --name nginx02 -v /etc/nginx nginx</span><br>docker <span class="hljs-keyword">volume</span><span class="bash"> --<span class="hljs-built_in">help</span></span><br>docker <span class="hljs-keyword">volume</span><span class="bash"> ls <span class="hljs-comment"># 查看所有卷</span></span><br><br></code></pre></td></tr></table></figure><p>ro/rw区别</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker <span class="hljs-built_in">run</span> -d -P <span class="hljs-comment">--name nginx03 -v name-nginx:/etc/nginx:ro nginx</span><br>docker <span class="hljs-built_in">run</span> -d -P <span class="hljs-comment">--name nginx03 -v name-nginx:/etc/nginx:rw nginx</span><br></code></pre></td></tr></table></figure><ul><li><p>ro readonly 只读，只能从外部改变，不能从内部改变</p></li><li><p>rw readwrite 可读可写</p></li></ul><h2 id="DockerFile"><a href="#DockerFile" class="headerlink" title="DockerFile"></a>DockerFile</h2><p>就是用来构建docker镜像的文件</p><p>通过这个脚本可以生成镜像，一个一个的命令，每个命令都是一层</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> centos<br><span class="hljs-keyword">VOLUME</span><span class="bash"> [<span class="hljs-string">&quot;volume01&quot;</span>, <span class="hljs-string">&quot;volume02&quot;</span>]</span><br><br><span class="hljs-keyword">CMD</span><span class="bash"> <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;-----end-----&quot;</span></span><br><span class="hljs-keyword">CMD</span><span class="bash"> /bin/bash</span><br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> build -f dockerfile<span class="hljs-number">1</span> -t happen/centos .<br></code></pre></td></tr></table></figure><p>数据卷容器</p><p>两个mysql同步数据</p><p>–volumes-from</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">docker run -d -p <span class="hljs-number">3310</span>:<span class="hljs-number">3306</span> -v <span class="hljs-regexp">/home/u</span>buntu<span class="hljs-regexp">/mysql/</span>conf:<span class="hljs-regexp">/etc/my</span>sql<span class="hljs-regexp">/conf.d -v /</span>home<span class="hljs-regexp">/ubuntu/my</span>sql<span class="hljs-regexp">/data:/</span>var<span class="hljs-regexp">/lib/my</span>sql -e MYSQL_ROOT_PASSWORD=<span class="hljs-number">123456</span> --name mysql01 mysql:<span class="hljs-number">5.7</span><br>docker run -d -p <span class="hljs-number">3311</span>:<span class="hljs-number">3306</span> --volumes-form mysql01 -e MYSQL_ROOT_PASSWORD=<span class="hljs-number">123456</span> --name mysql02 mysql:<span class="hljs-number">5.7</span><br><span class="hljs-comment"># 这个时候可以实现两个容器数据同步</span><br></code></pre></td></tr></table></figure><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript">docker <span class="hljs-built_in">run</span> -<span class="hljs-keyword">it</span> <span class="hljs-comment">--name docker01 happen/centos</span><br>docker <span class="hljs-built_in">run</span> -<span class="hljs-keyword">it</span> <span class="hljs-comment">--name docker02 --volumes-from docker01 happen/centos</span><br>docker <span class="hljs-built_in">run</span> -<span class="hljs-keyword">it</span> <span class="hljs-comment">--name docker03 happen/centos</span><br></code></pre></td></tr></table></figure><h2 id="Docker网络"><a href="#Docker网络" class="headerlink" title="Docker网络"></a>Docker网络</h2>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>学习中</tag>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>myindex</title>
    <link href="/post/1d713e4e/"/>
    <url>/post/1d713e4e/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="eb2b3234d6f3035a120b21f24dbaacab60f034c3e2b26ca4e7b18afd85d4c16e"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>个人文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>尚硅谷Nginx教程由浅入深（一套打通丨初学者也可掌握）</title>
    <link href="/post/BV1zJ411w7SV/"/>
    <url>/post/BV1zJ411w7SV/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>视频不是很新，用到的nginx版本是2017年的，我跟着学完了，在跟着安装的过程中一直报错，最后我用了最新的nginx并且写了一个笔记，如果需要的话可以点击查看：<a href="/post/note-nginx">Nginx学习笔记</a></p><p>笔记中的软件版本:</p><ol><li>Ubuntu Server 20.04 LTS 64bit</li><li>nginx-1.20.2</li><li>openjdk-17-jre-headless</li><li>apache-tomcat-10.0.16</li></ol><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV1zJ411w7SV">https://www.bilibili.com/video/BV1zJ411w7SV</a></p></blockquote><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=1">01-nginx课程介绍</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=2">02-nginx的简介</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=3">03-nginx相关概念（正向和反向代理）</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=4">04-nginx相关概念（负载均衡和动静分离）</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=5">05-nginx在linux系统安装</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=6">06-nginx常用的命令</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=7">07-nginx的配置文件</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=8">08-nginx配置实例（反向代理准备工作）</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=9">09-nginx配置实例（反向代理实例一）</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=10">10-nginx配置实例（反向代理实例二）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=11">11-nginx配置实例（负载均衡）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=12">12-nginx配置实例（动静分离准备工作）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=13">13-nginx配置实例（动静分离）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=14">14-nginx配置实例（高可用准备工作）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=15">15-nginx配置实例（高可用主备模式）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=16">16-nginx配置实例（高可用配置文件详解）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1zJ411w7SV?p=17">17-nginx的原理解析</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>Nginx</tag>
      
      <tag>学习中断</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx学习笔记</title>
    <link href="/post/note-nginx/"/>
    <url>/post/note-nginx/</url>
    
    <content type="html"><![CDATA[<p><img src=""></p><p>在学习nginx时记录的笔记。</p><p>所用的各种环境:</p><ol><li>Ubuntu Server 20.04 LTS 64bit</li><li>nginx-1.20.2</li><li>openjdk-17-jre-headless</li><li>apache-tomcat-10.0.16</li></ol><span id="more"></span><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a>正向代理</h3><p>可以加个代理服务器让你访问另一个服务器，例如通过<a href="http://www.abc.com/">http://www.abc.com</a>这个服务器正向代理 <a href="http://www.google.com/">http://www.google.com</a> 服务器，这样就能通过<a href="http://www.abc.com/">http://www.abc.com</a>访问谷歌了，对用户来说是能感知到有这个代理的。</p><h3 id="反向代理"><a href="#反向代理" class="headerlink" title="反向代理"></a>反向代理</h3><p>用户访问这个服务器，这个服务器会通过反向代理来自动调用其他服务器，用户感知不到其他服务器的存在。</p><h3 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h3><p>通过代理服务器，将请求均匀的分配到不同的服务器上。通过增加服务器可以解决大量请求的情况。</p><h3 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离"></a>动静分离</h3><p>为了加快网站的解析速度，可以把动态页面和静态页面由不同的服务器来解析，加快解析速度。降低原来单个服务器的压力。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="1-安装编译工具及库文件"><a href="#1-安装编译工具及库文件" class="headerlink" title="1. 安装编译工具及库文件"></a>1. 安装编译工具及库文件</h3><p>CentOS 用 yum</p><figure class="highlight nsis"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs nsis">sudo yum -y install make <span class="hljs-literal">zlib</span> <span class="hljs-literal">zlib</span>-devel gcc-c++ libtool  openssl openssl-devel<br></code></pre></td></tr></table></figure><p>Ubuntu用apt</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> apt -y install make zlib<span class="hljs-number">1</span>g zlib<span class="hljs-number">1</span>g-dev gcc g++ libtool  openssl libssl-dev libpcre<span class="hljs-number">3</span> libpcre<span class="hljs-number">3</span>-dev  <br></code></pre></td></tr></table></figure><details><summary>详细解释</summary><blockquote><p>上面的一行命令都包括了，可以不执行这里面的命令</p></blockquote><ol><li><p>PCRE库<br>PCRE库支持正则表达式。如果我们在配置文件nginx.conf中使用了正则表达式，那么在编译Nginx时就必须把PCRE库编译进Nginx，因为Nginx的HTTP模块需要靠它来解析正则表达式。另外，pcre-devel是使用PCRE做二次开发时所需要的开发库，包括头文件等，这也是编译Nginx所必须使用的。可以这样安装：<br><code>sudo apt-get install libpcre3 libpcre3-dev</code></p></li><li><p>zlib库<br>zlib库用于对HTTP包的内容做gzip格式的压缩，如果我们在nginx.conf中配置了gzip on，并指定对于某些类型（content-type）的HTTP响应使用gzip来进行压缩以减少网络传输量，则在编译时就必须把zlib编译进Nginx。zlib-devel是二次开发所需要的库。可以这样安装：<br><code>sudo apt-get install zlib1g-dev</code></p></li><li><p>OpenSSL库<br>如果服务器不只是要支持HTTP，还需要在更安全的SSL协议上传输HTTP，那么需要拥有OpenSSL。另外，如果我们想使用MD5、SHA1等散列函数，那么也需要安装它。可以这样安装：<br><code>sudo apt-get install openssl libssl-dev</code> </p></li></ol></details><h3 id="2-安装-PCRE"><a href="#2-安装-PCRE" class="headerlink" title="2. 安装 PCRE"></a>2. 安装 PCRE</h3><p>PCRE 作用是让 Nginx 支持 Rewrite 功能。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget http:<span class="hljs-regexp">//</span>downloads.sourceforge.net<span class="hljs-regexp">/project/</span>pcre<span class="hljs-regexp">/pcre/</span><span class="hljs-number">8.37</span>/pcre-<span class="hljs-number">8.37</span>.tar.gz<br>tar -zxvf pcre-<span class="hljs-number">8.37</span>.tar.gz<br>cd pcre-<span class="hljs-number">8.37</span><br>./configure<br>make<br>sudo make install<br></code></pre></td></tr></table></figure><p>查看pcre版本</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">pcre-<span class="hljs-built_in">config</span> <span class="hljs-comment">--version</span><br></code></pre></td></tr></table></figure><p>下载并解压命令</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//</span>nginx.org<span class="hljs-regexp">/download/</span>nginx-<span class="hljs-number">1.20</span>.<span class="hljs-number">2</span>.tar.gz<br>tar -zxvf nginx-<span class="hljs-number">1.20</span>.<span class="hljs-number">2</span>.tar.gz<br>cd nginx-<span class="hljs-number">1.20</span>.<span class="hljs-number">2</span><br>./configure<br>make<br>sudo make install<br></code></pre></td></tr></table></figure><p>安装成功位置:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/user/</span>local/nginx<br></code></pre></td></tr></table></figure><p>开始启动</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>sbin<br>sudo ./nginx<br></code></pre></td></tr></table></figure><p>查看启动是否成功</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">ps</span> -ef | <span class="hljs-keyword">grep</span> nginx<br></code></pre></td></tr></table></figure><p>可以在浏览器访问ip地址，会出现欢迎界面</p><p><img src="https://image.glwsq.cn/img/nginx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2022-02-13-20-57-13.png"></p><h2 id="nginx操作常用命令"><a href="#nginx操作常用命令" class="headerlink" title="nginx操作常用命令"></a>nginx操作常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用命令必须进入nginx的目录</span><br><span class="hljs-built_in">cd</span> /usr/<span class="hljs-built_in">local</span>/nginx/sbin<br><span class="hljs-comment"># 查看版本号</span><br>./nginx -v<br><span class="hljs-comment"># 启动nginx</span><br>sudo ./nginx<br><span class="hljs-comment"># 关闭nginx</span><br>sudo ./nginx -s stop<br><span class="hljs-comment"># 重新加载nginx 重新加载配置文件</span><br>sudo ./nginx -s reload<br></code></pre></td></tr></table></figure><h2 id="nginx-配置文件"><a href="#nginx-配置文件" class="headerlink" title="nginx 配置文件"></a>nginx 配置文件</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>conf/nginx.conf<br></code></pre></td></tr></table></figure><h3 id="第一部分：全局块"><a href="#第一部分：全局块" class="headerlink" title="第一部分：全局块"></a>第一部分：全局块</h3><p>主要会设置一些影响nginx服务器整体运行的配置指令，主要包括配置运行Nginx服务器的用户(组)、允许生成worker proccess 数，进程PID存放路径、日志存放路径类型以及配置文件的引入等。</p><h3 id="event块"><a href="#event块" class="headerlink" title="event块"></a>event块</h3><p>主要影响 Nginx 服务器与用户的网络链接<br>比如说：worker_connections 最大连接数</p><h3 id="http全局块"><a href="#http全局块" class="headerlink" title="http全局块"></a>http全局块</h3><p>配置最频繁的部分，代理、缓存、日志、超时时间、单连接请求上限<br>server 块 和虚拟主机有密切关系</p><h2 id="Nginx配置实例"><a href="#Nginx配置实例" class="headerlink" title="Nginx配置实例"></a>Nginx配置实例</h2><h3 id="反向代理-1"><a href="#反向代理-1" class="headerlink" title="反向代理"></a>反向代理</h3><p>首先准备一个tomcat服务器，需要java环境</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//</span>dlcdn.apache.org<span class="hljs-regexp">/tomcat/</span>tomcat-<span class="hljs-number">10</span><span class="hljs-regexp">/v10.0.16/</span>bin/apache-tomcat-<span class="hljs-number">10.0</span>.<span class="hljs-number">16</span>.tar.gz<br>tar -xvf apache-tomcat-<span class="hljs-number">10.0</span>.<span class="hljs-number">16</span>.tar.gz<br>cd apache-tomcat-<span class="hljs-number">10.0</span>.<span class="hljs-number">16</span><br>.<span class="hljs-regexp">/bin/</span>startup.sh<br>tail -f .<span class="hljs-regexp">/logs/</span>catalina.out<br></code></pre></td></tr></table></figure><p>添加配置</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>  <span class="hljs-attribute">listen</span>  <span class="hljs-number">80</span>;<br>  <span class="hljs-attribute">server_name</span> localhost;<br><br>  <span class="hljs-attribute">location</span> / &#123;<br>    <span class="hljs-attribute">proxy_pass</span> http://127.0.0.1:8080; <span class="hljs-comment"># 反向代理到8080端口</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="反向代理实例2"><a href="#反向代理实例2" class="headerlink" title="反向代理实例2"></a>反向代理实例2</h3><p>访问 <a href="http://127.0.0.1:9001/deu/">http://127.0.0.1:9001/deu/</a> 直接跳转到127.0.0.1:8080<br>访问 <a href="http://127.0.0.1:9001/vod/">http://127.0.0.1:9001/vod/</a> 直接跳转到127.0.0.1:8081</p><p>准备工作<br>准备两个tomcat 服务器，然后随便在webapp中放一个能区分出来的文件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>  <span class="hljs-attribute">listen</span>  <span class="hljs-number">9001</span>;<br>  <span class="hljs-attribute">server_name</span> localhost;<br><br>  <span class="hljs-attribute">location</span> <span class="hljs-regexp">~ /edu/</span> &#123;<br>    <span class="hljs-attribute">proxy_pass</span> http://localhost:8080;<br>  &#125;<br>  <br>  <span class="hljs-attribute">location</span> <span class="hljs-regexp">~ /vod/</span> &#123;<br>    <span class="hljs-attribute">proxy_pass</span> http://localhost:8081;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="配置nginx-支持ssl"><a href="#配置nginx-支持ssl" class="headerlink" title="配置nginx 支持ssl"></a>配置nginx 支持ssl</h2><p>首先nginx的源文件目录，然后执行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configure --prefix=/usr/<span class="hljs-built_in">local</span>/nginx --with-http_ssl_module<br>make<br>cp ./objs/nginx /usr/<span class="hljs-built_in">local</span>/nginx/sbin/<br></code></pre></td></tr></table></figure><p>下载ssl证书<br>我用的腾讯云 <a href="https://console.cloud.tencent.com/ssl">https://console.cloud.tencent.com/ssl</a><br>下载证书，选择nginx的<br>找到</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">api<span class="hljs-selector-class">.glwsq</span><span class="hljs-selector-class">.cn</span><span class="hljs-selector-class">.key</span><br>api<span class="hljs-selector-class">.glwsq</span><span class="hljs-selector-class">.cn_bundle</span>.crt<br></code></pre></td></tr></table></figure><p>上传到<code>/usr/local/nginx/ssl</code>目录下，这个随意</p><p>ssl配置如下</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs nginx"> <span class="hljs-section">server</span> &#123;<br>     <span class="hljs-attribute">listen</span> <span class="hljs-number">443</span> ssl;<br>     <span class="hljs-attribute">server_name</span>  localhost;<br><br>     <span class="hljs-attribute">ssl_certificate</span>     /usr/local/nginx/ssl/api.glwsq.cn_bundle.crt;<br>     <span class="hljs-attribute">ssl_certificate_key</span>  /usr/local/nginx/ssl/api.glwsq.cn.key;<br><br>     <span class="hljs-attribute">ssl_session_cache</span>    shared:SSL:<span class="hljs-number">1m</span>;<br>     <span class="hljs-attribute">ssl_session_timeout</span>  <span class="hljs-number">5m</span>;<br><br>     <span class="hljs-comment">#ssl_ciphers  HIGH:!aNULL:!MD5;</span><br>     <span class="hljs-comment">#ssl_prefer_server_ciphers  on;</span><br><br>     <span class="hljs-attribute">location</span> / &#123;<br>         <span class="hljs-attribute">index</span>  index.html index.htm;<br>   &#125;<br> <br>&#125;<br><br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>Nginx</tag>
      
      <tag>Ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>短而美第9期 - linux使用screen来后台运行程序</title>
    <link href="/post/3c6df2a7/"/>
    <url>/post/3c6df2a7/</url>
    
    <content type="html"><![CDATA[<h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><ol><li><p>开启一个screen并进入</p><figure class="highlight dos"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs dos">screen -S myscreen<br></code></pre></td></tr></table></figure><p>现在就打开了一个新的窗口了，可以进行任何操作</p></li><li><p>将screen放入后台<br>使用快捷键<code>Ctrl + A + D</code></p></li><li><p>查看后台运行的screen</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">screen -ls<br></code></pre></td></tr></table></figure></li><li><p>再次打开screen</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">screen -r myscreen<br></code></pre></td></tr></table></figure><blockquote><p>其后可以通过指定窗口名打开特定窗口，默认打开上一个使用的窗口</p></blockquote></li></ol><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># CentOS</span><br>yum install screen<br><span class="hljs-comment"># Ubuntu</span><br>apt install screen<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>短而美</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>linux</tag>
      
      <tag>screen</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Canvas小白入门到实战(飞机大战)</title>
    <link href="/post/2ee27b16/"/>
    <url>/post/2ee27b16/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>讲的很不错，但是发现不需要学习这一门技术了，就暂且搁置了，如果有空闲时间我会继续学完。</p><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV1AJ41167V8">https://www.bilibili.com/video/BV1AJ41167V8</a></p></blockquote><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=1">Canvas系列课程1-初识Canvas</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=2">Canvas系列课程2-一个简单的模板</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=3">Canvas系列课程3-一个简单的例子</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=4">Canvas系列课程4-清除矩形</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=5">Canvas系列课程5-绘制路径</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=6">Canvas系列课程6-绘制两个三角形</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=7">Canvas系列课程7-绘制圆形</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=8">Canvas系列课程8-循环建圆</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=9">Canvas系列课程9-画笑脸</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=10">Canvas系列课程10-线性渐变</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=11">Canvas系列课程11-径向渐变</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=12">Canvas系列课程12-绘制图片</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=13">Canvas系列课程13-绘制文字阴影</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=14">Canvas系列课程14-DrawImage</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=15">Canvas系列课程15-制作房产证</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=16">Canvas系列课程16-Clip</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=17">Canvas系列课程17-涂鸦</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=18">Canvas系列课程18-刮刮卡</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=19">Canvas系列课程19-图像组合</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=20">Canvas系列课程20-矩形直线运动</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=21">Canvas系列课程21-请求关键帧运动</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=22">Canvas系列课程22-圆形碰撞反弹</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=23">Canvas系列课程23-水平全景滚动</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=24">Canvas系列课程24-save&amp;restore</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=25">Canvas系列课程25-垂直全景移动</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=26">Canvas系列课程26-矩形碰撞检测</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=27">Canvas系列课程27-圆形碰撞检测</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=28">Canvas系列课程28-贪吃蛇思路</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=29">Canvas系列课程29-贪吃蛇之画头</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=30">Canvas系列课程30-绘制蛇头蛇身</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=31">Canvas系列课程31-移动蛇头蛇身</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=32">Canvas系列课程32-投放和吃食物</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=33">Canvas系列课程33-游戏结束</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=34">Canvas系列课程34-打飞机背景及音乐</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=35">Canvas系列课程35-背景移动</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=36">Canvas系列课程36-主角出场</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=37">Canvas系列课程37-让飞机动起来</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=38">Canvas系列课程38-画子弹</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=39">Canvas系列课程39-让子弹飞</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=40">Canvas系列课程40-创建敌机</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=41">Canvas系列课程41-敌机降落</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1AJ41167V8?p=42">Canvas系列课程42-结束打飞机</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>学习中断</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关闭VScode回车键自动代码补全，避免换行和补全之间冲突</title>
    <link href="/post/2a7d0aeb/"/>
    <url>/post/2a7d0aeb/</url>
    
    <content type="html"><![CDATA[<p>这个功能真的烦，我就想换行，一不小心就补全代码了</p><p>也可以不改变，如果想换行的时候，直接<code>ctrl + enter</code></p><p><img src="https://image.glwsq.cn/img/%E5%85%B3%E9%97%ADVScode%E5%9B%9E%E8%BD%A6%E9%94%AE%E8%87%AA%E5%8A%A8%E4%BB%A3%E7%A0%81%E8%A1%A5%E5%85%A8%EF%BC%8C%E9%81%BF%E5%85%8D%E6%8D%A2%E8%A1%8C%E5%92%8C%E8%A1%A5%E5%85%A8%E4%B9%8B%E9%97%B4%E5%86%B2%E7%AA%81-2022-02-10-15-13-33.png"></p>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>vscode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作完成</tag>
      
      <tag>vscode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>js读取csv数据，并用Echarts展示</title>
    <link href="/post/js-echarts-csv/"/>
    <url>/post/js-echarts-csv/</url>
    
    <content type="html"><![CDATA[<p>用d3js读取包含中文的csv数据，然后用Echarts将数据可视化显示。</p><span id="more"></span><p>遇到的问题，高版本的d3js会报错，目前没有解决，用我提供的cdn就不会出错了</p><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p><img src="https://image.glwsq.cn/img/%E8%AF%BB%E5%8F%96csv%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%B9%B6%E7%94%A8Echarts%E5%B1%95%E7%A4%BA-2022-02-10-15-16-51.png"></p><h2 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h2><p>data.csv内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><pre><code class="hljs csv">月份,手机销量,电脑销量<br>1月,23,234<br>2月,231,323<br>3月,323,343<br>4月,343,123<br>5月,123,234<br>6月,234,231<br>7月,234,323<br>8月,43,343<br>9月,234,234<br>10月,123,43<br>11月,654,96<br>12月,565,345<br></code></pre></td></tr></table></figure><p>html内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>折线图的绘制<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/echarts/5.2.2/echarts.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://d3js.org/d3.v3.min.js&quot;</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;main&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;height: 600px;width:900px;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript"></span><br><span class="javascript">  <span class="hljs-keyword">var</span> nameset=[];<span class="hljs-comment">//数组初始化</span></span><br><span class="javascript">  <span class="hljs-keyword">var</span> numset1=[];</span><br><span class="javascript">  <span class="hljs-keyword">var</span> numset2=[];</span><br><span class="javascript">  <span class="hljs-comment">//获取csv对象</span></span><br><span class="javascript">  <span class="hljs-keyword">let</span> csv = d3.dsv(<span class="hljs-string">&quot;,&quot;</span>, <span class="hljs-string">&quot;text/csv;charset=gb2312&quot;</span>); <span class="hljs-comment">// 逗号分割，设置编码，这样就可以正常显示中文了</span></span><br><span class="javascript">  <span class="hljs-comment">// 获取数据</span></span><br><span class="javascript">  csv(<span class="hljs-string">&quot;data.csv&quot;</span>,<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">error,csvdata</span>)</span>&#123;</span><br><span class="javascript">    <span class="hljs-keyword">if</span>(error)&#123;</span><br><span class="javascript">      <span class="hljs-built_in">console</span>.log(error);</span><br><span class="javascript">    &#125;<span class="hljs-keyword">else</span>&#123;</span><br><span class="javascript">      <span class="hljs-built_in">console</span>.log(csvdata)</span><br><span class="javascript">      <span class="hljs-keyword">for</span>( <span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>; i&lt;csvdata.length; i++ )&#123;</span><br><span class="javascript">        nameset.push(csvdata[i][<span class="hljs-string">&#x27;月份&#x27;</span>]);           <span class="hljs-comment">//对象转数组</span></span><br><span class="javascript">        numset1.push(<span class="hljs-built_in">parseFloat</span>(csvdata[i][<span class="hljs-string">&#x27;手机销量&#x27;</span>]));</span><br><span class="javascript">        numset2.push(<span class="hljs-built_in">parseFloat</span>(csvdata[i][<span class="hljs-string">&#x27;电脑销量&#x27;</span>]));</span><br><span class="javascript">      &#125;</span><br><span class="javascript"></span><br><span class="javascript">      <span class="hljs-keyword">var</span> myChart = echarts.init(<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;main&quot;</span>));</span><br><span class="javascript"></span><br><span class="javascript">      <span class="hljs-keyword">var</span> option = &#123;</span><br><span class="javascript">        <span class="hljs-attr">legend</span>: &#123;&#125;, <span class="hljs-comment">// 在头部显示每个折线的名称和颜色</span></span><br><span class="javascript">        <span class="hljs-attr">xAxis</span>: [</span><br><span class="javascript">          &#123;</span><br><span class="javascript">            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;category&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">data</span>: nameset,</span><br><span class="javascript">            <span class="hljs-attr">axisPointer</span>: &#123;</span><br><span class="javascript">              <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;shadow&#x27;</span></span><br><span class="javascript">            &#125;</span><br><span class="javascript">          &#125;</span><br><span class="javascript">        ],</span><br><span class="javascript">        <span class="hljs-attr">yAxis</span>: [</span><br><span class="javascript">          &#123;</span><br><span class="javascript">            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;value&#x27;</span>,</span><br><span class="javascript">          &#125;</span><br><span class="javascript">        ],</span><br><span class="javascript">        <span class="hljs-attr">series</span>: [</span><br><span class="javascript">          &#123;</span><br><span class="javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;手机销量&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;line&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">data</span>: numset1,</span><br><span class="javascript">          &#125;,</span><br><span class="javascript">          &#123;</span><br><span class="javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;电脑销量&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;line&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">data</span>: numset2,</span><br><span class="javascript">          &#125;</span><br><span class="javascript">        ]</span><br><span class="javascript">      &#125;;</span><br><span class="javascript"></span><br><span class="javascript">      myChart.setOption(option);</span><br><span class="javascript">    &#125;</span><br><span class="javascript">  &#125;);</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>Echarts</tag>
      
      <tag>js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows电脑开启自带的远程桌面</title>
    <link href="/post/64f41e3c/"/>
    <url>/post/64f41e3c/</url>
    
    <content type="html"><![CDATA[<p>适用环境：</p><ol><li>家里有两台电脑，一台性能比较高，但是笨重，另一台轻便，可以愉快的用轻便的电脑控制笨重的玩，在一个WiFi下感觉不到延迟。</li><li>如果会配置内网穿透，可以在世界各地的任何电脑上控制你家里的电脑。</li></ol><span id="more"></span><p>虽然有很多软件可以代替，但是Windows原生的体验会更好。</p><p><strong>如果你的电脑不是家庭版本，是专业版或者其他更高级的的就不需要看了，本身电脑就自带。</strong></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>直接下载安装就好</p><p><a href="https://image.glwsq.cn/software/Windows%E7%94%B5%E8%84%91%E5%BC%80%E5%90%AF%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5-RDPW_installer-Black.exe">Windows电脑开启远程桌面连接-RDPW</a></p><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>如果电脑更新系统了，需要更新一下才能继续使用，打开软件的安装位置，默认位置: <code>C:\Program Files\RDP Wrapper</code></p><p>右键用管理员权限打开update.bat进行更新</p><p>此过程需要连接GitHub，如果连接不到GitHub更新失败了，看这篇文章<a href="/post/github-uu">用UU加速器免费加速GitHub</a></p><p>如果提示无法写入INI文件，则需要关闭当前的远程桌面服务，然后再次尝试更新<br><img src="https://image.glwsq.cn/img/Windows%E7%94%B5%E8%84%91%E5%BC%80%E5%90%AF%E8%87%AA%E5%B8%A6%E7%9A%84%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2-2022-02-10-08-59-10.png"></p>]]></content>
    
    
    <categories>
      
      <category>电脑使用技巧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何用GitHub钩子自动部署</title>
    <link href="/post/c015ee18/"/>
    <url>/post/c015ee18/</url>
    
    <content type="html"><![CDATA[<p>可以解决的问题，当GitHub仓库更新的时候，可以通知你的服务器执行shell脚本pull代码。</p><p>例如：我有一个GitHub仓库，里面有一个html网页，已经把仓库clone到服务器上了，任何人都可以访问这个网页，现在我修改GitHub的中html的内容以后，服务器会自动pull代码，这样就不用每次手动进入服务器更新了。</p><p><img src="https://image.glwsq.cn/img/%E5%A6%82%E4%BD%95%E7%94%A8GitHub%E9%92%A9%E5%AD%90%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2-2022-02-09-20-15-44.png"></p><h2 id="webhook工具安装"><a href="#webhook工具安装" class="headerlink" title="webhook工具安装"></a>webhook工具安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">sudo apt-get install webhook<br></code></pre></td></tr></table></figure><h2 id="生成-ssh-key-添加GitHub"><a href="#生成-ssh-key-添加GitHub" class="headerlink" title="生成 ssh key 添加GitHub"></a>生成 ssh key 添加GitHub</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">ssh-keygen</span><br></code></pre></td></tr></table></figure><p>一路回车，生成后可通过<code>cat ~/.ssh/id_rsa.pub</code>命令查看，最后将key加入github即可</p><p>详细添加过程: <a href="/post/github-clone-ssh/">短而美第3期 - GitHub Clone切换为ssh方式</a></p><h2 id="部署脚本编写"><a href="#部署脚本编写" class="headerlink" title="部署脚本编写"></a>部署脚本编写</h2><p>可以参考官方的文档：<a href="https://github.com/adnanh/webhook/blob/master/docs/Hook-Definition.md">https://github.com/adnanh/webhook/blob/master/docs/Hook-Definition.md</a></p><h3 id="自动pull"><a href="#自动pull" class="headerlink" title="自动pull"></a>自动pull</h3><p>适用条件，服务器存放有一个git仓库，每次仓库更新时，自动pull</p><p>编写一个用来pull的shell脚本，方便webhook调用</p><p><code>/home/ubuntu/webhook/pull.sh</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-meta">#!/bin/sh</span><br>git pull<br></code></pre></td></tr></table></figure><p>给这个文件执行命令的权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod a+x pull.sh<br></code></pre></td></tr></table></figure><p>编写一个配置文件<code>hooks.json</code></p><p>web和blog是两个git目录，现在就可以自动更新仓库了</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs json">[<br>  &#123;<br>    <span class="hljs-attr">&quot;id&quot;</span>: <span class="hljs-string">&quot;deploy-web&quot;</span>,<br>    <span class="hljs-attr">&quot;execute-command&quot;</span>: <span class="hljs-string">&quot;/home/ubuntu/webhook/pull.sh&quot;</span>,<br>    <span class="hljs-attr">&quot;command-working-directory&quot;</span>: <span class="hljs-string">&quot;/home/ubuntu/www/website/web&quot;</span><br>  &#125;,<br>    &#123;<br>    <span class="hljs-attr">&quot;id&quot;</span>: <span class="hljs-string">&quot;deploy-blog&quot;</span>,<br>    <span class="hljs-attr">&quot;execute-command&quot;</span>: <span class="hljs-string">&quot;/home/ubuntu/webhook/pull.sh&quot;</span>,<br>    <span class="hljs-attr">&quot;command-working-directory&quot;</span>: <span class="hljs-string">&quot;/home/ubuntu/www/website/blog&quot;</span><br>  &#125;<br>]<br></code></pre></td></tr></table></figure><ul><li>id 用来区分多个命令</li><li>execute-command 执行的脚本，上面写的pull.sh脚本</li><li>command-working-directory 执行pull.sh脚本的运行目录，也就是git仓库的目录，这样才能执行git pull</li></ul><h3 id="测试执行"><a href="#测试执行" class="headerlink" title="测试执行"></a>测试执行</h3><p>前台运行的方法，可以方便测试</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">webhook -hooks <span class="hljs-regexp">/home/u</span>buntu<span class="hljs-regexp">/webhook/</span>hooks.json -verbose<br></code></pre></td></tr></table></figure><p>执行结果</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk">[webhook] <span class="hljs-number">2022</span><span class="hljs-regexp">/02/</span><span class="hljs-number">12</span> <span class="hljs-number">16</span>:<span class="hljs-number">23</span>:<span class="hljs-number">17</span> version <span class="hljs-number">2.6</span>.<span class="hljs-number">9</span> starting<br>[webhook] <span class="hljs-number">2022</span><span class="hljs-regexp">/02/</span><span class="hljs-number">12</span> <span class="hljs-number">16</span>:<span class="hljs-number">23</span>:<span class="hljs-number">17</span> setting up os signal watcher<br>[webhook] <span class="hljs-number">2022</span><span class="hljs-regexp">/02/</span><span class="hljs-number">12</span> <span class="hljs-number">16</span>:<span class="hljs-number">23</span>:<span class="hljs-number">17</span> attempting to load hooks from <span class="hljs-regexp">/home/u</span>buntu<span class="hljs-regexp">/webhook/</span>hooks.json<br>[webhook] <span class="hljs-number">2022</span><span class="hljs-regexp">/02/</span><span class="hljs-number">12</span> <span class="hljs-number">16</span>:<span class="hljs-number">23</span>:<span class="hljs-number">17</span> found <span class="hljs-number">2</span> hook(s) <span class="hljs-keyword">in</span> file<br>[webhook] <span class="hljs-number">2022</span><span class="hljs-regexp">/02/</span><span class="hljs-number">12</span> <span class="hljs-number">16</span>:<span class="hljs-number">23</span>:<span class="hljs-number">17</span>   loaded: deploy-web<br>[webhook] <span class="hljs-number">2022</span><span class="hljs-regexp">/02/</span><span class="hljs-number">12</span> <span class="hljs-number">16</span>:<span class="hljs-number">23</span>:<span class="hljs-number">17</span>   loaded: deploy-blog<br>[webhook] <span class="hljs-number">2022</span><span class="hljs-regexp">/02/</span><span class="hljs-number">12</span> <span class="hljs-number">16</span>:<span class="hljs-number">23</span>:<span class="hljs-number">17</span> serving hooks on http:<span class="hljs-regexp">//</span><span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:<span class="hljs-number">9000</span><span class="hljs-regexp">/hooks/</span>&#123;id&#125;<br>[webhook] <span class="hljs-number">2022</span><span class="hljs-regexp">/02/</span><span class="hljs-number">12</span> <span class="hljs-number">16</span>:<span class="hljs-number">23</span>:<span class="hljs-number">17</span> os signal watcher ready<br></code></pre></td></tr></table></figure><p>这个时候访问服务器的9000端口，并加上id就可以更新代码了</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>服务器ip:<span class="hljs-number">9000</span><span class="hljs-regexp">/hooks/</span>deploy-web<br>http:<span class="hljs-regexp">//</span>服务器ip:<span class="hljs-number">9000</span><span class="hljs-regexp">/hooks/</span>deploy-blog<br></code></pre></td></tr></table></figure><h3 id="后台部署"><a href="#后台部署" class="headerlink" title="后台部署"></a>后台部署</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">nohup webhook -hooks <span class="hljs-regexp">/home/u</span>buntu<span class="hljs-regexp">/webhook/</span>hooks.json -verbose &amp;<br></code></pre></td></tr></table></figure><p>然后将 http://服务器ip:9000/hooks/deploy-web 填到你的 GitHub 网站对应项目页面 Settings → Webhooks 中即可</p><p><img src="https://image.glwsq.cn/img/%E5%A6%82%E4%BD%95%E7%94%A8GitHub%E9%92%A9%E5%AD%90%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2-2022-02-12-20-37-54.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux安装golang</title>
    <link href="/post/e2af2758/"/>
    <url>/post/e2af2758/</url>
    
    <content type="html"><![CDATA[<p>如果想学习go语言，可以通过这个教程快速在Linux上安装最新版。</p><span id="more"></span><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><blockquote><p>如果要其他安装包，可以查看: <a href="https://studygolang.com/dl">https://studygolang.com/dl</a></p></blockquote><p>下载并解压命令</p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">wget https://studygolang.com/dl/golang/go1.17.7.linux-amd64.tar.gz<br>tar -zxvf go1.17.7.linux-amd64.tar.gz<br></code></pre></td></tr></table></figure><p>将解压后的文件夹，放到自己平常的安装包位置，并设置0777权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo cp -rf go /usr/local<br>cd /usr/local<br>sudo chmod -R 0777 go<br></code></pre></td></tr></table></figure><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p>go语言的环境变量配置，需要两个值：</p><ol><li>GOROOT是系统上安装Go软件包的位置</li><li>GOPATH是工作目录的位置</li></ol><p>创建GOPATH工作目录gohome，我选择创建在/home/ubuntu目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir gohome<br>sudo chmod -R 0777 gohome<br></code></pre></td></tr></table></figure><p>修改<code>~/.bashrc</code>文件夹下的环境变量，在末尾添加以下内容。同时也在GOPATH目录下创建src和bin目录。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">GOROOT</span>=/usr/local/go #GOROOT是系统上安装Go软件包的位置。<br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">GOPATH</span>=/home/hadoop/gohome #gohome是工作目录的位置。<br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">PATH</span>=<span class="hljs-variable">$GOPATH</span>/bin:$GOROOT/bin:$PATH<br></code></pre></td></tr></table></figure><p>使用以下命令使环境变量生效，并可以查看环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">source ~/.bashrc<br>export | grep GO<br></code></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>查看版本号，如果没报错就安装成功了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">go version<br></code></pre></td></tr></table></figure><p>编写一个hello world</p><p>在GOPATH目录下创建hello目录，用于存放go的第一个程序。<br>在hello目录下，创建hello.go文件，内容如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs go"><span class="hljs-keyword">package</span> main<br><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;fmt&quot;</span><br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span> &#123;<br>    fmt.Printf(<span class="hljs-string">&quot;Hello, World\n&quot;</span>)<br>&#125;<br><br></code></pre></td></tr></table></figure><p>运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">go run hello.go<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信公众号markdown编辑器</title>
    <link href="/post/7853fb/"/>
    <url>/post/7853fb/</url>
    
    <content type="html"><![CDATA[<p>个人很喜欢用markdown写文章，博客本身用hexo部署，同时又想无缝的发布到微信公共号上，尝试过很多种方法，终于找到了一个非常完美的解决办法。</p><span id="more"></span><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><p>直接使用这个编辑器即可，推荐使用网页版或者浏览器插件</p><blockquote><p>主页地址：<a href="https://product.mdnice.com/">https://product.mdnice.com/</a><br>md编辑器地址：<a href="https://editor.mdnice.com/">https://editor.mdnice.com/</a></p></blockquote><h2 id="优点介绍"><a href="#优点介绍" class="headerlink" title="优点介绍"></a>优点介绍</h2><h3 id="丰富的主题系统"><a href="#丰富的主题系统" class="headerlink" title="丰富的主题系统"></a>丰富的主题系统</h3><p>编辑器里面有相当多的主题，总有一款适合你，如果不适合，可以自己修改css，打造一款非常适合自己的主题。</p><blockquote><p>主题地址: <a href="https://product.mdnice.com/themes/">https://product.mdnice.com/themes/</a></p></blockquote><p><img src="https://image.glwsq.cn/img/markdown%E5%BF%AB%E9%80%9F%E8%BD%AC%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0-2022-02-07-21-32-03.png"></p><p><img src="https://image.glwsq.cn/img/markdown%E5%BF%AB%E9%80%9F%E8%BD%AC%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0-2022-02-07-21-32-19.png"></p><h3 id="公共号后台无缝衔接"><a href="#公共号后台无缝衔接" class="headerlink" title="公共号后台无缝衔接"></a>公共号后台无缝衔接</h3><p>可以使用Markdown Nice 浏览器插件，直接和微信公共号的编辑器结合。在微信中可直接编辑，无需切换页面复制粘贴。</p><blockquote><p>具体教程:<a href="https://product.mdnice.com/article/user/extension/">https://product.mdnice.com/article/user/extension/</a></p></blockquote><p><img src="https://image.glwsq.cn/img/markdown%E5%BF%AB%E9%80%9F%E8%BD%AC%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E6%96%87%E7%AB%A0-2022-02-07-21-32-38.png"></p><hr><p>欢迎关注我的微信公众号:<br><img max-width="50px" width="200px" src="https://image.glwsq.cn/img/202202052349959.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>推荐分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>markdown</tag>
      
      <tag>微信公众号</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mdnice主题样式</title>
    <link href="/post/6daf16c9/"/>
    <url>/post/6daf16c9/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0e8fc8b4168e904711a9dadc4c04a5627a4466465a32b78d317fecb6a9b599e3"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>个人文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>webpack5指南</title>
    <link href="/post/d0759478/"/>
    <url>/post/d0759478/</url>
    
    <content type="html"><![CDATA[<p>官方教程写的相当详细，在整个指南中，使用 diff 块，来展示对目录、文件和代码所做的修改。我也发现了用 diff 块来描述代码的更新很清晰明确，在以后写文章的过程中也会频繁运用。</p><span id="more"></span><blockquote><p>文档地址: <a href="https://webpack.docschina.org/guides/getting-started/">https://webpack.docschina.org/guides/getting-started/</a></p></blockquote><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> 起步</li><li><input checked="" disabled="" type="checkbox"> 管理资源</li><li><input checked="" disabled="" type="checkbox"> 管理输出</li><li><input checked="" disabled="" type="checkbox"> 开发环境</li><li><input disabled="" type="checkbox"> 代码分离</li><li><input disabled="" type="checkbox"> 缓存</li><li><input disabled="" type="checkbox"> 创建 library</li><li><input disabled="" type="checkbox"> 环境变量</li><li><input disabled="" type="checkbox"> 构建性能</li><li><input disabled="" type="checkbox"> 内容安全策略</li><li><input disabled="" type="checkbox"> 开发 - Vagrant</li><li><input disabled="" type="checkbox"> 依赖管理</li><li><input disabled="" type="checkbox"> 安装</li><li><input disabled="" type="checkbox"> 模块热替换</li><li><input disabled="" type="checkbox"> Tree Shaking</li><li><input disabled="" type="checkbox"> 生产环境</li><li><input disabled="" type="checkbox"> 懒加载</li><li><input disabled="" type="checkbox"> ECMAScript 模块</li><li><input disabled="" type="checkbox"> Shimming 预置依赖</li><li><input disabled="" type="checkbox"> TypeScript</li><li><input disabled="" type="checkbox"> Web Workers</li><li><input disabled="" type="checkbox"> 渐进式网络应用程序</li><li><input disabled="" type="checkbox"> 公共路径</li><li><input disabled="" type="checkbox"> 集成</li><li><input disabled="" type="checkbox"> 资源模块</li><li><input disabled="" type="checkbox"> entry 高级用法</li><li><input disabled="" type="checkbox"> Package exports</li></ul><h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><figure class="highlight js"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></div></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>)<br><span class="hljs-keyword">const</span> HtmlWebpackPlugin = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;html-webpack-plugin&#x27;</span>)<br><span class="hljs-keyword">const</span> &#123; CleanWebpackPlugin &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;clean-webpack-plugin&#x27;</span>);<br><br><span class="hljs-built_in">module</span>.exports = &#123;<br>  <span class="hljs-attr">entry</span>: &#123;<br>    <span class="hljs-attr">app</span>: <span class="hljs-string">&#x27;./src/index.js&#x27;</span>,<br>    <span class="hljs-attr">print</span>: <span class="hljs-string">&#x27;./src/print.js&#x27;</span><br>  &#125;,<br>  <span class="hljs-attr">output</span>: &#123;<br>    <span class="hljs-attr">filename</span>: <span class="hljs-string">&#x27;[name].bundle.js&#x27;</span>,<br>    <span class="hljs-attr">path</span>: path.resolve(__dirname, <span class="hljs-string">&#x27;dist&#x27;</span>),<br>    <span class="hljs-attr">publicPath</span>: <span class="hljs-string">&#x27;/&#x27;</span>,<br>  &#125;,<br>  <span class="hljs-attr">devtool</span>: <span class="hljs-string">&#x27;inline-source-map&#x27;</span>, <span class="hljs-comment">// 加上这个报错会很清晰 https://www.webpackjs.com/guides/development/#%E4%BD%BF%E7%94%A8-source-map</span><br>  <span class="hljs-attr">devServer</span>: &#123;<br>    <span class="hljs-attr">static</span>: &#123;<br>      <span class="hljs-attr">directory</span>: path.join(__dirname, <span class="hljs-string">&#x27;dist&#x27;</span>),<br>    &#125;<br>  &#125;,<br>  <span class="hljs-attr">plugins</span>: [<br>    <span class="hljs-keyword">new</span> CleanWebpackPlugin(), <span class="hljs-comment">// 清理dist文件</span><br>    <span class="hljs-keyword">new</span> HtmlWebpackPlugin(&#123; <span class="hljs-comment">// 用于自动生成HTML页面</span><br>      <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;自动生成HTML页面&#x27;</span>,<br>      <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;public/index.html&#x27;</span><br>    &#125;)<br>  ],<br>  <span class="hljs-attr">module</span>: &#123;<br>    <span class="hljs-attr">rules</span>: [<br>      &#123;<br>        <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.css$/</span>,<br>        use: [<br>          <span class="hljs-string">&#x27;style-loader&#x27;</span>,<br>          <span class="hljs-string">&#x27;css-loader&#x27;</span><br>        ]<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.(png|svg|jpg|gif)/</span>,<br>        use: [<br>          <span class="hljs-string">&#x27;file-loader&#x27;</span><br>        ]<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.(csv|tsv)/</span>,<br>        use: [<br>          <span class="hljs-string">&#x27;csv-loader&#x27;</span><br>        ]<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.xml/</span>,<br>        use: [<br>          <span class="hljs-string">&#x27;xml-loader&#x27;</span><br>        ]<br>      &#125;<br>    ]<br>  &#125;,<br>  <span class="hljs-attr">mode</span>: <span class="hljs-string">&#x27;development&#x27;</span> <span class="hljs-comment">// production|development</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>官方文档</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>koa-parameter数据格式校验</title>
    <link href="/post/140dc37/"/>
    <url>/post/140dc37/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.npmjs.com/package/koa-parameter">https://www.npmjs.com/package/koa-parameter</a></p>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>官方文档</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>码农翻身</title>
    <link href="/post/d98560e0/"/>
    <url>/post/d98560e0/</url>
    
    <content type="html"><![CDATA[<p>很不错的学习了解计算机相关技术的一本书，通过一个个生动的故事，来讲述计算机的前世今生。让你深刻理解“人间一天，CPU一年”看似荒诞但是又切合实际的故事。</p><span id="more"></span><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><h3 id="第1章-计算机的世界你不懂"><a href="#第1章-计算机的世界你不懂" class="headerlink" title="第1章   计算机的世界你不懂"></a>第1章   计算机的世界你不懂</h3><ul><li><input disabled="" type="checkbox"> 我是一个线程   1<ul><li><input disabled="" type="checkbox"> 初生牛犊   1</li><li><input disabled="" type="checkbox"> 渐入佳境   4</li><li><input disabled="" type="checkbox"> 虎口脱险   5</li><li><input disabled="" type="checkbox"> 江湖再见   8</li></ul></li><li><input disabled="" type="checkbox"> TCP/IP之大明内阁   9</li><li><input disabled="" type="checkbox"> TCP/IP之大明邮差   12</li><li><input disabled="" type="checkbox"> CPU阿甘   17<ul><li><input disabled="" type="checkbox"> 启动   17</li><li><input disabled="" type="checkbox"> 运行   18</li><li><input disabled="" type="checkbox"> 新装备：缓存   19</li><li><input disabled="" type="checkbox"> 自我提升：流水线   20</li></ul></li><li><input checked="" disabled="" type="checkbox"> 我是一个进程   21<ul><li><input checked="" disabled="" type="checkbox"> 批处理系统   22</li><li><input checked="" disabled="" type="checkbox"> 多道程序   22</li><li><input checked="" disabled="" type="checkbox"> 地址重定位   24</li><li><input checked="" disabled="" type="checkbox"> 分时系统   26</li><li><input checked="" disabled="" type="checkbox"> 分块装入内存   27</li><li><input checked="" disabled="" type="checkbox"> 虚拟内存：分页   28</li><li><input checked="" disabled="" type="checkbox"> 分段+分页   30</li><li><input checked="" disabled="" type="checkbox"> 程序的装载   31</li><li><input checked="" disabled="" type="checkbox"> 线程   35</li></ul></li><li><input checked="" disabled="" type="checkbox"> 我是一块硬盘   36<ul><li><input checked="" disabled="" type="checkbox"> 内部结构   37</li><li><input checked="" disabled="" type="checkbox"> 文件   38</li><li><input checked="" disabled="" type="checkbox"> 文件的存放   39</li><li><input checked="" disabled="" type="checkbox"> 管理空闲块   44</li><li><input checked="" disabled="" type="checkbox"> 文件系统   45</li></ul></li><li><input checked="" disabled="" type="checkbox"> 我是一个键盘   46<ul><li><input checked="" disabled="" type="checkbox"> 二等公民   46<details><summary>笔记</summary><p>很明显， CPU 和内存是一等公民，这对好朋友占据着二环内最核心 最金贵的土地，居高临下对外发号施令，从各处“抢劫”二进制数据到自己的地界来。</p><p>真他的都被归类到二等公民，居住在五环以外，统称为输入/输出（I/O）设备。</p><p>有些设备居无定所，通过 USB 临时接入计算机，待个三五天就走，是典型的“北漂”。</p><p>对了，我必须说明一下，硬盘的地位有点特殊，虽然 也是一个 I/O 设备，但是存储着所有的程序和数据，包括操作系统老大！</p><p>虽然经常被 CPU 和内存嘲笑，但硬盘应该属于 1.5 等公民，住在三环以里。</p></details></li><li><input checked="" disabled="" type="checkbox"> 总线和端口   47</li><li><input checked="" disabled="" type="checkbox"> 轮询（程序式I/O）   48</li><li><input checked="" disabled="" type="checkbox"> 中断   49</li><li><input checked="" disabled="" type="checkbox"> DMA   50</li></ul></li><li><input checked="" disabled="" type="checkbox"> 数据库的奇妙之旅   51<ul><li><input checked="" disabled="" type="checkbox"> 无纸化办公   51</li><li><input checked="" disabled="" type="checkbox"> 数据的冗余和不一致   52</li><li><input checked="" disabled="" type="checkbox"> 李氏查询   52<details><summary>笔记</summary><p>所有计算机的问题都可以通过增加一个中间层来解决。如果不行，那就再套一层</p></details></li><li><input checked="" disabled="" type="checkbox"> 并发访问   54</li><li><input checked="" disabled="" type="checkbox"> 原子性问题   56</li><li><input checked="" disabled="" type="checkbox"> 安全   58</li></ul></li><li><input checked="" disabled="" type="checkbox"> 搞清楚Socket   59</li><li><input disabled="" type="checkbox"> 从1加到100：一道简单的数学题挑战一下你的大脑   64<ul><li><input disabled="" type="checkbox"> CPU和内存   64</li><li><input disabled="" type="checkbox"> 从1加到100   65</li><li><input disabled="" type="checkbox"> 热身   65</li><li><input disabled="" type="checkbox"> 正式出发   65</li></ul></li><li><input disabled="" type="checkbox"> 一个翻译家族的发家史   68<ul><li><input disabled="" type="checkbox"> 机器语言   68</li><li><input disabled="" type="checkbox"> 汇编语言   69</li><li><input disabled="" type="checkbox"> 高级语言   70</li></ul></li><li><input disabled="" type="checkbox"> 编程世界的那把锁   74<ul><li><input disabled="" type="checkbox"> 共享变量惹的祸   74</li><li><input disabled="" type="checkbox"> 争抢吧，线程   75</li><li><input disabled="" type="checkbox"> 改进   76</li><li><input disabled="" type="checkbox"> 信号量   77</li></ul></li><li><input disabled="" type="checkbox"> 绕不开的加法器   81</li><li><input disabled="" type="checkbox"> 递归那点事儿   85<h3 id="第2章-Java帝国"><a href="#第2章-Java帝国" class="headerlink" title="第2章   Java帝国"></a>第2章   Java帝国</h3></li><li><input disabled="" type="checkbox"> Java：一个帝国的诞生   91</li><li><input disabled="" type="checkbox"> C语言帝国的统治   91</li><li><input disabled="" type="checkbox"> 反抗   92</li><li><input disabled="" type="checkbox"> 一鸣惊人   93</li><li><input disabled="" type="checkbox"> 开拓疆土   93</li><li><input disabled="" type="checkbox"> 帝国的诞生   94</li><li><input disabled="" type="checkbox"> 我是一个Java Class   96</li><li><input disabled="" type="checkbox"> 陌生警察   96</li><li><input disabled="" type="checkbox"> 刺探信息   97</li><li><input disabled="" type="checkbox"> 初识虚拟机   98</li><li><input disabled="" type="checkbox"> 快乐假期   102</li><li><input disabled="" type="checkbox"> 真相大白   103</li><li><input disabled="" type="checkbox"> 持久化：Java帝国反击战   104</li><li><input disabled="" type="checkbox"> 断电的威胁   104</li><li><input disabled="" type="checkbox"> 数据库联合酋长国   105</li><li><input disabled="" type="checkbox"> 表面风光的EJB   106</li><li><input disabled="" type="checkbox"> 轻量级O/R Mapping框架   106</li><li><input disabled="" type="checkbox"> 帝国的反击   107</li><li><input disabled="" type="checkbox"> JDBC的诞生   108</li><li><input disabled="" type="checkbox"> 谈判   108</li><li><input disabled="" type="checkbox"> 统一接口   110</li><li><input disabled="" type="checkbox"> 面向接口编程   111</li><li><input disabled="" type="checkbox"> 简单工厂   112</li><li><input disabled="" type="checkbox"> 数据驱动   114</li><li><input disabled="" type="checkbox"> 工厂方法   115</li><li><input disabled="" type="checkbox"> Java帝国之宫廷内斗   119</li><li><input disabled="" type="checkbox"> JDBC大臣   119</li><li><input disabled="" type="checkbox"> 密谋   120</li><li><input disabled="" type="checkbox"> 两阶段提交   121</li><li><input disabled="" type="checkbox"> JTA   123</li><li><input disabled="" type="checkbox"> 塞翁失马，焉知非福   124</li><li><input disabled="" type="checkbox"> 基本可用   125</li><li><input disabled="" type="checkbox"> 走漏风声   127</li><li><input disabled="" type="checkbox"> 宫廷激辩   128</li><li><input disabled="" type="checkbox"> JSP：一个装配工的没落   131</li><li><input disabled="" type="checkbox"> 黑暗岁月   131</li><li><input disabled="" type="checkbox"> 服务器端动态页面   132</li><li><input disabled="" type="checkbox"> 标签库   134</li><li><input disabled="" type="checkbox"> 模板引擎   134</li><li><input disabled="" type="checkbox"> 草根搅局   135</li><li><input disabled="" type="checkbox"> Java 帝国之消息队列   137</li><li><input disabled="" type="checkbox"> 张家村的历史   137</li><li><input disabled="" type="checkbox"> 拆分   138</li><li><input disabled="" type="checkbox"> 新问题   139</li><li><input disabled="" type="checkbox"> 消息队列   139</li><li><input disabled="" type="checkbox"> 互不兼容的MQ   140</li><li><input disabled="" type="checkbox"> 消息队列接口设计   141</li><li><input disabled="" type="checkbox"> 配置和代码的分离   143</li><li><input disabled="" type="checkbox"> 再次抽象   144</li><li><input disabled="" type="checkbox"> Java帝国之动态代理   147</li><li><input disabled="" type="checkbox"> 深夜奏对   147</li><li><input disabled="" type="checkbox"> 明察暗访   149</li><li><input disabled="" type="checkbox"> Java 动态代理   150</li><li><input disabled="" type="checkbox"> Java注解是怎么成功上位的   153</li><li><input disabled="" type="checkbox"> XML大臣   153</li><li><input disabled="" type="checkbox"> 安翰林献计   154</li><li><input disabled="" type="checkbox"> 早朝争斗   157</li><li><input disabled="" type="checkbox"> Java帝国之泛型   159</li><li><input disabled="" type="checkbox"> 新王登基   159</li><li><input disabled="" type="checkbox"> C++使者   159</li><li><input disabled="" type="checkbox"> 泛型实现   162</li><li><input disabled="" type="checkbox"> 泛型方法   163</li><li><input disabled="" type="checkbox"> 泛型和继承   164</li><li><input disabled="" type="checkbox"> 一个著名的日志系统是怎么设计出来的   166</li><li><input disabled="" type="checkbox"> 前言   166</li><li><input disabled="" type="checkbox"> 张家村   167</li><li><input disabled="" type="checkbox"> 小张的设计   167</li><li><input disabled="" type="checkbox"> 正交性   170</li><li><input disabled="" type="checkbox"> Log4j   171</li><li><input disabled="" type="checkbox"> 尾声   171</li><li><input disabled="" type="checkbox"> 序列化：一个老家伙的咸鱼翻身   172</li><li><input disabled="" type="checkbox"> 寒冬的蛰伏   172</li><li><input disabled="" type="checkbox"> XML和JSON的挑战   173</li><li><input disabled="" type="checkbox"> 新协议的崛起   175</li><li><input disabled="" type="checkbox"> 加锁还是不加锁，这是一个问题   176</li><li><input disabled="" type="checkbox"> 互斥锁   176</li><li><input disabled="" type="checkbox"> 要不要加锁   177</li><li><input disabled="" type="checkbox"> CAS的扩展   179</li><li><input disabled="" type="checkbox"> Spring 的本质   182</li><li><input disabled="" type="checkbox"> 问题来源   183</li><li><input disabled="" type="checkbox"> 设计模式：模板方法   184</li><li><input disabled="" type="checkbox"> 设计模式：装饰者   186</li><li><input disabled="" type="checkbox"> AOP   187</li><li><input disabled="" type="checkbox"> 实现AOP   188</li><li><input disabled="" type="checkbox"> 对象的创建   189</li><li><input disabled="" type="checkbox"> IoC与DI   191<h3 id="第3章-浪潮之巅的Web"><a href="#第3章-浪潮之巅的Web" class="headerlink" title="第3章   浪潮之巅的Web"></a>第3章   浪潮之巅的Web</h3></li><li><input disabled="" type="checkbox"> Web的起源   192</li><li><input disabled="" type="checkbox"> 两个程序的爱情故事   195</li><li><input disabled="" type="checkbox"> 好感   195</li><li><input disabled="" type="checkbox"> 分离   196</li><li><input disabled="" type="checkbox"> 网络   197</li><li><input disabled="" type="checkbox"> Web   198</li><li><input disabled="" type="checkbox"> 一个故事讲完HTTPS   199</li><li><input disabled="" type="checkbox"> 总有一种被偷窥的感觉   199</li><li><input disabled="" type="checkbox"> RSA：非对称加密   200</li><li><input disabled="" type="checkbox"> 非对称加密+对称加密   202</li><li><input disabled="" type="checkbox"> 中间人劫持   202</li><li><input disabled="" type="checkbox"> 你到底是谁   203</li><li><input disabled="" type="checkbox"> HTTPS    206</li><li><input disabled="" type="checkbox"> 机房夜话   207</li><li><input disabled="" type="checkbox"> 第一夜   207</li><li><input disabled="" type="checkbox"> 第二夜   209</li><li><input disabled="" type="checkbox"> 第三夜   211</li><li><input disabled="" type="checkbox"> 从密码到token，一个有关授权的故事   215</li><li><input disabled="" type="checkbox"> 我把密码献给你   215</li><li><input disabled="" type="checkbox"> token   216</li><li><input disabled="" type="checkbox"> 授权码 + token   218</li><li><input disabled="" type="checkbox"> 后记   220</li><li><input disabled="" type="checkbox"> 后端风云   220</li><li><input disabled="" type="checkbox"> 数据库老头儿   220</li><li><input disabled="" type="checkbox"> 危机   221</li><li><input disabled="" type="checkbox"> 党委扩大会议   221</li><li><input disabled="" type="checkbox"> 分家   223</li><li><input disabled="" type="checkbox"> Redis   224</li><li><input disabled="" type="checkbox"> 余数算法   227</li><li><input disabled="" type="checkbox"> 一致性Hash算法   229</li><li><input disabled="" type="checkbox"> Hash槽 （Hash Slot）   233</li><li><input disabled="" type="checkbox"> 故障转移   235</li><li><input disabled="" type="checkbox"> 高可用的Nginx   237</li><li><input disabled="" type="checkbox"> 高可用的Tomcat   238</li><li><input disabled="" type="checkbox"> 数据库的读写分离   240</li><li><input disabled="" type="checkbox"> 我是一个函数   243</li><li><input disabled="" type="checkbox"> 从SOA到微服务   246</li><li><input disabled="" type="checkbox"> 什么是框架   249</li><li><input disabled="" type="checkbox"> HTTP Server：一个差生的逆袭   252</li><li><input disabled="" type="checkbox"> HTTP Server 1.0   252</li><li><input disabled="" type="checkbox"> HTTP Server 2.0：多进程   253</li><li><input disabled="" type="checkbox"> HTTP Server 3.0：select模型   254</li><li><input disabled="" type="checkbox"> HTTP Server 4.0：epoll模型   255<h3 id="第4章-代码管理那些事儿"><a href="#第4章-代码管理那些事儿" class="headerlink" title="第4章   代码管理那些事儿"></a>第4章   代码管理那些事儿</h3></li><li><input disabled="" type="checkbox"> 版本管理简史   258</li><li><input disabled="" type="checkbox"> “人肉” 版本管理   258</li><li><input disabled="" type="checkbox"> 锁定文件：避免互相覆盖   259</li><li><input disabled="" type="checkbox"> 允许冲突：退一步海阔天空   260</li><li><input disabled="" type="checkbox"> 分支：多版本并行   261</li><li><input disabled="" type="checkbox"> 分布式管理：给程序员放权   262</li><li><input disabled="" type="checkbox"> 程序员也爱社交   264</li><li><input disabled="" type="checkbox"> Build的演进之路   265</li><li><input disabled="" type="checkbox"> 手工Build的烦恼   265</li><li><input disabled="" type="checkbox"> 自动化Build   267</li><li><input disabled="" type="checkbox"> Java 与 XML   268</li><li><input disabled="" type="checkbox"> 消除重复   270</li><li><input disabled="" type="checkbox"> 烂代码传奇   275</li><li><input disabled="" type="checkbox"> 敏捷下的单元测试   277</li><li><input disabled="" type="checkbox"> 敏捷运动   277</li><li><input disabled="" type="checkbox"> 困惑   278</li><li><input disabled="" type="checkbox"> 讨论   279</li><li><input disabled="" type="checkbox"> 一年以后   280</li><li><input disabled="" type="checkbox"> 再见！Bug   281<h3 id="第5章-我的编程语言简史"><a href="#第5章-我的编程语言简史" class="headerlink" title="第5章   我的编程语言简史"></a>第5章   我的编程语言简史</h3></li><li><input disabled="" type="checkbox"> JavaScript ：一个草根的逆袭   284</li><li><input disabled="" type="checkbox"> 出世   284</li><li><input disabled="" type="checkbox"> 成长   286</li><li><input disabled="" type="checkbox"> 第一桶金   288</li><li><input disabled="" type="checkbox"> 发明JSON   289</li><li><input disabled="" type="checkbox"> 人生巅峰   291</li><li><input disabled="" type="checkbox"> Node.js：我只需要一个店小二   292</li><li><input disabled="" type="checkbox"> C老头儿和Java小子的硬盘夜话   295</li><li><input disabled="" type="checkbox"> 编程语言的“爱恨情仇”   300</li><li><input disabled="" type="checkbox"> 让人怀疑的C 语言   300</li><li><input disabled="" type="checkbox"> 被忘却的 VB &amp; Visual FoxPro   301</li><li><input disabled="" type="checkbox"> 蹂躏我的C++   302</li><li><input disabled="" type="checkbox"> 赖以谋生的Java    303</li><li><input disabled="" type="checkbox"> 优雅的Ruby    304</li><li><input disabled="" type="checkbox"> 命令式编程 VS 声明式编程   306</li><li><input disabled="" type="checkbox"> 一则小故事   306</li><li><input disabled="" type="checkbox"> 命令式编程   306</li><li><input disabled="" type="checkbox"> 声明式编程   307<h3 id="第6章-老司机的精进"><a href="#第6章-老司机的精进" class="headerlink" title="第6章   老司机的精进"></a>第6章   老司机的精进</h3></li><li><input disabled="" type="checkbox"> 凡事必先骑上虎背，和性格内向的程序员聊几句   309</li><li><input disabled="" type="checkbox"> 码农需要知道的“潜规则”   311</li><li><input disabled="" type="checkbox"> 上帝的规矩：局部性原理   311</li><li><input disabled="" type="checkbox"> 坐飞机的怎么和坐驴车的打交道：缓存   311</li><li><input disabled="" type="checkbox"> 抛弃细节：抽象   312</li><li><input disabled="" type="checkbox"> 我只想和邻居打交道：分层   312</li><li><input disabled="" type="checkbox"> 我怕等不及：异步调用   313</li><li><input disabled="" type="checkbox"> 大事化小，小事化了：分而治之   314</li><li><input disabled="" type="checkbox"> 15年编程生涯，一名架构师的总结   314</li><li><input disabled="" type="checkbox"> 好奇心   315</li><li><input disabled="" type="checkbox"> 养成计算机的思维方式   315</li><li><input disabled="" type="checkbox"> 扎实基础，融会贯通   317</li><li><input disabled="" type="checkbox"> 要透彻地理解一门技术的本质   317</li><li><input disabled="" type="checkbox"> 能写漂亮的代码   318</li><li><input disabled="" type="checkbox"> 抽象的能力   319</li><li><input disabled="" type="checkbox"> 技术领导力   319</li><li><input disabled="" type="checkbox"> 对自己狠一点，开始写作吧   320</li><li><input disabled="" type="checkbox"> 学习编程的四兄弟   322</li><li><input disabled="" type="checkbox"> 摇摆不定的老大   322</li><li><input disabled="" type="checkbox"> “小仓鼠”老二   322</li><li><input disabled="" type="checkbox"> 不看书的老三   323</li><li><input disabled="" type="checkbox"> 半途而废的老四   323</li></ul><h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><p>分时系统   26<br>分时系统一经推出就大获成功，尤真对于那些速度超慢的人类而言，他们开着电脑一边昕歌、一边上网 一边聊 QQ ，很是自在，理所当然地认为这些程序就是同时运行的。</p><p>虚拟内存：分页   28<br>我们可以给每个程序都提供一个超级大的空间，如 4GB ，只不过这个空间是虚拟的，程序中的指令使用的就是这些虚拟地址，然后我的MMU把它们映射到真实的物理内存地址上，那些程序却浑然不觉。哈哈，实在太棒了。</p><p>程序的装载   31<br>操作系统老大和 CPU 阿甘“狼狈为奸”， 成功地营造了一个假象，让我们以为每个程序都可以使用 4GB 的巨大空间，但实际上那只是虚拟的！</p>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>读书</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>短而美第7期 - 收藏并不等于学会，可能还会忘记收藏了什么</title>
    <link href="/post/47958ef6/"/>
    <url>/post/47958ef6/</url>
    
    <content type="html"><![CDATA[<p>我们现在每时每刻都在收藏内容，包括搞笑的学习的好玩的，都想一股脑收藏一下，等需要的时候翻出来看看，然而感觉并没有时间允许回头这么做。</p><span id="more"></span><p>因此我最近做了一些实验性的事情，包括哔哩哔哩正在看的视频，百度网盘正在看的视频，正在读的书，正在看的官方文档，全部都用博客系统来管理起来了，至少记录了当前学习的进度，不至于过了一段时间连自己学到了哪儿都忘记了。在学习的过程中，如果有一些特别的思考，正好可以顺手记录一下。</p>]]></content>
    
    
    <categories>
      
      <category>短而美</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaWeb视频教程,javaweb零基础入门到精通IDEA版</title>
    <link href="/post/1d33fcb2/"/>
    <url>/post/1d33fcb2/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>讲的太好了，很细致，对内部的原理理解的很深刻。讲的很底层，把JavaWeb的内部原理讲的很透彻。</p><p>课程简介：本套教程讲述了JavaWeb从入门到实战全部的知识点，主要包括：Servlet、Filter、Listener、jsp、EL表达式、JSTL标签库、jQuery、Cookie、Session、JSON、Ajax等相关技术，Javaweb全部知识点，一套教程全部搞定</p><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH">https://www.bilibili.com/video/BV1Zy4y1K7SH</a></p></blockquote><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=1">01-关于系统结构分析</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=2">02-BS架构通信原理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=3">03-配置tomcat服务器</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=4">04-编写第一个webapp</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=5">05-BS结构系统的角色和协议</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=6">06-模拟servlet本质</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=7">07-开发第一个servlet</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=8">08-servlet中编写jdbc程序连接数据库</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=9">09-使用IDEA工具开发Servlet</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=10">10-Servlet对象的生命周期</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=11">11-适配器模式改造Servlet</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=12">12-改造GenericServlet</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=13">13-ServletConfig接口详解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=14">14-ServletContext接口详解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=15">15-ServletContext接口详解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=16">16-ServletContext接口详解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=17">17-HTTP协议详解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=18">18-GET和POST的区别</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=19">19-HttpServlet源码分析</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=20">20-HttpServlet源码分析及web欢迎页</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=21">21-HttpServletRequest接口</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=22">22-通过request接口获取请求参数</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=23">23-关于请求域对象</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=24">24-关于request对象的常用方法</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=25">25-关于request对象的常用方法</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=26">26-设计数据库表以及原型</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=27">27-实现部门列表以及详情页</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=28">28-实现部门删除功能</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=29">29-实现部门新增功能</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=30">30-实现部门的修改</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Z3411C7NZ?p=31">31-深度剖析转发和重定向的区别</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
      <tag>JavaWeb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>尚硅谷Vue2.0+Vue3.0全套教程丨vuejs从入门到精通</title>
    <link href="/post/df99894b/"/>
    <url>/post/df99894b/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>如果学习vue的话，强烈推荐这个视频，讲的是太好了，我已经把vue2.0学习完了，现在不太需要vue3.0，如果需要了，再学一下。</p><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH">https://www.bilibili.com/video/BV1Zy4y1K7SH</a><br>素材地址: <a href="https://pan.baidu.com/s/1Rj17kfgFCInLW8jyCj_seQ?pwd=6666">https://pan.baidu.com/s/1Rj17kfgFCInLW8jyCj_seQ?pwd=6666</a></p></blockquote><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=1">001_尚硅谷Vue技术_课程简介</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=2">002_尚硅谷Vue技术_Vue简介</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=3">003_尚硅谷Vue技术_Vue官网使用指南</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=4">004_尚硅谷Vue技术_搭建Vue开发环境</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=5">005_尚硅谷Vue技术_Hello小案例</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=6">006_尚硅谷Vue技术_分析Hello案例</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=7">007_尚硅谷Vue技术_模板语法</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=8">008_尚硅谷Vue技术_数据绑定</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=9">009_尚硅谷Vue技术_el与data的两种写法</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=10">010_尚硅谷Vue技术_理解MVVM</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=11">011_尚硅谷Vue技术_Object.defineProperty</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=12">012_尚硅谷Vue技术_理解数据代理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=13">013_尚硅谷Vue技术_Vue中的数据代理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=14">014_尚硅谷Vue技术_事件处理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=15">015_尚硅谷Vue技术_事件修饰符</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=16">016_尚硅谷Vue技术_键盘事件</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=17">017_尚硅谷Vue技术_事件总结</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=18">018_尚硅谷Vue技术_姓名案例</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=19">019_尚硅谷Vue技术_计算属性</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=20">020_尚硅谷Vue技术_计算属性_简写</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=21">021_尚硅谷Vue技术_天气案例</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=22">022_尚硅谷Vue技术_监视属性</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=23">023_尚硅谷Vue技术_深度监视</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=24">024_尚硅谷Vue技术_监视的简写形式</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=25">025_尚硅谷Vue技术_watch对比computed</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=26">026_尚硅谷Vue技术_绑定class样式</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=27">027_尚硅谷Vue技术_绑定style样式</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=28">028_尚硅谷Vue技术_条件渲染</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=29">029_尚硅谷Vue技术_列表渲染</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=30">030_尚硅谷Vue技术_key作用与原理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=31">031_尚硅谷Vue技术_列表过滤</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=32">032_尚硅谷Vue技术_列表排序</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=33">033_尚硅谷Vue技术_更新时的一个问题</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=34">034_尚硅谷Vue技术_Vue监测数据的原理_对象</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=35">035_尚硅谷Vue技术_Vue.set()方法</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=36">036_尚硅谷Vue技术_Vue监测数据的原理_数组</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=37">037_尚硅谷Vue技术_总结Vue监视数据</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=38">038_尚硅谷Vue技术_收集表单数据</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=39">039_尚硅谷Vue技术_过滤器</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=40">040_尚硅谷Vue技术_v-text指令</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=41">041_尚硅谷Vue技术_v-html指令</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=42">042_尚硅谷Vue技术_v-cloak指令</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=43">043_尚硅谷Vue技术_v-once指令</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=44">044_尚硅谷Vue技术_v-pre指令</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=45">045_尚硅谷Vue技术_自定义指令_函数式</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=46">046_尚硅谷Vue技术_自定义指令_对象式</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=47">047_尚硅谷Vue技术_自定义指令_总结</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=48">048_尚硅谷Vue技术_引出生命周期</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=49">049_尚硅谷Vue技术_生命周期_挂载流程</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=50">050_尚硅谷Vue技术_生命周期_更新流程</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=51">051_尚硅谷Vue技术_生命周期_销毁流程</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=52">052_尚硅谷Vue技术_生命周期_总结</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=53">053_尚硅谷Vue技术_对组件的理解</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=54">054_尚硅谷Vue技术_非单文件组件</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=55">055_尚硅谷Vue技术_组件的几个注意点</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=56">056_尚硅谷Vue技术_组件的嵌套</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=57">057_尚硅谷Vue技术_VueComponent构造函数</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=58">058_尚硅谷Vue技术_Vue实例与组件实例</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=59">059_尚硅谷Vue技术_一个重要的内置关系</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=60">060_尚硅谷Vue技术_单文件组件</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=61">061_尚硅谷Vue技术_创建Vue脚手架</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=62">062_尚硅谷Vue技术_分析脚手架结构</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=63">063_尚硅谷Vue技术_render函数</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=64">064_尚硅谷Vue技术_修改默认配置</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=65">065_尚硅谷Vue技术_ref属性</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=66">066_尚硅谷Vue技术_props配置</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=67">067_尚硅谷Vue技术_mixin混入</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=68">068_尚硅谷Vue技术_插件</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=69">069_尚硅谷Vue技术_scoped样式</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=70">070_尚硅谷Vue技术_TodoList案例_静态</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=71">071_尚硅谷Vue技术_TodoList案例_初始化列表</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=72">072_尚硅谷Vue技术_TodoList案例_添加</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=73">073_尚硅谷Vue技术_TodoList案例_勾选</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=74">074_尚硅谷Vue技术_TodoList案例_删除</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=75">075_尚硅谷Vue技术_TodoList案例_底部统计</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=76">076_尚硅谷Vue技术_TodoList案例_底部交互</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=77">077_尚硅谷Vue技术_TodoList案例_总结</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=78">078_尚硅谷Vue技术_浏览器本地存储</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=79">079_尚硅谷Vue技术_TodoList_本地存储</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=80">080_尚硅谷Vue技术_组件自定义事件_绑定</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=81">081_尚硅谷Vue技术_组件自定义事件_解绑</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=82">082_尚硅谷Vue技术_组件自定义事件_总结</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=83">083_尚硅谷Vue技术_TodoList案例_自定义事件</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=84">084_尚硅谷Vue技术_全局事件总线1</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=85">085_尚硅谷Vue技术_全局事件总线2</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=86">086_尚硅谷Vue技术_TodoList案例_事件总线</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=87">087_尚硅谷Vue技术_消息订阅与发布_pubsub</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=88">088_尚硅谷Vue技术_TodoList案例_pubsub</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=89">089_尚硅谷Vue技术_TodoList案例_编辑</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=90">090_尚硅谷Vue技术_$nextTick</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=91">091_尚硅谷Vue技术_动画效果</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=92">092_尚硅谷Vue技术_过度效果</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=93">093_尚硅谷Vue技术_多个元素过度</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=94">094_尚硅谷Vue技术_集成第三方动画</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=95">095_尚硅谷Vue技术_总结过度与动画</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=96">096_尚硅谷Vue技术_配置代理_方式一</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=97">097_尚硅谷Vue技术_配置代理_方式二</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=98">098_尚硅谷Vue技术_github案例_静态组件</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=99">099_尚硅谷Vue技术_github案例_列表展示</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=100">100_尚硅谷Vue技术_github案例_完善案例</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=101">101_尚硅谷Vue技术_vue-resource</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=102">102_尚硅谷Vue技术_默认插槽</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=103">103_尚硅谷Vue技术_具名插槽</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=104">104_尚硅谷Vue技术_作用域插槽</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=105">105_尚硅谷Vue技术_Vuex简介</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=106">106_尚硅谷Vue技术_求和案例_纯vue版</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=107">107_尚硅谷Vue技术_Vuex工作原理图</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=108">108_尚硅谷Vue技术_搭建Vuex环境</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=109">109_尚硅谷Vue技术_求和案例_vuex版</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=110">110_尚硅谷Vue技术_vuex开发者工具的使用</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=111">111_尚硅谷Vue技术_getters配置项</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=112">112_尚硅谷Vue技术_mapState与mapGetters</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=113">113_尚硅谷Vue技术_mapActions与mapMutations</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=114">114_尚硅谷Vue技术_多组件共享数据</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=115">115_尚硅谷Vue技术_vuex模块化+namespace_1</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=116">116_尚硅谷Vue技术_vuex模块化+namespace_2</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=117">117_尚硅谷Vue技术_路由的简介</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=118">118_尚硅谷Vue技术_路由基本使用</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=119">119_尚硅谷Vue技术_几个注意点</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=120">120_尚硅谷Vue技术_嵌套路由</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=121">121_尚硅谷Vue技术_路由的query参数</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=122">122_尚硅谷Vue技术_命名路由</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=123">123_尚硅谷Vue技术_路由的params参数</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=124">124_尚硅谷Vue技术_路由的props配置</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=125">125_尚硅谷Vue技术_router-link的replace属性</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=126">126_尚硅谷Vue技术_编程式路由导航</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=127">127_尚硅谷Vue技术_缓存路由组件</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=128">128_尚硅谷Vue技术_两个新的生命周期钩子</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=129">129_尚硅谷Vue技术_全局前置_路由守卫</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=130">130_尚硅谷Vue技术_全局后置_路由守卫</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=131">131_尚硅谷Vue技术_独享路由守卫</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=132">132_尚硅谷Vue技术_组件内路由守卫</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=133">133_尚硅谷Vue技术_history模式与hash模式</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=134">134_尚硅谷Vue技术_element-ui基本使用</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=135">135_尚硅谷Vue技术_element-ui按需引入</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=136">136_尚硅谷Vue3技术_vue3简介</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=137">137_尚硅谷Vue3技术_使用vue-cli创建工程</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=138">138_尚硅谷Vue3技术_使用vite创建工程</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=139">139_尚硅谷Vue3技术_分析工程结构</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=140">140_尚硅谷Vue3技术_安装开发者工具</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=141">141_尚硅谷Vue3技术_初识setup</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=142">142_尚硅谷Vue3技术_ref函数_处理基本类型</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=143">143_尚硅谷Vue3技术_ref函数_处理对象类型</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=144">144_尚硅谷Vue3技术_reactive函数</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=145">145_尚硅谷Vue3技术_回顾Vue2的响应式原理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=146">146_尚硅谷Vue3技术_Vue3响应式原理_Proxy</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=147">147_尚硅谷Vue3技术_Vue3响应式原理_Reflect</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=148">148_尚硅谷Vue3技术_reactive对比ref</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=149">149_尚硅谷Vue3技术_setup的两个注意点</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=150">150_尚硅谷Vue3技术_computed计算属性</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=151">151_尚硅谷Vue3技术_watch监视ref定义的数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=152">152_尚硅谷Vue3技术_watch监视reactive定义的数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=153">153_尚硅谷Vue3技术_watch时value的问题</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=154">154_尚硅谷Vue3技术_watchEffect函数</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=155">155_尚硅谷Vue3技术_Vue3生命周期</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=156">156_尚硅谷Vue3技术_自定义hook</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=157">157_尚硅谷Vue3技术_toRef与toRefs</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=158">158_尚硅谷Vue3技术_shallowReactive与shallowRef</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=159">159_尚硅谷Vue3技术_readonly与shallowReadonly</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=160">160_尚硅谷Vue3技术_toRaw与markRaw</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=161">161_尚硅谷Vue3技术_customRef</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=162">162_尚硅谷Vue3技术_provide与inject</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=163">163_尚硅谷Vue3技术_响应式数据的判断</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=164">164_尚硅谷Vue3技术_CompositionAPI的优势</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=165">165_尚硅谷Vue3技术_Fragment组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=166">166_尚硅谷Vue3技术_Teleport组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=167">167_尚硅谷Vue3技术_Suspense组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Zy4y1K7SH?p=168">168_尚硅谷Vue3技术_Vue3中其他的改变</a></li></ul><div class="note note-success">            <p>相关推荐：</p><ul><li><a href="/post/note-vue-element/">Vue后台管理系统项目实战/vue+element-ui/vue经典全套系统案例讲解</a></li><li><a href="/post/df99894b/">尚硅谷Vue2.0+Vue3.0全套教程丨vuejs从入门到精通</a></li><li><a href="/post/2ff98e51/">Docker最新超详细版教程通俗易懂</a></li><li><a href="/post/switch-node-version/">优雅的切换nodejs版本</a></li><li><a href="/post/vmware-linux/">如何在VMware中安装Linux</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>尚硅谷VUE项目实战，前端项目-尚品汇(大型\重磅)</title>
    <link href="/post/BV1Vf4y1T7bw/"/>
    <url>/post/BV1Vf4y1T7bw/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>这个视频看了一点，没有学下去，如果你也在找一个刚学完vue的练手项目的话，推荐这个：<a href="/post/note-vue-element/">Vue后台管理系统项目实战-vue+element-ui</a></p><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw">https://www.bilibili.com/video/BV1Vf4y1T7bw</a><br>素材地址:</p><ol><li>尚品汇源码GIT地址：<a href="https://gitee.com/jch1011/shangpinhui_0415.git">https://gitee.com/jch1011/shangpinhui_0415.git</a></li><li>后台管理系统源码GIT地址：<a href="https://gitee.com/jch1011/guigu.git">https://gitee.com/jch1011/guigu.git</a></li></ol></blockquote><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=1">001-尚硅谷-尚品汇-教程简介</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=2">002-尚硅谷-尚品汇-vue-cli脚手架初始化项目</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=3">003-尚硅谷-尚品汇-项目的其他配置</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=4">004-尚硅谷-尚品汇-项目的路由分析</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=5">005-尚硅谷-尚品汇-Header与Footer非路由组件完成</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=6">006-尚硅谷-尚品汇-完成路由组件的搭建</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=7">007-尚硅谷-尚品汇-路由元信息的使用</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=8">008-尚硅谷-尚品汇-路由传递参数</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=9">009-尚硅谷-尚品汇-路由传递参数相关面试题</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=10">010-尚硅谷-尚品汇-重写push与replace方法</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=11">011-尚硅谷-尚品汇-home首页组件拆分业务分析</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=12">012-尚硅谷-尚品汇-TypeNav三级联动全局组件完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=13">013-尚硅谷-尚品汇-Home首页拆分静态组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=14">014-尚硅谷-尚品汇-POSTMAN工具测试接口</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=15">015-尚硅谷-尚品汇-axios二次封装</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=16">016-尚硅谷-尚品汇-API接口统一管理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=17">017-尚硅谷-尚品汇-nprogress进度条的使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=18">018-尚硅谷-尚品汇-vuex模块式开发</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=19">019-尚硅谷-尚品汇-动态展示三级联动数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=20">020-尚硅谷-尚品汇-完成三级联动动态背景颜色</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=21">021-尚硅谷-尚品汇-通过JS控制二三级分类显示与隐藏</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=22">022-尚硅谷-尚品汇-演示卡顿现象引入防抖与节流</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=23">023-尚硅谷-尚品汇-函数防抖的理解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=24">024-尚硅谷-尚品汇-函数节流的理解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=25">025-尚硅谷-尚品汇-三级联动节流</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=26">026-尚硅谷-尚品汇-三级联动路由跳转的分析</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=27">027-尚硅谷-尚品汇-完成三级联动的路由跳转与传递参数业务</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=28">028-尚硅谷-尚品汇-复习</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=29">029-尚硅谷-尚品汇-Search模块中商品分类与过渡动画</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=30">030-尚硅谷-尚品汇-typeNav商品分类列表的优化</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=31">031-尚硅谷-尚品汇-合并参数</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=32">032-尚硅谷-尚品汇-mockjs模拟数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=33">033-尚硅谷-尚品汇-获取Banner轮播图的数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=34">034-尚硅谷-尚品汇-swiper基本使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=35">035-尚硅谷-尚品汇-Banner实现轮播图第一种解决方案</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=36">036-尚硅谷-尚品汇-轮播图通过watch+nectTick解决问题</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=37">037-尚硅谷-尚品汇-获取floor组件mock数据‘</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=38">038-尚硅谷-尚品汇-动态展示Floor组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=39">039-尚硅谷-尚品汇-共用组件Carsouel</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=40">040-尚硅谷-尚品汇-Search模块的静态组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=41">041-尚硅谷-尚品汇-search模块vuex操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=42">042-尚硅谷-尚品汇-search模块中动态展示产品列表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=43">043-尚硅谷-尚品汇-Search模块根据不同的参数获取数据展示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=44">044-尚硅谷-尚品汇-Search模块中子组件动态开发</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=45">045-尚硅谷-尚品汇-监听路由的变化再次发请求获取数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=46">046-尚硅谷-商品柜-面包屑处理分类的操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=47">047-尚硅谷-尚品汇-面包屑处理关键字</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=48">048-尚硅谷-尚品汇-面包屑处理品牌信息</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=49">049-尚硅谷-尚品汇-平台售卖属性的操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=50">050-尚硅谷-尚品汇-排序操作上</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=51">051-尚硅谷-尚品汇-排序操作下</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=52">052-尚硅谷-尚品汇-分页器静态组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=53">053-尚硅谷-尚品汇-排序复习</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=54">054-尚硅谷-尚品汇-分页功能分析</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=55">055-尚硅谷-尚品汇-分页器起始与结束数字计算</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=56">056-山硅谷-尚品汇-分页器动态展示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=57">057-尚硅谷-尚品汇-分页器完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=58">058-尚硅谷-尚品汇-分页器添加类名</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=59">059-尚硅谷-尚品汇-滚动行为</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=60">060-尚硅谷-尚品汇-产品详情数据获取</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=61">061-尚硅谷-尚品汇-产品详情展示动态数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=62">062-尚硅谷-尚品汇-分页器复习-裁剪</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=63">063-尚硅谷-尚品汇-zoom放大镜展示数据-裁剪</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=64">064-尚硅谷-尚品汇-detail路由组件展示商品售卖属性-裁剪</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=65">065-尚硅谷-尚品汇-产品售卖属性值排他操作-裁剪</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=66">066-尚硅谷-尚品汇-放大镜操作上</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=67">067-尚硅谷-尚品汇-放大镜结束‘</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=68">068-尚硅谷-尚品汇-购买产品个数的操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=69">069-尚硅谷-尚品汇-加入购物车</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=70">070-尚硅谷-尚品汇-加入购物车成功与失败的判断</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=71">071-尚硅谷-尚品汇-加入购物车操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=72">072-尚硅谷-尚品汇-路由传递参数结合会话存储</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=73">073-尚硅谷-尚品汇-购物车静态组件与修改</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=74">074-尚硅谷-尚品汇-uuid游客身份获取购物车数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=75">075-尚硅谷-尚品汇-购物车动态展示数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=76">076-尚硅谷-尚品汇-处理产品数量</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=77">077-尚硅谷-尚品汇-修改购物车产品的数量完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=78">078-尚硅谷-尚品汇-删除购物车产品的操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=79">079-尚硅谷-尚品汇-修改产品状态</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=80">080-尚硅谷-尚品汇-复习</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=81">081-尚硅谷-尚品汇-删除全部选中的商品</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=82">082-尚硅谷-尚品汇-全部产品的勾选状态修改</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=83">083-尚硅谷-尚品汇-登录注册静态组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=84">084-尚硅谷-尚品汇-注册业务上</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=85">085-尚硅谷-尚品汇-注册业务下</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=86">086-尚硅谷-尚品汇-登录业务（token）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=87">087-尚硅谷-尚品汇-用户登录携带token获取用户信息</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=88">088-尚硅谷-尚品汇-登录业务中讲解存在问题‘</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=89">089-尚硅谷-尚品汇-退出登录</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=90">090-尚硅谷-尚品汇-导航守卫理解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=91">091-尚硅谷-尚品汇-导航守卫的判断</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=92">092-尚硅谷-尚品汇-导航守卫用户登录操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=93">093-尚硅谷-尚品汇-trade静态组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=94">094-尚硅谷-尚品汇-获取交易页数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=95">095-尚硅谷-尚品汇-用户地址信息的展示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=96">096-尚硅谷-商品汇-交易页面完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=97">097-尚硅谷-尚品汇-提交订单</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=98">098-尚硅谷-尚品汇-获取订单号与展示支付信息</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=99">099-尚硅谷-尚品汇-支付页面中使用ElementUI以及按需引入</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=100">100-尚硅谷-尚品汇-微信支付业务上</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=101">101-尚硅谷-尚品汇-微信支付下、</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=102">102-尚硅谷-尚品汇-个人中心二级路由搭建</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=103">103-尚硅谷-尚品汇-我的订单</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=104">104-尚硅谷-尚品汇-未登录的导航守卫判断</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=105">105-尚硅谷-尚品汇-用户登录（路由独享与组件内守卫）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=106">106-尚硅谷-尚品汇-图片懒加载</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=107">107-尚硅谷-尚品汇-vee-validate表单验证使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=108">108-尚硅谷-尚品汇-路由懒加载</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=109">109-尚硅谷-尚品汇-处理map文件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=110">110-尚硅谷-尚品汇-购买服务器</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=111">111-尚品汇-尚硅谷-安全组与xshell操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=112">112-尚品汇-尚硅谷-nginx反向代理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=113">001-尚硅谷-组件通信-组件通信6种方式</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=114">002-尚硅谷-组件通信-自定义事件深入</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=115">003-尚硅谷-组件通信-v-model深入</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=116">004-尚硅谷-组件通信-sync属性修饰符</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=117">005-尚硅谷-组件通信-$attrs与$listeners</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=118">006-尚硅谷-组件通信-$children与$parent</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=119">007-尚硅谷-组件通信-混入mixin</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=120">008-尚硅谷-组件通信-作用域插槽</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=121">009-尚硅谷-后台管理系统项目-后台管理系统项目简介</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=122">010-尚硅谷-后台管理系统-后台管理系统模板介绍</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=123">011-尚硅谷-后台管理系统-登录业务完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=124">012-尚硅谷-后台管理系统-退出登录</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=125">013-尚硅谷-后台管理系统-路由的搭建</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=126">014-尚硅谷-后台管理系统-品牌管理静态组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=127">015-尚硅谷-后台管理系统-品牌列表展示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=128">016-尚硅谷-后台管理系统-添加品牌与修改品牌静态完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=129">017-尚硅谷-后台管理系统-添加品牌完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=130">018-尚硅谷-后台管理系统-修改品牌完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=131">019-尚硅谷-后台管理系统-品牌的表单验证（自定义校验规则）</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=132">020-尚硅谷-后台管理系统-删除品牌操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=133">021-尚硅谷-后台管理系统-商品管理之三级联动静态组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=134">022-尚硅谷-后台管理系统-三级联动动态展示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=135">023-尚硅谷-后台管理系统-三级联动完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=136">024-尚硅谷-后台管理系统-平台属性管理动态展示属性</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=137">025-尚硅谷-后台管理系统-平台属性之添加属性与修改属性静态完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=138">026-尚硅谷-后台管理系统-收集属性名的操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=139">027-尚硅谷-后台管理-收集属性值操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=140">028-尚硅谷-后台管理系统-解决返回按钮数据回显问题</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=141">029-尚硅谷-后台管理系统-修改属性操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=142">030-尚硅谷-后台管理系统-查看模式与修改模式切换</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=143">031-尚硅谷-后台管理系统-查看模式与编辑模式注意事项</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=144">032-尚硅谷-后台管理系统-修改属性的查看与编辑模式切换</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=145">033-尚硅谷-后台管理系统-表单元素自动聚焦的实现</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=146">034-尚硅谷-后台管理系统-删除属性值的操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=147">035-尚硅谷-后台管理系统-保存操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=148">036-尚硅谷-后台管理系统-按钮与三级联动的可操作性</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=149">037-尚硅谷-后台管理系统-SPU管理模块业务介绍</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=150">038-尚硅谷-后台管理系统-SPU管理模块静态</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=151">039-尚硅谷-后台管理系统-动态展示SPU列表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=152">040-尚硅谷-后台管理系统-Spu管理内容的切换</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=153">041-尚硅谷-后台管理系统-SpuForm静态组件完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=154">042-尚硅谷-后台管理系统-SpuForm请求业务得分析</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=155">043-尚硅谷-后台管理系统-获取SpuForm数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=156">044-尚硅谷-后台管理系统-SpuForm组件数据展示与收集数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=157">045-尚硅谷-后台管理系统-SpuForm销售属性的数据展示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=158">046-尚硅谷-后台管理系统-完成SpuForm照片墙数据的收集</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=159">047-尚硅谷-后台管理系统-销售属性的添加的操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=160">048-尚硅谷-后台管理系统-销售属性值展示与收集</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=161">049-尚硅谷-后台管理系统-删除销售属性与属性值操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=162">050-尚硅谷-后台管理系统-完成修改Spu的保存操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=163">051-尚硅谷-后台管理系统-完成添加SPU的操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=164">052-尚硅谷-后台管理系统-删除SPU的操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=165">053-尚硅谷-后台管理系统-完成SKU静态组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=166">054-尚硅谷-后台管理系统-获取SkuForm数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=167">055-尚硅谷-后台管理系统-展示SKU与收集SKU的数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=168">056-尚硅谷-后台管理系统-添加SKU图片列表数据的展示与收集</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=169">057-尚硅谷-后台管理系统-完成添加SKU保存操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=170">058-尚硅谷-后台管理系统-SKU列表的展示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=171">059-尚硅谷-后台管理系统-loading效果</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=172">060-尚硅谷-后台管理系统-sku模块数据展示与分页功能</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=173">061-尚硅谷-尚品汇-SKU上架与下架操作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=174">062-尚硅谷-后台管理系统-SKU详情查看完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=175">063-尚硅谷-后台管理系统-深度选择器</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=176">064-尚硅谷-后台管理系统-数据可视化简介</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=177">065-尚硅谷-后台管理系统-canvas绘制线段</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=178">066-尚硅谷-后台管理系统-canvas绘制矩形</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=179">067-尚硅谷-后台管理系统-绘制圆形</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=180">068-尚硅谷-后台管理系统-画布清除与绘制文字</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=181">069-尚硅谷-后台管理系统-绘制柱状图</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=182">070-尚硅谷-后台管理系统-svg基本使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=183">071-尚硅谷-后台管理系统-echarts基本使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=184">072-上硅谷-后台管理系统-echarts展示多个图表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=185">073-尚硅谷-后台管理系统-一个容器显示多个图表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=186">074-尚硅谷-后台管理系统-echart中数据集dataset使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=187">075-尚硅谷-后台管理系统-echarts内置组件使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=188">076-尚硅谷-后台管理系统-echarts坐标体系</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=189">077-尚硅谷-后台管理系统-Home首页Card静态组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=190">078-尚硅谷-后台管理系统-折线图完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=191">079-尚硅谷-后台管理系统-柱状图完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=192">080-尚硅谷-后台管理系统-进度条完成</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=193">081-尚硅谷-后台管理系统-sale静态组件-上</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=194">082-尚硅谷-后台管理系统-sale静态组件-中</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=195">083-尚硅谷-后台管理系统-sale组件完毕</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=196">084-尚硅谷-后台管理系统-observe静态组件</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=197">085-尚硅谷-后台管理系统-动态展示mock数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=198">086-尚硅谷-后台管理系统-权限管理模块介绍</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=199">087-尚硅谷-后台管理系统-权限管理模块的串讲</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1Vf4y1T7bw?p=200">088-尚硅谷-后台管理系统-菜单&amp;按钮权限</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前端开发之Vue项目实战_Element-UI【配套源码+笔记】</title>
    <link href="/post/BV1x64y1S7S7/"/>
    <url>/post/BV1x64y1S7S7/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><span id="more"></span><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV1x64y1S7S7">https://www.bilibili.com/video/BV1x64y1S7S7</a><br>素材地址: <a href="https://pan.baidu.com/s/17Jx1eqJKyPgdiU1qZXpsRA?pwd=u6i8">https://pan.baidu.com/s/17Jx1eqJKyPgdiU1qZXpsRA?pwd=u6i8</a></p></blockquote><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=1">01.Vue项目实战学习目标_</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=2">02.Vue项目实战概述_</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=3">03.电商后台管理系统的功能_</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=4">04.开发模式：前后端分离_</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=5">05.项目初始化_</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=6">06.初始化Git远程仓库_</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=7">07.本地项目托管到GitHub或码云中_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=8">08.后台项目的环境安装配置_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=9">09.测试后台接口是否正常_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=10">10.登录与退出功能_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=11">11.登录功能实现_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=12">12.删除不要的组件_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=13">13.创建登录组件_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=14">14.登录组件布局_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=15">15.登录组件头部布局_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=16">16.登录组件表单布局_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=17">17.登录组件表单小图标布局_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=18">18.登录组件表单的数据绑定_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=19">19.登录组件表单的数据验证_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=20">20.登录组件实现表单的重置_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=21">21.登录组件登录前的预验证_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=22">22.登录组件根据预验证是否发起请求_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=23">23.登录组件配置弹窗提示_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=24">24.登录组件登录成功后的行为_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=25">25.路由导航守卫控制访问权限_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=26">26.退出功能实现原理_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=27">27.处理语法警告问题_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=28">28.优化element-ui按需组件的导入形式_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=29">29.提交登录功能代码_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=30">01.主页布局开始_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=31">02.主页Header布局_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=32">03.主页左侧菜单布局_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=33">04.通过接口获取菜单数据_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=34">05.发起请求获取左侧菜单数据_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=35">06.左侧菜单UI绘制_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=36">07.左侧菜单格式美化_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=37">08.左侧菜单优化_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=38">09.实现左侧菜单的折叠与展开功能_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=39">10.实现首页的路由重定向_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=40">11.左侧菜单改造为路由链接_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=41">12.用户列表开发_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=42">13.解决用户列表小问题_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=43">14.绘制用户列表的基本UI结构_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=44">15.获取用户列表数据_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=45">16.渲染用户列表数据_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=46">17.为用户列表添加索引列_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=47">18.改造状态列的显示效果_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=48">19.插槽形式自定义列的渲染_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=49">20.实现数据分页效果_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=50">21.实现用户状态的修改_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=51">22.实现搜索的功能_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=52">23.实现添加用户的功能_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=53">24.添加用户的对话框中渲染一个添加用户的表单_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=54">25.实现自定义规则_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=55">26.实现添加用户表单的重置功能_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=56">27.添加用户的预验证功能_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=57">28.发起请求添加一个新用户_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=58">29.添加用户修改的操作_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=59">30.根据ID查询用户信息_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=60">31.绘制修改用户的表单_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=61">32.实现修改表单的关闭之后的重置操作_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=62">33.提交修改之前表单预验证操作_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=63">34.修改用户信息的操作_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=64">35.实现删除用户的操作_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=65">36.完成删除用户的操作_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=66">37.提交用户列表功能代码_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=67">01.权限管理开发开始_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=68">02.开发权限列表对应规格_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=69">03.权限列表的基本页面布局_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=70">04_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=71">05_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=72">06_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=73">07_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=74">08_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=75">09_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=76">10_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=77">11_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=78">12_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=79">13_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=80">14_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=81">15_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=82">16_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=83">17_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=84">18_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=85">19_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=86">20_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=87">21_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=88">22_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=89">23_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=90">24_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=91">25_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=92">26_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=93">27_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=94">28_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=95">29_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=96">01.分类管理开始_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=97">02.创建分类管理git分支_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=98">03.商品分类路由组件的加载_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=99">04.绘制商品分类页面的基本结构_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=100">05_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=101">06_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=102">07_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=103">08_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=104">09_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=105">10_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=106">11_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=107">12_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=108">13_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=109">14_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=110">15_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=111">16_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=112">17_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=113">18_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=114">19_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=115">20_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=116">21_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=117">22_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=118">23_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=119">24_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=120">25_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=121">26_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=122">27_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=123">28_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=124">29_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=125">30_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=126">31_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=127">32_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=128">33_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=129">34_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=130">35_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=131">36_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=132">37_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=133">38_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=134">39_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=135">40_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=136">41_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=137">42_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=138">43_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=139">44_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=140">45_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=141">01.商品列表功能开发开始_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=142">02_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=143">03_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=144">04_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=145">05_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=146">06_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=147">07_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=148">08_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=149">09_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=150">10_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=151">11_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=152">12_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=153">13_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=154">14_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=155">15_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=156">16_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=157">17_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=158">18_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=159">19_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=160">20_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=161">21_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=162">22_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=163">23_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=164">24_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=165">25_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=166">26_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=167">27_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=168">28_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=169">29_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=170">30_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=171">31_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=172">32_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=173">33_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=174">34_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=175">35_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=176">01.订单管理开发开始_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=177">02_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=178">03_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=179">04_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=180">05_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=181">06_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=182">07_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=183">08_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=184">09_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=185">10_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=186">11_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=187">12_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=188">13_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=189">14_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=190">15_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=191">16_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=192">17_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=193">18_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=194">19_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=195">20_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=196">01.生成项目报告_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=197">02_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=198">03_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=199">04_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=200">05_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=201">06_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=202">07_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=203">08_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=204">09_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=205">10_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=206">11_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=207">12_</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1x64y1S7S7?p=208">13_</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>电商平台数据可视化实时监控系统-ECharts-vue项目综合练习</title>
    <link href="/post/BV1bh41197p8/"/>
    <url>/post/BV1bh41197p8/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>讲的很好，我现在是单纯的把Echarts相关的课程学完了，感觉很不错，如果你也想学Echarts，也可以直接看相关的视频。</p><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV1bh41197p8">https://www.bilibili.com/video/BV1bh41197p8</a><br>素材地址: <a href="https://gitee.com/xiaoqiang001/online-retailers.git">https://gitee.com/xiaoqiang001/online-retailers.git</a></p></blockquote><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=1">01_课程介绍</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=2">02_项目演示</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=3">03_数据可视化概念</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=4">04_ECharts的介绍</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=5">05_ECharts的快速上手</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=6">06_相关配置项的讲解</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=7">07_柱状图的基本实现和常见效果</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=8">08_通用配置_title的相关配置</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=9">09_通用配置_tooltip的相关配置</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=10">10_通用配置_toolbox的相关配置</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=11">11_通用配置_legend的相关配置</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=12">12_折线图的基本实现</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=13">13_折线图的常见效果</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=14">14_折线图的常见效果</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=15">15_散点图的基本实现</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=16">16_散点图的常见效果</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=17">17_直角坐标系的常用配置grid</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=18">18_直角坐标系的常用配置axis</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=19">19_直角坐标系的常用配置dataZoom</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=20">20_饼图的基本实现</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=21">21_饼图的常见效果</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=22">22_地图的基本实现和常见配置</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=23">23_地图常见效果_显示某个省份地图</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=24">24_地图常见效果_显示空气质量</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=25">25_地图常见效果_地图和散点图结合</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=26">26_雷达图的实现</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=27">27_仪表盘的实现</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=28">28_ECharts基础小结</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=29">29_主题的使用</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=30">30_调色盘和颜色渐变</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=31">31_直接样式和高亮样式的使用</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=32">32_图表自适应的实现</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=33">33_图表加载动画的实现</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=34">34_图表增量动画的讲解</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=35">35_图表动画的配置项</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=36">36_全局ECharts对象的常用方法1</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=37">37_全局ECharts对象的常用方法2</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=38">38_echartsInstance对象常用方法1</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=39">39_echartsInstance对象常用方法2</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=40">40_ECharts高级小结</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=41">41_Koa2的介绍</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=42">42_Koa2的快速上手</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=43">43_Koa2中间件的特点</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=44">44_后台项目_项目准备</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=45">45_后台项目_总耗时中间件的开发</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=46">46_后台项目_响应头中间件的开发</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=47">47_后台项目_业务逻辑中间件的开发</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=48">48_后台项目_跨域配置</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=49">49_前端项目_项目的创建和准备</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=50">50_前端项目_商家销售统计_组件结构和布局结构</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=51">51_前端项目_商家销售统计_图表基本功能</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=52">52_前端项目_商家销售统计_动态刷新的实现</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=53">53_前端项目_商家销售统计_UI调整</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=54">54_前端项目_商家销售统计_UI调整</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=55">55_前端项目_商家销售统计_拆分option</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=56">56_前端项目_商家销售统计_分辨率适配</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=57">57_前端项目_销量趋势图表_通用代码结构</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=58">58_前端项目_销量趋势图表_基本图表的显示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=59">59_前端项目_销量趋势图表_UI调整</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=60">60_前端项目_销量趋势图表_切换图表的实现</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=61">61_前端项目_销量趋势图表_分辨率适配</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=62">62_前端项目_商家地图分布_显示地图</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=63">63_前端项目_商家地图分布_显示散点</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=64">64_前端项目_商家地图分布_UI调整</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=65">65_前端项目_商家地图分布_分辨率适配</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=66">66_前端项目_商家地图分布_地图点击效果</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=67">67_前端项目_销售排行图表_基本图表的显示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=68">68_前端项目_销售排行图表_UI调整</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=69">69_前端项目_销售排行图表_平移动画效果</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=70">70_前端项目_销售排行图表_分辨率适配</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=71">71_前端项目_热销商品占比_基本图表的显示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=72">72_前端项目_热销商品占比_数据的切换</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=73">73_前端项目_热销商品占比_UI调整</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=74">74_前端项目_热销商品占比_分辨率适配</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=75">75_前端项目_库存销量模块_基本图表的显示</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=76">76_前端项目_库存销量模块_UI调整</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=77">77_前端项目_库存销量模块_切换动画</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=78">78_前端项目_库存销量模块_分辨率适配</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=79">79.WebSocket的基本使用_后端</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=80">80.WebSocket的基本使用_前端</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=81">81.后端项目的改造</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=82">82.前后端数据字段的约定</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=83">83.后端接收数据时的处理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=84">84.前端代码改造_连接服务器</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=85">85.前端代码改造_处理接收的数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=86">86.前端代码改造_组件的改造</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=87">87.前端代码改造_优化</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=88">88.细节处理_组件合并</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=89">89.细节处理_全屏切换_布局样式</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=90">90.细节处理_全屏切换_点击事件的处理</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=91">91.细节处理_全屏切换_联动效果</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=92">92.细节处理_主题切换_图表主题</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=93">93.细节处理_主题切换_定义数据</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=94">94.细节处理_主题切换_原生HTML的切换</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV1bh41197p8?p=95">95.细节处理_主题切换_联动效果</a></li></ul><h2 id="学习笔记"><a href="#学习笔记" class="headerlink" title="学习笔记"></a>学习笔记</h2><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p><img src="https://image.glwsq.cn/img/%E7%94%B5%E5%95%86%E5%B9%B3%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AE%9E%E6%97%B6%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F-Echarts-vue%E9%A1%B9%E7%9B%AE%E7%BB%BC%E5%90%88%E7%BB%83%E4%B9%A0-2022-02-09-15-44-42.png"></p><h3 id="基本代码框架"><a href="#基本代码框架" class="headerlink" title="基本代码框架"></a>基本代码框架</h3><figure class="highlight html"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></div></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Ecahrts基本框架-折线图<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.bootcdn.net/ajax/libs/echarts/5.2.2/echarts.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;chart1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width: 600px;height: 400px&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"></span><br><span class="javascript">    <span class="hljs-keyword">let</span> myCharts = echarts.init(<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;chart1&#x27;</span>), <span class="hljs-string">&#x27;light&#x27;</span>) <span class="hljs-comment">// 传入dom元素和主题 主题默认是light还可以是dark</span></span><br><span class="javascript">    <span class="hljs-keyword">let</span> xDataArr = [<span class="hljs-string">&#x27;1月&#x27;</span>, <span class="hljs-string">&#x27;2月&#x27;</span>, <span class="hljs-string">&#x27;3月&#x27;</span>, <span class="hljs-string">&#x27;4月&#x27;</span>, <span class="hljs-string">&#x27;5月&#x27;</span>, <span class="hljs-string">&#x27;6月&#x27;</span>, <span class="hljs-string">&#x27;7月&#x27;</span>, <span class="hljs-string">&#x27;8月&#x27;</span>, <span class="hljs-string">&#x27;9月&#x27;</span>, <span class="hljs-string">&#x27;10月&#x27;</span>, <span class="hljs-string">&#x27;11月&#x27;</span>, <span class="hljs-string">&#x27;12月&#x27;</span>]</span><br><span class="javascript">    <span class="hljs-keyword">let</span> yDataArr = [<span class="hljs-number">3000</span>, <span class="hljs-number">2800</span>, <span class="hljs-number">900</span>, <span class="hljs-number">1000</span>, <span class="hljs-number">800</span>, <span class="hljs-number">700</span>, <span class="hljs-number">1400</span>, <span class="hljs-number">1300</span>, <span class="hljs-number">900</span>, <span class="hljs-number">1000</span>, <span class="hljs-number">800</span>, <span class="hljs-number">600</span>]</span><br><span class="javascript">    <span class="hljs-keyword">let</span> option = &#123;</span><br><span class="javascript">        <span class="hljs-attr">title</span>: &#123;</span><br><span class="javascript">            <span class="hljs-attr">text</span>: <span class="hljs-string">&#x27;折线图&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">textStyle</span>: &#123; <span class="hljs-comment">// 标题样式</span></span><br><span class="javascript">                <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;#45b4c4&#x27;</span></span><br><span class="javascript">            &#125;</span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-attr">legend</span>: &#123;&#125;, <span class="hljs-comment">// 在头部显示每个折线的名称和颜色</span></span><br><span class="javascript">        <span class="hljs-comment">// color: [&#x27;red&#x27;, &#x27;green&#x27;, &#x27;blue&#x27;], // 全局调色盘</span></span><br><span class="javascript">        <span class="hljs-attr">toolbox</span>: &#123; <span class="hljs-comment">// 工具箱</span></span><br><span class="javascript">            <span class="hljs-attr">feature</span>: &#123;</span><br><span class="javascript">                <span class="hljs-attr">saveAsImage</span>: &#123;&#125; <span class="hljs-comment">// 保存图片</span></span><br><span class="javascript">            &#125;</span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-attr">dataZoom</span>: [&#123;<span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;inside&#x27;</span>&#125;], <span class="hljs-comment">// 开启缩放，滚滑轮缩放x轴</span></span><br><span class="javascript">        <span class="hljs-attr">tooltip</span>: &#123;&#125;, <span class="hljs-comment">// 鼠标移动上去内容提示框</span></span><br><span class="javascript">        <span class="hljs-attr">xAxis</span>: &#123; <span class="hljs-comment">// x轴数据类型</span></span><br><span class="javascript">            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;category&#x27;</span>, <span class="hljs-comment">// 类目轴category是需要data的</span></span><br><span class="javascript">            <span class="hljs-attr">boundaryGap</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// x轴的点和数据对齐 建议折线图这样设置，更好看</span></span><br><span class="javascript">            <span class="hljs-attr">data</span>: xDataArr</span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-attr">yAxis</span>: &#123; <span class="hljs-comment">// y轴数据类型</span></span><br><span class="javascript">            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;value&#x27;</span> <span class="hljs-comment">// value不需要data数据</span></span><br><span class="javascript">        &#125;,</span><br><span class="javascript">        <span class="hljs-attr">series</span>: [&#123; <span class="hljs-comment">// 具体的数据</span></span><br><span class="javascript">            <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;手机销售量&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">data</span>: yDataArr,</span><br><span class="javascript">            <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;line&#x27;</span>,</span><br><span class="javascript">            <span class="hljs-attr">emphasis</span>: &#123; <span class="hljs-comment">// 高亮</span></span><br><span class="javascript">                <span class="hljs-attr">itemStyle</span>: &#123;</span><br><span class="javascript">                    <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;red&#x27;</span></span><br><span class="javascript">                &#125;</span><br><span class="javascript">            &#125;</span><br><span class="javascript">            <span class="hljs-comment">// color: [&#x27;red&#x27;, &#x27;green&#x27;, &#x27;blue&#x27;], // 局部调色盘</span></span><br><span class="javascript">        &#125;]</span><br><span class="javascript">    &#125;</span><br><span class="javascript">    myCharts.setOption(option)</span><br><span class="javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="读取csv数据"><a href="#读取csv数据" class="headerlink" title="读取csv数据"></a>读取csv数据</h3><p>可以看我的这一篇博客</p><p><a href="/post/js-echarts-csv">js读取csv数据，并用Echarts展示</a></p>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
      <tag>ECharts</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>bilibili视频列表爬虫</title>
    <link href="/post/bilibili-part-spider/"/>
    <url>/post/bilibili-part-spider/</url>
    
    <content type="html"><![CDATA[<p>我经常通过哔哩哔哩看学习视频，一般视频都很长，分上百个P，每次学一段时间这个教程以后可能会由于种种原因忘了这个视频还没学完，因此专门写了一个小脚本来把视频的每一集的标题记录一下，方便以后的复习和记录学习的情况。也可以更方便的做笔记。</p><span id="more"></span><h2 id="获取视频的每一集的数据"><a href="#获取视频的每一集的数据" class="headerlink" title="获取视频的每一集的数据"></a>获取视频的每一集的数据</h2><figure class="highlight js"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> videoData = <span class="hljs-built_in">window</span>.__INITIAL_STATE__.videoData<br><span class="hljs-keyword">let</span> bvid = videoData.bvid<br><span class="hljs-keyword">let</span> baseUrl = <span class="hljs-string">&#x27;https://www.bilibili.com/video/&#x27;</span><br><span class="hljs-keyword">let</span> template = <br><span class="hljs-string">`- [ ] [p$page$ $part$]($partUrl$)</span><br><span class="hljs-string">`</span><br><span class="hljs-keyword">let</span> resStr = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">const</span> page <span class="hljs-keyword">of</span> videoData.pages) &#123;<br>    <span class="hljs-keyword">let</span> tempstr = template.replace(<span class="hljs-string">&#x27;$part$&#x27;</span>, page.part).replace(<span class="hljs-string">&#x27;$page$&#x27;</span>, page.page).replace(<span class="hljs-string">&#x27;$url$&#x27;</span>, baseUrl + bvid).replace(<span class="hljs-string">&#x27;$partUrl$&#x27;</span>,<span class="hljs-string">`<span class="hljs-subst">$&#123;baseUrl&#125;</span><span class="hljs-subst">$&#123;bvid&#125;</span>?p=<span class="hljs-subst">$&#123;page.page&#125;</span>`</span>)<br>    resStr += tempstr<br>&#125;<br><span class="hljs-built_in">console</span>.log(resStr)<br></code></pre></td></tr></table></figure><p>会输出这种格式的文本，具体可以修改template字符串</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs md"><span class="hljs-bullet">-</span> [<span class="hljs-string"> </span>] [<span class="hljs-string">p1 第1步 安装Ubuntu</span>](<span class="hljs-link">https://www.bilibili.com/video/BV1Wb411S7JE?p=1</span>)<br><span class="hljs-bullet">-</span> [<span class="hljs-string"> </span>] [<span class="hljs-string">p2 第2步 安装VMware Tools</span>](<span class="hljs-link">https://www.bilibili.com/video/BV1Wb411S7JE?p=2</span>)<br><span class="hljs-bullet">-</span> [<span class="hljs-string"> </span>] [<span class="hljs-string">p3 第3步 快照</span>](<span class="hljs-link">https://www.bilibili.com/video/BV1Wb411S7JE?p=3</span>)<br></code></pre></td></tr></table></figure><h2 id="template字符串"><a href="#template字符串" class="headerlink" title="template字符串"></a>template字符串</h2><p>支持的模板如下：</p><ul><li><code>$part$</code> 每一集的标题</li><li><code>$page$</code> 每一集的编号</li><li><code>$url$</code> 整个视频的url</li><li><code>$partUrl$</code> 视频每一集的url</li></ul><h2 id="加强版-可以给前n个视频打勾"><a href="#加强版-可以给前n个视频打勾" class="headerlink" title="加强版-可以给前n个视频打勾"></a>加强版-可以给前n个视频打勾</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> done = <span class="hljs-number">8</span>; <span class="hljs-comment">// 学习过前几集</span><br><br><br><span class="hljs-keyword">const</span> videoData = <span class="hljs-built_in">window</span>.__INITIAL_STATE__.videoData<br><span class="hljs-keyword">let</span> bvid = videoData.bvid<br><span class="hljs-keyword">let</span> baseUrl = <span class="hljs-string">&#x27;https://www.bilibili.com/video/&#x27;</span><br><span class="hljs-keyword">let</span> template = <br><span class="hljs-string">`- [$checked$] [$part$]($partUrl$)</span><br><span class="hljs-string">`</span><br><span class="hljs-keyword">let</span> resStr = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">const</span> page <span class="hljs-keyword">of</span> videoData.pages) &#123;<br>    <span class="hljs-keyword">let</span> tempstr = template.replace(<span class="hljs-string">&#x27;$part$&#x27;</span>, page.part).replace(<span class="hljs-string">&#x27;$page$&#x27;</span>, page.page).replace(<span class="hljs-string">&#x27;$url$&#x27;</span>, baseUrl + bvid).replace(<span class="hljs-string">&#x27;$partUrl$&#x27;</span>,<span class="hljs-string">`<span class="hljs-subst">$&#123;baseUrl&#125;</span><span class="hljs-subst">$&#123;bvid&#125;</span>?p=<span class="hljs-subst">$&#123;page.page&#125;</span>`</span>)<br>    <span class="hljs-keyword">if</span>(page.page &lt;= done) &#123;<br>        tempstr = tempstr.replace(<span class="hljs-string">&#x27;$checked$&#x27;</span>, <span class="hljs-string">&#x27;x&#x27;</span>)<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        tempstr = tempstr.replace(<span class="hljs-string">&#x27;$checked$&#x27;</span>, <span class="hljs-string">&#x27; &#x27;</span>)<br>    &#125;<br>    <br>    resStr += tempstr<br>&#125;<br><span class="hljs-built_in">console</span>.log(resStr)<br><span class="hljs-built_in">console</span>.log(videoData.pic)<br></code></pre></td></tr></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><img src="https://image.glwsq.cn/img/bilibili%E8%A7%86%E9%A2%91%E5%88%97%E8%A1%A8%E7%88%AC%E8%99%AB-2022-02-27-10-49-15.png"></p><div class="note note-success">            <p>相关推荐：</p><ul><li><a href="/post/note-vue-element/">Vue后台管理系统项目实战/vue+element-ui/vue经典全套系统案例讲解</a></li><li><a href="/post/df99894b/">尚硅谷Vue2.0+Vue3.0全套教程丨vuejs从入门到精通</a></li><li><a href="/post/2ff98e51/">Docker最新超详细版教程通俗易懂</a></li><li><a href="/post/switch-node-version/">优雅的切换nodejs版本</a></li><li><a href="/post/vmware-linux/">如何在VMware中安装Linux</a></li></ul>          </div>]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
      <tag>哔哩哔哩</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>项目实战-Node+Koa2从零搭建通用API服务</title>
    <link href="/post/BV13A411w79h/"/>
    <url>/post/BV13A411w79h/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>我把我通过哔哩哔哩学习过的视频都记录下来了，方便后期复习。如果你也在学习相关的知识，但是不知道有哪些优质的视频，可以看我的合集，都是学习过的，或者正在学习的。</p>          </div><p><a href="/bilibili-record/">哔哩哔哩学习记录</a></p><p>感觉是目前看过的视频里面讲的最好的，整体的设计模式和阿里的egg.js框架很像，正在学习中…</p><blockquote><p>视频地址: <a href="https://www.bilibili.com/video/BV13A411w79h">https://www.bilibili.com/video/BV13A411w79h</a><br>素材地址: <a href="https://github.com/jj112358/node-api">https://github.com/jj112358/node-api</a></p></blockquote><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=1">01-项目初始化</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=2">02-项目的基础搭建</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=3">03-项目的基本优化(自动重启_配置文件)</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=4">04-添加路由(处理不同的URL请求)</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=5">05-目录结构优化(拆分服务,业务, 路由, 控制器)</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=6">06-解析body拆分service层</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=7">07-sequelize集成</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=8">08-创建User模型</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=9">09-添加用户</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=10">10-错误处理</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=11">11-拆分中间件(上)</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=12">11-拆分中间件(下)错误处理的完善</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=13">12-密码加密</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=14">13-注册接口总结</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=15">14-验证登录</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=16">15-颁发token</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=17">16-用户认证</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=18">17-修改密码</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=19">18-路由自动加载</a><br>每次新建一个router.js文件都需要在app中配置一下，通过这节课，可以编写一个自动导入的代码，让开发更加的便捷。</li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=20">19-封装管理员权限</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=21">20-商品图片上传</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=22">21-商品图片上传优化(类型判断)</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=23">22-集成统一的参数格式校验</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=24">23-发布商品写入数据库</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=25">24-修改商品接口</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=26">25-硬删除接口</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=27">26-上下架商品mp4</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=28">27-商品列表接口实现</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=29">28-添加到购物车(上)-准备工作</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=30">29-添加到购物车(中)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=31">30-添加到购物车(下)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=32">31-获取购物车列表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=33">32-更新购物车</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=34">33-删除购物车</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=35">34-全选与全不选</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=36">35-添加地址接口(上)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=37">36-添加地址接口(下)</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=38">37-获取地址列表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=39">38-更新地址接口</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=40">39-删除与设置默认</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=41">40-生成订单</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=42">41-获取订单列表</a></li><li><input disabled="" type="checkbox"> <a href="https://www.bilibili.com/video/BV13A411w79h?p=43">42-更新订单状态</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>Bilibili</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>node</tag>
      
      <tag>koa2</tag>
      
      <tag>正在学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>短而美第6期 - 优雅的切换nodejs版本</title>
    <link href="/post/switch-node-version/"/>
    <url>/post/switch-node-version/</url>
    
    <content type="html"><![CDATA[<p>我自己下载安装软件的时候都会选择最新的版本，我电脑安装的node版本一直是最新的16，但是最近学习了一个项目，它的node版本需要14才可以，所以研究了一下node的版本怎么灵活的切换。</p><p>搜索发现nvm可以胜任这个任务，个人认为nvm类似于python的Anaconda，但是也不完全一样。</p><span id="more"></span><blockquote><p>参考教程 <a href="https://www.jianshu.com/p/ee8aa2298fdf">https://www.jianshu.com/p/ee8aa2298fdf</a></p></blockquote><h2 id="安装nvm"><a href="#安装nvm" class="headerlink" title="安装nvm"></a>安装nvm</h2><ol><li><p>首先需要卸载本地的nodejs</p></li><li><p>然后去GitHub官网下载nvm: <a href="https://github.com/coreybutler/nvm-windows/releases">https://github.com/coreybutler/nvm-windows/releases</a></p></li></ol><p>直接下载<a href="https://image.glwsq.cn/software/nvm-setup.zip">nvm-setup.zip</a>就可以了(点击可以用我的网站高速下载)</p><ol><li>然后直接安装</li></ol><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs batch">nvm list available 提供了可安装的 Node 版本列表<br>nvm install 14.17.4 安装所需的 Node 版本（默认为64位版本，因为当前系统的架构是64位）<br>nvm use 激活刚刚安装的版本，如果报错可能需要管理员权限的cmd<br>nvm list 用来确认安装并激活的正确版本的 Node（如果存在其他已安装的版本，则会列出）<br></code></pre></td></tr></table></figure><div class="note note-success">            <p>相关文章推荐：</p><ul><li><a href="/post/npmmirror/">优雅的切换npm镜像站</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>短而美</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>node</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>短而美第5期 - 优雅的切换npm镜像站</title>
    <link href="/post/npmmirror/"/>
    <url>/post/npmmirror/</url>
    
    <content type="html"><![CDATA[<p>每次安装好nodejs，首要的任务就是切换npm镜像站，这里总结了一下切换npm镜像的方法，我现在使用的是第二种，因为有一次淘宝镜像站下载不了一个包，切换成腾讯就完美解决了，nrm切换更灵活。</p><span id="more"></span><h2 id="方法一：更改npm配置文件"><a href="#方法一：更改npm配置文件" class="headerlink" title="方法一：更改npm配置文件"></a>方法一：更改npm配置文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">npm config set registry https://registry.npmmirror.com<br></code></pre></td></tr></table></figure><p>URL 即为需要设置的镜像站点地址，上面是淘宝的</p><h2 id="方法二：安装nrm-管理"><a href="#方法二：安装nrm-管理" class="headerlink" title="方法二：安装nrm 管理"></a>方法二：安装nrm 管理</h2><blockquote><p>安装这个的前提是现在能正常安装npm包，速度慢点也没关系</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install -g nrm<br></code></pre></td></tr></table></figure><p>待安装完nrm之后，通过nrm管理镜像的地址，切换命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nrm use taobao<br></code></pre></td></tr></table></figure><p>nrm除了淘宝站点镜像之外还有其他的，可以使用以下命令查看：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nrm ls<br></code></pre></td></tr></table></figure><p>输出如下：</p><blockquote><p>可以直接复制后面的地址用【方式一】来设置</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs txt">npm -------- https://registry.npmjs.org/<br>yarn ------- https://registry.yarnpkg.com/<br>tencent ---- https://mirrors.cloud.tencent.com/npm/<br>cnpm ------- https://r.cnpmjs.org/<br>taobao ----- https://registry.npmmirror.com/<br>npmMirror -- https://skimdb.npmjs.com/registry/<br></code></pre></td></tr></table></figure><p>查看安装好了没</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config get registry <br></code></pre></td></tr></table></figure><div class="note note-success">            <p>相关文章推荐：</p><ul><li><a href="/post/switch-node-version/">优雅的切换nodejs版本</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>短而美</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>npm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VS Code上传剪切板中的图片到七牛</title>
    <link href="/post/87a7dd59/"/>
    <url>/post/87a7dd59/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【舌尖上的中国】精彩文案（解说词）</title>
    <link href="/post/e32105ea/"/>
    <url>/post/e32105ea/</url>
    
    <content type="html"><![CDATA[<p>《舌尖上的中国》是纪录频道推出的第一部高端美食类系列纪录片，从2011年3月开始大规模拍摄，是国内第一次使用高清设备拍摄的大型美食类纪录片。共在国内拍摄60个地点方，涵盖了包括港澳台在内的中国各个地域，它全方位展示博大精深的中华美食文化。向观众，尤其是海外观众展示中国的日常饮食流变，千差万别的饮食习惯和独特的味觉审美，以及上升到生存智慧层面的东方生活价值观，让观众从饮食文化的侧面认识和理解传统和变化着的中国。</p><h2 id="第一集《自然的馈赠》"><a href="#第一集《自然的馈赠》" class="headerlink" title="第一集《自然的馈赠》"></a>第一集《自然的馈赠》</h2><p>中国拥有世界上最富戏剧性的自然景观，高原，山林，湖泊，海岸线。这种地理跨度有助于物种的形成和保存，任何一个国家都没有这样多潜在的食物原材料。为了得到这份自然的馈赠，人们采集，捡拾，挖掘，捕捞。穿越四季，本集将展现美味背后人和自然的故事。</p><p>香格里拉，松树和栎树自然杂交林中，卓玛寻找着一种精灵般的食物——松茸。松茸保鲜期只有短短的两天，商人们以最快的速度对松茸的进行精致的加工，这样一只松茸24小时之后就会出现在东京的市场中。</p><p>松茸产地的凌晨3点，单珍卓玛和妈妈坐着爸爸开的摩托车出发。穿过村庄，母女俩要步行走进30公里之外的原始森林。雨让各种野生菌疯长，但每一个藏民都有识别松茸的慧眼。松茸出土后，卓玛立刻用地上的松针把菌坑掩盖好，只有这样，菌丝才可以不被破坏，为了延续自然的馈赠，藏民们小心翼翼地遵守着山林的规矩。</p><p>为期两个月的松茸季节，卓玛和妈妈挣到了5000元，这个收入是对她们辛苦付出的回报。 </p><p>老包是浙江人，他的毛竹林里，长出过遂昌最大的一个冬笋。冬笋藏在土层的下面，从竹林的表面上看，什么也没有，老包只需要看一下竹梢的叶子颜色，就能知道笋的准确位置，这完全有赖于他丰富的经验。</p><p>笋的保鲜从来都是个很大的麻烦，笋只是一个芽，是整个植物机体活动最旺盛的部分。聪明的老包保护冬笋的方法很简单，扒开松松的泥土，把笋重新埋起来，保湿，这样的埋藏方式就地利用自然，可以保鲜两周以上。</p><p>在中国的四大菜系里，都能见到冬笋。厨师偏爱它，也是因为笋的材质单纯，极易吸收配搭食物的滋味。老包正用冬笋制作一道家常笋汤，腌笃鲜主角本来应该是春笋，但是老包却使用价格高出20倍的遂昌冬笋。因为在老包眼里，这些不过是自家毛竹林里的一个小菜而已。</p><p>在云南大理北部山区，醒目的红色砂岩中间，散布着不少天然的盐井，这些盐成就了云南山里人特殊的美味。老黄和他的儿子树江小溪边搭建一个炉灶，土灶每年冬天的工作就是熬盐。</p><p>云龙县的冬季市场，老黄和儿子赶到集市上挑选制作火腿的猪肉，火腿的腌制在老屋的院子里开始。诺邓火腿的腌制过程很简单，老黄把多余的皮肉去除，加工成一个圆润的火腿，洒上白酒除菌，再把自制的诺盐均匀的抹上，不施锥针，只用揉、压，以免破坏纤维。=</p><p>即使用现代的标准来判断，诺邓井盐仍然是食盐中的极品，虽然在这个古老的产盐地，盐业生产已经停止，但我们仍然相信诺邓盐是自然赐给山里人的一个珍贵礼物。</p><p>圣武和茂荣是兄弟俩，每年9月，他们都会来到湖北的嘉鱼县，来采挖一种自然的美味。这种植物生长在湖水下面的深深的淤泥之中，茂荣挖到的植物的根茎叫做莲藕，是一种湖泊中高产的蔬菜——藕。</p><p>作为职业挖藕人，每年茂荣和圣武要只身出门7个月，采藕的季节，他们就从老家安徽赶到有藕的地方。较高的人工报酬使得圣武和茂荣愿意从事这个艰苦的工作。挖藕的人喜欢天气寒冷，这不是因为天冷好挖藕，而是天气冷买藕吃藕汤的人就多一些，藕的价格就会涨。</p><p>整整一湖的莲藕还要采摘5个月的时间，在嘉鱼县的珍湖上，300个职业挖藕人，每天从日出延续到日落，在中国遍布淡水湖的大省，这样场面年年上演。</p><p>今天当我们有权远离自然，享受美食的时候，最应该感谢的是这些通过劳动和智慧成就餐桌美味的人们。</p><h2 id="第二集《主食的故事》"><a href="#第二集《主食的故事》" class="headerlink" title="第二集《主食的故事》"></a>第二集《主食的故事》</h2><p>主食通常提供了人类所需要的大部分卡路里。中国人的烹调手艺与众不同，从最平凡的一锅米饭，一个馒头，到变化万千的精致主食，都是中国人辛勤劳动，经验积累的结晶。然而，不管吃下了多少酒食菜肴，主食，永远都是中国人餐桌上最后的主角。</p><p>老黄的全名叫黄国盛，认识他的人都叫他老黄，从每年农历十一月初开始，老黄每隔三天，会拉着自己家里做的七百个馍馍，骑一个半小时的三轮车，到县城里去卖。 </p><p>老黄卖的黄馍馍，就是用糜子面做成的馒头。是陕北人冬天最爱吃的一种主食。糜子，又叫黍，是中国北方干旱地区最主要的农作物。8000多年前，中国黄河流域开始栽培黍。</p><p>在中国，五谷始终是一个变化中的概念。大约两千年前，五谷的排序为稻、黍、稷、麦、菽。而今天，中国粮食产量的前三名已经变成稻谷、小麦和玉米。中国，从南到北，广袤的国土，自然地理的多样变化，让生活在不同地域的中国人，享受到截然不同的丰富主食。</p><p>丁村，这个中原最古老的村落，谷物加工的历史已有上万年。附近曾经出土过中国最古老的石磨，证实了这一点。</p><p>擀面，是中原女孩子在成为女人的成长中，必须要掌握的生活技艺。按照中国人的风俗礼仪，过生日贺寿是一定要吃面条的，中国人称为长寿面。为什么中国人过生日要吃面？面条是怎么成为中国人贺寿的象征？有一个说法是面的形状长瘦，谐音长寿。面条成为讲究讨口彩的中国人最喜欢的主食。</p><p>兰州人都说：自己的早晨是从一碗牛肉拉面开始的，这个有着一千多家拉面馆的城市，每天要消耗一百万碗拉面，是兰州人心目中，当之无愧的主食王者。一碗面从拉制到煮熟上桌，看似不到两分钟时间，但其背后却有着很深的门道。</p><p>土生土长的西安人曹石，计算机系硕士毕业后，利用业余时间和朋友组了一个用西安方言演唱的说唱乐队。身兼大学教师、乐队的主唱作词、多种角色的他，在这首最广为流传，描写三秦大地平民美食的说唱里，一连串列举了陕西几十种诱人的美食，在曹石的歌里，被冠以经典传统的是牛羊肉泡馍。泡馍是最土生土长的西安主食，吃泡馍最讲究的是掰馍，对西安人来说，这不但是个进食的过程，还是个享受的过程，每个人根据自己喜好的口感，掰出大小、形状不一的馍块，再配以熬煮了十几个小时的老汤，一碗看似豪爽简单的羊肉泡馍，其实内在精致复杂。</p><p>几乎所有的中国人都知道一个概念：北方人喜欢吃面食，而南方人则离不开米饭，这是因为一千年前形成的两大农业布局，一个是黄河流域以黍和麦为主的旱作农业，而另一个则是长江流域的稻作农业。因此出现了中国独特的“南米北面”主食格局。</p><p>地处太湖流域的嘉兴，正处于中国最古老的稻作文化区之中，在相当长的时间里，嘉兴以天下粮仓而著称。然而，以江南精致细腻生活方式著称的嘉兴人，踏实放心的一天，却是从一个热腾腾的肉粽子开始的。</p><p>在现代化流水线上，粽子这个古老的食物，呈现出与传统方式不一样的生命力。刘光荣，这个从四川来嘉兴打工的裹粽技师，从每天上午8点到下午4点，要完成超过3000只粽子。平均每分钟裹7个粽子，每一个粽子，用的时间不到十秒钟，而份量的准确率是百分之百。在这样的车间里，每一个工作日，就会有大约100万只粽子被生产出来。</p><p>每年晚稻成熟，就到了宁波人打年糕的时候。孩子们约好都从宁波回到村里来看望阿公阿婆，四代同堂的一家人像今天这样围坐在一起的日子，一年只有难得的两三次。在这个颇为丰盛的餐桌上，自然少不了孩子们最喜欢吃的年糕。</p><p>做年糕是宁波人庆贺新年的一种传统，以前的宁波家庭要在新年之前做上几十斤至上百斤年糕，泡在冬水里储藏，从腊月一直吃到来年。</p><p>宁波水磨年糕用当年新产的晚粳米制作，经过浸泡、磨粉、蒸粉，搡捣的过程，分子进行重新组合，口感也得以改善。搡捣后的米粉团，在铺板上使劲揉压，再揉搓成长条，一条最普通的脚板年糕就成型了。</p><p>五岁的宁宁最高兴的事情就是跟着曾祖外婆一起做年糕。等宁宁长大的时候，也许不会记得年糕的做法，但那种柔韧筋道的口感，承载着家庭的味道，则会留在宁宁一生的记忆里。</p><p>春节，对于中国人来说，是一个属于家庭的节日。2012年春节，白波跟全家人一起在北京过年。作为一名职业摄影师的白波，常年在各地摄制组工作，一年中，也只有在过年这样难得的日子里，儿女们能回到父亲身边。</p><p>饺子是中国民间最重要的主食，尤其年三十晚上，吃饺子取更岁交子之意，在中国人的习惯里，无论一年过得怎样，春节除夕夜合家团圆吃“饺子”，是任何山珍海味所无法替代的重头大宴。如今，在几乎所有的传统手工食品都已经被放到了工业化流水线上被复制的今天，中国人，这个全世界最重视家庭观念的的群体，依然在一年又一年地重复着同样的故事。其</p><p>在这个时候，中国人心里，没有什么比跟家人在一起吃饭更重要的事情，这就是中国人的传统，这就是中国人，这就是中国人关于主食的故事。</p><h2 id="第三集-转化的灵感"><a href="#第三集-转化的灵感" class="headerlink" title="第三集 转化的灵感"></a>第三集 转化的灵感</h2><p>在吃的法则里，风味重于一切。中国人从来没有把自己束缚在一张乏味的食品清单上。人们怀着对食物的理解，在不断的尝试中寻求着转化的灵感。</p><p>位于云南红河地区的建水古城，古称临安。是一个多民族的聚居地，各种文化的掺杂形成了特有的氛围和格局。建水最著名的大板井旁，女人们单靠手指的合作，就构建起一条豆腐的流水线。</p><p>始建于明代初期的大板井，直径达到惊人的三米，几百年后依然不失活力。中国人相信，水能滋养人的灵性和觉悟。这一点就仿佛水对豆腐的塑造。两者间有一种不可言喻的共通。</p><p>姚贵文和王翠华围绕着豆腐的生活清淡辛苦。丈夫最大的愿望是能够去远方的大湖钓鱼，虽然他从来没有钓过鱼。在这对夫妇眼里，每一颗豆腐都很珍贵。它们能够帮助自己供养子女，过幸福安稳的生活。</p><p>九月下旬，乌珠穆沁草原已经褪去了绿色。孟克和家人抓紧时间，赶在严冬之前进行最后的出场放牧。奶茶是早餐中永远的主角。砖茶、黄油、炒米，以及鲜奶是一锅奶茶的重要内容。</p><p>奶豆腐是几天前做的。草原上的人离不开奶茶和奶豆腐。无法靠蔬菜和水果来补充的维生素和矿物质，都可以从这里获得。</p><p>一直向南，几千公里外的云南，几乎是同样的情形。白族人家用相似的手法转化这里的牛奶。乳扇被晾到院敞里风干，像是挂起了巨大的风铃。</p><p>这种远隔万里的默契，或许要追溯到蒙古人开疆拓也的年代。在800多年前，忽必烈时期的蒙古人远征到云南。定居至此的蒙古人也带来了遥远家乡的奶食味道。他们不会想到，这种转化的手法一直被流传下来，生机勃勃。</p><p>在蛋白质的提供上，大豆食品是唯一能够抗衡肉类的植物性食材。对于素食者来说，这相当完美。中国古人称赞豆腐有和德。吃豆腐的人能安于清贫，而做豆腐的人也懂得“顺其自然”。</p><p>安徽南部，独特的地理环境和温润的气候促成了人们恬淡保守的气质，也孕育出了特有的食物——毛豆腐。方兴玉是不会在湿热的夏天做毛豆腐的，桑拿天里，人们很难控豆腐发酵的走向。但是在其它的季节里，徽州温润的环境却能引导微生物们走上发酵的正轨。她希望与这有关的一切，自己的女儿都能够学习和领悟到。</p><p>聪明的中国人对这些微小生物的运用得心应手。事实上，这种转化的智慧在更为久远的年代里，就已经熠熠生辉了。</p><p>用稻米酿出的黄酒是世界上最古老的酒类之一。酒，应该是人们利用微生物的最早的案例了。立冬的清晨，绍兴的天空开始下起小雨。这对酿酒师傅们来说，是个好征兆。酵母菌喜欢江南冬季这种绵长而又不剧烈的冷。</p><p>绍兴，自古的繁荣富庶之地。如今，绍兴人家仍然乐于枕河而居，享受其中的一份闲适。酱园里，露天的空场排列着几百只硕大的酱缸。五十六岁的丁国云依然身手矫健。酱料粘稠、厚重，需要人力定时的上下翻动，酱缸内的发酵才会均匀。在这些酱缸里，微生物的世界，此消彼长，互相制约。“中国的酱”，在人类的发酵史上独树一帜，数千年间，它成就了中国人餐桌上味道的基础。</p><p>在中国的北方，酱的意味更加直接。再过三个月就是下新酱的时候了，但是准备的工作却要从现在开始。做酱是东北人家的大事情，邻居也赶过来帮忙。煮熟的黄豆在锅里直接被捣烂。在中国的东北地区，人们做酱只用大豆这一种材料。这样的单一也是一种奢侈。</p><p>温暖的火炕上，六只手合力把豆泥堆砌成型。酱的味道甚至可以成为衡量一个主妇合格与否的标准。最后用透气的黄纸包裹，捆绑成结实的酱坯。酱坯被挂上墙。在之后的两个月里，它们静静的发酵。等到来年春天，再开始更深入的转化。</p><p>所有这些充满想象力的转化，它们所打造出的风味和对营养的升华令人叹为观止；并且形成了一种叫做文化的部分，得以传承。</p><h2 id="第四集-时间的味道"><a href="#第四集-时间的味道" class="headerlink" title="第四集 时间的味道"></a>第四集 时间的味道</h2><p>时间是食物的挚友，时间也是食物的死敌。为了保存食物，我们虽然已经拥有了多种多样的科技化方式，然而腌腊、风干、糟醉和烟熏等等古老的方法，在保鲜之余，也曾意外地让我们获得了与鲜食截然不同、有时甚至更加醇厚鲜美的味道。时至今日，这些被时间二次制造出来的食物，依然影响着中国人的日常饮食，并且蕴藏着中华民族对于滋味和世道人心的某种特殊的感触。</p><p>秋日的清晨，古老的呼兰河水流过原野。它发源于小兴安岭，蜿蜒曲折地注入松花江。金顺姬从小在呼兰河边长大，对她来说，故乡，就是这种让她魂牵梦系的泡菜的味道。菜园里的白菜是母亲每年7月头伏时种下的，为了做成泡菜，所以选用的都是心紧叶嫩的品种。今天，女儿第一次和妈妈学习做泡菜。朝鲜族泡菜品目繁多，而且即便只是一个品种，也可以呈现出多种不同的味道:凉食的清爽，烹炒的鲜香，等等。漫长的冬日里，有了脆辣、鲜甜的辣白菜的陪伴，再寡淡的日子，仿佛也会变得温暖、富足而且有滋有味。   </p><p>香港的阿添和家人一起经营着自家的腊味店。每天早上，他都是店里最忙碌的人，做这份工作，他已经有了10年的经验。和兴腊味家有着60年的历史，以用料新鲜，考究，在顾客中建立了良好的信誉和口碑。如今，阿添和他的父亲、大伯一起，打理照料店里的一切。</p><p>而在内地的湖南，稻田里的禾花开了，也到了苗族人制作腌鱼和做腊肉的时节。湘西木材丰富，熏烤腊肉的燃料以硬木为佳，如茶树和杨梅树。熏烤时，要把腌制好的肉挂在取暖做饭的火塘之上，还不断将松果、茶壳、桔皮等放入火塘，这样熏烤出来的腊肉，就会带着茶果的香味。</p><p>对纯朴的苗家人来说，腌鱼腊肉，不仅仅是一种食物，而且是被保存在岁月之中的生活和记忆，永远也难以忘怀。</p><p>在今天的黄山地区，农家后院里依然晾晒着火腿和咸肉，洋溢着一派田园气息。用腌咸肉制作的“刀板香”是一道待客的主菜，也是徽州菜的代表作之一。</p><p>在叶师傅看来，家乡的农家火腿才是世上最美味的火腿。当然他也一定知道，在距古徽州不远的浙江金华，也出产一种大名鼎鼎这火腿，它以肌红脂白，肉色鲜艳，香气浓郁，滋味鲜美而而闻名于世。</p><p>三阳南货店是上海老辈人个个都晓得的土特产商店，江浙地区的各式干货在这里都能买到。腌腊柜台组的组长侯师傅，1975年就开始在这里工作。对金华火腿做品质鉴别，只需要使用这样一支竹签，把它分别插入火腿的上、中、下三个部位，特级的火腿，三签拔出来，每一签都会散发出一股扑鼻的异香。在某种意义上，像“三阳”这样遍布上海的南货店，其实就是这个移民城市的一座座味觉纪念馆。</p><p>霞浦，闽东最古老的县份。漫长的海岸线为这里制造出众多的天然港湾，大海已然成为了种植紫菜的一座水上农场。</p><p>林仁灼，16岁开始和父亲学习种植紫菜，如今已经49岁，今天，他要为自家的农田再架设几枝毛竹。从山上砍来的毛竹要经过预先处理:把里面的竹节疏通，以方便把毛竹插入海底。毛竹每根长16米左右，重200余斤。把它架设在海里，不是一件轻松的工作。</p><p>与闽东隔海相望的台湾，对于云林县口湖乡的渔民们来说，决定他们一年生计的关键时刻已经来临。乌鱼子是台湾西南沿岸的特产，取乌鱼卵腌制而成，由于形状像中国的墨，日本人把乌鱼子称为“唐墨”，并把它视为世界三大美食之一。在台湾和日本，乌鱼子一向被视为餐桌上的高档美味。它口感绵密，软糯滋润，只需薄薄一片，就已厚味无穷。</p><p>曾有学者推论，人类的历史都是在嗅着盐的味道前行。大澳，偏居中国南海一隅，早年因盛产海盐而闻名。</p><p>郑祥兴虾铺是经历四代人的百年老店，一直稳守大澳虾膏虾酱的领导地位。76岁的郭少芬，大澳本地人，从20岁嫁到郑家开始，做虾酱已经有50年以上的经验。无论是虾膏还是虾酱，主料和辅料，其实就是再简单不过的银虾和盐。制做方法，也无非就是用把虾和盐搅碎后放在竹筛上晒太阳。</p><p>老铺一直靠郭少芬和丈夫两个人打理，直到相濡以沫的丈夫在2011年去世。都说大澳是观赏日落最理想的地方，这里，指的也许不仅仅是风景。</p><p>这是盐的味道。山的味道，风的味道，阳光的味道，也是时间的味道，人情的味道。这些味道，已经在漫长的时光中和故土、乡亲、念旧、勤俭、坚忍等等情感和信念混合在一起，才下舌尖，又上心间，让我们几乎分不清哪一个是滋味，哪一种是情怀。</p><h2 id="第五集-厨房的秘密"><a href="#第五集-厨房的秘密" class="headerlink" title="第五集 厨房的秘密"></a>第五集 厨房的秘密</h2><p>要统计中国菜的菜品数量、毫无争议地划分菜系，是一件几乎不可能完成的事。烹炒煎炸蒸，火候，食材，调味……有时候，这些显得简单，有时候却又无比复杂。中国的厨房里，藏匿着什么样的秘密？是食材，佐料，调料的配比？是对时间的精妙运用？是厨师们千变万化的烹制手法？这不是一道简单的数学题。</p><p>这顿午餐是为了犒劳邻居们。每年的11月份，尼西乡的人们都要给青稞地施肥。为了不错过最佳的时机，各家之间互相帮忙。在今天，他们的耕种方式、生活习惯，依然还保持着原样。</p><p>扎西是个黑陶匠人，这里的人们固执地认为，用黑陶烹制出的菜肴，拥有特殊的好滋味。黑陶能承担的烹饪方法，就是煮。“煮”这种烹饪方式，与陶制炊具的诞生息息相关。陶器诞生之前，人们不一定能想到，他们的后代会吃出这么多花样。能够在烧和烤之外找到另一种让食物变熟的方法，在当时已经是一种惊喜和飞跃。</p><p>这里的人们有着自己的生活哲学，并不追求过于精致的生活习惯。作为水和火之间的媒介，它将温度传给食材，让美味释放出来。看似简单的沸腾下，却蕴藏着尼西人厨房的秘密。这秘密流传了几千年后，当初的“惊喜”已经变成日常的烹制手法。</p><p>中国人最早将“蒸”带入厨房，也创造了海量的蒸制菜肴。重阳节这天，是欧阳广业的四十岁生日。晚上之前，他要准备一场大型村宴，压力可想而知。村宴的场地是不固定的，灶台也须临时搭建。这样的炉灶，对于村宴再合适不过。广东是美食之乡，这看上去毫无秘密可言的厨房，却要满足这里挑剔的食客。</p><p>在中国的村宴里，蒸菜往往是主角。蒸是中国菜烹饪法的基本方式之一。在人们发现油脂的快速加热功效之前，蒸被认为比煮加热更快，并且更容易保持食材的完整形状。历史上，“蒸”字曾经和“祭”字同义。牺牲、祭品要保持完整形状。而水蒸气的运作，使热量比较均匀弥散于容器中，也使得蒸一整头猪成为可能。</p><p>在广东，人人几乎都是美食家，他们对菜肴有着几近苛刻的要求。蒸猪是今天宴席的压轴菜。作为一场成功的村宴，家人团聚，老友相会是重要的，美味传达出的满足感也必不可少。</p><p>离开故乡25年后，72岁的居长龙从日本回到扬州。他终于有机会来到熟悉的冶春茶社，再次品味熟悉的味道。</p><p>淮扬菜本身的最大特点，是将寻常的食材精雕细琢后，以华丽的姿态登场。这里面，中国厨房的另一大秘密——刀工的作用首当其冲。西餐的厨师，每个动作都有相应的刀具；中餐的厨师手中的一把刀，却能行出无数种刀法。中国菜的刀法之所以如此丰富，正因为它从来不是简单的“化整为零”。19岁开始，居长龙用三年的刻苦，将一把刀运用到纯熟。但刀工对年龄有着苛刻的要求，72岁的他，现在已近很少展示自己的刀工绝活了。</p><p>每一天，周赛群都会和一群孩子在一起，授业传道，试图把三十余年的经验悉数教给他们。无论天资如何，一年级的学生都必须在练习基本功的同时尽快掌握更多菜品的制作方法。他</p><p>当今的中国，每座城市外表都很接近。唯有饮食习惯，能成为区别于其他地方的标签。湖南菜香辣，“香”主要来自油脂。中国人的厨房少不了各种油脂，古人用油脂来对食材迅速加热，无疑是节省燃料的好方法。在今天，无论再多理论申明油脂过量的危害，中国人依然离不开那特有的脆爽口感。无论这是否矛盾，油脂的运用，是中国人对烹饪方法的莫大贡献。</p><p>这里是一家高级酒店的中餐厨房，所有的厨具应有尽有。国际名厨梁子庚，却打算用这些厨具来做一样不起眼的美食——咸鸭蛋。</p><p>尽管在全球很多国家的高级酒店做过总厨，梁子庚完成了对中西方烹饪的化学式理解。但骨子里，他还是最中意食物本来的料理方式。今天他要和老友搭档，做杭州菜，西湖醋鱼，这是一道对火候要求非常高的菜。他们将一条鱼剖开两半，一半汆水，一半过油。两种做法都需要在恰当的时机将鱼下锅和出锅，否则会直接影响到西湖鲲鱼特殊的鲜嫩口感。出锅后，两种做法的鱼在同一个盘子中合璧，浇上炒好的糖醋，美味看上去就已经呼之欲出。</p><p>不过，遗憾的是，腌制一个月的咸鸭蛋，并不算成功。对于厨师来说，永远会有未知的美味等待解密。小小的一枚咸鸭蛋，照样能难倒一位国际名厨。</p><p>对于专业的厨师来说，厨房的秘密是他们一生的财富。对于普通人来说，厨房的秘密则更多的和他们的青春、情感、记忆联系在一起。</p><p>李羡有就是这样的香港人，她今天打算自创一道新菜。这道菜是用鸡蛋液把肉馅封在柚子皮里，先煎，再浇入成品高汤煨制。和大多数主妇一样，李婆婆不曾受过专业的厨艺训练，她每天炖的汤、烧的菜，既没有美轮美奂的卖相，更没有出神入化的手段。然而，这并不妨碍大多数中国人对“妈妈菜”的眷恋。</p><p>厨房的秘密，表面上是水与火的艺术。说穿了，无非是人与天地万物之间的和谐关系。因为土地对人类的无私给予，因为人类对美食的共同热爱，所以，厨房的终极秘密就是——没有秘密。</p><h2 id="第六集-五味的调和"><a href="#第六集-五味的调和" class="headerlink" title="第六集 五味的调和"></a>第六集 五味的调和</h2><p>不管在中餐还是在汉字里，神奇的“味”字，似乎永远都充满了无限的可能性。除了舌之所尝、鼻之所闻，在中国文化里，对于“味道”的感知和定义，既起自于饮食，又超越了饮食。也就是说，能够真真切切地感觉到“味的，不仅是我们的舌头和鼻子，还包括中国人的心。</p><p>和全世界一样，汉字也用“甜”来表达喜悦和幸福的感觉。这是因为人类的舌尖能够最先感受到的味道，就是甜，而这种味道则往往来源于同一种物质——糖。</p><p>对于阿鸿来说，糖不仅表示着甜，更意味着一切。糖葱薄饼，潮州著名的传统甜食，阿鸿的手艺是祖传的。今天，阿鸿准备多做一些糖葱，明天就是当地隆重的节日——冬节。祖祠中，随着大戏的开场，人们怀着敬意，把各种色泽艳丽的甜品奉献给祖先，同时为自己的生活祈福。阿鸿的心愿，是他的传统手工技艺能继续为整个家庭带来富足。</p><p>中国人在品尝生活的甘甜之时，似乎也很善于欣赏苦。</p><p>10月的果园，茶枝柑由青转黄，气味芬芳。味苦带甘的新会陈皮就出自这些饱满的果实。储存年份的长短，决定了陈皮的等级和价值。在南中国，陈皮甚至能决定一家餐馆的兴衰。</p><p>澳门路环岛，阿伦进完货回到店里。他是这家海鲜餐厅的主人。餐厅以阿伦祖父的名字命名，半个多世纪以来，生意很少冷场，秘密就在于餐馆的招牌菜——陈皮鸭。</p><p>阿伦的记忆里，父母始终只是在店里日夜忙碌的两个身影。童年给他留下的，是辛苦的回味。陈皮飘香里，时光仿佛过得很快，如今，阿伦已有了稳定的工作和收入。在他看来，四十多年的生活经历，如果用一句话来概括，最准确的，莫过于“苦尽甘来”。</p><p>咸的味觉来自盐。在中国菜里，盐更重的使命，是调出食物本身固有的味道，改善某种肌体的质地。在中国的烹饪辞典里，盐是百味之首。</p><p>粤东海边，村民世代以晒盐为生。不下雨的日子里，阿刘每天都要在盐田里忙碌。晒盐的收入微薄，一年不到一万元，阿刘还要做电工和捕鱼贴补家用。村子里的人大多外出打工，大片的盐田已经荒废，阿刘依然选择留守。</p><p>酸味能去腥解腻，提升菜肴的鲜香。当酸味和甜味结合在一起时，它还能使甜味变得更加灵动，更加通透。酸甜，正是大部份外国人在中国以外的地方对于中餐产生的基本共识。</p><p>在烹制肉类时，酸味还能加速肉的纤维化，使肉质变得更加细嫩。当然，“酸”味本身，不尽能促进消化，增进食欲，与此同时，在世界通用的“甜”以及“苦”之外，中国人还很特别地使用“酸”字来形容某种疼痛、某种妒嫉、某种不堪以及某种纠缠而难以言说的苦难。</p><p>除了“酸”，还有一种可以提振食欲、并且在中餐的菜谱上经常合“酸”字合并使用的味道，那就是“辣”。</p><p>素琼是个菜农，也是绝对的一家之主。在四川，许多妇女都像素琼这样开朗、坚韧、果断，汉语里，人们用“泼辣”来形容这种性格。四川盆地气候潮湿，多阴雨，住在这里的人，正需要辣椒的刚猛热烈。</p><p>在川菜中，无论是作主料、辅料还是作调味料，辣椒都是宠儿，它给川菜烙上了鲜明的印记。素琼特意推迟了这一造辣椒的种植和采摘，果然在冬季里卖出更好的价格，这种精明让她丈夫十分佩服。</p><p>中国烹饪，既能像麻辣的川菜一样如此凶猛地侵略我们的味觉，也能润物细无声地让我们的舌尖领略鲜味的美好。</p><p>庄臣18岁时，进入中国最早的五星级酒店，成为一名厨师。2000年，庄臣辞去餐饮总监的职务，成为职业美食家、广东饮食文化的推广者。他认为，在烹饪中保持食材的原味，是一种素面朝天的鲜美。</p><p>“鲜”是只有中国人才懂得并孜孜以求的特殊的味觉体验。全世界只有中文才能阐释“鲜味”的全部涵义。然而所谓阐释，并不重在定义，更多的还是感受。 </p><p>“鲜”既在“五味”之内，又超越了“五味”，成为中国饮食最平常但又最玄妙的一种境界。<br>五味使中国菜的味道千变万化，也为中国人在况味和回味他们各自不同的人生境遇时，提供了一种特殊的表达方式。在厨房里，五味的最佳存在方式，并不是让其中有某一味显得格外突出，而是五味的调和以及平衡，不仅是中国历代厨师和中医不断寻求的完美状态，也是中国在为人处世、甚至在治国经世上所追求的理想境界。</p><h2 id="第七集-我们的田野"><a href="#第七集-我们的田野" class="headerlink" title="第七集 我们的田野"></a>第七集 我们的田野</h2><p>中国人说：靠山吃山、靠海吃海。这不仅是一种因地制宜的变通，更是顺应自然的中国式生存之道。从古到今，这个农耕民族精心使用着脚下的每一寸土地，获取食物的活动和非凡智慧，无处不在。</p><p>贵州省从江县，侗族、苗族和壮族聚居的山区，这里的人自古以糯米为主食，在高山梯田里种植着近百种原始的糯稻。远离现代文明的喧嚣，散落的村寨像一个个孤岛，深藏在大山深处。</p><p>十月，是糯稻成熟的季节，壮族聚居的下尧村，正在迎接一个专为稻谷丰收设置的节日—新米节。但糯稻并不是村民们唯一的收获，水田里还藏着其它的秘密。水稻田里可以同时养鲤鱼和鸭子，这种稻鱼鸭共作的古老体系，已被列入全球重要农业文化遗产。</p><p>獐子岛，黄海北部一个不足15平方公里的岛屿，却因为海域里的物产富甲一方。碧波之下，生存着一个兴旺的群体。被中国人视为海中珍品的海参、鲍鱼、海胆等无脊椎动物恰好占据了其中的多数。纯净的水体和活跃的洋流造就了它们非凡的品质。</p><p>三年前，数以亿计人工培育的海参幼苗被播撒在这片水域，它们和野生同类的成长轨迹完全相同。这是人类和大自然的携手合作，以生态的方式，实现了耕海牧渔的理想。45岁的潜水员王厚喜正在准备职业生涯中的最后一次入水。</p><p>河蟹，学名中华绒螯蟹。繁衍期，它们成群结队从栖息的支流和湖泊迁移到长江口。因为生态环境的改变，今天，野生中华绒螯蟹已经十分罕见。小太是人工繁育的一代。河塘里的水全部引自太湖，小太的食物是湖里的水草和小鱼虾，与吃饲料的同类相比，它拥有更长的生长期和更健壮的体魄。今天的中国，大闸蟹已经成为利益最高的养殖项目之一。</p><p>地处长三角北端的江苏兴化水乡，仿佛一片被时光遗忘的土地。盛夏的正午，夏俊台和王元凤把船划进了湖荡，给一种嗜水的高大蔬菜进行浇灌。他们脚下这块样貌独一无二的土地，叫垛田。</p><p>各种葱茏的蔬菜中，身形魁梧的芋头是绝对的多数。四面环水的垛田，恰好能够满足这个物种最大的嗜好：喝水。每天，老夏要给芋头浇四次水，每次浇够一个小时才能保证芋头的需水量。</p><p>在中国经济最活跃的地区，祖居兴化农村的夏俊台，可能是家族中最后一位从事农作的人。但这并不影响他安然享受这里的一切，天然的垛田、芋头、以及他和妻子的家。。</p><p>青藏高原，世界的屋脊。喜马拉雅山横亘于南部，它的北面，雅鲁藏布江从雪山冰峰间流出，奔向藏南的谷底，开辟了西藏最富庶的农业区——日喀则。</p><p>村外，人们种植的青稞就要成熟了。在寒冷的极地，人们需要借助饮食来补充生命的能量。4000米以上的海拔，自然的馈赠并不丰富，有限的食物当中，青稞，成了人们最依赖的主食。望果节在青稞成熟前举行，是一年中最盛大的节日。祭台上，铺满青稞粉的手印，被赋予了强大的精神力量。青稞粉被抛向空中。人们相信，祈祷的声音，可以直达天宇。</p><p>北京，繁华的国际化都市。林立的高楼，围绕着古老的紫禁城，也围绕着不同气质的老街小巷——胡同。住在胡同的贵春有一个不平凡的理想：拥有一片自己的菜园。于是，贵春把他的理想搬上了屋顶。</p><p>种子在地下静静地沉睡着，春天的北京，看不到一点绿意，屋顶上的鱼池还留有去年冬天的残冰。夏天一到，贵春的屋顶完全换了容装。当都市中的人们涌向菜场，将远道而来的蔬菜带回家，贵春却可以像个自在的农夫，就地取材，自给自足。</p><p>都市里，成片的屋顶仿佛被遗弃的空间，了无生气。而贵春的屋顶菜园却是一片清凉世界。不足100平方米的绿色屋顶，用它的每一个叶片，净化着都市的空气。它们是贵春送给这个城市的礼物。</p><p>不同地域的中国人，运用各自智慧，适度、巧妙的利用自然，获得质朴美味的食物。能把对土地的眷恋和对上天的景仰，如此密切系于一心的唯有农耕民族。一位作家这样描述中国人淳朴的生命观：他们在埋头种地和低头吃饭时，总不会忘记抬头看一看天。</p>]]></content>
    
    
    
    <tags>
      
      <tag>创作完成</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>短而美第4期 - VS Code快速保存用户代码片段</title>
    <link href="/post/snippet-factory/"/>
    <url>/post/snippet-factory/</url>
    
    <content type="html"><![CDATA[<p>在写文章或者敲代码的时候，会经常用到一些固定格式的文本，可以用vscode提供的用户代码片段来解决，但是编写配置非常麻烦，可以借助下面的插件来方便保存用户代码片段。</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装VS Code插件 snippet-factory<br><img src="https://image.glwsq.cn/img/VS-Code%E5%BF%AB%E6%8D%B7%E6%8F%92%E5%85%A5%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5-2022-02-03-22-15-20.png"></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>选中代码右键，选择：<code>Save as snippet</code><br>或者选中代码使用快捷键：<code>ctrl+shift+p</code><br>就会打开插入的代码片段，然后对应的修改一下，例如：</p><figure class="highlight json"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;输出debug&quot;</span>: &#123; <span class="hljs-comment">// 随便写个名称</span><br>        <span class="hljs-attr">&quot;prefix&quot;</span>: <span class="hljs-string">&quot;debug&quot;</span>, <span class="hljs-comment">// 触发前缀</span><br>        <span class="hljs-attr">&quot;scope&quot;</span>: <span class="hljs-string">&quot;javascript&quot;</span>, <span class="hljs-comment">// 对应语言</span><br>        <span class="hljs-attr">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment">// 代码片段说明</span><br>        <span class="hljs-attr">&quot;body&quot;</span>: [ <span class="hljs-comment">// 具体的代码片段</span><br>            <span class="hljs-string">&quot;console.log(&#x27;debug&#x27;)&quot;</span><br>        ]<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后就可以在VS Code中愉快的敲代码了。<br><img src="https://image.glwsq.cn/img/%E7%AC%AC4%E6%9C%9F-VS-Code%E5%BF%AB%E6%8D%B7%E6%8F%92%E5%85%A5%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5-2022-02-08-23-48-04.png"><br><img src="https://image.glwsq.cn/img/VS-Code%E5%BF%AB%E6%8D%B7%E6%8F%92%E5%85%A5%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5-2022-02-03-22-14-29.gif"></p><div class="note note-success">            <p>相关文章推荐：</p><ul><li><a href="/post/d003791c/">VS Code配置markdown代码片段</a></li><li><a href="/post/vscode-paste-image/">VScode中插入剪切板中的图片</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>短而美</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>vscode插件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VS Code配置markdown代码片段</title>
    <link href="/post/d003791c/"/>
    <url>/post/d003791c/</url>
    
    <content type="html"><![CDATA[<p>我的文章里面会经常用到一些固定的格式的文本，正好可以直接用vscode提供的用户代码片段。</p><span id="more"></span><p>但是即使添加好代码片段了，发现在markdown书写过程中并不会进行提示</p><p>打开vs code的设置，<code>文件 --&gt; 首选项 --&gt; 设置</code></p><p><img src="https://image.glwsq.cn/img/VS-Code%E9%85%8D%E7%BD%AEmarkdown%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5-2022-02-03-21-49-56.gif"></p><p>然后搜索quickSuggestions</p><p><img src="https://image.glwsq.cn/img/VS-Code%E9%85%8D%E7%BD%AEmarkdown%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5-2022-02-03-21-54-24.png"></p><p>追加代码，就可以了</p><figure class="highlight json"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs json"><span class="hljs-string">&quot;[markdown]&quot;</span>:&#123;<br>    <span class="hljs-attr">&quot;editor.quickSuggestions&quot;</span>: <span class="hljs-literal">true</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>vscode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作完成</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>短而美第3期 - GitHub Clone切换为ssh方式</title>
    <link href="/post/github-clone-ssh/"/>
    <url>/post/github-clone-ssh/</url>
    
    <content type="html"><![CDATA[<p>Git在clone的时候使用ssh链接，速度将会更快更稳定，本篇文章介绍如何配置ssh公钥，免密登录GitHub。</p><p><img src="https://image.glwsq.cn/img/202202031932922.png"></p><span id="more"></span><h2 id="向GitHub中添加ssh公钥"><a href="#向GitHub中添加ssh公钥" class="headerlink" title="向GitHub中添加ssh公钥"></a>向GitHub中添加ssh公钥</h2><ol><li>打开GitHub添加key的页面：<a href="https://github.com/settings/keys">https://github.com/settings/keys</a></li><li>new 一个 SSH key</li><li>把<code>%HOMEPATH%/.ssh/id_rsa.pub</code>中的内容复制到Key文本框中，Title随便写</li><li>Add SSH key</li></ol><p><img src="https://image.glwsq.cn/img/GitHub-clone%E5%88%87%E6%8D%A2%E4%B8%BAssh%E6%96%B9%E5%BC%8F-2022-02-03-21-11-48.png"></p><div class="note note-success">            <p>相关文章推荐：</p><ul><li><a href="/post/ssh-keygen/">ssh生成公钥</a></li><li><a href="/post/github-uu/">通过UU加速器免费加速GitHub</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>短而美</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>短而美第2期 - 用UU加速器免费加速GitHub</title>
    <link href="/post/github-uu/"/>
    <url>/post/github-uu/</url>
    
    <content type="html"><![CDATA[<p>GitHub访问很慢，但是最近发现了uu加速器可以进行加速，自己也使用了一段时间，发现体验很好。只需要下载安装<a href="https://uu.gdl.netease.com/4027/UU-4.15.0.exe">uu加速器</a>，然后选择【学术资源】加速就可以了</p><span id="more"></span><p><img src="https://image.glwsq.cn/img/202201201740818.png"></p><div class="note note-success">            <p>相关文章推荐：</p><ul><li><a href="/post/ssh-keygen/">ssh生成公钥</a></li><li><a href="/post/github-clone-ssh/">GitHub clone切换为ssh方式</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>短而美</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>短而美第1期 - 生成ssh公钥</title>
    <link href="/post/ssh-keygen/"/>
    <url>/post/ssh-keygen/</url>
    
    <content type="html"><![CDATA[<h2 id="生成公钥"><a href="#生成公钥" class="headerlink" title="生成公钥"></a>生成公钥</h2><p>生成公钥只需要一个命令：<code>ssh-keygen</code></p><p>一路回车就可以了<br><img src="https://image.glwsq.cn/img/ssh%E7%94%9F%E6%88%90%E5%85%AC%E9%92%A5-2022-02-03-21-24-44.png"><br>会在用户文件夹<code>%HOMEPATH%/.ssh</code>下面的文件夹中出现id_rsa.pub<br><img src="https://image.glwsq.cn/img/202202031928559.png"></p><div class="note note-success">            <p>相关文章推荐：</p><ul><li><a href="/post/github-clone-ssh/">GitHub clone切换为ssh方式</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>短而美</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
      <tag>ssh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客仓库</title>
    <link href="/post/437f992e/"/>
    <url>/post/437f992e/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="04eae8d79cb549e5baaa0a5795cc857f0860c30fe5e91bf0b2dfeda360dd0d78">3cda45eb18a6d7e6d918c351ef05b50ad3280022857ff547b374b3c461cb6fdc33b0974cab4835850ec3006e5a8cae57109fb1cfa036fee04dd2a16157716d599b22bcaf24b968a668040f483a8164fe180985c8524bd82c1753cc0e4d0261c2eae7f5ae84b73347d61e989ca2a9fbfff4f83779f6cca891532c07d158e26c4ff705af093514f77a1a0f8f113255a438c979c0375f87de81855e041e991b0921dcaa89390fcea5f626e496841878181bb56c2ac63cb177547769ff3cdbfcbdfed162668a7428e8059896a4323b664387dbbcf4bd027571bc5db2e622f4d2b63e85d6b7038b5eddd4e7792967badc1b9d80cc4843123e3149d46ee876323eee3eddd1b09e51a1ee2bc5c92a764448f53d0f9f1289aa06d70276489581ca76b2ad8f50e7d6b0f632cd239e61f15bdc7503f8f64ae676424a4b7a6c129e8a1c06930da6a5a8ce3446a2dd4e9b9a76933245ee863fd29cac63329e34c1e91f8f4a0c27f3aa66d8ab060e6b07ff1af8895b261172928a23f475f8df955319f95f487680a6e48b64838d7e585a12c98bc62a8f098ba01e5497c4d4fb3040c3689e70e5da5049050e08943854a143a0ecf4197ca8889873c0fee69c1a8fbaa24159d587582d403d9ca1157450ce466f0b9621f7e17ea535fbd6c626bbfecc97d4bfc5f191906f419fc70bbadc2006d40817822125e1313060103b55b5988271d3a17458edabc6208ddf37de77ccebdb12bda72116e7048c29d67b68bf7b1b58f2524948c2fc17b2093e9e867dca6140ee794992</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>个人文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常用软件</title>
    <link href="/post/software/"/>
    <url>/post/software/</url>
    
    <content type="html"><![CDATA[<blockquote><p>记录自己常用到的一些软件，方便使用，下载链接都是经过加速的，如果你也需要，可以收藏这个网页</p></blockquote><span id="more"></span><p><a href="https://kodo-toolbox.qiniu.com/kodo-browser-Windows-x64-v1.0.15.zip">七牛对象存储图形化管理工具</a></p><p><a href="https://image.glwsq.cn/software/Obsidian.0.13.19.exe">Obsidian</a></p><p><a href="https://image.glwsq.cn/software/PicGo-Setup-2.3.1-beta.2-x64.exe">PicGo</a></p><p><a href="https://image.glwsq.cn/software/Windows%E7%94%B5%E8%84%91%E5%BC%80%E5%90%AF%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5-RDPW_installer-Black.exe">Windows电脑开启远程桌面连接-RDPW</a></p><p><a href="https://image.glwsq.cn/software/typora_0.11.18_64bit_Setup.exe">typora</a></p><p><a href="https://image.glwsq.cn/software/2345%E5%A5%BD%E5%8E%8B-%E7%BB%BF%E8%89%B2%E6%97%A0%E5%B9%BF%E5%91%8A.exe">2345好压-绿色无广告</a></p><p><a href="https://image.glwsq.cn/software/360%E9%A9%B1%E5%8A%A8%E5%A4%A7%E5%B8%88%E7%BB%BF%E8%89%B2%E5%85%8D%E5%AE%89%E8%A3%85.zip">360驱动大师绿色面安装</a></p><p><a href="https://image.glwsq.cn/software/DiskGeniusPro_x64.zip">DiskGeniusPro_x64</a></p><p><a href="https://image.glwsq.cn/software/Windows%E7%94%B5%E8%84%91%E6%BF%80%E6%B4%BBHEU_KMS_Activator_v24.5.0.zip">Windows电脑激活KMS</a></p><p><a href="https://image.glwsq.cn/software/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE-XMind2020.zip">思维导图-XMind2020</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PicGo配置文件</title>
    <link href="/post/983aebc4/"/>
    <url>/post/983aebc4/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="b0f40ea973abcebf5f71de8f2b76a91e008610397f62a5041cf6a53d2f88ea55">3cda45eb18a6d7e6d918c351ef05b50a240fb22f7c9b5e58f84306002ba41da95e2d42e207fd79f077742887a29aca637aed8c892def585b9e53a85b03083c9164a439c93644d2e27674f5162f1a008c2a70990e44f440e8c3561a8100a51dc821501529c8c0fb557948793ba3d639a8fcae30c8d89cc6a6f28d1df79b1b0ea5dac2eb5c3af66ce3d98c71ba810e86032df789967ede427cae3b3c9b0ff3b95b85ad232defcb73d0a928c28d071f59a6fadde21642a8743eb28d42bd7fb45215d6fe3e2209f50c4cccf97ee3df40a2097e4a2cbcc01bea2e79c790e0ee3499f7994c2b1eb2b158f2a676198ca111edcc3196dd6829957461e676c1f3617a1748f63fb7a6a5026fde80ceac39252082fd54de9afff54a19bdc37ba4dccf9b78b3a8fcce9b1f9198f5f96eca6f70e53547344b5246a4cc57d4a4d22ec361b31a2431d5d2e7925f8c6e54ff9c86d1b40fe54dda79b0bac5b1cb3de7d77be3727bbc593c54ab3a2fe0d08053cbde1d8abac975f9d50cea4a35f61313bfb0d18553dea35bd286a5da8868033610764f3a5cc2f69ad072513860dfd3905666dc672c192c1f04e29b1baa5f3de38464863a8ddc143d77f7f2e84776d52c0534169f0e8e595ec366cf1201d3a1724ab57aad2f04a6a27a0daa77db24594192000a2d6e333e3df0adad860a7ec13e26c6ef1852247a53af443ebd78f4398129d1a1352c40b34ea827ea490b98632908a28931492fe26b7593f3a12ceda4abeeed20d375f428804ea97c6a408a32ec95ba24aee73a2983fa08f4604276789a9a2185fef7937bb4995cb049ae7bd757ba02193dc4660bfc84d434aeee7736eae6dcd795fe82a6e7144017982bb6249676c2b4b9dc2de8c2665785050d81cd1da2a14812674157fac3cf374c49ca2b01dbd938842d4523595cd24df760e10a1137932f4880574fd232d147c281e8e2dd526b19066644a941b0c897a1b68e56ed4e74a93895a67def1846824041663bb871bdb148fd188ee0311997db5ba72e0945479a48a0fbc185e85d513b79555c4dcaf92c0fdfad04814eb479dff4f518521fed8b2831f6084b37ea764562eb345b2693ce46a714003a65b7e0689d2fc96ee3464336a28801ab470af8db7381a1068a16fd580a2c85458a364ce8ba1b509c062b0bf5eaa6113490bbab2438b29509be068ba7dddfda16e58dd134a6ad380bdf2295591a02a595fe4e12c0518bd2bb61a1bf0704c3c3503b5ac9e650ee3824f74448b6cfd9367d4a17c9b79654f14bf4f232b38648924523ec781fc7ee28b9d3ed4e32382ad52d4a4b9f8f4cb116e7f0ced05c2466e4ed25f7b1c9cad8d15e9b4a3f53fbe41d34e6729ff2134bf1af2df996ee23fba8e78fdcfd8d5deac9333e32e469bc0df55b5b2301d36e966b2f38cd2ce7366c9bcda5de61f3d10086a16d771ea283c24941322ef3476a4638fea0d9cd166e60d512a0f1bfc0ce7edb08018950f5109b9713801ebb97b8dbddd6f8a8d055654f3a316de3f17c20c6a68ec978c636a3dff408ee489c0ab2385b9fd45a57c5bcfc2cb40f79ed8d15d096e6e762791faad9a079a876c7edd5b741a24f8ebe7dcb62e4df9fb83ac59b1ba28620992c8c4a180ae04b7433e38ce5119676351bbebd3052dc07d532a15b19fa90a15e3f939be1ad8d7eb18e37f48ffa77c4a893499b6537a3a086f48ab1d4683643e22f413bd4baff3aee191653f7a28f51890a58e3eadd9929bd37f2433f82357aef0c18b90e85ff1511fccddfa1f5d49aa45ee977c58154ae42b8610d2d8affa412df11d4d048eb77f0040d73c401b07c5d2208cf710f875bf22b22ec1d44cca6e045635967ae7dcd607c72119c97c477847d00c8ad01e0b639907545d480ca9587d1b3aa2661f025f04af99b5041dd3f1b4a1a255d6a8cc01e56a5ed366da3466677a1cb611d39ad34d7fa95708cc40ea7cfd8ab9deda39f6c6dd5b6eb3132d0a102641c54bcfce67a053c9b01b7c184593e5ab3a68db92e39c037baa48723831e27db224fa85e9ae577563564048ee9e556d5ef8a54569a30609421a44abc4499a683db23b24804999f17f107e40cceb6fd6f0f13ef3eb637b373ef5868545dd120f6968e7b698e8ea51017e8a7d76c4a1d5911e3c673708d2f9360a37d273b6c29b8becd7daceb5eff8777d7331c3c7de2b9ab6fe5f972ff19071b781417e2182e37cd28c70eabf68570a7fba990a1ed1e782a783db85661946b47b6729464c47b933096e7e4b97006236ed260b3668a8664419f06769f812538ab0a8954e438e842ab45309ba16d2742a88e22e57b659fa54439bc5f4ec0be82f1bbc4417beb507d4cee878cb6f5062e52ce7827c001bd22b260fb26f1ca130a06fa48479a86decb29759d351951f0762c72ddb1874e255bb3acf6984f5b7d600a0f6e216aed3017f72c0ffd4d69c1465b48d3f262e7d6a4c5f2386187f5329f332fdeb2b819b3b5a883dd1fb667518df3bfcd8efd88c67135d157e877e32e3d0caeee7ea400c60832bb6bfb5b415e4fa09418ffaa422df4821fe200561918430ec865eafb7e4a3abcb5d09d3368a6192cd80fba693e323263e99417cb9ded13f8d49d2c01ee5ac20971f1d49fc5170bc8bf93366a7303a34d0ff02f85af9b0adeb94939c253a4456920d54efa863643415ea7e55c9ac84a4144caa6bdfb4f86bcda71b55980d3f56c33b3745a218cb01836145e1fefba2b77cbf29eba6994a394baee857ac99612d00742d9cb834ed21c593d8606bce8472dcd5c12d40f2c0e2eb0c6472290da15795ee06d1769b12e570c99a5b25a05b029c9b99ac939db1f827d03ba249605d7a3962f24648ad2257c4335412adfc0b5ad0fc0d42804b687c912ef9413b3b597edb528e87e0fe81c49d65f2c578764e73097</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>个人文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>个人文章</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>js爬虫神器puppeteer</title>
    <link href="/post/8e59b288/"/>
    <url>/post/8e59b288/</url>
    
    <content type="html"><![CDATA[<p>今天无意中发现一个js的爬虫神器，然后稍微学习了一下，感觉可以用来干很多事情。</p><span id="more"></span><p>一句话总结一下：这个就是一个浏览器，可以用来干浏览器能干的事情，可以爬取<strong>动态网页</strong>上的内容。</p><p>我感觉跟python的selenium很像，但是这个puppeteer是谷歌出的，感觉会更厉害吧，毕竟用的就是chromium内核。</p><p>之前想找一个网页预览截图的api，找到了几个外国的，但是非常不稳定，用这个轻轻松松写出来了。</p><p>先放一下官方文档，个人感觉，跟着官方文档学习是一个很好的学习方法。</p><p><a href="https://zhaoqize.github.io/puppeteer-api-zh_CN/#/">https://zhaoqize.github.io/puppeteer-api-zh_CN/#/</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>首先肯定需要安装一下puppeteer的npm包</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> i puppeteer<br></code></pre></td></tr></table></figure><h2 id="入门案例"><a href="#入门案例" class="headerlink" title="入门案例"></a>入门案例</h2><p>跳转到 <a href="https://www.glwsq.cn/">https://www.glwsq.cn</a> 并保存截图至 glwsq.png:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> puppeteer = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;puppeteer&#x27;</span>);<br><br>(<span class="hljs-keyword">async</span> () =&gt; &#123;<br>  <span class="hljs-keyword">const</span> browser = <span class="hljs-keyword">await</span> puppeteer.launch(&#123;<span class="hljs-attr">headless</span>:<span class="hljs-literal">true</span>&#125;); <span class="hljs-comment">// headless:true表示后台运行浏览器</span><br>  <span class="hljs-keyword">const</span> page = <span class="hljs-keyword">await</span> browser.newPage();<br>  page.setViewport(&#123;<span class="hljs-attr">width</span>: <span class="hljs-number">1280</span>, <span class="hljs-attr">height</span>: <span class="hljs-number">720</span>&#125;) <span class="hljs-comment">// 设置窗口分辨率</span><br>  <span class="hljs-keyword">await</span> page.goto(<span class="hljs-string">&#x27;https://www.glwsq.cn&#x27;</span>);<br>  <span class="hljs-keyword">await</span> page.screenshot(&#123;<span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;glwsq.png&#x27;</span>&#125;);<br><br>  <span class="hljs-keyword">await</span> browser.close();<br>&#125;)();<br></code></pre></td></tr></table></figure><p>在页面中执行js脚本，相当于在浏览器的控制台中输入js代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> puppeteer = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;puppeteer&#x27;</span>);<br><br>(<span class="hljs-keyword">async</span> () =&gt; &#123;<br>  <span class="hljs-keyword">const</span> browser = <span class="hljs-keyword">await</span> puppeteer.launch();<br>  <span class="hljs-keyword">const</span> page = <span class="hljs-keyword">await</span> browser.newPage();<br>  <span class="hljs-keyword">await</span> page.goto(<span class="hljs-string">&#x27;https://example.com&#x27;</span>);<br><br>  <span class="hljs-comment">// Get the &quot;viewport&quot; of the page, as reported by the page.</span><br>  <span class="hljs-keyword">const</span> dimensions = <span class="hljs-keyword">await</span> page.evaluate(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> &#123;<br>      <span class="hljs-attr">width</span>: <span class="hljs-built_in">document</span>.documentElement.clientWidth,<br>      <span class="hljs-attr">height</span>: <span class="hljs-built_in">document</span>.documentElement.clientHeight,<br>      <span class="hljs-attr">deviceScaleFactor</span>: <span class="hljs-built_in">window</span>.devicePixelRatio<br>    &#125;;<br>  &#125;);<br><br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Dimensions:&#x27;</span>, dimensions);<br><br>  <span class="hljs-keyword">await</span> browser.close();<br>&#125;)();<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>创作中</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>王道操作系统学习总结</title>
    <link href="/post/operating-system-note/"/>
    <url>/post/operating-system-note/</url>
    
    <content type="html"><![CDATA[<p>记录在学习操作系统这门课的过程中的知识点，方便复习，看的视频是王道考研的视频，正在学习…..</p><span id="more"></span><h2 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h2><h3 id="第一章计算机系统概述"><a href="#第一章计算机系统概述" class="headerlink" title="第一章计算机系统概述"></a>第一章计算机系统概述</h3><ul><li><input checked="" disabled="" type="checkbox"> 1.1.1操作系统的概念、功能</li><li><input checked="" disabled="" type="checkbox"> 1.1.2操作系统的特征</li><li><input checked="" disabled="" type="checkbox"> 1.2操作系统的发展与分类</li><li><input checked="" disabled="" type="checkbox"> 1.3.1操作系统的运行机制</li><li><input checked="" disabled="" type="checkbox"> 1.3.2中断和异常<ul><li>中断：是让操作系统夺回CPU使用权的唯一途径</li><li>内中断：又称异常，与当前执行的指令有关，中断信号来源于CPU内部</li><li>陷入指令：应用程序想请求操作系统内核的服务，不是特权指令</li><li>系统调用是用陷入指令来完成的</li><li>外中断：又称中断，与当前执行的指令无关，中断信号来源于CPU外部</li><li>时钟中断：是外中断，由时钟部件发送，实现分时操作系统的必备硬件</li></ul></li><li><input checked="" disabled="" type="checkbox"> 1.3.3系统调用<ul><li>系统调用：应用程序可以通过汇编语言直接请求系统调用，现在是使用库函数，然后库函数去调用系统调用</li><li>系统调用使用场景：凡是与共享资源有关的操作（如存储分配、文件管理、I/O操作），都必须通过系统调用的方式向操作系统内核提出服务请求。</li><li>陷入指令=trap指令=访管指令</li></ul></li><li><input checked="" disabled="" type="checkbox"> 1.4操作系统的体系结构</li><li><input checked="" disabled="" type="checkbox"> 第一章知识点回顾</li></ul><h3 id="第二章进程管理"><a href="#第二章进程管理" class="headerlink" title="第二章进程管理"></a>第二章进程管理</h3><ul><li><input checked="" disabled="" type="checkbox"> 2.1.1进程的概念、组成、特征<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-22-11-55-41.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.1.2进程的状态与转换、进程的组织<details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-02-06-20-06-49.png"></p></details></li><li><input checked="" disabled="" type="checkbox"> 2.1.3进程控制<ul><li>进程的控制就是实现进程间的切换。</li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.1.4进程通信<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-22-15-24-15.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.1.5线程的概念<ul><li>线程的引入解决了一个QQ同时视频聊天和文字聊天的需求</li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.1.6线程的实现方式和多线程模型<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-22-15-58-43.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.1调度的概念、层次<details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-02-06-20-07-19.png" alt="三层调度的联系、对比"><br><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-22-16-07-28.png" alt="处理机调度"></p></details></li><li><input checked="" disabled="" type="checkbox"> 2.2.2进程调度的时机、切换与过程、方式<details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-02-06-20-22-59.png"></p></details></li><li><input checked="" disabled="" type="checkbox"> 2.2.3调度算法的评价指标<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-22-16-30-07.png" alt="调度算法的评价指标"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.4FCFS、SJF、HRRN调度算法<ul><li>先来先服务算法</li><li>最短作业优先 每当有进程加入就绪队列改变时就需<br>要调度，如果新到达的进程剩余时间比当前运行的进程剩余时<br>间更短，则由新进程抢占处理机</li><li>高响应比优先 </li><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-08-55-23.png" alt="先来先服务算法"><br><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-08-56-08.png" alt="短作业优先"><br><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-08-57-15.png" alt="高响应比优先"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.2.5调度算法：时间片轮转、优先级、多级反馈队列<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-08-58-58.png" alt="时间片轮转"><br><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-09-02-09.png" alt="优先级调度算法"><br><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-09-03-19.png" alt="多级反馈队列调度算法"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.1进程同步、进程互斥<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-09-10-24.png" alt="同步互斥"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.2进程互斥的软件实现方法<ul><li>单标志法</li><li>双标志先检查</li><li>双标志后检查</li><li>Peterson算法</li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.3进程互斥的硬件实现方法<ul><li>中断屏蔽方法</li><li>TestAndSet(TS指令/TSL指令)</li><li>Swap指令</li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.4信号量机制<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-09-53-22.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.5用信号量实现进程互斥、同步、前驱关系<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-10-05-58.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.6生产者-消费者问题<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-10-37-38.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.7多生产者-多消费者问题<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-10-40-53.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.8吸烟者问题<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-10-43-17.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.9读者写者问题<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-11-11-03.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.10哲学家进餐问题<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-11-21-53.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.3.11管程<ul><li>就是编程语言提供了一个功能，可以很方便的实现同步问题，不再用P和V来控制同步了，省去了编程的麻烦。</li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.4.1死锁的概念<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-15-38-35.png"></p></details></li></ul></li><li><input checked="" disabled="" type="checkbox"> 2.4.2预防死锁<ul><li><details><summary>笔记</summary><p><img src="https://image.glwsq.cn/img/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-2022-03-23-15-39-11.png"></p></details></li></ul></li><li><input disabled="" type="checkbox"> 2.4.3避免死锁(银行家算法)</li><li><input disabled="" type="checkbox"> 2.4.4死锁的检测和解除</li></ul><h3 id="第三章内存管理"><a href="#第三章内存管理" class="headerlink" title="第三章内存管理"></a>第三章内存管理</h3><ul><li><input disabled="" type="checkbox"> 3.1.1内存的基础知识</li><li><input disabled="" type="checkbox"> 3.1.2内存管理的概念</li><li><input disabled="" type="checkbox"> 3.1.3覆盖与交换</li><li><input disabled="" type="checkbox"> 3.1.4连续分配管理方式</li><li><input disabled="" type="checkbox"> 3.1.5动态分区分配算法</li><li><input disabled="" type="checkbox"> 3.1.6基本分页存储管理的概念</li><li><input disabled="" type="checkbox"> 3.1.7基本地址变换机构</li><li><input disabled="" type="checkbox"> 3.1.8具有快表的地址变换机构</li><li><input disabled="" type="checkbox"> 3.1.9两级页表</li><li><input disabled="" type="checkbox"> 3.1.10基本分段存储管理</li><li><input disabled="" type="checkbox"> 3.1.11段页式管理方式</li><li><input disabled="" type="checkbox"> 3.2_1_虚拟内存的基本概念</li><li><input disabled="" type="checkbox"> 3.2_2_请求分页管理方式</li><li><input disabled="" type="checkbox"> 3.2_3_页面置换算法</li><li><input disabled="" type="checkbox"> 3.2_4_页面分配策略、抖动、工作集</li></ul><h3 id="第四章文件管理"><a href="#第四章文件管理" class="headerlink" title="第四章文件管理"></a>第四章文件管理</h3><ul><li><input disabled="" type="checkbox"> 4.1.1初识文件管理</li><li><input disabled="" type="checkbox"> 4.1.2文件的逻辑结构</li><li><input disabled="" type="checkbox"> 4.1.3文件目录</li><li><input disabled="" type="checkbox"> 4.1.4文件保护</li><li><input disabled="" type="checkbox"> 4.1.5文件共享</li><li><input disabled="" type="checkbox"> 4.2.1文件实现（上）</li><li><input disabled="" type="checkbox"> 4.2.2文件实现（下）</li><li><input disabled="" type="checkbox"> 4.2.3逻辑结构V.S.物理结构</li><li><input disabled="" type="checkbox"> 4.2.4文件存储空间管理</li><li><input disabled="" type="checkbox"> 4.2.5文件的基本操作</li><li><input disabled="" type="checkbox"> 4.2.6文件系统的层次结构</li><li><input disabled="" type="checkbox"> 4.3.1磁盘的结构</li><li><input disabled="" type="checkbox"> 4.3.2磁盘调度算法</li><li><input disabled="" type="checkbox"> 4.3.3减少磁盘延迟时间的方法</li><li><input disabled="" type="checkbox"> 4.3.4磁盘的管理</li></ul><h3 id="第五章输入输出（IO）管理"><a href="#第五章输入输出（IO）管理" class="headerlink" title="第五章输入输出（IO）管理"></a>第五章输入输出（IO）管理</h3><ul><li><input disabled="" type="checkbox"> 5.1.1IO设备的概念和分类</li><li><input disabled="" type="checkbox"> 5.1.2IO控制器</li><li><input disabled="" type="checkbox"> 5.1.3IO控制方式</li><li><input disabled="" type="checkbox"> 5.1.4IO软件层次结构</li><li><input disabled="" type="checkbox"> 5.2_1_I-O核心子系统</li><li><input disabled="" type="checkbox"> 5.2_2_假脱机技术</li><li><input disabled="" type="checkbox"> 5.2_3_设备的分配与回收</li><li><input disabled="" type="checkbox"> 5.2_4_缓冲区管理</li></ul><h2 id="第一章计算机系统概述-1"><a href="#第一章计算机系统概述-1" class="headerlink" title="第一章计算机系统概述"></a>第一章计算机系统概述</h2><h3 id="知识大框架"><a href="#知识大框架" class="headerlink" title="知识大框架"></a>知识大框架</h3><p><img src="https://image.glwsq.cn/img/202201251207417.png"></p><h3 id="操作系统运行机制在中国古代的应用"><a href="#操作系统运行机制在中国古代的应用" class="headerlink" title="操作系统运行机制在中国古代的应用"></a>操作系统运行机制在中国古代的应用</h3><p><img src="https://image.glwsq.cn/img/202201251208004.png"></p><h3 id="特权指令和非特权指令"><a href="#特权指令和非特权指令" class="headerlink" title="特权指令和非特权指令"></a>特权指令和非特权指令</h3><p><img src="https://image.glwsq.cn/img/202201251212234.png"></p><p><img src="https://image.glwsq.cn/img/202201251217574.png"></p><h3 id="内核态切换到用户态"><a href="#内核态切换到用户态" class="headerlink" title="内核态切换到用户态"></a>内核态切换到用户态</h3><p><img src="https://image.glwsq.cn/img/202201251220736.png"></p><h3 id="用户态切换到内核态"><a href="#用户态切换到内核态" class="headerlink" title="用户态切换到内核态"></a>用户态切换到内核态</h3><h4 id="异常的方式"><a href="#异常的方式" class="headerlink" title="异常的方式"></a>异常的方式</h4><p><img src="https://image.glwsq.cn/img/202201251221358.png"></p><h4 id="系统调用的方式"><a href="#系统调用的方式" class="headerlink" title="系统调用的方式"></a>系统调用的方式</h4><p><img src="https://image.glwsq.cn/img/202201251221724.png"></p><h4 id="中断的方式"><a href="#中断的方式" class="headerlink" title="中断的方式"></a>中断的方式</h4><p><img src="https://image.glwsq.cn/img/202201251222740.png"></p>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
      <category>百度网盘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>正在学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ps修图记录</title>
    <link href="/post/42a7d7b8/"/>
    <url>/post/42a7d7b8/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="a685fbbb709fcc3e13ef255aa64ef82dab6dae5c3c5730497474c196c1a45a05">3cda45eb18a6d7e6d918c351ef05b50a59b4b1b3c645f92f1a57f9b3725e6f64ecf77cc655002357c2421d84be22ef38b1161b7697aab74c97994970d17c015d4e4d55c52e33dcabdd0a51e0cf9f36f3a92c54bd98203c496774776c2fb652055a95afbc6ad7a862228b93c40e5c1adbdef81504bb04b9b01b40080b46fa8ad8e08c8dd13a9ee9c7d141ae43a95acce82435f18aaa5c4bc82a55a5811d98403e1200316e997ca7def7679690961b5520a5a37841275eb9a45fd4299857ef4965bd91cdd204a336fc5a1c39764923fcc66c8578c8535ebf59a2a41e788219111349870c4347cfd9c705767e2c92dc3d594c0f6b76b24fca738587db5660afa2bcfc989a9ca8e006bd0e0ea99f65c2c75e74e026a7690601999f2ac405eb5f7a8a607fd1fb3a889cd93c7a7e908eaaa91e25376d0dfa32ddf1ab44e74fb1d64b512e467c97f192367cb5191d1f0e371839bc237fa04877d50ef5920a07d8ea2aeb9f07e36e084baaeb51000474fbbc0af6fd4b82d3f97ca9b99e02882a27a5d5c7c671fd6e51f0a26820c6099d3373c9dc8fee2164c372231836c538d18420babb3e6b2f83c77357e6892e4a9cc3adadd1b096ee068f612eaa9cc62883d5ccac0bc229c7bb8b560bc1db93138df156b428f5560589677742901c3a2dc91e8b0aac71d2cbe6ee27431b2527cf4af028a4205ec67562c87bf2f77bf8a367338d79f081849fb31a394d1ad82cf9efee4c4939e2addfbdcd368c36a2011f2932938e168f1e145f37eb2a47ffbfe8a936a4109885d067c668a7019dc15d473e692f028af2a66e31def718c6bc9f8ef595c5c6068bd97a114ef7a560b6015f8648d81f2f9b0714f42bb56f57a572ec6a0cfde71955b983cbd584b64cec3256300f00cbe10a21af9ed5bf89094867e927e7a5a5224fb51fa72097cd8ea31d9ccd2d17be97</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">输入密码，查看文章。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>个人文章</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>一天一个诈骗小技巧，让你一夜暴负</title>
    <link href="/post/swindle01/"/>
    <url>/post/swindle01/</url>
    
    <content type="html"><![CDATA[<h2 id="从一封邮件开始"><a href="#从一封邮件开始" class="headerlink" title="从一封邮件开始"></a>从一封邮件开始</h2><p>2022年1月18日QQ邮箱突然收到一个信息，还是一个GitHub邮箱，邮箱地址：<a href="mailto:&#x6e;&#111;&#116;&#x69;&#x66;&#105;&#99;&#97;&#116;&#105;&#111;&#x6e;&#x73;&#64;&#103;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#x63;&#111;&#109;">&#x6e;&#111;&#116;&#x69;&#x66;&#105;&#99;&#97;&#116;&#105;&#111;&#x6e;&#x73;&#64;&#103;&#x69;&#116;&#x68;&#x75;&#98;&#x2e;&#x63;&#111;&#109;</a>，内容如下</p><p><img src="https://image.glwsq.cn/img/202201230959886.png" alt="收到的邮件截图"></p><h2 id="小赚一笔"><a href="#小赚一笔" class="headerlink" title="小赚一笔"></a>小赚一笔</h2><p>抱着看看他们如何骗人的心态加了这个人，同意好友以后会被拉入一个临时群。每半小时做一单任务，抖音点赞截图支付宝提现，这个确实很真，做完截图发给他，几分钟钱就到账了，总共三单3块钱，然后让你下载ParroT,R这软件关注福利员，关注这个是15块钱佣金。</p><p><img src="https://image.glwsq.cn/img/202201231015765.jpg" alt="3块钱一单，轻轻松松"></p><p><img src="https://image.glwsq.cn/img/202201231017926.jpg" alt="下个app就能赚15"></p><p><img src="https://image.glwsq.cn/img/202201231019789.jpg" alt="目前的收入截图"></p><h2 id="开始大赚"><a href="#开始大赚" class="headerlink" title="开始大赚"></a>开始大赚</h2><p>到目前为止已经赚了24了。下载ParroT,R注册关注福利员后，会被拉入一个新人群做几单任务，不过任务变成了淘宝订阅。每半小时一单几单后会被拉入正式群。他们这些人很守时每半小时一单，一单3块钱，这不一会儿外卖钱就有了。</p><p><img src="https://image.glwsq.cn/img/202201231024386.jpg" alt="开始在第三方app里赚钱"></p><blockquote><p>我现在已经被封了，不让说话，这个一会儿说原因</p></blockquote><h2 id="一单三块钱嫌少？"><a href="#一单三块钱嫌少？" class="headerlink" title="一单三块钱嫌少？"></a>一单三块钱嫌少？</h2><p>群里开启了晋升任务，要是能晋升到最后，关注一个淘宝店11块钱，一天关注他20个，想想都美好，这还考什么研究生，上什么学，打什么工，直接原地暴富。</p><p>最关键是打赏的越多赚的越多，打赏5000，赚6500，这更是原地起飞，天天躺着玩手机就行了。</p><p><img src="https://image.glwsq.cn/img/202201231029661.jpg"></p><p><img src="https://image.glwsq.cn/img/202201231035592.jpg"></p><h2 id="问题没这么简单"><a href="#问题没这么简单" class="headerlink" title="问题没这么简单"></a>问题没这么简单</h2><p>我刚开始想的，一单三块就三块，我就是不晋升，万一发给他钱了直接跑路了怎么办，而且他们也很“正规”，就是不主动来让我晋升。</p><p>群里一直有人在秀自己赚钱的截图，因为他们的要求就是你的钱到账了，必须在群里发截图。他们给的理由是群里有商家，需要让商家看。所以都是到账了主动在群里发截图，诱惑极大。群里也一直有人问怎么晋升，而且转好几千的人大有人在。</p><p><img src="https://image.glwsq.cn/img/202201231112850.jpg" alt="群里别人发的截图"></p><p>我就想着不晋升，默默地赚小钱，3块钱也是钱。但是好景不长，第三天提现的时候就不让提现了，必须打赏。</p><p><img src="https://image.glwsq.cn/img/202201231056852.jpg" alt="开始吃人了"></p><p>打赏最低100元，我到现在还没赚够100，就让我打赏这么多，而且用的软件都是他提供的，这个时候我就想把刚刚的聊天记录发到群里面，让他们少上当，然而我已经没办法在群里说话了。</p><p>能想象到，有些人转给她好多钱，然后被直接禁言不让提现，想提现必须打赏更多钱，到底打赏多少给你提现，完全看骗子的心情，感觉你这个羊毛薅完了，就直接删人，真的是叫天天不应，叫地地不灵。</p><h2 id="被骗统计"><a href="#被骗统计" class="headerlink" title="被骗统计"></a>被骗统计</h2><blockquote><p>因为我小心谨慎，没有被骗，反而还赚了一点</p></blockquote><p>稍微搜一搜，网上确实很多人被骗，相关的截图如下</p><p><img src="https://image.glwsq.cn/img/202201231048586.png"></p><p><img src="https://image.glwsq.cn/img/202201231049646.png"></p><p><img src="https://image.glwsq.cn/img/202201231049184.png"></p><h2 id="他们太正规了"><a href="#他们太正规了" class="headerlink" title="他们太正规了"></a>他们太正规了</h2><p>感觉他们有一套完整的规范，必须是他们发过邮件的人，才会让你进群，才能进行下一步的操作，而且群里面的人太守时了，说几点开始发任务就发任务，一点都不拖拉。都是受过专业培训的人。</p>]]></content>
    
    
    <categories>
      
      <category>心得体会</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>创作完成</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何拥有一个自己的博客</title>
    <link href="/post/own-hexo-blog/"/>
    <url>/post/own-hexo-blog/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>按照这个教程一步一步的执行，就可以搭建一个属于自己的博客</p>          </div><span id="more"></span><h2 id="一、用到的技能"><a href="#一、用到的技能" class="headerlink" title="一、用到的技能"></a>一、用到的技能</h2><p>git 基本用法<br>GitHub 使用<br>nodejs 基本用法</p><h2 id="二、相关软件安装"><a href="#二、相关软件安装" class="headerlink" title="二、相关软件安装"></a>二、相关软件安装</h2><blockquote><p>点击下载的链接都是我找速度非常快的链接，可以直接点击下载</p></blockquote><h3 id="1-git"><a href="#1-git" class="headerlink" title="1. git"></a>1. git</h3><p>用来管理自己的文章，如果你是程序员就不用我过多介绍了。</p><p>如果不是程序员，可以理解为是一个类似于百度网盘的客户端</p><p><a href="https://dl.softmgr.qq.com/original/Development/Git-2.34.0-64-bit.exe">点击下载</a></p><p>安装的时候一路next就可以了</p><h3 id="2-nodejs"><a href="#2-nodejs" class="headerlink" title="2. nodejs"></a>2. nodejs</h3><p>是一个基础的软件，相当于是java的jdk运行环境，这个软件的npm命令用来安装对应的插件</p><p><a href="https://webcdn.m.qq.com/spcmgr/download/node-v16.13.1-x64.msi">点击下载</a></p><p>安装的时候一路next就可以了</p><h2 id="三、设置代理"><a href="#三、设置代理" class="headerlink" title="三、设置代理"></a>三、设置代理</h2><p>很多软件都是国外的，速度比较慢，所以需要配置镜像或者代理</p><h4 id="1-加速GitHub"><a href="#1-加速GitHub" class="headerlink" title="1. 加速GitHub"></a>1. 加速GitHub</h4><p>GitHub访问本来很慢，但是最近发现了uu加速器可以进行加速，只需要下载，然后选择【学术资源】加速就可以了</p><p>现在就可以下载好开启加速</p><p><a href="https://uu.gdl.netease.com/4027/UU-4.15.0.exe">点击下载uu加速器</a></p><p><img src="https://image.glwsq.cn/img/202201201740818.png"></p><h4 id="2-加速nodejs"><a href="#2-加速nodejs" class="headerlink" title="2. 加速nodejs"></a>2. 加速nodejs</h4><p>首先按 win + r 按键打开运行命令框，输入cmd</p><p><img src="https://image.glwsq.cn/img/202201201801759.png"></p><p>然后直接复制粘贴下面的内容</p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> 设置淘宝镜像</span><br>npm config set registry https://registry.npm.taobao.org<br><span class="hljs-meta"></span><br><span class="hljs-meta">#</span><span class="bash"> 查看是否设置成功，如果显示的是 https://registry.npm.taobao.org/ 就说明成功了</span><br>npm config get registry<br></code></pre></td></tr></table></figure><h2 id="四、相关插件安装"><a href="#四、相关插件安装" class="headerlink" title="四、相关插件安装"></a>四、相关插件安装</h2><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>这个是博客插件，需要nodejs的支持</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install hexo-cli -g<br></code></pre></td></tr></table></figure><p>官方文档，现在可以先不看：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p><h2 id="五、建立博客文件夹"><a href="#五、建立博客文件夹" class="headerlink" title="五、建立博客文件夹"></a>五、建立博客文件夹</h2><p>随便打开一个文件夹</p><p><img src="https://image.glwsq.cn/img/202201201814908.png"></p><p>然后在这里输入cmd按回车</p><p><img src="https://image.glwsq.cn/img/202201201814476.png"></p><p>在打开的小黑框里面依次输入下面的命令</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">hexo init <span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span>cd <span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span>npm <span class="hljs-keyword">install</span><br><span class="hljs-keyword"></span>hexo server<br></code></pre></td></tr></table></figure><p>执行结果<br><img src="https://image.glwsq.cn/img/202201201900998.png"></p><p>在浏览器打开就可以访问了: <a href="http://localhost:4000/">http://localhost:4000/</a></p><div class="note note-success">            <p>恭喜！！！你的博客已经跑起来了，现在要做的事情就是设置自己的网站和写博客了</p>          </div><h2 id="扩展功能"><a href="#扩展功能" class="headerlink" title="扩展功能"></a>扩展功能</h2><h3 id="PicGo图床"><a href="#PicGo图床" class="headerlink" title="PicGo图床"></a>PicGo图床</h3><p>可以更方便的管理自己的博客图片</p><p><a href="https://image.glwsq.cn/software/PicGo-Setup-2.3.1-beta.2-x64.exe">点击下载</a></p><p>recommend</p>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo插件推荐</title>
    <link href="/post/hexo-plugins/"/>
    <url>/post/hexo-plugins/</url>
    
    <content type="html"><![CDATA[<p>自己用的很好的hexo插件推荐，推荐指数按照顺序排列</p><h2 id="hexo-excerpt-block-更优雅的控制文章摘要"><a href="#hexo-excerpt-block-更优雅的控制文章摘要" class="headerlink" title="hexo-excerpt-block 更优雅的控制文章摘要"></a>hexo-excerpt-block 更优雅的控制文章摘要</h2><blockquote><p>这个很好用，强烈推荐</p></blockquote><p>如果用系统自带的<code>&lt;!--more--&gt;</code>来截取摘要，只能截取文章的最前面，很不友好，这个插件就能很好的解决这个问题。</p><p>可以把文章任意位置的任意文字截取正摘要，还不影响文章的结构样式。</p><blockquote><p><a href="https://github.com/ALiangLiang/hexo-excerpt-block">https://github.com/ALiangLiang/hexo-excerpt-block</a></p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">npm install --save hexo-excerpt-block<br></code></pre></td></tr></table></figure><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs md">---<br><span class="hljs-section">title: 自己文章</span><br><span class="hljs-section">---</span><br><span class="hljs-section">## 先有个标题</span><br><br>&lt;!-- block --&gt;<br>这里是摘要<br>&lt;!-- block --&gt;<br><br>文章的其他内容<br></code></pre></td></tr></table></figure><p>会渲染为:</p><hr><h3 id="先有个标题"><a href="#先有个标题" class="headerlink" title="先有个标题"></a>先有个标题</h3><p>这里是摘要<br>文章的其他内容</p><hr><h2 id="hexo-draft-tags-隐藏文章中的内容"><a href="#hexo-draft-tags-隐藏文章中的内容" class="headerlink" title="hexo-draft-tags 隐藏文章中的内容"></a>hexo-draft-tags 隐藏文章中的内容</h2><blockquote><p>强烈推荐，相当于在文章中插入一个草稿区域，别人不可见</p></blockquote><p><a href="https://github.com/CallumHewitt/hexo-draft-tags">https://github.com/CallumHewitt/hexo-draft-tags</a></p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="xml">这里是正文内容</span><br><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">draft</span> %&#125;</span><span class="xml"></span><br><span class="xml"></span><br><span class="xml">临时写点草稿，可以等到完全写完以后再去掉草稿标签</span><br><span class="xml">也可以运行服务器的时候查看 hexo server --draft</span><br><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">enddraft</span> %&#125;</span><span class="xml"></span><br><span class="xml"></span><br><span class="xml">这里是正文内容</span><br></code></pre></td></tr></table></figure><h2 id="hexo-tag-details-在文章中插入折叠展开区域"><a href="#hexo-tag-details-在文章中插入折叠展开区域" class="headerlink" title="hexo-tag-details 在文章中插入折叠展开区域"></a>hexo-tag-details 在文章中插入折叠展开区域</h2><blockquote><p>如果有需求，这个也比较好用</p></blockquote><p><a href="https://github.com/hinastory/hexo-tag-details">https://github.com/hinastory/hexo-tag-details</a></p><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><details><summary>点击</summary><p>展开了</p></details><details open="open"><summary>What food do you like?</summary><ol><li>Sushi</li><li>Tempura</li><li>Sukiyaki</li></ol></details><h3 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h3><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">details</span> 点击 %&#125;</span><span class="xml"></span><br><span class="xml"></span><br><span class="xml">展开了</span><br><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">enddetails</span> %&#125;</span><span class="xml"></span><br><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">details</span> mode:open What food do you like? %&#125;</span><span class="xml"></span><br><span class="xml"></span><br><span class="xml">1. Sushi</span><br><span class="xml">2. Tempura</span><br><span class="xml">3. Sukiyaki</span><br><span class="xml"></span><br><span class="xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">enddetails</span> %&#125;</span><br></code></pre></td></tr></table></figure><h2 id="hexo-blog-encrypt-文章加密"><a href="#hexo-blog-encrypt-文章加密" class="headerlink" title="hexo-blog-encrypt 文章加密"></a>hexo-blog-encrypt 文章加密</h2><blockquote><p>这个插件必须开启https才可以正常使用</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save hexo-blog-encrypt<br></code></pre></td></tr></table></figure><p>说明文档: <a href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md">https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md</a></p><h3 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Hello</span> <span class="hljs-string">World</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2016-03-30 21:18:02</span><br><span class="hljs-attr">password:</span> <span class="hljs-string">hello</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><h3 id="更详细的配置-config-yml"><a href="#更详细的配置-config-yml" class="headerlink" title="更详细的配置 _config.yml"></a>更详细的配置 _config.yml</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Security</span><br><span class="hljs-attr">encrypt:</span> <span class="hljs-comment"># hexo-blog-encrypt</span><br>  <span class="hljs-attr">abstract:</span> <span class="hljs-string">有东西被加密了,</span> <span class="hljs-string">请输入密码查看.</span><br>  <span class="hljs-attr">message:</span> <span class="hljs-string">您好,</span> <span class="hljs-string">这里需要密码.</span><br>  <span class="hljs-attr">tags:</span><br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">tagName</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">密码A</span>&#125;<br>  <span class="hljs-bullet">-</span> &#123;<span class="hljs-attr">name:</span> <span class="hljs-string">tagName</span>, <span class="hljs-attr">password:</span> <span class="hljs-string">密码B</span>&#125;<br>  <span class="hljs-attr">wrong_pass_message:</span> <span class="hljs-string">抱歉,</span> <span class="hljs-string">这个密码看着不太对,</span> <span class="hljs-string">请再试试.</span><br>  <span class="hljs-attr">wrong_hash_message:</span> <span class="hljs-string">抱歉,</span> <span class="hljs-string">这个文章不能被校验,</span> <span class="hljs-string">不过您还是能看看解密后的内容.</span><br><br></code></pre></td></tr></table></figure><h2 id="hexo-asset-image-解决开启post-asset-folder后本地无法正常查看图片"><a href="#hexo-asset-image-解决开启post-asset-folder后本地无法正常查看图片" class="headerlink" title="hexo-asset-image 解决开启post_asset_folder后本地无法正常查看图片"></a>hexo-asset-image 解决开启post_asset_folder后本地无法正常查看图片</h2><blockquote><p>这是一款让本地markdown和网页都能正常显示图片的插件，使写文章的体验更好</p></blockquote><p>如果使用VSCode，可以结合我的这一篇文章直接快速的从剪切板插入图片<a href="/post/vscode-paste-image/">VScode中插入剪切板中的图片</a></p><h3 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h3><ol><li>首先确认<code>_config.yml</code> 中有 <code>post_asset_folder:true</code>。<br>Hexo 提供了一种更方便管理 Asset 的设定：post_asset_folder<br>当您设置post_asset_folder为true参数后，在建立文件时，Hexo<br>会自动建立一个与文章同名的文件夹，您可以把与该文章相关的所有资源都放到那个文件夹，如此一来，您便可以更方便的使用资源。</li></ol><p><strong>注意: 必须把_config.yml中的post_asset_folder改为true，这样插入的图片才会被放到和文档一个目录。</strong></p><ol start="2"><li>在hexo的目录下执行<code>npm install hexo-asset-image --save</code>（需要等待一段时间）<a href="https://github.com/xcodebuild/hexo-asset-image">插件的GitHub主页</a></li><li>完成安装后用hexo新建文章的时候会发现_posts目录下面会多出一个和文章名字一样的文件夹。图片就可以放在文件夹下面。结构如下：<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus">图片测试<br>├── apppicker<span class="hljs-selector-class">.jpg</span><br>├── logo<span class="hljs-selector-class">.png</span><br>└── rules<span class="hljs-selector-class">.jpg</span><br>图片测试.md<br></code></pre></td></tr></table></figure></li></ol><p><img src="https://image.glwsq.cn/img/202201202359137.png"></p><p>这样的目录结构（目录名和文章名一致），只要使用 <code>![](图片测试/logo.png)</code> 就可以插入图片。</p><h3 id="可能会出现的问题"><a href="#可能会出现的问题" class="headerlink" title="可能会出现的问题"></a>可能会出现的问题</h3><p><img src="https://image.glwsq.cn/img/202201202359085.png"></p><p>更新图片的时候图片链接截取的不对，这是hexo-asset-image这个插件代码的问题，需要找到博客下这个插件的位置<code>node_modules\hexo-asset-image</code></p><p>打开<code>index.js</code></p><p>找到24行，修改为<code>var endPos = link.length-1; </code>就可以了</p><p><img src="https://image.glwsq.cn/img/202201210000969.png"></p><p><strong>修改完毕后记得重启服务器</strong></p><h2 id="hexo-generator-index2-自定义首页"><a href="#hexo-generator-index2-自定义首页" class="headerlink" title="hexo-generator-index2 自定义首页"></a>hexo-generator-index2 自定义首页</h2><blockquote><p>适合文章太多，并且想精简一下首页文章的情况下使用</p></blockquote><p>如果你在首页只显示某些分类或标签的文章，或者将一些文章生成一个聚合页，那么他适合你。</p><h2 id="hexo-generator-alias-网页重定向"><a href="#hexo-generator-alias-网页重定向" class="headerlink" title="hexo-generator-alias 网页重定向"></a>hexo-generator-alias 网页重定向</h2><blockquote><p>如果你的博客页面路径进行了大的更改并且访问量很大的话，那么建议你使用</p><p>可以给一篇文章设置多个网址，也可以让一篇博客跳到其他网站</p></blockquote><h3 id="一篇文章设置多个网址"><a href="#一篇文章设置多个网址" class="headerlink" title="一篇文章设置多个网址"></a>一篇文章设置多个网址</h3><p>例如我的一篇访问量很大的文章</p><p>我的一篇博客的原地址为: <a href="https://www.glwsq.cn/2020/03/12/174a4435/">https://www.glwsq.cn/2020/03/12/174a4435/</a></p><p>为了让url更好看，现在改为了: <a href="https://www.glwsq.cn/post/vmware-linux/">https://www.glwsq.cn/post/vmware-linux/</a></p><p>但是这样更改会导致原来的链接打开后404，所以可以在这一篇文章加一个属性，让一篇文章拥有两个url</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">alias:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/2020/03/12/174a4435/</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><h3 id="一篇博客跳到另一个网址"><a href="#一篇博客跳到另一个网址" class="headerlink" title="一篇博客跳到另一个网址"></a>一篇博客跳到另一个网址</h3><p>打开文章后跳到百度</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">redirect:</span> <span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><h2 id="hexo-inlucde-markdown-在文章中插入md源文件"><a href="#hexo-inlucde-markdown-在文章中插入md源文件" class="headerlink" title="hexo-inlucde-markdown 在文章中插入md源文件"></a>hexo-inlucde-markdown 在文章中插入md源文件</h2><p>如果你想在某些文章中插入固定的内容，并且方便以后更改的话，这个插件适合你。</p><p><a href="https://github.com/tea3/hexo-include-markdown">https://github.com/tea3/hexo-include-markdown</a></p><h3 id="一些bug"><a href="#一些bug" class="headerlink" title="一些bug"></a>一些bug</h3><blockquote><p>这个插件开发的事件比较早，有一些小bug</p></blockquote><h4 id="第一个bug："><a href="#第一个bug：" class="headerlink" title="第一个bug："></a>第一个bug：</h4><p>hexo n 这样的命令执行的时候必须在根目录才可以运行，在其他地方会报错</p><p>只需要找到node_modules下的hexo-include-markdown</p><p>修改lib/orverwriteCache.js</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-6 </span><br><span class="hljs-addition">+6  let globle_hexo = &#123;&#125;</span><br><span class="hljs-deletion">-7   module.exports = ( hexo , option , PLUGIN_NM ) =&gt;</span><br><span class="hljs-addition">+7   module.exports = ( hexo , option , PLUGIN_NM ) =&gt; &#123;</span><br>8      readCacheFile(hexo , option , PLUGIN_NM)<br>...<br>12   .then(orverwriteCache)<br><span class="hljs-deletion">-13 </span><br><span class="hljs-addition">+13     globle_hexo = hexo</span><br><span class="hljs-deletion">-14</span><br><span class="hljs-addition">+14 &#125;</span><br>...<br>18new Promise( (resolve , reject) =&gt; &#123;<br><span class="hljs-deletion">-19  let dbPath = path.join( process.env.PWD || process.cwd() , &quot;db.json&quot; )</span><br><span class="hljs-addition">+19     let dbPath = path.join(hexo.source_dir, &#x27;../&#x27;, &quot;db.json&quot;)</span><br>20  fs.readFile( dbPath , (err , fileData) =&gt; &#123;<br>...<br>143new Promise( (resolve , reject) =&gt; &#123;<br><span class="hljs-deletion">-144let dbPath = path.join( process.env.PWD || process.cwd() , &quot;db.json&quot; )</span><br><span class="hljs-addition">+144let dbPath = path.join(globle_hexo.source_dir, &#x27;../&#x27;, &quot;db.json&quot;)</span><br></code></pre></td></tr></table></figure><p>修改lib/replace.js</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-7 </span><br><span class="hljs-addition">+7 let globle_hexo = &#123;&#125;</span><br>8 module.exports = (data , hexo , option , PLUGIN_NM) =&gt; &#123;<br><span class="hljs-deletion">-9</span><br><span class="hljs-addition">+9 globle_hexo = hexo</span><br>10let tags = data.content.match(/\&lt;\!\-\-\s+?md\s+?.+?\s+?\-\-\&gt;/g)<br>...<br><span class="hljs-deletion">-66let filePath = path.join( process.env.PWD || process.cwd() , option.dir , mdPath )</span><br><span class="hljs-addition">+66let filePath = path.join( globle_hexo.source_dir, &#x27;../&#x27;, option.dir , mdPath )</span><br>67fs.readFile( filePath , (err , fileData) =&gt; &#123;<br></code></pre></td></tr></table></figure><h4 id="第二个bug"><a href="#第二个bug" class="headerlink" title="第二个bug:"></a>第二个bug:</h4><p>hexo clean以后，db.json会删除，导致插件报错，这个时候手动创建就可以了，以后有时间的话我会把这两个bug修改一下，然后提交到npm库，挖个坑</p><h2 id="hexo-insert-markdown-在文章中插入markdown"><a href="#hexo-insert-markdown-在文章中插入markdown" class="headerlink" title="hexo-insert-markdown 在文章中插入markdown"></a>hexo-insert-markdown 在文章中插入markdown</h2><p>目前我没有使用这个插件</p>]]></content>
    
    
    <categories>
      
      <category>内容聚合</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vue学习笔记</title>
    <link href="/post/vue2-note/"/>
    <url>/post/vue2-note/</url>
    
    <content type="html"><![CDATA[<p>在学习Vue的过程中老师记录的笔记，总结一下，以便复习使用</p><span id="more"></span><blockquote><p>尚硅谷Vue2.0+Vue3.0全套教程丨vuejs从入门到精通<br><a href="https://www.bilibili.com/video/BV1Zy4y1K7SH">https://www.bilibili.com/video/BV1Zy4y1K7SH</a></p></blockquote><h2 id="1-初识Vue"><a href="#1-初识Vue" class="headerlink" title="1. 初识Vue"></a>1. 初识Vue</h2><ol><li><p>想让Vue工作，就必须创建一个Vue实例，且要传入一个配置对象；</p></li><li><p>root容器里的代码依然符合html规范，只不过混入了一些特殊的Vue语法；</p></li><li><p>root容器里的代码被称为【Vue模板】；</p></li><li><p>Vue实例和容器是一一对应的；</p></li><li><p>真实开发中只有一个Vue实例，并且会配合着组件一起使用；</p></li><li><p><code>&#123;&#123;xxx&#125;&#125;</code>中的xxx要写js表达式，且xxx可以自动读取到data中的所有属性；</p></li><li><p>一旦data中的数据发生改变，那么页面中用到该数据的地方也会自动更新；</p></li></ol><p><strong>注意区分：js表达式 和 js代码(语句)</strong></p><ol><li>表达式：一个表达式会产生一个值，可以放在任何一个需要值的地方：</li></ol><p>​         (1). a</p><p>​         (2). a+b</p><p>​         (3). demo(1)</p><p>​         (4). x === y ? ‘a’ : ‘b’</p><ol start="2"><li><p>js代码(语句)</p><figure class="highlight haskell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></div></td><td class="code"><pre><code class="hljs haskell">   (<span class="hljs-number">1</span>). <span class="hljs-keyword">if</span>()&#123;&#125;<br>   (<span class="hljs-number">2</span>). for()&#123;&#125;<br><br>​      <br><br><br><br><span class="hljs-meta">## 2. Vue模板语法有2大类</span><br><br><span class="hljs-number">1.</span> 插值语法：<br><br>​       功能：用于解析标签体内容。<br><br>​       写法：`&#123;&#123;xxx&#125;&#125;`，xxx是js表达式，且可以直接读取到<span class="hljs-class"><span class="hljs-keyword">data</span>中的所有属性。</span><br><br><span class="hljs-number">2.</span> 指令语法：<br><br>​       功能：用于解析标签（包括：标签属性、标签体内容、绑定事件.....）。<br><br>​       举例：v-bind:href=<span class="hljs-string">&quot;xxx&quot;</span> 或  简写为 :href=<span class="hljs-string">&quot;xxx&quot;</span>，xxx同样要写js表达式，<br><br>​          且可以直接读取到<span class="hljs-class"><span class="hljs-keyword">data</span>中的所有属性。</span><br><br>​       备注：<span class="hljs-type">Vue</span>中有很多的指令，且形式都是：v-????，此处我们只是拿v-bind举个例子。<br><br><br><br><span class="hljs-meta">## 3. Vue中有2种数据绑定的方式</span><br><br><span class="hljs-number">1.</span> 单向绑定(v-bind)：数据只能从<span class="hljs-class"><span class="hljs-keyword">data</span>流向页面。</span><br><br><span class="hljs-number">2.</span> 双向绑定(v-model)：数据不仅能从<span class="hljs-class"><span class="hljs-keyword">data</span>流向页面，还可以从页面流向<span class="hljs-keyword">data</span>。</span><br><br>&gt; 备注：<br>&gt;<br>&gt; <span class="hljs-number">1.</span> 双向绑定一般都应用在表单类元素上（如：input、select等）<br>&gt;<br>&gt; <span class="hljs-number">2.</span> v-model:value 可以简写为 v-model，因为v-model默认收集的就是value值。<br><br><br><br><span class="hljs-meta">## 4. data与el的2种写法</span><br><br><span class="hljs-number">1.</span> el有<span class="hljs-number">2</span>种写法<br><br>​         (<span class="hljs-number">1</span>).new <span class="hljs-type">Vue</span>时候配置el属性。<br><br>​         (<span class="hljs-number">2</span>).先创建<span class="hljs-type">Vue</span>实例，随后再通过vm.$mount(&#x27;#root&#x27;)指定el的值。<br><br><span class="hljs-number">2.</span> <span class="hljs-class"><span class="hljs-keyword">data</span>有2种写法</span><br><br>​         (<span class="hljs-number">1</span>).对象式<br><br>​         (<span class="hljs-number">2</span>).函数式<br><br>​         如何选择：目前哪种写法都可以，以后学习到组件时，<span class="hljs-class"><span class="hljs-keyword">data</span>必须使用函数式，否则会报错。</span><br><br><span class="hljs-number">3.</span> 一个重要的原则：<br><br>​         由<span class="hljs-type">Vue</span>管理的函数，一定不要写箭头函数，一旦写了箭头函数，this就不再是<span class="hljs-type">Vue</span>实例了。<br><br><br><br><span class="hljs-meta">## 5. MVVM模型</span><br><br><span class="hljs-number">1.</span> <span class="hljs-type">M</span>：模型(<span class="hljs-type">Model</span>) ：<span class="hljs-class"><span class="hljs-keyword">data</span>中的数据</span><br><br><span class="hljs-number">2.</span> <span class="hljs-type">V</span>：视图(<span class="hljs-type">View</span>) ：模板代码<br><br><span class="hljs-number">3.</span> <span class="hljs-type">VM</span>：视图模型(<span class="hljs-type">ViewModel</span>)：<span class="hljs-type">Vue</span>实例<br><br>   观察发现：<br><br><span class="hljs-number">1.</span> <span class="hljs-class"><span class="hljs-keyword">data</span>中所有的属性，最后都出现在了vm身上。</span><br><br><span class="hljs-number">2.</span> vm身上所有的属性 及 <span class="hljs-type">Vue</span>原型上所有属性，在<span class="hljs-type">Vue</span>模板中都可以直接使用。<br><br><br><br><span class="hljs-meta">## 6. Vue中的数据代理：</span><br><br>&gt; 通过vm对象来代理<span class="hljs-class"><span class="hljs-keyword">data</span>对象中属性的操作（读/写）</span><br><br><span class="hljs-number">1.</span> <span class="hljs-type">Vue</span>中数据代理的好处：<br><br>   更加方便的操作<span class="hljs-class"><span class="hljs-keyword">data</span>中的数据</span><br><br><span class="hljs-number">2.</span> 基本原理：<br><br>​       通过<span class="hljs-type">Object</span>.defineProperty()把<span class="hljs-class"><span class="hljs-keyword">data</span>对象中所有属性添加到vm上。</span><br><br>​       为每一个添加到vm上的属性，都指定一个getter/setter。<br><br>​       在getter/setter内部去操作（读/写）<span class="hljs-class"><span class="hljs-keyword">data</span>中对应的属性。</span><br><br>原始方法模拟数据代理<br><br>```js<br>&lt;!<span class="hljs-comment">-- 数据代理：通过一个对象代理对另一个对象中属性的操作（读/写）--&gt;</span><br>&lt;script <span class="hljs-class"><span class="hljs-keyword">type</span>=&quot;text/javascript&quot; &gt;</span><br><span class="hljs-keyword">let</span> obj = &#123;x:<span class="hljs-number">100</span>&#125;<br><span class="hljs-keyword">let</span> obj2 = &#123;y:<span class="hljs-number">200</span>&#125;<br><br><span class="hljs-type">Object</span>.defineProperty(obj2,&#x27;x&#x27;,&#123;<br>get()&#123;<br>return obj.x<br>&#125;,<br>set(value)&#123;<br>obj.x = value<br>&#125;<br>&#125;)<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure></li></ol><h2 id="7-事件处理"><a href="#7-事件处理" class="headerlink" title="7. 事件处理"></a>7. 事件处理</h2><h3 id="1-事件的基本使用："><a href="#1-事件的基本使用：" class="headerlink" title="1. 事件的基本使用："></a>1. 事件的基本使用：</h3><ol><li><p>使用v-on:xxx 或 @xxx 绑定事件，其中xxx是事件名；</p></li><li><p>事件的回调需要配置在methods对象中，最终会在vm上；</p></li><li><p>methods中配置的函数，不要用箭头函数！否则this就不是vm了；</p></li><li><p>methods中配置的函数，都是被Vue所管理的函数，this的指向是vm 或 组件实例对象；</p></li><li><p>@click=”demo” 和 @click=”demo($event)” 效果一致，但后者可以传参；</p></li></ol><h3 id="2-Vue中的事件修饰符："><a href="#2-Vue中的事件修饰符：" class="headerlink" title="2. Vue中的事件修饰符："></a>2. Vue中的事件修饰符：</h3><ol><li><p>prevent：阻止默认事件（常用）；</p></li><li><p>stop：阻止事件冒泡（常用）；</p></li><li><p>once：事件只触发一次（常用）；</p></li><li><p>capture：使用事件的捕获模式；</p></li><li><p>self：只有event.target是当前操作的元素时才触发事件；</p></li><li><p>passive：事件的默认行为立即执行，无需等待事件回调执行完毕；</p></li></ol><h3 id="3-键盘事件"><a href="#3-键盘事件" class="headerlink" title="3. 键盘事件"></a>3. 键盘事件</h3><ol><li>Vue中常用的按键别名：</li></ol><p>​       回车 =&gt; enter</p><p>​       删除 =&gt; delete (捕获“删除”和“退格”键)</p><p>​       退出 =&gt; esc</p><p>​       空格 =&gt; space</p><p>​       换行 =&gt; tab (特殊，必须配合keydown去使用)</p><p>​       上 =&gt; up</p><p>​       下 =&gt; down</p><p>​       左 =&gt; left</p><p>​       右 =&gt; right</p><p>​    2. Vue未提供别名的按键，可以使用按键原始的key值去绑定，但注意要转为kebab-case（短横线命名）</p><p>​    3. 系统修饰键（用法特殊）：ctrl、alt、shift、meta</p><p>​       (1).配合keyup使用：按下修饰键的同时，再按下其他键，随后释放其他键，事件才被触发。</p><p>​       (2).配合keydown使用：正常触发事件。</p><p>​    4. 也可以使用keyCode去指定具体的按键（不推荐）</p><p>​    5. ue.config.keyCodes.自定义键名 = 键码，可以去定制按键别名</p><h2 id="8-计算属性"><a href="#8-计算属性" class="headerlink" title="8. 计算属性"></a>8. 计算属性</h2><ol><li><p>定义：要用的属性不存在，要通过已有属性计算得来。</p></li><li><p>原理：底层借助了Objcet.defineproperty方法提供的getter和setter。</p></li><li><p>get函数什么时候执行？</p></li></ol><p>​        (1).初次读取时会执行一次。</p><p>​        (2).当依赖的数据发生改变时会被再次调用。</p><ol start="4"><li><p>优势：与methods实现相比，内部有缓存机制（复用），效率更高，调试方便。</p></li><li><p>备注：</p><ol><li>计算属性最终会出现在vm上，直接读取使用即可。</li><li>如果计算属性要被修改，那必须写set函数去响应修改，且set中要引起计算时依赖的数据发生改变。</li></ol></li><li><p>计算属性的完整写法</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js">fullName:&#123;<br><span class="hljs-comment">//get有什么作用？当有人读取fullName时，get就会被调用，且返回值就作为fullName的值</span><br><span class="hljs-comment">//get什么时候调用？1.初次读取fullName时。2.所依赖的数据发生变化时。</span><br><span class="hljs-function"><span class="hljs-title">get</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;get被调用了&#x27;</span>)<br><span class="hljs-comment">// console.log(this) //此处的this是vm</span><br><span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.firstName + <span class="hljs-string">&#x27;-&#x27;</span> + <span class="hljs-built_in">this</span>.lastName<br>&#125;,<br><span class="hljs-comment">//set什么时候调用? 当fullName被修改时。</span><br><span class="hljs-function"><span class="hljs-title">set</span>(<span class="hljs-params">value</span>)</span>&#123;<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;set&#x27;</span>,value)<br><span class="hljs-keyword">const</span> arr = value.split(<span class="hljs-string">&#x27;-&#x27;</span>)<br><span class="hljs-built_in">this</span>.firstName = arr[<span class="hljs-number">0</span>]<br><span class="hljs-built_in">this</span>.lastName = arr[<span class="hljs-number">1</span>]<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="9-监视属性watch"><a href="#9-监视属性watch" class="headerlink" title="9. 监视属性watch"></a>9. 监视属性watch</h2><h3 id="1-监听属性"><a href="#1-监听属性" class="headerlink" title="1. 监听属性"></a>1. 监听属性</h3><ol><li><p>当被监视的属性变化时, 回调函数自动调用, 进行相关操作</p></li><li><p>监视的属性必须存在，才能进行监视！！</p></li><li><p>监视的两种写法：</p><ol><li>new Vue时传入watch配置</li><li>通过vm.$watch监视</li></ol></li></ol><h3 id="2-深度监视"><a href="#2-深度监视" class="headerlink" title="2. 深度监视"></a>2. 深度监视</h3><ol><li><p>Vue中的watch默认不监测对象内部值的改变（一层）。</p></li><li><p>配置deep:true可以监测对象内部值改变（多层）。</p></li></ol><blockquote><p>备注：</p><ol><li>Vue自身可以监测对象内部值的改变，但Vue提供的watch默认不可以！</li><li>使用watch时根据数据的具体结构，决定是否采用深度监视。</li></ol></blockquote><h3 id="3-监听属性完整写法"><a href="#3-监听属性完整写法" class="headerlink" title="3. 监听属性完整写法"></a>3. 监听属性完整写法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js">watch:&#123;<br><span class="hljs-attr">numbers</span>:&#123;<br><span class="hljs-attr">immediate</span>:<span class="hljs-literal">true</span>, <span class="hljs-comment">//初始化时让handler调用一下</span><br><span class="hljs-attr">deep</span>:<span class="hljs-literal">true</span>, <span class="hljs-comment">// 深度监视</span><br><span class="hljs-function"><span class="hljs-title">handler</span>(<span class="hljs-params">val</span>)</span>&#123; <span class="hljs-comment">// handler什么时候调用？当number发生改变时。</span><br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;numbers改变了，值为&#x27;</span>, val)<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-computed和watch之间的区别"><a href="#4-computed和watch之间的区别" class="headerlink" title="4. computed和watch之间的区别"></a>4. computed和watch之间的区别</h3><ol><li><p>computed能完成的功能，watch都可以完成。</p></li><li><p>watch能完成的功能，computed不一定能完成，例如：watch可以进行异步操作。</p></li></ol><h3 id="总结：两个重要的小原则"><a href="#总结：两个重要的小原则" class="headerlink" title="总结：两个重要的小原则"></a>总结：两个重要的小原则</h3><ol><li><p>所被Vue管理的函数，最好写成普通函数，这样this的指向才是vm 或 组件实例对象。</p></li><li><p>所有不被Vue所管理的函数（定时器的回调函数、ajax的回调函数等、Promise的回调函数），最好写成箭头函数，</p></li></ol><p>​        这样this的指向才是vm 或 组件实例对象。</p><h2 id="10-绑定样式："><a href="#10-绑定样式：" class="headerlink" title="10. 绑定样式："></a>10. 绑定样式：</h2><ol><li>class样式</li></ol><p>​        写法:class=”xxx” xxx可以是字符串、对象、数组。</p><p>​          字符串写法适用于：类名不确定，要动态获取。</p><p>​          对象写法适用于：要绑定多个样式，个数不确定，名字也不确定。</p><p>​          数组写法适用于：要绑定多个样式，个数确定，名字也确定，但不确定用不用。</p><ol start="2"><li>style样式</li></ol><p>​        :style=”{fontSize: xxx}”其中xxx是动态值。</p><p>​        :style=”[a,b]”其中a、b是样式对象。</p><h2 id="11-条件渲染："><a href="#11-条件渲染：" class="headerlink" title="11. 条件渲染："></a>11. 条件渲染：</h2><h3 id="1-v-if"><a href="#1-v-if" class="headerlink" title="1. v-if"></a>1. v-if</h3><p>写法：</p><ol><li><code>v-if=&quot;表达式&quot;</code></li><li><code>v-else-if=&quot;表达式&quot;</code></li><li><code>v-else=&quot;表达式&quot;</code></li></ol><blockquote><p>适用于：切换频率较低的场景。</p><p>特点：不展示的DOM元素直接被移除。</p><p>注意：v-if 可以和 v-else-if、v-else 一起使用，但要求结构不能被“打断”。</p></blockquote><h3 id="2-v-show"><a href="#2-v-show" class="headerlink" title="2. v-show"></a>2. v-show</h3><p>写法：v-show=”表达式”</p><p>适用于：切换频率较高的场景。</p><p>特点：不展示的DOM元素未被移除，仅仅是使用样式隐藏掉</p><p>​        </p><blockquote><p>备注：使用v-if的时，元素可能无法获取到，而使用v-show一定可以获取到。</p></blockquote><h2 id="12-列表渲染"><a href="#12-列表渲染" class="headerlink" title="12. 列表渲染"></a>12. 列表渲染</h2><h3 id="1-基本列表"><a href="#1-基本列表" class="headerlink" title="1. 基本列表"></a>1. 基本列表</h3><p>​    v-for指令:</p><p>​      1.用于展示列表数据</p><p>​      2.语法：v-for=”(item, index) in xxx” :key=”yyy”</p><p>​      3.可遍历：数组、对象、字符串（用的很少）、指定次数（用的很少）</p><h3 id="2-key的原理（key有什么作用）"><a href="#2-key的原理（key有什么作用）" class="headerlink" title="2. key的原理（key有什么作用）"></a>2. key的原理（key有什么作用）</h3><blockquote><p>面试题：react、vue中的key有什么作用？（key的内部原理）</p></blockquote><p>​      </p><h4 id="1-虚拟DOM中key的作用"><a href="#1-虚拟DOM中key的作用" class="headerlink" title="1. 虚拟DOM中key的作用"></a>1. 虚拟DOM中key的作用</h4><p>key是虚拟DOM对象的标识，当数据发生变化时，Vue会根据【新数据】生成【新的虚拟DOM】, 随后Vue进行【新虚拟DOM】与【旧虚拟DOM】的差异比较，比较规则如下：</p><h4 id="2-对比规则"><a href="#2-对比规则" class="headerlink" title="2. 对比规则"></a>2. 对比规则</h4><p>​         (1).旧虚拟DOM中找到了与新虚拟DOM相同的key：</p><p>​            ①.若虚拟DOM中内容没变, 直接使用之前的真实DOM！</p><p>​            ②.若虚拟DOM中内容变了, 则生成新的真实DOM，随后替换掉页面中之前的真实DOM。</p><p>​         (2).旧虚拟DOM中未找到与新虚拟DOM相同的key</p><p>​            创建新的真实DOM，随后渲染到到页面。</p><p>​            </p><h4 id="3-用index作为key可能会引发的问题"><a href="#3-用index作为key可能会引发的问题" class="headerlink" title="3. 用index作为key可能会引发的问题"></a>3. 用index作为key可能会引发的问题</h4><ol><li>若对数据进行：逆序添加、逆序删除等破坏顺序操作:</li></ol><p>​               会产生没有必要的真实DOM更新 ==&gt; 界面效果没问题, 但效率低。</p><ol start="2"><li>如果结构中还包含输入类的DOM：</li></ol><p>​               会产生错误DOM更新 ==&gt; 界面有问题。</p><h4 id="4-开发中如何选择key"><a href="#4-开发中如何选择key" class="headerlink" title="4. 开发中如何选择key?"></a>4. 开发中如何选择key?</h4><ol><li><p>最好使用每条数据的唯一标识作为key, 比如id、手机号、身份证号、学号等唯一值。</p></li><li><p>如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，仅用于渲染列表用于展示，</p></li></ol><p>​            使用index作为key是没有问题的。</p><h3 id="3-Vue监视数据的原理："><a href="#3-Vue监视数据的原理：" class="headerlink" title="3. Vue监视数据的原理："></a>3. Vue监视数据的原理：</h3><ol><li>vue会监视data中所有层次的数据。</li></ol><ol start="2"><li>如何监测对象中的数据？</li></ol><p>​        通过setter实现监视，且要在new Vue时就传入要监测的数据。</p><p>​         (1).对象中后追加的属性，Vue默认不做响应式处理</p><p>​         (2).如需给后添加的属性做响应式，请使用如下API：</p><p>​             Vue.set(target，propertyName/index，value) 或 </p><p>​             vm.$set(target，propertyName/index，value)</p><ol start="3"><li>如何监测数组中的数据？</li></ol><p>​         通过包裹数组更新元素的方法实现，本质就是做了两件事：</p><p>​          (1).调用原生对应的方法对数组进行更新。</p><p>​          (2).重新解析模板，进而更新页面。</p><ol start="4"><li>在Vue修改数组中的某个元素一定要用如下方法：</li></ol><p>​       1.使用这些API:push()、pop()、shift()、unshift()、splice()、sort()、reverse()</p><p>​       2.Vue.set() 或 vm.$set()</p><p>​    </p><p>​    特别注意：Vue.set() 和 vm.$set() 不能给vm 或 vm的根数据对象 添加属性！！！</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs js">data:&#123;<br><span class="hljs-attr">student</span>:&#123;<br><span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;tom&#x27;</span>,<br><span class="hljs-attr">age</span>:<span class="hljs-number">18</span>,<br><span class="hljs-attr">hobby</span>:[<span class="hljs-string">&#x27;抽烟&#x27;</span>,<span class="hljs-string">&#x27;喝酒&#x27;</span>,<span class="hljs-string">&#x27;烫头&#x27;</span>],<br><span class="hljs-attr">friends</span>:[<br>&#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;jerry&#x27;</span>,<span class="hljs-attr">age</span>:<span class="hljs-number">35</span>&#125;,<br>&#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;tony&#x27;</span>,<span class="hljs-attr">age</span>:<span class="hljs-number">36</span>&#125;<br>]<br>&#125;<br>&#125;,<br><span class="hljs-attr">methods</span>: &#123;<br><span class="hljs-function"><span class="hljs-title">addSex</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-comment">// Vue.set(this.student,&#x27;sex&#x27;,&#x27;男&#x27;)</span><br><span class="hljs-built_in">this</span>.$set(<span class="hljs-built_in">this</span>.student,<span class="hljs-string">&#x27;sex&#x27;</span>,<span class="hljs-string">&#x27;男&#x27;</span>)<br>&#125;,<br><span class="hljs-function"><span class="hljs-title">addFriend</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-built_in">this</span>.student.friends.unshift(&#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;jack&#x27;</span>,<span class="hljs-attr">age</span>:<span class="hljs-number">70</span>&#125;)<br>&#125;,<br><span class="hljs-function"><span class="hljs-title">updateFirstFriendName</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-built_in">this</span>.student.friends[<span class="hljs-number">0</span>].name = <span class="hljs-string">&#x27;张三&#x27;</span><br>&#125;,<br><span class="hljs-function"><span class="hljs-title">addHobby</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-built_in">this</span>.student.hobby.push(<span class="hljs-string">&#x27;学习&#x27;</span>)<br>&#125;,<br><span class="hljs-function"><span class="hljs-title">updateHobby</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-comment">// this.student.hobby.splice(0,1,&#x27;开车&#x27;)</span><br><span class="hljs-comment">// Vue.set(this.student.hobby,0,&#x27;开车&#x27;)</span><br><span class="hljs-built_in">this</span>.$set(<span class="hljs-built_in">this</span>.student.hobby,<span class="hljs-number">0</span>,<span class="hljs-string">&#x27;开车&#x27;</span>)<br>&#125;,<br><span class="hljs-function"><span class="hljs-title">removeSmoke</span>(<span class="hljs-params"></span>)</span>&#123;<br><span class="hljs-built_in">this</span>.student.hobby = <span class="hljs-built_in">this</span>.student.hobby.filter(<span class="hljs-function">(<span class="hljs-params">h</span>)=&gt;</span>&#123;<br><span class="hljs-keyword">return</span> h !== <span class="hljs-string">&#x27;抽烟&#x27;</span><br>&#125;)<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="13-收集表单数据："><a href="#13-收集表单数据：" class="headerlink" title="13. 收集表单数据："></a>13. 收集表单数据：</h2><p>​     若：<code>&lt;input type=&quot;text&quot;/&gt;</code>，则v-model收集的是value值，用户输入的就是value值。</p><p>​     若：<code>&lt;input type=&quot;radio&quot;/&gt;</code>，则v-model收集的是value值，且要给标签配置value值。</p><p>​     若：<code>&lt;input type=&quot;checkbox&quot;/&gt;</code></p><p>​       1.没有配置input的value属性，那么收集的就是checked（勾选 or 未勾选，是布尔值）</p><p>​       2.配置input的value属性:</p><p>​         (1)v-model的初始值是非数组，那么收集的就是checked（勾选 or 未勾选，是布尔值）</p><p>​         (2)v-model的初始值是数组，那么收集的的就是value组成的数组</p><p>​     备注：v-model的三个修饰符：</p><p>​         lazy：失去焦点再收集数据</p><p>​         number：输入字符串转为有效的数字</p><p>​         trim：输入首尾空格过滤</p><h2 id="14-过滤器："><a href="#14-过滤器：" class="headerlink" title="14. 过滤器："></a>14. 过滤器：</h2><p>​    定义：对要显示的数据进行特定格式化后再显示（适用于一些简单逻辑的处理）。</p><p>​    语法：</p><p>​      1.注册过滤器：<code>Vue.filter(name,callback) </code>或 <code>new Vue&#123;filters:&#123;&#125;&#125;</code></p><p>​      2.使用过滤器：<code>&#123;&#123; xxx | 过滤器名&#125;&#125;</code>  或  v-bind:属性 = “xxx | 过滤器名”</p><p>​    备注：</p><p>​      1.过滤器也可以接收额外参数、多个过滤器也可以串联</p><p>​      2.并没有改变原本的数据, 是产生新的对应的数据</p><h2 id="15-内置指令"><a href="#15-内置指令" class="headerlink" title="15. 内置指令"></a>15. 内置指令</h2><h3 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h3><p>单向绑定解析表达式, 可简写为 :xxx</p><h3 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h3><p>双向数据绑定</p><h3 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h3><p>遍历数组/对象/字符串</p><h3 id="v-on"><a href="#v-on" class="headerlink" title="v-on"></a>v-on</h3><p>绑定事件监听, 可简写为@</p><h3 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h3><p>条件渲染（动态控制节点是否存存在）</p><h3 id="v-else"><a href="#v-else" class="headerlink" title="v-else"></a>v-else</h3><p>条件渲染（动态控制节点是否存存在）</p><h3 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h3><p>条件渲染 (动态控制节点是否展示)</p><h3 id="v-text"><a href="#v-text" class="headerlink" title="v-text"></a>v-text</h3><p>​      1.作用：向其所在的节点中渲染文本内容。</p><p>​      2.与插值语法的区别：v-text会替换掉节点中的内容，<code>&#123;&#123;xx&#125;&#125;</code>则不会。</p><h3 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h3><p>​      1.作用：向指定节点中渲染包含html结构的内容。</p><p>​      2.与插值语法的区别：</p><p>​         (1).v-html会替换掉节点中所有的内容，<code>&#123;&#123;xx&#125;&#125;</code>则不会。</p><p>​         (2).v-html可以识别html结构。</p><p>​      3.严重注意：v-html有安全性问题！！！！</p><p>​         (1).在网站上动态渲染任意HTML是非常危险的，容易导致XSS攻击。</p><p>​         (2).一定要在可信的内容上使用v-html，永不要用在用户提交的内容上！</p><h3 id="v-cloak指令"><a href="#v-cloak指令" class="headerlink" title="v-cloak指令"></a>v-cloak指令</h3><p>​      1.本质是一个特殊属性，Vue实例创建完毕并接管容器后，会删掉v-cloak属性。</p><p>​      2.使用css配合v-cloak可以解决网速慢时页面展示出<code>&#123;&#123;xxx&#125;&#125;</code>的问题。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-cloak</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="v-once"><a href="#v-once" class="headerlink" title="v-once"></a>v-once</h3><ol><li><p>v-once所在节点在初次动态渲染后，就视为静态内容了。</p></li><li><p>以后数据的改变不会引起v-once所在结构的更新，可以用于优化性能。</p></li></ol><h3 id="v-pre"><a href="#v-pre" class="headerlink" title="v-pre"></a>v-pre</h3><p>​     1.跳过其所在节点的编译过程。</p><p>​     2.可利用它跳过：没有使用指令语法、没有使用插值语法的节点，会加快编译。</p><h2 id="16-自定义指令"><a href="#16-自定义指令" class="headerlink" title="16. 自定义指令"></a>16. 自定义指令</h2><p>​    需求1：定义一个v-big指令，和v-text功能类似，但会把绑定的数值放大10倍。</p><p>​    需求2：定义一个v-fbind指令，和v-bind功能类似，但可以让其所绑定的input元素默认获取焦点。</p><p>​    自定义指令总结：</p><p>​      一、定义语法：</p><p>​         (1).局部指令：</p><p>​                在Vue中添加 directives</p><p>​         (2).全局指令：</p><p>​             <code>Vue.directive(指令名,配置对象) </code>或 <code>Vue.directive(指令名,回调函数)</code></p><p>​      二、配置对象中常用的3个回调：</p><p>​         (1).bind：指令与元素成功绑定时调用。</p><p>​         (2).inserted：指令所在元素被插入页面时调用。</p><p>​         (3).update：指令所在模板结构被重新解析时调用。</p><p>​      三、备注：</p><p>​         1.指令定义时不加v-，但使用时要加v-；</p><p>​         2.指令名如果是多个单词，要使用kebab-case命名方式，不要用camelCase命名。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs js">directives:&#123;<br><span class="hljs-function"><span class="hljs-title">big</span>(<span class="hljs-params">element,binding</span>)</span>&#123;<br><span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;big&#x27;</span>,<span class="hljs-built_in">this</span>) <span class="hljs-comment">//注意此处的this是window</span><br>element.innerText = binding.value * <span class="hljs-number">10</span><br>&#125;,<br><span class="hljs-attr">fbind</span>:&#123;<br><span class="hljs-comment">//指令与元素成功绑定时（一上来）</span><br><span class="hljs-function"><span class="hljs-title">bind</span>(<span class="hljs-params">element,binding</span>)</span>&#123;<br>element.value = binding.value<br>&#125;,<br><span class="hljs-comment">//指令所在元素被插入页面时</span><br><span class="hljs-function"><span class="hljs-title">inserted</span>(<span class="hljs-params">element,binding</span>)</span>&#123;<br>element.focus()<br>&#125;,<br><span class="hljs-comment">//指令所在的模板被重新解析时</span><br><span class="hljs-function"><span class="hljs-title">update</span>(<span class="hljs-params">element,binding</span>)</span>&#123;<br>element.value = binding.value<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="17-声明周期"><a href="#17-声明周期" class="headerlink" title="17. 声明周期"></a>17. 声明周期</h2><h3 id="1-生命周期："><a href="#1-生命周期：" class="headerlink" title="1. 生命周期："></a>1. 生命周期：</h3><p>  1.又名：生命周期回调函数、生命周期函数、生命周期钩子。</p><p>  2.是什么：Vue在关键时刻帮我们调用的一些特殊名称的函数。</p><p>  3.生命周期函数的名字不可更改，但函数的具体内容是程序员根据需求编写的。</p><p>  4.生命周期函数中的this指向是vm 或 组件实例对象。</p><h3 id="2-常用的生命周期钩子："><a href="#2-常用的生命周期钩子：" class="headerlink" title="2. 常用的生命周期钩子："></a>2. 常用的生命周期钩子：</h3><p>​      1.mounted: 发送ajax请求、启动定时器、绑定自定义事件、订阅消息等【初始化操作】。</p><p>​      2.beforeDestroy: 清除定时器、解绑自定义事件、取消订阅消息等【收尾工作】。</p><h3 id="3-关于销毁Vue实例"><a href="#3-关于销毁Vue实例" class="headerlink" title="3. 关于销毁Vue实例"></a>3. 关于销毁Vue实例</h3><p>​      1.销毁后借助Vue开发者工具看不到任何信息。</p><p>​      2.销毁后自定义事件会失效，但原生DOM事件依然有效。</p><p>​      3.一般不会在beforeDestroy操作数据，因为即便操作数据，也不会再触发更新流程了。</p>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>创作中</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>汉诺塔问题</title>
    <link href="/post/e8c3a72d/"/>
    <url>/post/e8c3a72d/</url>
    
    <content type="html"><![CDATA[<p>游戏地址：<a href="http://www.htmleaf.com/Demo/201508272485.html">http://www.htmleaf.com/Demo/201508272485.html</a><br>代码教程：<a href="https://www.bilibili.com/video/BV12741157Zp">https://www.bilibili.com/video/BV12741157Zp</a></p><figure class="highlight reasonml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><pre><code class="hljs reasonml">#<span class="hljs-keyword">include</span> &lt;stdio.h&gt;<br><br>void <span class="hljs-constructor">Hanoi(<span class="hljs-params">int</span> <span class="hljs-params">n</span>, <span class="hljs-params">char</span> <span class="hljs-params">x</span>, <span class="hljs-params">char</span> <span class="hljs-params">y</span>, <span class="hljs-params">char</span> <span class="hljs-params">z</span>)</span> &#123;<br>    <span class="hljs-keyword">if</span>(n<span class="hljs-operator"> == </span><span class="hljs-number">0</span>) &#123;<br>        return ;<br>    &#125;<br>    <span class="hljs-constructor">Hanoi(<span class="hljs-params">n</span> - 1, <span class="hljs-params">x</span>, <span class="hljs-params">z</span>, <span class="hljs-params">y</span>)</span>;<br>    printf(<span class="hljs-string">&quot;把第%d个从%c移动到%c\n&quot;</span>, n, x, z);<br>    <span class="hljs-constructor">Hanoi(<span class="hljs-params">n</span> - 1, <span class="hljs-params">y</span>, <span class="hljs-params">x</span>, <span class="hljs-params">z</span>)</span>;<br>&#125;<br><br><span class="hljs-built_in">int</span> main<span class="hljs-literal">()</span> &#123;<br>    <span class="hljs-constructor">Hanoi(4, &#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;)</span>;<br>    return <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>C语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C语言实例</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>不要使用软件下载站的高速下载</title>
    <link href="/post/3b34f99e/"/>
    <url>/post/3b34f99e/</url>
    
    <content type="html"><![CDATA[<h1 id="不要使用软件下载站的高速下载"><a href="#不要使用软件下载站的高速下载" class="headerlink" title="不要使用软件下载站的高速下载"></a>不要使用软件下载站的高速下载</h1><span id="more"></span><p>如果你在软件下载站下载过软件，那一定见过下面图片显示的内容。</p><p><img src="/images/uploads/%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%AB%99%E7%9A%84%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD/0.webp" alt="图片"></p><p><img src="/images/uploads/%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%AB%99%E7%9A%84%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD/1.webp" alt="图片"></p><p>可能你在有的网站只能看到高速下载。如果你使用过高速下载，那一定经历过安装一分钟、卸载3小时，或者根本无法卸载干净的情况。</p><p>你一旦执行下载的所谓安装程序，安装好软件后，会发现电脑里面出现了很多其他软件，有的不停的在弹窗，你还找不到。</p><p>最过分的是你通过高速下载安装的软件可能根本就不是你需要的软件。</p><p>因为软件下载站的高速下载实际就是一个广告插件，笔者觉得这是几十年前电脑插件的卷土重来。这个电脑广告插件会在运行后给你的电脑里面安装最少七八款其他你完全不需要的软件，有的还是恶意软件。</p><p>在软件下载站下载软件的正确操作就是不要使用软件下载站的高速下载。</p><p><img src="/images/uploads/%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%AB%99%E7%9A%84%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD/2.webp" alt="图片"></p><p><img src="/images/uploads/%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%AB%99%E7%9A%84%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD/3.webp" alt="图片"></p><p>除了不要点击软件下载页面的高速下载链接外，那怎么判断下载到的是不是软件下载站的高速下载广告插件呢？</p><p>第一：通过下载的exe名和大小判断。</p><p>你可以看下载的文件大小和软件描述的文件是否相同。高速下载器的大小一般只有2M左右，并且文件名带有其他的数码或字母。</p><p><img src="/images/uploads/%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%AB%99%E7%9A%84%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD/4.webp" alt="图片"></p><p>第二：通过软件运行后界面。  </p><p>如果你运行下载的软件后，是下面的窗口，那一定是高速下载广告插件了。</p><p><img src="/images/uploads/%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%AB%99%E7%9A%84%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD/5.webp" alt="图片"><br><img src="/images/uploads/%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%AB%99%E7%9A%84%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD/6.webp" alt="图片"></p><p>第一个窗口就要修改你的浏览器首页并且还要给你安装一个游戏，后面的会有很多软件软件安装到你的电脑里面。</p><p><img src="/images/uploads/%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%AB%99%E7%9A%84%E9%AB%98%E9%80%9F%E4%B8%8B%E8%BD%BD/7.webp" alt="图片"></p><p>软件下载的高速下载器除了安装这些你不需要的软件外，还会在电脑中安装各种弹窗广告。</p><p>最后，笔者建议大家，下载软件最好是通过电脑上安全软件的软件管家，或者软件官网。如果确实需要在软件下载站下载软件，一定不要使用软件下载站的高速下载，要使用本地下载。下载后再运行前一定用我前面说的2个方法判断一下是否是高速下载器。</p><p>最后重要的事情说三遍：</p><p>不要使用软件下载的高速下载。</p><p>不要使用软件下载的高速下载。</p><p>不要使用软件下载的高速下载。</p><blockquote><p><a href="https://mp.weixin.qq.com/s/SGXLx7IKCeQcXJlyRdNZPw">https://mp.weixin.qq.com/s/SGXLx7IKCeQcXJlyRdNZPw</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>电脑使用技巧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>随机图片API</title>
    <link href="/post/image-api/"/>
    <url>/post/image-api/</url>
    
    <content type="html"><![CDATA[<p>收集的一些随机显示图片的API接口</p><span id="more"></span><blockquote><p>如果需要同时显示多张图片，可以在url后面加上?random=1<br>例如: </p><figure class="highlight awk"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>api.ixiaowai.cn<span class="hljs-regexp">/api/</span>api.php?random=<span class="hljs-number">1</span><br>https:<span class="hljs-regexp">//</span>api.ixiaowai.cn<span class="hljs-regexp">/api/</span>api.php?random=<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure></blockquote><p><a href="https://api.ixiaowai.cn/api/api.php">https://api.ixiaowai.cn/api/api.php</a>（二次元动漫）</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://api.ixiaowai.cn/api/api.php?random=1"></div><div class="group-image-wrap"><img src="https://api.ixiaowai.cn/api/api.php?random=2"></div></div></div><p><a href="https://api.ixiaowai.cn/mcapi/mcapi.php">https://api.ixiaowai.cn/mcapi/mcapi.php</a>（mc酱动漫）</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://api.ixiaowai.cn/mcapi/mcapi.php?random=1"></div><div class="group-image-wrap"><img src="https://api.ixiaowai.cn/mcapi/mcapi.php?random=2"></div></div></div><p><a href="https://api.ixiaowai.cn/gqapi/gqapi.php">https://api.ixiaowai.cn/gqapi/gqapi.php</a>（高清壁纸）</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://api.ixiaowai.cn/gqapi/gqapi.php?random=1"></div><div class="group-image-wrap"><img src="https://api.ixiaowai.cn/gqapi/gqapi.php?random=2"></div></div></div><p><a href="https://api.ixiaowai.cn/gqapi/gqapi.php?39c915de">https://api.ixiaowai.cn/gqapi/gqapi.php?39c915de</a> （高清壁纸）</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://api.ixiaowai.cn/gqapi/gqapi.php?39c915de?random=1"></div><div class="group-image-wrap"><img src="https://api.ixiaowai.cn/gqapi/gqapi.php?39c915de?random=2"></div></div></div>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>Api接口</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>这些场景你是否觉得熟悉</title>
    <link href="/post/39c915de/"/>
    <url>/post/39c915de/</url>
    
    <content type="html"><![CDATA[<p><strong>上课时</strong></p><p>清醒没有发呆的多，发呆没有睡觉的多，睡觉没有玩手机的多；下课时，自修没有吃零食多，吃零食没有看连续剧多，看连续剧没有游戏多。如此这般，就业时的失败怎能不比成功多？</p><p><strong>考试时</strong></p><p>不给范围就不会考试，给了范围也只是复印同学准备的答案。你如果是老板，会雇用你自己这样的员工吗？</p><p><strong>毕业前</strong>  </p><p>上大学前填报志愿，你说不知道自己的兴趣特长，好吧，大学毕业找工作了，同样不知道自己的兴趣特长。自己都不认识自己，还有谁能认识你？</p><p><strong>专业课</strong></p><p>学技术不肯动手，学理论不肯动脑。</p><p>等待你的除了失业还能是什么？你说，你修完了《计算机基础》，但真实水平却连个PPT都做不好。你的竞争力在哪里？</p><p>你说，你修了两年英语，然而，你的水平却连与外国人日常对话都打怵。有哪家用人单位需要你？</p><p>你说，你修了《思想修养》，但你根本就没听。你敢说，除了课堂上睡眠的抗干扰能力得到提升外，在思想修养和道德品德方面，得到了应有的提升吗？</p><p>你说，你修过《阅读与写作》，但你读的是手机，你写的是微信。对语文，自己都没信心，你还想指望别人对你有信心？</p><p><strong>这些话是否直戳你的痛点</strong></p><p>实习要让父母开假证明，评先进要让父母找关系，补办证书要父母跑学校。找工作的时候，你能有一分坦然和自信吗？</p><p>双休日你起来吃早饭吗？连吃饭都不会，还有谁会相信你会干活？军训的时候叠过被子，军训过后还叠过几次？</p><p>唯一投入的是游戏，耗时最多的是游戏，而你的自荐信对此又只字不提。  </p><p><strong>自己做的连自己都不认可，世界上，还有谁会认可你？</strong></p><p>讲大道理的时候你口若悬河，伸手要钱的时候你撒娇耍赖。你可以欺负你的父母亲，世界也能任由你欺负吗？</p><p>离开了电脑你还能做什么？离开了游戏你还喜欢什么？离开了家你还能到哪里去？离开了父母还有谁会给你送水端饭？对于这些问题，你都找不到答案，你还想找到前程吗？</p><p>图书馆里没有你的人影，运动场上没有你的人影，公益场上更没有你的人影。</p><p>你退化的不是肌肉，你退化的不是责任感，你退化的是最基本的生存能力。</p><p>找工作时，在工作岗位上的最大价值在于不可替代。</p><p><strong>责任心、吃苦精神、写作水平、做事能力、专业修养、操作技术、学问素养、人际处理，有哪一方面是你的看家本领？有哪一点是他人不可替代的？你不失业谁失业？</strong></p><p><strong>有没有想过当年那些不如你的人也许有一天会超过你</strong></p><p>L同学本科就读的大学是一所普通得不能再普通的高校。上大一的时候，身边大部分的同学都是挣脱出高考枷锁的飞鸟，渴望自由。大学对于他们来说，就好像是进了一个没有人管的”游乐场“，一进了“游乐场”的大门，他们便飞奔进去，奔向各自想要玩的游乐项目。</p><p>他们参加各种各样的社团，又或者去光明正大地恋爱。只是，课本知识对于他们来说，只要不挂科，大学便是圆满结束了。 </p><p><strong>你们是不是也有过这样的经历，也有过这样的同窗。</strong></p><p><strong>明明一同起跑****却走向了不同的人生旅途</strong></p><p>有时你会突然发现，当时看上去和你差不多的人，甚至是不如你的人，原来蕴藏着如此巨大的能量。</p><p>而这样的能量，是无法用一次的考试成绩，用她所在的大学，甚至用她的智商来衡量的。 </p><p>而其他人，那些还在“游乐场”里疯玩的孩子，等到游乐场打烊，等到灯光都熄灭的时候，甚至还没回过神来，究竟发生了什么。</p><p>L同学如愿考上了名牌大学的研究生，终于去了她想要的学校，过她想要的生活。再后来，硕士毕业，她找到了一份给应届生的special offer，刚入职年收入就有30万。</p><p>很多本科的同学都惊呆了，看着普普通通只知道死读书的她，究竟是怎么有了这么大的能量，在四年后、六年后与其他人走向了不同的人生旅途。</p><p>熬过的辛苦最后都换成了幸福。</p><p><strong>有人说，大学是一场长跑，这四年时光，有的人从一开始就踏上了其他跑道，也有人挤到了前面的队伍，是时间让大家变得不一样！</strong></p><blockquote><p><a href="https://mp.weixin.qq.com/s/0ZdjxdwPKrVs7eK1WHIkZQ">https://mp.weixin.qq.com/s/0ZdjxdwPKrVs7eK1WHIkZQ</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>心得体会</category>
      
    </categories>
    
    
    <tags>
      
      <tag>转载</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>功能测试</title>
    <link href="/post/test/"/>
    <url>/post/test/</url>
    
    <content type="html"><![CDATA[<h1 id="外部文件引用测试"><a href="#外部文件引用测试" class="headerlink" title="外部文件引用测试"></a>外部文件引用测试</h1><p><a href="https://github.com/tea3/hexo-include-markdown">https://github.com/tea3/hexo-include-markdown</a></p><h3 id="include-me"><a href="#include-me" class="headerlink" title="include me ?"></a>include me ?</h3><p>Here is the <code>template.md</code>‘s content . This content is read from an external markdown file.</p><div class="note note-success">            <p>相关推荐：</p><ul><li><a href="/post/english-words/">英语单词总结</a></li><li><a href="/post/reading-turning/">考研阅读中的转折</a></li></ul>          </div><h1 id="草稿测试"><a href="#草稿测试" class="headerlink" title="草稿测试"></a>草稿测试</h1><p><a href="https://github.com/CallumHewitt/hexo-draft-tags">https://github.com/CallumHewitt/hexo-draft-tags</a></p><p>hexo server –draft</p><p>This text should be shown in –draft mode and in production.</p><h2 id="include文件"><a href="#include文件" class="headerlink" title="include文件"></a>include文件</h2><h2 id="插入iframe"><a href="#插入iframe" class="headerlink" title="插入iframe"></a>插入iframe</h2><div class="code-wrapper"><pre><code class="html">&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;Title&lt;/title&gt;    &lt;style&gt;        #div1 &#123;            width: 100px;            height: 80px;            background-color: red;            border: 50px solid black;            border-top-color: green;            border-right-color: blue;            border-bottom-color: yellow;        &#125;        #div2 &#123;            width: 0;            height: 0;            border: 50px solid black;            border-top-color: transparent;            border-right-color: transparent;            border-bottom-color: transparent;        &#125;        #div3 &#123;            width: 0;            height: 0;            border: 50px solid transparent;            border-left-color: red;        &#125;    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div id=&quot;div1&quot;&gt;&lt;/div&gt;    &lt;div id=&quot;div2&quot;&gt;&lt;/div&gt;    &lt;div id=&quot;div3&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre></div><h1 id="adf-cpp-include-lt-iostream-gt"><a href="#adf-cpp-include-lt-iostream-gt" class="headerlink" title="adf cpp #include&lt;iostream&gt;"></a>adf <code>cpp #include&lt;iostream&gt;</code></h1><iframe allowtransparency="yes" frameborder="0" width="100%" height="60" src="/web/前端实战案例总结/div圆角实例.html"></iframe><figure class="highlight html"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></div></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css"></span><br><span class="css">        <span class="hljs-selector-id">#div1</span> &#123;</span><br><span class="css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;</span><br><span class="css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">80px</span>;</span><br><span class="css">            <span class="hljs-attribute">background-color</span>: red;</span><br><span class="css">            <span class="hljs-attribute">border</span>: <span class="hljs-number">50px</span> solid black;</span><br><span class="css">            <span class="hljs-attribute">border-top-color</span>: green;</span><br><span class="css">            <span class="hljs-attribute">border-right-color</span>: blue;</span><br><span class="css">            <span class="hljs-attribute">border-bottom-color</span>: yellow;</span><br><span class="css">        &#125;</span><br><span class="css">        <span class="hljs-selector-id">#div2</span> &#123;</span><br><span class="css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;</span><br><span class="css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;</span><br><span class="css">            <span class="hljs-attribute">border</span>: <span class="hljs-number">50px</span> solid black;</span><br><span class="css">            <span class="hljs-attribute">border-top-color</span>: transparent;</span><br><span class="css">            <span class="hljs-attribute">border-right-color</span>: transparent;</span><br><span class="css">            <span class="hljs-attribute">border-bottom-color</span>: transparent;</span><br><span class="css">        &#125;</span><br><span class="css">        <span class="hljs-selector-id">#div3</span> &#123;</span><br><span class="css">            <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;</span><br><span class="css">            <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;</span><br><span class="css">            <span class="hljs-attribute">border</span>: <span class="hljs-number">50px</span> solid transparent;</span><br><span class="css">            <span class="hljs-attribute">border-left-color</span>: red;</span><br><span class="css">        &#125;</span><br><span class="css">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;div1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;div2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;div3&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>hexo</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>PDF编辑器</title>
    <link href="/post/pdf-edit/"/>
    <url>/post/pdf-edit/</url>
    
    <content type="html"><![CDATA[<p>分享一款完全无限制的PDF编辑软件，所有功能无限制。亲测可用</p><span id="more"></span><h2 id="软件安装教程"><a href="#软件安装教程" class="headerlink" title="软件安装教程"></a>软件安装教程</h2><p>以前给大家分享过金山PDF编辑专业版，尽管是专业版但似乎还有些功能被限制，这次推送的这款PDF编辑工具完全无限制，软件安装教程如下：</p><p>1.双击应用程序，然后选择同意用户许可协议。<br><img src="/images/uploads/PDF%E7%BC%96%E8%BE%91%E5%99%A8/0-1.png"></p><p>2.安装过程大概需要1-2分钟，仅需两部就安装完成了。<br><img src="/images/uploads/PDF%E7%BC%96%E8%BE%91%E5%99%A8/0-2.png"></p><p>3.安装完成后，切记不要立即启用，点击退出即可。<br><img src="/images/uploads/PDF%E7%BC%96%E8%BE%91%E5%99%A8/0-3.png"></p><h2 id="软件激活教程"><a href="#软件激活教程" class="headerlink" title="软件激活教程"></a>软件激活教程</h2><p>1.打开安装包的Crack文件夹，将里面的Files文件夹直接复制到到软件安装目录中，一般是在C:\Program Files (x86)里面。</p><p><img src="/images/uploads/PDF%E7%BC%96%E8%BE%91%E5%99%A8/1.png"></p><p>2.然后再将Crack里面的Patch.bat也复制到软件安装目录中，和上面的目录是一样的，这个不要出错哦。</p><p><img src="/images/uploads/PDF%E7%BC%96%E8%BE%91%E5%99%A8/2.png"></p><p>3.复制完成之后，以管理员身份运行Patch.bat文件，运行完之后按回车键即可实现完美激活，激活后打开桌面的应用图标即可。</p><p><img src="/images/uploads/PDF%E7%BC%96%E8%BE%91%E5%99%A8/3.png"></p><p>4.打开软件，所有编辑功能都可以无限制使用了。</p><p><img src="/images/uploads/PDF%E7%BC%96%E8%BE%91%E5%99%A8/4.png"></p><p>安装后请勿用于商业用途，仅供个人平时学习研究</p><a class="btn" href="https://pan.baidu.com/s/1OZPXY_vqgY4A5Yj1fw6bFQ"  target="_blank">点击下载 提取码:kmu3</a> <div class="note note-success">            <p><a href="https://pan.baidu.com/s/1OZPXY_vqgY4A5Yj1fw6bFQ">https://pan.baidu.com/s/1OZPXY_vqgY4A5Yj1fw6bFQ</a><br>提取码:kmu3</p>          </div>]]></content>
    
    
    <categories>
      
      <category>推荐分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件分享</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在文章中背单词</title>
    <link href="/post/tools-article-words/"/>
    <url>/post/tools-article-words/</url>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>如何知道自己的词汇量，最简单的办法就是把所有认识的单词全部标记一遍，这样就能精确的统计出自己的词汇量了。但是这样肯定又很无聊，所以最好的办法是通过自己阅读过的文章来这么做。</p><p>如果你已经读完一篇文章了，那么只需要把里面所有认识的单词打上标记，那么下一次再阅读另一篇文章的时候，只需要再标记没有标记过的单词，之前标记过的单词肯定就不用重复标记了，因此我写了一个小网页来辅助标记。</p><a class="btn" href="/tools/文章单词提取.html"  target="_blank">文章单词提取</a><h2 id="排除单词"><a href="#排除单词" class="headerlink" title="排除单词"></a>排除单词</h2><p>你学会的单词会在排除单词这个文本框中出现，当然，你也可以手动修改</p><p>我自己收集的一些简单词汇，如果需要，可以直接添加到里面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><pre><code class="hljs txt">介词<br>across behind below beside during near round under inside throughout upon within along apart front spite owing reguard considering reguarding including concerning <br>小学单词<br>unit go picture went play pencil water kite teacher let bike desk short watch clean green orange dog elephant boat morning small tall light floor computer room Chinese park eat climb hiking traffic pen ruler bag nose foot red yellow blue white cat rabbit duck pig bread chicken milk three five six seven eight nine ten boy friend afternoon father mother mom grandpa sister brother eleven twelve thirteen fifteen twenty pear watermelon apple banana grape bus chair window board door classroom wall fan bed fish shirt cold strong thin TV flower bedroom table wash clothe tree dinner evening visit weekend swim fly plant sleep insect leave collect post next buy violin stamp sore swimming fishing present skiing ice skating eraser crayon sharpener head face mouth eye ear arm finger leg body purple black pink brown monkey panda bear mouse squirrel cake hot hamburger French fries coke juice tea coffee doll ball balloon car plane am nice meet goodbye dad woman grandmother grandma grandfather really fourteen sixteen seventeen eighteen nineteen peach strawberry thank taxi jeep walkman lamp zoo giraffe deer rice beef egg driver doctor farmer nurse yes clock math music jacket skirt dress colour warm cool jeans pant sock shoe football snowy sunny horse aren funny Mr strict smart active quiet Monday Tuesday Wednesday Thursday Friday Saturday Sunday eggplant bean tofu potato tomato lunch tasty sweet sour fresh salty favourite fruit Cook meal sweep dishes curtain trash bin closet mirror kitchen bathroom river grass lake forest path bridge road building exercise breakfast sport usually noon mountain shopping piano grandparents sometime spring summer fall winter season skate snowman why Jan January Feb February Mar March Apr April May June July Aug August Sept September Oct October Nov November Dec December birthday uncle date aw cook phone listen letter mail jump walk run kangaroo fight swing drink pick experiment catch butterfly honey count report chess picnic train rule stop wait library office hospital cinema turn bookstore please left straight comic card hobby ride riding dive diving playing collecting teach teaches goes watches doesn singer writer actor actress artist reporter engineer accountant policeman salesperson cleaner rain cloud sun stream seed soil sprout taller shorter stronger older younger bigger heavy heavier thinner smaller fever throat toothache headache matter hurt tired excited angry bored sad watched washed cleaned played visited did learned sing dance sang danced ate took climbed bought row rowed saw got <br>阅读基本词<br>the a to of and in that B D C is it for on are be s not with they their we more have but you from by or at was your people this time an about can than text has answer work should which were t our most part I new do will who job one there point write student following how what would home much so up other them into all need direction sheet less when many make he some year been out state had life art women may way said even use according section because if these could after just paragraph author only no read like often each those government over day such good American think reading children get hi own firm help say us also world best word mark might well health first homework take high problem food newspaper give college become through mean two housing economic thing seem while toward market feel found still average live down before machine money last today my public very product right jury likely between believe question school bird example against different outside both system history happiness place longer rather federal long family yet human man making any director book business back working If off translation English re research since same power being now G self then writing gene too come hard instead without few learn based class used least don habit young great social spending around talk corporate themselves countries term future companies where true want better big reason plan set made ll generation end effect see study university poor case girl suggest paper know find sale change four experience increase going look information member group fact advance ago quickly percent fear men labor war among week society patent industry decision away education living once landscape court far full actually does old tend she house impact lot choice name chart worker past employment recession insurance her policy fast formation numbered happy greater spend kind U S <br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>英语</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>书信作文常用句</title>
    <link href="/post/english-letter-sentence/"/>
    <url>/post/english-letter-sentence/</url>
    
    <content type="html"><![CDATA[<p><img src="/images/uploads/%E5%8A%9B%E5%A9%89.png"></p><blockquote><ol><li>点击句子即可查看英语翻译，提供不同难度的句子。</li><li>方便自己复习，可以拿张纸看着中文写英语，顺带练练字。</li><li>如果有更好的句子，可以在评论区留言，会选择精选评论送小礼品。</li><li>当前句子数量：<span id="num"><span>句</li><li>持续更新中。。。。。。</li></ol></blockquote><h2 id="简单寒暄"><a href="#简单寒暄" class="headerlink" title="简单寒暄"></a>简单寒暄</h2><details><summary>最近过的怎么样？</summary><ul><li>How is everything going?</li><li>How are you getting on with your life recently?</li><li>I hope you are doing great!</li></ul></details><h2 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h2><details><summary>我是李明，你们网店的顾客之一。</summary><ul><li>I am Li Ming, one of the customers of your online store.</li></ul></details><details><summary>我是这所大学体育专业的本科生。</summary><ul><li>I am a undergard who majors in physical education in this university.</li></ul></details><h2 id="写信目的"><a href="#写信目的" class="headerlink" title="写信目的"></a>写信目的</h2><details><summary>写这封信的主要目的是</summary><ul><li>The main purpose of this email is to</li><li>The main purpose of my letter is to</li><li>I am writing to</li></ul></details><details><summary>向你表示衷心的感谢</summary><ul><li>express my heartfelt thanks to you</li><li>extend my heartfelt gratitude to you for</li></ul></details><details><summary>诚邀您参加</summary><ul><li>sincerely invite you to attend</li><li>cordially invite you to take</li></ul></details><details><summary>投诉</summary><p>make a complaint about <code>the quality of your product</code>.</p></details><details><summary>表达歉意</summary><p>express my apology to you, because <code>I have to cancel the travel plan to visit you at your university this Sunday morning</code>.</p></details><details><summary>祝贺你. 我们所有人都为你骄傲。</summary><p>congratulate you. All of us are proud of you.</p></details><details><summary>询问以下方面的信息。</summary><p>inquire some information about the following aspects.</p></details><details><summary>向你推荐《老人与海》这本书</summary><p>recommend you the book of “The Old Man and the Sea”.<br>向你推荐《老人与海》这本书。</p></details><details><summary>向您介绍此活动，并呼吁您的支持和参与。</summary><p>introduce this activity to you and call upon you for your support and participation.</p></details><details><summary>对`“城市交通”为题的辩论话题`提出建议，并告知您有关活动安排的细节。</summary><p>suggest <code>a topic for the debat on the theme of city traffic</code> and tell you some details about the arrangements.</p></details><details><summary>告诉你一些关于这个景点的事情，并提供一些实用的提示。</summary><p>tell you something about the scenic spot and provide some tips.</p></details><h2 id="内容要点"><a href="#内容要点" class="headerlink" title="内容要点"></a>内容要点</h2><h3 id="道歉"><a href="#道歉" class="headerlink" title="道歉"></a>道歉</h3><details><summary>我接收到通知，本周日要参加一场重要的考试，而且这场考试无法延期。</summary><ul><li>I am told that I will attend an important test this Sunday which cannot be put off.</li><li>I am told that I will take an important exam this Sunday, I can’t put it off.</li></ul></details><details><summary>我只能遗憾的取消此次拜访。</summary><ul><li>I have to cancel this visit with regret.</li><li>I have to cancel this visit.</li></ul></details><details><summary>为弥补这次失约，我计划下周日上午拜访您。</summary><ul><li>To make up for this, I plan to visit you next Sunday morning.</li><li>To make up for this, I will call on you next Sunday morning.</li></ul></details><details><summary>如果有必要的话，我愿意对此因此的任何麻烦提出补救翻案。</summary><ul><li>If necessary, I would like to compensate for any trouble (it may cause).</li></ul></details><h3 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h3><details><summary>我初步的计划如下</summary><ul><li>My primary plans are as follows.</li><li>The plans are as follows.</li></ul></details><details><summary>因为这一现象在当今人们的话题中很有名。</summary><p>because the <code>phenomenon</code> is famous [among the topics (of the people)] [nowadays].</p></details><details><summary>北京大学是中国最好的大学之一。</summary><p>Peking University is one of the best universities in China.</p></details><details><summary>作为一名大学生，时间规划和自主学习对你来说非常重要。</summary><p>As a college student, time management and self-study are quite important to you.</p></details><h3 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h3><details><summary>你和你的家庭给我留下了深刻的印象。</summary><p>You and your family left a deep impression on me.</p></details><details><summary>他将成为我人参中最精彩的记忆之一。</summary><p>It is one of the most wonderful memories in my life.</p></details><details><summary>在一次谈话中，你说你想来中国旅游。</summary><p>In a talk you said you wanted to travel in China.</p></details><details><summary>我很乐意做你的导游</summary><p>it would be my pleasure to be your guide.</p></details><h3 id="投诉"><a href="#投诉" class="headerlink" title="投诉"></a>投诉</h3><details><summary>前几天在你们网店买的</summary><p>I bought [at your online store] [the other day].</p></details><details><summary>一开始我对自己新买的英语学习机很满意，它运行良好。</summary><p>At first, I was quite happy with my new English-learning device (which worked just fine).</p></details><details><summary>我重启了数次，但问题依然存在</summary><p>I have reset the device several times but the problem still exists.</p></details><details><summary>我建议免费帮我换一台。</summary><p>I suggest a free replacement of my device.</p></details><h3 id="生活习惯"><a href="#生活习惯" class="headerlink" title="生活习惯"></a>生活习惯</h3><details><summary>我想和你分享一些我的生活习惯。</summary><p>I would like to share with you some of my living habits.</p></details><details><summary>我喜欢在早晨听音乐，这样可以让我精神换法。</summary><p>I perfer listening to music in the morning, which can refresh me.</p></details><h3 id="询问"><a href="#询问" class="headerlink" title="询问"></a>询问</h3><details><summary>如果你能提供一些关于住宿环境的信息，比如周边环境和交通规则，我将不胜感激。</summary><p>I really appreciate it | if you can offer me some information (about living there), such as the surroundings and traffic rules.</p></details><h3 id="通知"><a href="#通知" class="headerlink" title="通知"></a>通知</h3><details><summary>我很荣幸的宣布</summary><p>We have the great honor to announce that</p></details><details><summary>本校计划于7月4日至11日举办高中生夏令营活动。</summary><p>our university is planning to hold a summer camp for high school students from July 4th to 11th.</p></details><details><summary>在夏令营期间，我们会安排学生参观大学校园。</summary><p>During the camp, we’ll arrange students to visit our campus.</p></details><details><summary>我们急需志愿者</summary><p>we are badly in need of the volunteers.</p></details><details><summary>如果你愿意成为一名志愿者，请将你的简历发送至下面的邮箱:111@qq.com</summary><p>If you are willing to be a volunter, please send your resume to the following email address: <a href="mailto:&#x31;&#x31;&#x31;&#64;&#113;&#x71;&#x2e;&#99;&#x6f;&#x6d;">&#x31;&#x31;&#x31;&#64;&#113;&#x71;&#x2e;&#99;&#x6f;&#x6d;</a></p></details><h3 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h3><details><summary>你可以在业余时间看书。</summary><p>You can read in your leisure time.</p></details><details><summary>《老人与海》是海明威最著名的作品之一。</summary><p>The “Old Man and the Sea” is one of the Hemingway’s most famous works.</p></details><details><summary>这句名言“人可以毁灭，但不能被打败”摘自此书。</summary><p>This well-known saying that a man can be destroyed but not defeated is taken from this book.</p></details><details><summary>长城位于中国北方，有两千多年的历史。</summary><p>Located in northern China, the Great Wall has a history of over two thousand years.</p></details><details><summary>它是世界上最伟大的奇迹之一。</summary><p>it is one of the greatest wonders of the world.</p></details><details><summary>今天，长城不仅成为中国人的兴趣所在，也是全世界人民的兴趣所在。</summary><ul><li>Not only Chinese but also foreigners all are interested in the Great Wall Today, which is one of the greatest wonders of the world.</li><li>Today, the Great Wall has become a place of interest not only to the Chinese but to people from all over the world.</li></ul></details><h3 id="一个活动"><a href="#一个活动" class="headerlink" title="一个活动"></a>一个活动</h3><details><summary>我们将于5月15日上午9点到12点在操场举行慈善义卖。</summary><ul><li>A charity sale is to be hold form 9:00 to 12:00 a.m. on May 15th on our play ground.</li><li>There is a charity sale will to be held form 9:00 to 12:00 a.m. on May 15th on our play ground.</li></ul></details><details><summary>当天你们可以把自己不用的书，衣服和包等出售给需要的同学们。</summary><p>On that day, you can sell things (such as book, clothes, and bags that will not be used any more) to people who need them.</p></details><details><summary>你也可以从其他人那里买自己喜欢的东西。</summary><p>You can also buy {whatever you like} from others.</p></details><h3 id="哪儿都能用"><a href="#哪儿都能用" class="headerlink" title="哪儿都能用"></a>哪儿都能用</h3><details><summary>当我们到风景区旅游时，我们的视野可以开阔，因为实践经验可以成为我们书本知识的一个很好的补充。</summary><p>When <code>we travel to scenic spot</code>, our horizon can be broadened, as practical experience can be a great supplement for our book knowledge.</p></details><h2 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h2><details><summary>请接受我真诚的道歉。</summary><p>Please accept my sincere apologies.</p></details><details><summary>希望您多多考虑我的计划。</summary><p>I hope that my plans could get your kind consideration.</p></details><details><summary>我期待着稍后与您讨论更多的细节。</summary><p>I’m looking forward to discussing more details with you later.</p></details><details><summary>我祝贺你在未来的岁月力取得成功</summary><p>I wish you success in the years ahead.</p></details><details><summary>祝你好运</summary><p>Wish you good luck!</p></details><details><summary>请带我向你的家人问好</summary><p>Please give my best regard to your family.</p></details><details><summary>期待你早日来中国旅游</summary><p>look forward to your early visit to China.</p></details><details><summary>我十分感谢您善意的帮助</summary><p>I am extremely grateful to you for your kind help.</p></details><details><summary>期待与你见面</summary><p>Look forword to meeting you.</p></details><details><summary>期待得到让人满意的答复。</summary><p>I look forward to a satisfactory reply.</p></details><h2 id="万能论点"><a href="#万能论点" class="headerlink" title="万能论点"></a>万能论点</h2><p>如果题目要求推荐电影，就推荐英语电影，原因就是英语很重要<br>如果题目要求请假，就说请假要去考英语考试，因为英语很重要<br>如果题目要求给一个上大学的人提建议，就说好好学英语，因为英语很重要<br>如果让帮助山区儿童，就教他们英语，因为英语很重要。</p><blockquote><p>就我而言，英语在人们的交流中起着至关重要的作用。因此，如果一个人真的很擅长的话，他可以在事业和日常生活中提高自己。</p></blockquote><details><summary>点击查看英语</summary><p>English, for my part, plays a crucial role in people’s communication. Therefore, if one really excels in it, he could improve himeself both in his carerrs and in his daily life.</p></details><h2 id="顺承"><a href="#顺承" class="headerlink" title="顺承"></a>顺承</h2><details><summary>第一点</summary><ul><li>to begin with</li><li>on the one hand</li></ul></details><details><summary>第二点</summary><ul><li>Then more importantly, </li><li>More imporantly</li></ul></details><details><summary>第三点</summary><ul><li>Another element I must point out here is that </li><li>last but not least</li></ul></details><script src="http://libs.baidu.com/jquery/2.0.0/jquery.min.js"></script><script src="/js/checkbox.js"></script>]]></content>
    
    
    <categories>
      
      <category>英语</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>英语二大作文模板</title>
    <link href="/post/english-composition/"/>
    <url>/post/english-composition/</url>
    
    <content type="html"><![CDATA[<h2 id="模板框架"><a href="#模板框架" class="headerlink" title="模板框架"></a>模板框架</h2><p>考研英语二中考三类作文</p><ul><li>柱状图 column</li><li>饼状图 pie chart</li><li>折线图 line graph</li></ul><p>参考：英语二模板 <a href="https://www.bilibili.com/video/BV1zv411w7Tg">https://www.bilibili.com/video/BV1zv411w7Tg</a><br>英语一模板 <a href="https://www.bilibili.com/video/BV1Pg41157X7">https://www.bilibili.com/video/BV1Pg41157X7</a></p><h3 id="必背词汇"><a href="#必背词汇" class="headerlink" title="必背词汇"></a>必背词汇</h3><p>表示上升趋势 increase; grow up; rocket up<br>表示下降趋势 decrease; go down; slump<br>表示平衡趋势 keep balance<br>表示波动趋势 fluctuate; wave<br>修饰副词 sharply(极速) dramatically(极速) steadily(平缓) slightly(一点点)</p><p>surged 飞增</p><h3 id="第一段"><a href="#第一段" class="headerlink" title="第一段"></a>第一段</h3><h4 id="开头"><a href="#开头" class="headerlink" title="开头"></a>开头</h4><details><summary>正如图表中准确反映的那样</summary><ul><li>① As is accurately reflected in the chart,</li></ul></details><h4 id="描述图片"><a href="#描述图片" class="headerlink" title="描述图片"></a>描述图片</h4><h5 id="饼状图"><a href="#饼状图" class="headerlink" title="饼状图"></a>饼状图</h5><details><summary>在做某事时影响某人的因素变化很大。</summary><ul><li>② factors, which <code>influenced somebody when doing something</code> , varied a lot. </li></ul></details><details><summary>根据给出的图表，做某件事的人所占比例相对较大，占37%，其次是做另一件事的人，占33%。</summary><ul><li>③ Based on the diagram given, <code>people</code> who <code>done something</code> take a comparatively large share, accounting for <code>37%</code>, followed by those <code>who done another thing</code>, a proportion of <code>33%</code>.</li></ul></details><h5 id="柱状图"><a href="#柱状图" class="headerlink" title="柱状图"></a>柱状图</h5><details><summary>第一件事是从2008年的25%左右增加到2009年的33%，</summary><p>The first thing increasing from around 25% in 2008 to 33% in 2009,</p></details><details><summary>而第二件事是从2008年的35%左右下降到2009年的25%。</summary><p>while the second thing declined from about 35% in 2008 to 25% in 2009.</p></details><details><summary>与此同时，第三件事的比例基本保持不变。</summary><p>Meanwhile, the proportion of the third thing remained basically the same.</p></details><details><summary>从2013年到2015年，这一现象在中国的数量都以不同的速度激增。</summary><ul><li>② the number of <code>what the phenomenon in China</code> both surged at a different increase from 2013 to 2015.</li></ul></details><h5 id="套话"><a href="#套话" class="headerlink" title="套话"></a>套话</h5><details><summary>这个图表所传达的远不止是这种现象的增长。相反，它反映了中国公民日益增长的文化需求。</summary><ul><li>③ What the diagram conveys goes far beyond merely the growth of <code>this phenomenon</code>. Instead, it reflected the ever-increasing cultural needs of Chinese citizens. </li></ul></details><h3 id="过渡句"><a href="#过渡句" class="headerlink" title="过渡句"></a>过渡句</h3><blockquote><p>可以放在第一段末尾，也可以放在第二段开头</p></blockquote><details><summary>至少有两个主要因素可以解释这种现象。</summary><ul><li>There are at least two primary factors accounting for such phenomenon.</li></ul></details><details><summary>有几个因素对这一现象产生了重大影响，其中有两个主要因素被搁置在最重要的位置，这一点不容忽视。</summary><ul><li>Several factors weigh heavily for this <code>phenomenon boom</code>, among which two major ones suspended on the top of the list which should never be overlooked.</li></ul></details><h3 id="第二段"><a href="#第二段" class="headerlink" title="第二段"></a>第二段</h3><h4 id="论点"><a href="#论点" class="headerlink" title="论点"></a>论点</h4><details><summary>当我们做某事时，我们的视野可以开阔，因为实践经验可以成为我们书本知识的一个很好的补充。</summary><ul><li>① In the first place, when <code>doing something</code>, our horizon can be broadened, as practical experience can be a great supplement for our book knowledge. </li></ul></details><h4 id="论据"><a href="#论据" class="headerlink" title="论据"></a>论据</h4><details><summary>根据最近的一项研究，越来越多的证据表明，大多数成功的社会精英也做过这件事。保持自己越来越好。</summary><ul><li>② Base on a most recent study, a growing body of evidence showd that most successful social elites, who <code>also done this thing</code>, hold themselves better and better.</li></ul></details><details><summary>例如，在学习了关于美丽文物的伟大诗篇之后，我们可以通过现场观景的印象来提高我们的鉴赏力。</summary><ul><li>② For example, after learning great poems of beautiful cultural relics, our appreciation can be enhanced by the impression of sight seeing on the spot.</li></ul></details><h4 id="二段末尾"><a href="#二段末尾" class="headerlink" title="二段末尾"></a>二段末尾</h4><details><summary>因此，从这个角度来看，没有什么比发展国家文化产业更有利、更具挑战性的了。</summary><ul><li>③ a classic case in point is one of my classmates, who _________, thus, from this standing point, there is nothing more beneficial and challenging than developing the nation’s cultural industry.</li></ul></details><h3 id="第三段"><a href="#第三段" class="headerlink" title="第三段"></a>第三段</h3><details><summary>鉴于上述论点，我们可以有把握地得出结论，随着物质和文化生活的不断增加，这种现象在未来十年将继续增长。</summary><p>In view of the arguments above, we can safely draw a conclusion that with the ever increasing material and cultural life, the phenomenon will keep growing in the forthcoming decade.</p></details><h2 id="完整模板"><a href="#完整模板" class="headerlink" title="完整模板"></a>完整模板</h2><h3 id="饼状图-1"><a href="#饼状图-1" class="headerlink" title="饼状图"></a>饼状图</h3><p>　　As is subtly mirrored in the pie chart, factors, which influenced somebody when doing something, varied a lot. Based on the diagram given, people who done something take a comparatively large share, accounting for 37%, followed by those who done another thing, a proportion of 33%.</p><p>　　正如饼图中微妙地反映的那样，在做某事时影响某人的因素变化很大。根据给出的图表，做某件事的人所占比例相对较大，占37%，其次是做另一件事的人，占33%。</p><p>　　There  are at least two primary factors accounting for such phenomenon. In the first place, when doing something, our horizon can be broadened, as practical experience can be a great supplement for our book knowledge. Based on a most recent study, a growing body of evidence showed that most successful social elites, who also done this thing. hold themselves better and better.</p><p>　　至少有两个主要因素可以解释这种现象。首先，当我们做某事时，我们的视野可以开阔，因为实践经验可以成为我们书本知识的一个很好的补充。根据最近的一项研究，越来越多的证据表明，大多数成功的社会精英也做过这件事。保持自己越来越好。</p><p>　　In view of the arguments above, we can safely draw a conclusion that with the ever increasing material and cultural life, the phenomenon will keep growing in the forthcoming decade.</p><p>　　鉴于上述论点，我们可以有把握地得出结论，随着物质和文化生活的不断增加，这种现象在未来十年将继续增长。</p><h3 id="折线图"><a href="#折线图" class="headerlink" title="折线图"></a>折线图</h3><p>　　As is subtly mirrored in the line chart, the number of what the phenomenon in China both surged at a different increace from 2013 to 2015. What the diagram conveys goes far beyond merely the growth of this phenomenon. Instead, it reflected the ever-increasing cultural needs of Chinese citizens.</p><p>　　正如折线图中微妙地反映的那样，2013年至2015年，中国这一现象的数量以不同的速度激增。这个图表所传达的远不止是这种现象的增长。相反，它反映了中国公民日益增长的文化需求。</p><p>　　There are at least two primary factors accounting for such phenomenon. In the first place, when we doing this thing, our horizon can be broadended, as practical expression can be a great supplement for our book knowledge. For example, after learning great poems of beautiful cultural relics, our appreciation can be enhanced by the impression of sight seeing on the spot. Thus, from this standing point, there is nothing more beneficial and challengiing than developing the nation’s cultural industry.</p><p>　　至少有两个主要因素可以解释这种现象。首先，当我们做这件事时，我们的视野可以成为我们书本知识的一个很好的补充。例如，在学习了关于美丽文物的伟大诗篇之后，我们可以通过现场观景的印象来提高我们的鉴赏力。因此，从这个角度来看，没有什么比发展民族文化产业更有利、更具挑战性的了。</p><p>　　In view of the arguments above, we can safely draw a conclusion that with the ever increasing material and cultural life, the phenomenon will keep growing in the forthcoming decade.</p><p>　　鉴于上述论点，我们可以有把握地得出结论，随着物质和文化生活的不断增加，这种现象在未来十年将继续增长。</p><script src="http://libs.baidu.com/jquery/2.0.0/jquery.min.js"></script><script src="/js/checkbox.js"></script>]]></content>
    
    
    <categories>
      
      <category>英语</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>通过刷题学习考研数据结构-排序</title>
    <link href="/post/data-structure-sort/"/>
    <url>/post/data-structure-sort/</url>
    
    <content type="html"><![CDATA[<blockquote><p>记录考研学习数据结构过程中写的代码，所有代码都有编译器可以直接运行的版本，理论与实践结合。</p></blockquote><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li><a href="/post/data-structure-list/">线性表</a></li><li><a href="/post/data-structure-bitree/">二叉树</a></li><li><a href="/post/data-structure-sort/">排序</a></li></ul><h1 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h1><p>掌握<strong>简单选择排序</strong>、<strong>直接插入排序</strong>、<strong>交换排序</strong>、<strong>希尔排序</strong>、<strong>快速排序</strong>、<strong>堆排序</strong>、<strong>二路归并排序</strong>、基数排序的算法思想和步骤，能够写出排序过程，能写出算法代码。</p><p>了解各种排序方法的特点，能够针对特定问题背景选择适当的排序方法。</p><h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><h3 id="直接插入排序"><a href="#直接插入排序" class="headerlink" title="直接插入排序"></a>直接插入排序</h3><figure class="highlight cpp"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">InsertSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j, t;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; len; i++) &#123; <span class="hljs-comment">// 数组是从0开始的，但是要从1开始比较</span><br>        <span class="hljs-keyword">if</span>(A[i - <span class="hljs-number">1</span>] &gt; A[i]) &#123; <span class="hljs-comment">// 如果前面元素大于当前的，则进行插入排序</span><br>            t = A[i]; <span class="hljs-comment">// 用临时变量存一下当前的元素，这样在后面的移动过程中就可以直接覆盖这个位置了</span><br>            <span class="hljs-keyword">for</span>(j = i; j &gt; <span class="hljs-number">0</span> &amp;&amp; A[j - <span class="hljs-number">1</span>] &gt; t; j--) &#123;  <span class="hljs-comment">// 如果前面的元素大于当前的，让前面的往后挪； 注意: 一定要和临时变量t比较，A[j - 1] 不能和A[j] 比较</span><br>                A[j] = A[j - <span class="hljs-number">1</span>];<br>            &#125;<br>            A[j] = t;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><details><summary>点击查看完整代码</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">InsertSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j, t;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; len; i++) &#123; <span class="hljs-comment">// 数组是从0开始的，但是要从1开始比较</span><br>        <span class="hljs-keyword">if</span>(A[i - <span class="hljs-number">1</span>] &gt; A[i]) &#123; <span class="hljs-comment">// 如果前面元素大于当前的，则进行插入排序</span><br>            t = A[i]; <span class="hljs-comment">// 用临时变量存一下当前的元素，这样在后面的移动过程中就可以直接覆盖这个位置了</span><br>            <span class="hljs-keyword">for</span>(j = i; j &gt; <span class="hljs-number">0</span> &amp;&amp; A[j - <span class="hljs-number">1</span>] &gt; t; j--) &#123;  <span class="hljs-comment">// 如果前面的元素大于当前的，让前面的往后挪； 注意: 一定要和临时变量t比较，A[j - 1] 不能和A[j] 比较</span><br>                A[j] = A[j - <span class="hljs-number">1</span>];<br>            &#125;<br>            A[j] = t;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">int</span> a[<span class="hljs-number">100005</span>];<br><span class="hljs-keyword">int</span> n;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a[i]);<br>    &#125;<br>    <span class="hljs-built_in">InsertSort</span>(a, n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>, a[i]);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">代码正确性测评：https://www.luogu.com.cn/problem/P1177</span><br><span class="hljs-comment">因为直接插入排序的时间复杂度为O(n^2) 所以会有两组数据超时 本题数据的超时时间是3.2秒</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure></details><h3 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ShellSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j, d, t;<br>    <span class="hljs-keyword">for</span>(d = len / <span class="hljs-number">2</span>; d &gt; <span class="hljs-number">0</span>; d /= <span class="hljs-number">2</span>) &#123; <span class="hljs-comment">// 步长变化</span><br>        <span class="hljs-keyword">for</span>(i = <span class="hljs-number">1</span>; i &lt; len; i += d) &#123; <span class="hljs-comment">// 下面跟直接插入排序一模一样，只是i每次加d</span><br>            <span class="hljs-keyword">if</span>(A[i - <span class="hljs-number">1</span>] &gt; A[i]) &#123;<br>                t = A[i];<br>                <span class="hljs-keyword">for</span>(j = i; j &gt; <span class="hljs-number">0</span> &amp;&amp; A[j - <span class="hljs-number">1</span>] &gt; t; j--) &#123;<br>                    A[j] = A[j - <span class="hljs-number">1</span>];<br>                &#125;<br>                A[j] = t;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><details><summary>点击查看完整代码</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ShellSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j, d, t;<br>    <span class="hljs-keyword">for</span>(d = len / <span class="hljs-number">2</span>; d &gt; <span class="hljs-number">0</span>; d /= <span class="hljs-number">2</span>) &#123; <span class="hljs-comment">// 步长变化</span><br>        <span class="hljs-keyword">for</span>(i = <span class="hljs-number">1</span>; i &lt; len; i += d) &#123; <span class="hljs-comment">// 下面跟直接插入排序一模一样，只是i每次加d</span><br>            <span class="hljs-keyword">if</span>(A[i - <span class="hljs-number">1</span>] &gt; A[i]) &#123;<br>                t = A[i];<br>                <span class="hljs-keyword">for</span>(j = i; j &gt; <span class="hljs-number">0</span> &amp;&amp; A[j - <span class="hljs-number">1</span>] &gt; t; j--) &#123;<br>                    A[j] = A[j - <span class="hljs-number">1</span>];<br>                &#125;<br>                A[j] = t;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">int</span> a[<span class="hljs-number">100005</span>];<br><span class="hljs-keyword">int</span> n;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a[i]);<br>    &#125;<br>    <span class="hljs-built_in">ShellSort</span>(a, n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>, a[i]);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">代码正确性测评：https://www.luogu.com.cn/problem/P1177</span><br><span class="hljs-comment">希尔排序的时间复杂度还没有解决，但是最坏的情况下是O(n^2) 当n在某个特定范围时，希尔排序的时间复杂度约为O(n^1.3) 所以会有两组数据超时</span><br><span class="hljs-comment">100,000 这个数据范围为需要执行相对时间 25,624,830</span><br><span class="hljs-comment">O(nlogn)的算法为  1,312,236 很明显差一个数量级</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure></details><h2 id="交换排序"><a href="#交换排序" class="headerlink" title="交换排序"></a>交换排序</h2><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">BubbleSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j;<br>    <span class="hljs-keyword">bool</span> flag;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; len - <span class="hljs-number">1</span>; i++) &#123;<br>        flag = <span class="hljs-literal">false</span>; <span class="hljs-comment">// 表示本趟是否发生交换</span><br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; len - i - <span class="hljs-number">1</span>; j++) &#123; <span class="hljs-comment">// 一趟冒泡排序，将最大的冒到最后面</span><br>            <span class="hljs-keyword">if</span>(A[j] &gt; A[j + <span class="hljs-number">1</span>]) &#123;<br>                <span class="hljs-built_in">swap</span>(A[j], A[j + <span class="hljs-number">1</span>]);<br>                flag = <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(flag == <span class="hljs-literal">false</span>) &#123;<br>            <span class="hljs-keyword">return</span> ; <span class="hljs-comment">// 本趟遍历后没有发生交换，说明已经有序了</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><details><summary>点击查看完整代码</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-keyword">int</span> &amp;a, <span class="hljs-keyword">int</span> &amp;b)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> t = a;<br>    a = b;<br>    b = t;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">BubbleSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j;<br>    <span class="hljs-keyword">bool</span> flag;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; len - <span class="hljs-number">1</span>; i++) &#123;<br>        flag = <span class="hljs-literal">false</span>; <span class="hljs-comment">// 表示本趟是否发生交换</span><br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">0</span>; j &lt; len - i - <span class="hljs-number">1</span>; j++) &#123; <span class="hljs-comment">// 一趟冒泡排序，将最大的冒到最后面</span><br>            <span class="hljs-keyword">if</span>(A[j] &gt; A[j + <span class="hljs-number">1</span>]) &#123;<br>                <span class="hljs-built_in">swap</span>(A[j], A[j + <span class="hljs-number">1</span>]);<br>                flag = <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(flag == <span class="hljs-literal">false</span>) &#123;<br>            <span class="hljs-keyword">return</span> ; <span class="hljs-comment">// 本趟遍历后没有发生交换，说明已经有序了</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">BubbleSort2</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j;<br>    <span class="hljs-keyword">bool</span> flag;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; len - <span class="hljs-number">1</span>; i++) &#123;<br>        flag = <span class="hljs-literal">false</span>; <span class="hljs-comment">// 表示本趟是否发生交换</span><br>        <span class="hljs-keyword">for</span>(j = len - <span class="hljs-number">1</span>; j &gt; i; j--) &#123; <span class="hljs-comment">// 一趟冒泡排序，将最小的冒到最前面</span><br>            <span class="hljs-keyword">if</span>(A[j] &lt; A[j - <span class="hljs-number">1</span>]) &#123;<br>                <span class="hljs-built_in">swap</span>(A[j], A[j - <span class="hljs-number">1</span>]);<br>                flag = <span class="hljs-literal">true</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(flag == <span class="hljs-literal">false</span>) &#123;<br>            <span class="hljs-keyword">return</span> ; <span class="hljs-comment">// 本趟遍历后没有发生交换，说明已经有序了</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">int</span> a[<span class="hljs-number">100005</span>];<br><span class="hljs-keyword">int</span> n;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a[i]);<br>    &#125;<br>    <span class="hljs-built_in">BubbleSort</span>(a, n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>, a[i]);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">代码正确性测评：https://www.luogu.com.cn/problem/P1177</span><br><span class="hljs-comment">因为冒泡排序的时间复杂度为O(n^2) 所以肯定会超时，至少在一般的情况下没有快速排序快</span><br><span class="hljs-comment">冒泡排序可以加一个flag标志位来进行优化，这样在好的情况下就能达到O(n)的时间复杂度</span><br><span class="hljs-comment">经过测试，不加flag的代码只能通过上面题目的1组测试数据，加上flag可以通过3组，明显快了很多</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure></details><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Partition</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> high)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> pivot = A[low]; <span class="hljs-comment">// n. 枢轴, 中心点;</span><br>    <span class="hljs-keyword">while</span>(low &lt; high) &#123;<br>        <span class="hljs-keyword">while</span>(low &lt; high &amp;&amp; A[high] &gt;= pivot) high--;<br>        <span class="hljs-comment">// 此时high指向的位置比pivot小，并且low这个位置的数字已经存到pivot里面了，可以直接覆盖</span><br>        A[low] = A[high];<br>        <span class="hljs-keyword">while</span>(low &lt; high &amp;&amp; A[low] &lt;= pivot) low++;<br>        <span class="hljs-comment">// 此时low指向的位置比pivotda，需要放到最右边需要的位置，high这个位置刚刚好</span><br>        A[high] = A[low];<br>    &#125;<br>    A[low] = pivot; <span class="hljs-comment">// 将枢轴元素放到中间</span><br>    <span class="hljs-keyword">return</span> low; <span class="hljs-comment">// 返回中间的值，以便二分查找使用</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">QuickSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> high)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(low &lt; high) &#123;<br>        <span class="hljs-keyword">int</span> mid = <span class="hljs-built_in">Partition</span>(A, low, high); <span class="hljs-comment">// 和二分查找很像，只不过不需要计算中间值了，而是通过Partition函数来划分</span><br>        <span class="hljs-built_in">QuickSort</span>(A, low, mid - <span class="hljs-number">1</span>); <span class="hljs-comment">// 中间的mid已经是正确的位置了，所以可以直接不管中间的mid</span><br>        <span class="hljs-built_in">QuickSort</span>(A, mid + <span class="hljs-number">1</span>, high);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><details><summary>点击查看完整代码</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Partition</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> high)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> pivot = A[low]; <span class="hljs-comment">// n. 枢轴, 中心点;</span><br>    <span class="hljs-keyword">while</span>(low &lt; high) &#123;<br>        <span class="hljs-keyword">while</span>(low &lt; high &amp;&amp; A[high] &gt;= pivot) high--;<br>        <span class="hljs-comment">// 此时high指向的位置比pivot小，并且low这个位置的数字已经存到pivot里面了，可以直接覆盖</span><br>        A[low] = A[high];<br>        <span class="hljs-keyword">while</span>(low &lt; high &amp;&amp; A[low] &lt;= pivot) low++;<br>        <span class="hljs-comment">// 此时low指向的位置比pivotda，需要放到最右边需要的位置，high这个位置刚刚好</span><br>        A[high] = A[low];<br>    &#125;<br>    A[low] = pivot; <span class="hljs-comment">// 将枢轴元素放到中间</span><br>    <span class="hljs-keyword">return</span> low; <span class="hljs-comment">// 返回中间的值，以便二分查找使用</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">QuickSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> high)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(low &lt; high) &#123;<br>        <span class="hljs-keyword">int</span> mid = <span class="hljs-built_in">Partition</span>(A, low, high); <span class="hljs-comment">// 和二分查找很像，只不过不需要计算中间值了，而是通过Partition函数来划分</span><br>        <span class="hljs-built_in">QuickSort</span>(A, low, mid - <span class="hljs-number">1</span>); <span class="hljs-comment">// 中间的mid已经是正确的位置了，所以可以直接不管中间的mid</span><br>        <span class="hljs-built_in">QuickSort</span>(A, mid + <span class="hljs-number">1</span>, high);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">int</span> a[<span class="hljs-number">100005</span>];<br><span class="hljs-keyword">int</span> n;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a[i]);<br>    &#125;<br>    <span class="hljs-built_in">QuickSort</span>(a, <span class="hljs-number">0</span>, n - <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>, a[i]);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">代码正确性测评：https://www.luogu.com.cn/problem/P1177</span><br><span class="hljs-comment">快速排序的平均时间复杂度为O(nlogn)，但是如果数组基本有序，则会降到O(n^2)，原因是每次划分的时候，选择的枢纽太不平均，可能每次都是最小的，这样就会划分成一个只有左孩子或右孩子的树，导致效率降低</span><br><span class="hljs-comment">这个代码时间太慢就是因为pivot每次都选择的第一个下标里面的数字，可能测试数据有基本排好序的情况</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure></details><h3 id="快速排序-随机选择枢纽"><a href="#快速排序-随机选择枢纽" class="headerlink" title="快速排序-随机选择枢纽"></a>快速排序-随机选择枢纽</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Partition</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> high)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> pos = low + <span class="hljs-built_in">rand</span>() % (high - low); <span class="hljs-comment">// 产生一个low到high的随机数</span><br>    <span class="hljs-keyword">int</span> t = A[low]; <span class="hljs-comment">// 直接与low位置的数字交换位置，这样以后的情况就和正常的快速排序一样了</span><br>    A[low] = A[pos];<br>    A[pos] = t;<br>    <span class="hljs-keyword">int</span> pivot = A[low]; <span class="hljs-comment">// n. 枢轴, 中心点;</span><br>    <span class="hljs-keyword">while</span>(low &lt; high) &#123;<br>        <span class="hljs-keyword">while</span>(low &lt; high &amp;&amp; A[high] &gt;= pivot) high--;<br>        <span class="hljs-comment">// 此时high指向的位置比pivot小，并且low这个位置的数字已经存到pivot里面了，可以直接覆盖</span><br>        A[low] = A[high];<br>        <span class="hljs-keyword">while</span>(low &lt; high &amp;&amp; A[low] &lt;= pivot) low++;<br>        <span class="hljs-comment">// 此时low指向的位置比pivotda，需要放到最右边需要的位置，high这个位置刚刚好</span><br>        A[high] = A[low];<br>    &#125;<br>    A[low] = pivot; <span class="hljs-comment">// 将枢轴元素放到中间</span><br>    <span class="hljs-keyword">return</span> low; <span class="hljs-comment">// 返回中间的值，以便二分查找使用</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">QuickSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> high)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(low &lt; high) &#123;<br>        <span class="hljs-keyword">int</span> mid = <span class="hljs-built_in">Partition</span>(A, low, high); <span class="hljs-comment">// 和二分查找很像，只不过不需要计算中间值了，而是通过Partition函数来划分</span><br>        <span class="hljs-built_in">QuickSort</span>(A, low, mid - <span class="hljs-number">1</span>); <span class="hljs-comment">// 中间的mid已经是正确的位置了，所以可以直接不管中间的mid</span><br>        <span class="hljs-built_in">QuickSort</span>(A, mid + <span class="hljs-number">1</span>, high);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><details><summary>点击查看完整代码</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;time.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Partition</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> high)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> pos = low + <span class="hljs-built_in">rand</span>() % (high - low); <span class="hljs-comment">// 产生一个low到high的随机数</span><br>    <span class="hljs-keyword">int</span> t = A[low]; <span class="hljs-comment">// 直接与low位置的数字交换位置，这样以后的情况就和正常的快速排序一样了</span><br>    A[low] = A[pos];<br>    A[pos] = t;<br>    <span class="hljs-keyword">int</span> pivot = A[low]; <span class="hljs-comment">// n. 枢轴, 中心点;</span><br>    <span class="hljs-keyword">while</span>(low &lt; high) &#123;<br>        <span class="hljs-keyword">while</span>(low &lt; high &amp;&amp; A[high] &gt;= pivot) high--;<br>        <span class="hljs-comment">// 此时high指向的位置比pivot小，并且low这个位置的数字已经存到pivot里面了，可以直接覆盖</span><br>        A[low] = A[high];<br>        <span class="hljs-keyword">while</span>(low &lt; high &amp;&amp; A[low] &lt;= pivot) low++;<br>        <span class="hljs-comment">// 此时low指向的位置比pivotda，需要放到最右边需要的位置，high这个位置刚刚好</span><br>        A[high] = A[low];<br>    &#125;<br>    A[low] = pivot; <span class="hljs-comment">// 将枢轴元素放到中间</span><br>    <span class="hljs-keyword">return</span> low; <span class="hljs-comment">// 返回中间的值，以便二分查找使用</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">QuickSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> high)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(low &lt; high) &#123;<br>        <span class="hljs-keyword">int</span> mid = <span class="hljs-built_in">Partition</span>(A, low, high); <span class="hljs-comment">// 和二分查找很像，只不过不需要计算中间值了，而是通过Partition函数来划分</span><br>        <span class="hljs-built_in">QuickSort</span>(A, low, mid - <span class="hljs-number">1</span>); <span class="hljs-comment">// 中间的mid已经是正确的位置了，所以可以直接不管中间的mid</span><br>        <span class="hljs-built_in">QuickSort</span>(A, mid + <span class="hljs-number">1</span>, high);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">int</span> a[<span class="hljs-number">100005</span>];<br><span class="hljs-keyword">int</span> n;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">srand</span>((<span class="hljs-keyword">unsigned</span>)<span class="hljs-built_in">time</span>(<span class="hljs-literal">NULL</span>));<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a[i]);<br>    &#125;<br>    <span class="hljs-built_in">QuickSort</span>(a, <span class="hljs-number">0</span>, n - <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>, a[i]);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">代码正确性测评：https://www.luogu.com.cn/problem/P1177</span><br><span class="hljs-comment">添加了随机选取枢纽的快速排序，只有开启O2优化才能通过，快速排序的写法很多，可能严蔚敏数据结构里面的这种写法比较适合理解，不适合实践，我用三色旗的写法写的快速排序是可以完美通过的</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure></details><h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><h3 id="简单选择排序"><a href="#简单选择排序" class="headerlink" title="简单选择排序"></a>简单选择排序</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SelectSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j, min;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; len; i++) &#123;<br>        min = i;<br>        <span class="hljs-keyword">for</span>(j = i + <span class="hljs-number">1</span>; j &lt; len; j++) &#123;<br>            <span class="hljs-keyword">if</span>(A[min] &gt; A[j]) &#123;<br>                min = j;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(min != i) &#123;<br>            <span class="hljs-built_in">swap</span>(A[min], A[i]);<br>        &#125;<br>        <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><details><summary>点击查看完整代码</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-keyword">int</span> &amp;a, <span class="hljs-keyword">int</span> &amp;b)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> t = a;<br>    a = b;<br>    b = t;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">SelectSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> i, j, min;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; len; i++) &#123;<br>        min = i;<br>        <span class="hljs-keyword">for</span>(j = i + <span class="hljs-number">1</span>; j &lt; len; j++) &#123;<br>            <span class="hljs-keyword">if</span>(A[min] &gt; A[j]) &#123;<br>                min = j;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(min != i) &#123;<br>            <span class="hljs-built_in">swap</span>(A[min], A[i]);<br>        &#125;<br>        <br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">int</span> a[<span class="hljs-number">100005</span>];<br><span class="hljs-keyword">int</span> n;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a[i]);<br>    &#125;<br>    <span class="hljs-built_in">SelectSort</span>(a, n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>, a[i]);<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment">代码正确性测评：https://www.luogu.com.cn/problem/P1177</span><br><span class="hljs-comment">因为简单选择排序的时间复杂度为O(n^2) 比较次数还很多 所以会有四组数据超时</span><br><span class="hljs-comment">*/</span><br></code></pre></td></tr></table></figure></details><h3 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// 堆向下调整</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">HeapAdjust</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> k, <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    A[<span class="hljs-number">0</span>] = A[k];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = k * <span class="hljs-number">2</span>; i &lt;= len; i *= <span class="hljs-number">2</span>) &#123;<br>        <span class="hljs-keyword">if</span>(i &lt; len &amp;&amp; A[i] &lt; A[i + <span class="hljs-number">1</span>]) &#123; <span class="hljs-comment">// 比较左右子树节点 如果右边大，那么走右边</span><br>            i++;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(A[<span class="hljs-number">0</span>] &gt;= A[i]) &#123; <span class="hljs-comment">// 父节点与孩子节点比较 父节点比较大，不需要处理</span><br>            <span class="hljs-keyword">break</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-comment">// 如果父节点比较小，则需要交换</span><br>            A[k] = A[i]; <span class="hljs-comment">// 把孩子节点放到双亲</span><br>            k = i; <span class="hljs-comment">// 空出来孩子节点的位置，看这个孩子的孩子节点需不需要处理</span><br>        &#125;<br>    &#125;<br>    A[k] = A[<span class="hljs-number">0</span>]; <span class="hljs-comment">// 都交换完了，直接跳出</span><br>&#125;<br><br><span class="hljs-comment">// 建堆</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">BuildMaxHeap</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = len / <span class="hljs-number">2</span>; i &gt; <span class="hljs-number">0</span>; i--) &#123;<br>        <span class="hljs-built_in">HeapAdjust</span>(A, i, len);<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">HeapSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-built_in">BuildMaxHeap</span>(A, len);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = len; i &gt; <span class="hljs-number">1</span>; i--) &#123;<br>        <span class="hljs-built_in">swap</span>(A[<span class="hljs-number">1</span>], A[i]);<br>        <span class="hljs-built_in">HeapAdjust</span>(A, <span class="hljs-number">1</span>, i - <span class="hljs-number">1</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><details><summary>点击查看完整代码</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><br><span class="hljs-comment">// 堆向下调整</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">HeapAdjust</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> k, <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    A[<span class="hljs-number">0</span>] = A[k];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = k * <span class="hljs-number">2</span>; i &lt;= len; i *= <span class="hljs-number">2</span>) &#123;<br>        <span class="hljs-keyword">if</span>(i &lt; len &amp;&amp; A[i] &lt; A[i + <span class="hljs-number">1</span>]) &#123; <span class="hljs-comment">// 比较左右子树节点 如果右边大，那么走右边</span><br>            i++;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(A[<span class="hljs-number">0</span>] &gt;= A[i]) &#123; <span class="hljs-comment">// 父节点与孩子节点比较 父节点比较大，不需要处理</span><br>            <span class="hljs-keyword">break</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-comment">// 如果父节点比较小，则需要交换</span><br>            A[k] = A[i]; <span class="hljs-comment">// 把孩子节点放到双亲</span><br>            k = i; <span class="hljs-comment">// 空出来孩子节点的位置，看这个孩子的孩子节点需不需要处理</span><br>        &#125;<br>    &#125;<br>    A[k] = A[<span class="hljs-number">0</span>]; <span class="hljs-comment">// 都交换完了，直接跳出</span><br>&#125;<br><br><span class="hljs-comment">// 建堆</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">BuildMaxHeap</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = len / <span class="hljs-number">2</span>; i &gt; <span class="hljs-number">0</span>; i--) &#123;<br>        <span class="hljs-built_in">HeapAdjust</span>(A, i, len);<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-keyword">int</span> &amp;a, <span class="hljs-keyword">int</span> &amp;b)</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> k = a;<br>    a = b;<br>    b = k;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">HeapSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> len)</span> </span>&#123;<br>    <span class="hljs-built_in">BuildMaxHeap</span>(A, len);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = len; i &gt; <span class="hljs-number">1</span>; i--) &#123;<br>        <span class="hljs-built_in">swap</span>(A[<span class="hljs-number">1</span>], A[i]);<br>        <span class="hljs-built_in">HeapAdjust</span>(A, <span class="hljs-number">1</span>, i - <span class="hljs-number">1</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> INF = <span class="hljs-number">1e6</span> + <span class="hljs-number">5</span>;<br><span class="hljs-keyword">int</span> a[INF];<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> n;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a[i]);<br>    &#125;<br>    <span class="hljs-built_in">HeapSort</span>(a, n);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>, a[i]);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><h2 id="归并排序和基数排序"><a href="#归并排序和基数排序" class="headerlink" title="归并排序和基数排序"></a>归并排序和基数排序</h2><h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Merge</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> mid, <span class="hljs-keyword">int</span> heigh)</span> </span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = low; i &lt;= heigh; i++) &#123;<br>        B[i] = A[i];<br>    &#125;<br>    <span class="hljs-keyword">int</span> i = low, j = mid + <span class="hljs-number">1</span>, k = low;<br>    <span class="hljs-keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= heigh) &#123;<br>        <span class="hljs-keyword">if</span>(B[i] &lt;= B[j]) &#123; <span class="hljs-comment">// 比较i和j对应的数，谁大谁小</span><br>            A[k] = B[i++];<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            A[k] = B[j++];<br>        &#125;<br>        k++;<br>    &#125;<br>    <span class="hljs-keyword">while</span>(i &lt;= mid) A[k++] = B[i++];<br>    <span class="hljs-keyword">while</span>(j &lt;= heigh) A[k++] = B[j++];<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">MergeSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> heigh)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(low &lt; heigh) &#123;<br>        <span class="hljs-keyword">int</span> mid = (low + heigh) / <span class="hljs-number">2</span>;<br>        <span class="hljs-built_in">MergeSort</span>(A, low, mid);<br>        <span class="hljs-built_in">MergeSort</span>(A, mid + <span class="hljs-number">1</span>, heigh);<br>        <span class="hljs-built_in">Merge</span>(A, low, mid, heigh);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><details><summary>点击查看完整代码</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><br><span class="hljs-keyword">int</span> n;<br><br><span class="hljs-keyword">int</span> *B; <span class="hljs-comment">// 辅助数组</span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Merge</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> mid, <span class="hljs-keyword">int</span> heigh)</span> </span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = low; i &lt;= heigh; i++) &#123;<br>        B[i] = A[i];<br>    &#125;<br>    <span class="hljs-keyword">int</span> i = low, j = mid + <span class="hljs-number">1</span>, k = low;<br>    <span class="hljs-keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= heigh) &#123;<br>        <span class="hljs-keyword">if</span>(B[i] &lt;= B[j]) &#123; <span class="hljs-comment">// 比较i和j对应的数，谁大谁小</span><br>            A[k] = B[i++];<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            A[k] = B[j++];<br>        &#125;<br>        k++;<br>    &#125;<br>    <span class="hljs-keyword">while</span>(i &lt;= mid) A[k++] = B[i++];<br>    <span class="hljs-keyword">while</span>(j &lt;= heigh) A[k++] = B[j++];<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">MergeSort</span><span class="hljs-params">(<span class="hljs-keyword">int</span> A[], <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> heigh)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span>(low &lt; heigh) &#123;<br>        <span class="hljs-keyword">int</span> mid = (low + heigh) / <span class="hljs-number">2</span>;<br>        <span class="hljs-built_in">MergeSort</span>(A, low, mid);<br>        <span class="hljs-built_in">MergeSort</span>(A, mid + <span class="hljs-number">1</span>, heigh);<br>        <span class="hljs-built_in">Merge</span>(A, low, mid, heigh);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">int</span> a[<span class="hljs-number">100005</span>];<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n);<br>    B = (<span class="hljs-keyword">int</span> *)<span class="hljs-built_in">malloc</span>(n * <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(<span class="hljs-keyword">int</span>)); <span class="hljs-comment">// 辅助数组</span><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a[i]);<br>    &#125;<br>    <span class="hljs-built_in">MergeSort</span>(a, <span class="hljs-number">0</span>, n - <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>, a[i]);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></details><h2 id="基数排序"><a href="#基数排序" class="headerlink" title="基数排序"></a>基数排序</h2><p>暂未实现</p>]]></content>
    
    
    <categories>
      
      <category>数据结构</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>考研数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>英语单词总结</title>
    <link href="/post/english-words/"/>
    <url>/post/english-words/</url>
    
    <content type="html"><![CDATA[<p>自己总结的才有用，如果只是想找一些单词背，百度一大堆。</p><h2 id="容易弄混的"><a href="#容易弄混的" class="headerlink" title="容易弄混的"></a>容易弄混的</h2><p>背的单词多了，但是记得又不牢，这个时候很容易把一个单词当成另一个单词的意思，下面记录了我在学习英语过程中记混的单词，便于自己以后复习。可以尝试一下这个方法。</p><a class="btn" href="/tools/%E6%96%87%E7%AB%A0%E5%8D%95%E8%AF%8D%E6%8F%90%E5%8F%96.html?article=Nobel%20noble%20absorb%20absurd%20abundant%20boundary%20accelerate%20accumulate%20advance%20advanced%20advisable%20invisible%20affair%20affect%20affirm%20afford%20effect%20effort%20infect%20affiliate%20affluent%20fluent%20agency%20legacy%20ago%20ego%20analogy%20analyze%20ancestor%20assistant%20astronomy%20autonomy%20attempt%20tempt%20battle%20bottle%20belief%20relieve%20bell%20bill%20bench%20branch%20brunch%20bunch%20lunch%20biography%20biology%20bleak%20bless%20buck%20bulk%20campus%20couple%20captain%20caption%20cartoon%20cotton%20certain%20contain%20church%20coach%20couch%20command%20commend%20confer%20defer%20infer%20offer%20refer%20confidant%20confident%20contact%20contract%20contrast%20converse%20convert%20convey%20cooperate%20coordinate%20default%20defeat%20deficiency%20sufficient%20define%20definite%20deliberate%20elaborate%20deploy%20employ%20describe%20prescribe%20determine%20undermine%20disappear%20disappoint%20diversity%20university%20drag%20drug%20entire%20retire%20envy%20levy%20navy%20epidemic%20optimistic%20evolve%20revolve%20exaggerate%20extravagant%20extension%20extensive%20fail%20faith%20fall%20fell%20father%20further%20fear%20fever%20flatter%20flavor%20float%20flood%20floor%20giant%20grant%20grateful%20gratify%20hard%20hardly%20imitate%20intimate%20impart%20import%20impress%20suppress%20inherent%20inherit%20interpret%20interrupt%20issue%20tissue%20justice%20justify%20labour%20lobby%20lean%20loan%20liberty%20literate%20marry%20merry%20mouse%20mouth%20muscle%20musical%20nation%20notion%20nominal%20normal%20obese%20obsess%20parliament%20permanent%20partner%20paternal%20passive%20positive%20past%20post%20ponder%20powder%20power%20premise%20promise%20principal%20principle%20propose%20purpose%20race%20rare%20rate%20repetition%20reputation%20rough%20tough%20sentiment%20statement%20steep%20step%20submit%20summit%20surprise%20survey%20survive%20theater%20threat%20thrift%20thrive%20trap%20trip%20veto%20vote%20virtual%20visual%20wander%20wonder%20worse%20worst%20invert%20invent%20quite%20quiet%20faculty%20faulty%20ready%20readily%20temperature%20temporarily%20week%20weak%20solid%20sold%20insist%20consist%20sneak%20snake%20snack%20relief%20efficiency%20exact%20exert%20support%20suppose%20petrol%20patrol%20strangely%20strongly%20attribute%20contribute%20regime%20region%20option%20opinion"  title="传送门" target="_blank">点击背诵</a><ul><li><p>Nobel noble</p></li><li><p>absorb absurd</p></li><li><p>abundant boundary</p></li><li><p>accelerate accumulate</p></li><li><p>advance advanced</p></li><li><p>advisable invisible</p></li><li><p>affair affect affirm afford effect effort infect</p></li><li><p>affiliate affluent fluent</p></li><li><p>agency legacy</p></li><li><p>ago ego</p></li><li><p>analogy analyze</p></li><li><p>ancestor assistant</p></li><li><p>astronomy autonomy</p></li><li><p>attempt tempt</p></li><li><p>battle bottle</p></li><li><p>belief relieve</p></li><li><p>bell bill</p></li><li><p>bench branch brunch bunch lunch</p></li><li><p>biography biology</p></li><li><p>bleak bless</p></li><li><p>buck bulk</p></li><li><p>campus couple</p></li><li><p>captain caption</p></li><li><p>cartoon cotton</p></li><li><p>certain contain</p></li><li><p>church coach couch</p></li><li><p>command commend</p></li><li><p>confer defer infer offer refer</p></li><li><p>confidant confident</p></li><li><p>contact contract contrast</p></li><li><p>converse convert convey</p></li><li><p>cooperate coordinate</p></li><li><p>default defeat</p></li><li><p>deficiency sufficient</p></li><li><p>define definite</p></li><li><p>deliberate elaborate</p></li><li><p>deploy employ</p></li><li><p>describe prescribe</p></li><li><p>determine undermine</p></li><li><p>disappear disappoint</p></li><li><p>diversity university</p></li><li><p>drag drug</p></li><li><p>entire retire</p></li><li><p>envy levy navy</p></li><li><p>epidemic optimistic</p></li><li><p>evolve revolve</p></li><li><p>exaggerate extravagant</p></li><li><p>extension extensive</p></li><li><p>fail faith fall fell</p></li><li><p>father further</p></li><li><p>fear fever</p></li><li><p>flatter flavor</p></li><li><p>float flood floor</p></li><li><p>giant grant</p></li><li><p>grateful gratify</p></li><li><p>hard hardly</p></li><li><p>imitate intimate</p></li><li><p>impart import</p></li><li><p>impress suppress</p></li><li><p>inherent inherit</p></li><li><p>interpret interrupt</p></li><li><p>issue tissue</p></li><li><p>justice justify</p></li><li><p>labour lobby</p></li><li><p>lean loan</p></li><li><p>liberty literate</p></li><li><p>marry merry</p></li><li><p>mouse mouth</p></li><li><p>muscle musical</p></li><li><p>nation notion</p></li><li><p>nominal normal</p></li><li><p>obese obsess</p></li><li><p>parliament permanent</p></li><li><p>partner paternal</p></li><li><p>passive positive</p></li><li><p>past post</p></li><li><p>ponder powder power</p></li><li><p>premise promise</p></li><li><p>principal principle</p></li><li><p>propose purpose</p></li><li><p>race rare rate</p></li><li><p>repetition reputation</p></li><li><p>rough tough</p></li><li><p>sentiment statement</p></li><li><p>steep step</p></li><li><p>submit summit</p></li><li><p>suppress surprise</p></li><li><p>survey survive surgery</p></li><li><p>theater threat thrift thrive</p></li><li><p>trap trip</p></li><li><p>veto vote</p></li><li><p>virtual visual</p></li><li><p>wander wonder</p></li><li><p>worse worst</p></li><li><p>invert invent</p></li><li><p>quite quiet</p></li><li><p>faculty faulty</p></li><li><p>ready readily</p></li><li><p>temperature temporarily</p></li><li><p>week weak</p></li><li><p>determine undermine</p></li><li><p>parliament permanent</p></li><li><p>solid sold</p></li><li><p>purpose propose</p></li><li><p>contrast contract</p></li><li><p>insist consist</p></li><li><p>sneak snake snack</p></li><li><p>belief relief</p></li><li><p>deficiency efficiency</p></li><li><p>exact exert</p></li><li><p>support suppose</p></li><li><p>sneak snack</p></li><li><p>petrol patrol</p></li><li><p>strangely strongly</p></li><li><p>attribute contribute</p></li><li><p>regime region</p></li><li><p>option opinion</p></li><li><p>previous precious</p></li></ul><ul><li>concert conceit</li><li>cue clue</li><li>sold solid</li><li>objective objection</li><li>welfare wolf</li><li>aggravate aggressive</li><li>further future</li><li>temper tempt</li><li>plain plant</li><li>concert convert converse concern</li><li>refuge refuse</li><li>concert concern</li><li>sacred secret</li><li>loser laser</li><li>suggest suggestive</li><li>wildlife welfare</li><li>junior juror</li><li>recent resent</li><li>estimate esteem</li><li>obvious observe</li><li>phase phrase</li><li>quota quote</li><li>implement intimation</li><li>theory thorny</li><li>chamber charter</li><li>adapt adopt</li><li>community communicate</li><li>territory terrorist treasury</li><li>opinion option</li><li>quality qualify</li><li>infer refer confer</li><li>augment argument</li><li>farm firm</li><li>scarcity scrutiny</li><li>bleak leak</li><li>doom deem</li><li>giant grant</li><li>define definite confine finite</li><li>lane loan</li><li>portable suitable</li><li>regulate regular</li><li>liberate liberty</li><li>define definite</li><li>contempt attempt</li><li>ponder powder</li><li>blank bank</li><li>generate generous generation</li><li></li></ul><h2 id="同义词替换"><a href="#同义词替换" class="headerlink" title="同义词替换"></a>同义词替换</h2><ul><li>learn master</li><li>plan approch</li><li>interesting entertaining</li></ul><h2 id="单词自动排列代码"><a href="#单词自动排列代码" class="headerlink" title="单词自动排列代码"></a>单词自动排列代码</h2><p>因为上面的的单词在不断的增加，数量多了以后很不好管理，写了一个自动排序的小工具，可以将每行按字典序排列，并且根据每行的第一个单词进行整行的排序。</p><figure class="highlight cpp"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;map&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br>vector&lt;map&lt;string, <span class="hljs-keyword">int</span>&gt; &gt; V;<br><span class="hljs-keyword">int</span> row = <span class="hljs-number">-1</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(map&lt;string, <span class="hljs-keyword">int</span>&gt; a, map&lt;string, <span class="hljs-keyword">int</span>&gt; b )</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> a.<span class="hljs-built_in">begin</span>()-&gt;first &lt; b.<span class="hljs-built_in">begin</span>()-&gt;first;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    string a;<br>    <span class="hljs-keyword">while</span>(cin &gt;&gt; a) &#123;<br>        <span class="hljs-keyword">if</span>(a == <span class="hljs-string">&quot;-&quot;</span>) &#123;<br>            row++;<br>            map&lt;string, <span class="hljs-keyword">int</span>&gt; m;<br>            V.<span class="hljs-built_in">push_back</span>(m);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            V[row][a] = <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">sort</span>(V.<span class="hljs-built_in">begin</span>(), V.<span class="hljs-built_in">end</span>(), cmp);<br>    cout &lt;&lt; <span class="hljs-string">&quot;---------&quot;</span> &lt;&lt; endl;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt;= row; i++) &#123;<br>        map&lt;string, <span class="hljs-keyword">int</span>&gt; m = V[i];<br>        map&lt;string, <span class="hljs-keyword">int</span>&gt;::iterator it = m.<span class="hljs-built_in">begin</span>();<br>        cout &lt;&lt; <span class="hljs-string">&quot;-&quot;</span>; <br>        <span class="hljs-keyword">for</span>(; it != m.<span class="hljs-built_in">end</span>(); it++) &#123;<br>            cout &lt;&lt; <span class="hljs-string">&quot; &quot;</span> &lt;&lt; (*it).first;<br>        &#125;<br>        cout &lt;&lt; endl;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">处理前<br><span class="hljs-bullet">- </span>disappoint disappear<br><span class="hljs-bullet">- </span>caption captain<br><span class="hljs-bullet">- </span>confident confidant<br><span class="hljs-bullet">- </span>effrot effect affect afford infect affirm affair<br><span class="hljs-bullet">- </span>accumulate accelerate<br><span class="hljs-bullet">- </span>bleak bless<br><span class="hljs-bullet">- </span>marry merry<br><span class="hljs-bullet">- </span>couch coach<br><span class="hljs-bullet">- </span>race rate rare<br><span class="hljs-bullet">- </span>exaggerate extravagant<br>处理后<br><span class="hljs-bullet">- </span>accelerate accumulate<br><span class="hljs-bullet">- </span>affair affect affirm afford effect effrot infect<br><span class="hljs-bullet">- </span>bleak bless<br><span class="hljs-bullet">- </span>captain caption<br><span class="hljs-bullet">- </span>coach couch<br><span class="hljs-bullet">- </span>confidant confident<br><span class="hljs-bullet">- </span>disappear disappoint<br><span class="hljs-bullet">- </span>exaggerate extravagant<br><span class="hljs-bullet">- </span>marry merry<br><span class="hljs-bullet">- </span>race rare rate<br></code></pre></td></tr></table></figure><div class="note note-success">            <p>相关推荐：</p><ul><li><a href="/post/reciting-words/">背单词经验总结</a></li><li><a href="/post/reading-turning/">考研阅读中的转折</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>英语</category>
      
    </categories>
    
    
    <tags>
      
      <tag>英语</tag>
      
      <tag>考研</tag>
      
      <tag>背单词</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>背单词经验总结</title>
    <link href="/post/reciting-words/"/>
    <url>/post/reciting-words/</url>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>　　学英语都这么多年了，一天背一个单词现在都背4745个单词了，然而我居然才背了2-3千个。其中2千个可能还是考研期间背的。</p><p>　　之前一直看到各式各样背单词相关的文章，光10天背完考研词汇这个话题都一大堆，然而我这样的梦都不敢做。</p><p>　　如果一个人真的10天背完考研词汇了，我感觉他肯定本身基础就比较好，对他来说可能一大半单词都已经会背了，现在背单词只是复习，常人很难模仿。</p><p>　　之前也听刘晓燕老师说过：“你们买的单词书都看过几页，是不是这么多年，买了那么多单词书，都没有看完过一本”。现在想想确实也是，买的单词书从来没看完过。</p><p>　　同时我看到了旁边的单词书，很新，就翻过前面几页。这个时候突然有个想法，要不要也把单词书翻一遍。<br><img src="/images/uploads/Reciting-Words-6.jpg"><br>　　想那么多不如实践实践，直接开干。</p><h2 id="第一遍翻单词书"><a href="#第一遍翻单词书" class="headerlink" title="第一遍翻单词书"></a>第一遍翻单词书</h2><p>　　2021年8月27号到8月28号下午，除了正常的复习单词时间，又专门增加了时间用来翻书，总共用了148分钟，把我的单词书翻了一遍，并且把每一单元用时也记录了一下。</p><p><img src="/images/uploads/Reciting-Words-1.jpg" alt="2021年9月8号"></p><p>　　虽然并没有把翻过的单词背会，但是突然就有了一种莫名其妙的成就感，形容不出来，请自行尝试后体会。</p><p>　　在背单词的过程中，用卡片挡着单词的中文意思，如果这个单词很简单，并且百分百会了，那么做一个标记，下次复习可以直接忽略这个单词。并且再以后的复习过程中，也要不断的进行标记。</p><p><img src="/images/uploads/Reciting-Words-2.jpg"></p><h2 id="第二遍过单词书"><a href="#第二遍过单词书" class="headerlink" title="第二遍过单词书"></a>第二遍过单词书</h2><p>　　这一次的目标是把每一单元的单词认真的学一遍，并且学会以后加入到墨墨背单词里面，每天只需要按着app复习就好了，毕竟单词是用来忘的，需要天天复习。不建议完全不会就跟着app背，这样很容易产生死循环，每天都在背那几个不会的单词。</p><p>　　第二遍复习的时间线很长，我用的墨墨背单词会在复习完今天单词的情况下，并且还有精力的时候才会选择背新单词。所以我到今天9月9号，也才复习了13单元，而且里面有7单元还是之前都背过的。</p><p>　　下面是我墨墨背单词最近一段时间的学习情况，每天复习单词的数量太多了，建议复习的时候把不会的单词写到本子上，然后一天之内多看几眼。</p><p><img src="/images/uploads/Reciting-Words-3.jpg"></p><p><img src="/images/uploads/Reciting-Words-5.jpg" alt="第二次的计划卡片-2021年9月8号"></p><h2 id="第三遍背单词书"><a href="#第三遍背单词书" class="headerlink" title="第三遍背单词书"></a>第三遍背单词书</h2><p>　　第三遍的目标是把前面没有标记的单词，也就是完全不会的单词复习一遍，并且记录复习一遍的时间。每一单元用时肯定不会多，这样只要有零散的时间，就可以复习一遍。你可以想想一下，当把这么多单元的时间全记录下来的时候，再复习的时候多爽，每次可以很有针对性的去复习。</p><p><img src="/images/uploads/Reciting-Words-4.jpg" alt="第三遍时候的计划卡-2021年9月8号"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>　　第一遍肯定是找了相对来说整块的时间看的，后面的就是零散的时间了，一次一单元，没事儿了就可以翻一遍，我有好几单元翻一遍才用1-2分钟，所以有空闲时间就能多翻翻。</p><p>　　这是目前我找到的很适合我的方法，这个方法很有成就感，一下子能复习很多单词，并且通过记录时间，看着复习时间一次比一次减少，很有打怪刷级的快感，根本停不下来。</p><p>　　希望你也能找到属于你的方法。</p><h2 id="后续记录"><a href="#后续记录" class="headerlink" title="后续记录"></a>后续记录</h2><h3 id="2021年9月18日"><a href="#2021年9月18日" class="headerlink" title="2021年9月18日"></a>2021年9月18日</h3><p>　　已经9天没有学过新单词了，现在每天写一篇阅读，然后看视频精讲，总共要花费2个小时。单词只是每天复习一下墨墨，最近几天遇到好多不会的单词，每天复习忘记的单词太多，今天晚上把前三天的单词复习了一遍，希望明天学习的时候不会的单词能少一点，这样就可以继续背新单词了。</p><p><img src="/images/uploads/reciting-words-0918.jpg"></p><p><img src="/images/uploads/reciting-words-0918-2.jpg"></p><p><img src="/images/uploads/reciting-words-0918-3.jpg" alt="今天晚上复习前三天单词，不会的单词"></p><div class="note note-success">            <p>相关推荐：</p><ul><li><a href="/post/english-words/">英语单词总结</a></li><li><a href="/post/reading-turning/">考研阅读中的转折</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>英语</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>英语</tag>
      
      <tag>考研</tag>
      
      <tag>背单词</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows10家庭版VMWare15.5安装虚拟机启动蓝屏问题</title>
    <link href="/post/vmware-linux-error/"/>
    <url>/post/vmware-linux-error/</url>
    
    <content type="html"><![CDATA[<p>今天在自己的电脑上了装虚拟机，操作系统是windows10家庭版，vmware版本是15.5 ，安装操作系统centos7. 安装软件和创建虚拟机的方式很简单，也没啥问题，就是每次已启动就蓝屏，重启。</p><p><img src="https://img-blog.csdnimg.cn/20210627175615733.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xzcWluZ2Zlbmc=,size_16,color_FFFFFF,t_0"></p><p>然后就在网上找解决方案。</p><p>第一步是打开了win10家庭版的Hyper-V，并禁用。参考地址： <a href="http://www.china-tom.com/template.asp?articleid=498">运行VMware15.5.5虚拟机导致win10蓝屏死机 (china-tom.com)</a></p><p>主要就是打开了windows功能中的虚拟机平台，关闭了hyper-v,如果没有这个选项，文章中说明了如何执行脚本。</p><p><img src="https://img-blog.csdnimg.cn/2021062717580466.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xzcWluZ2Zlbmc=,size_16,color_FFFFFF,t_0"></p><p>按照文档进行了一番操作，最后发现这次确实不蓝屏了，但是虚拟机启动提示错误，不兼容。</p><p><img src="https://img-blog.csdnimg.cn/20210627180004388.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xzcWluZ2Zlbmc=,size_16,color_FFFFFF,t_0"></p><p>第二步，继续找解决方案，参考地址：<a href="https://blog.csdn.net/luckysign/article/details/101915064">VMware Workstation 与 Device/Credential Guard 不兼容!_luckysign的博客-CSDN博客</a></p><p>主要就是禁用里面的HV主机服务。 按照文章又干了一遍。再次重启启动虚拟机，发现又TMD的蓝屏了，这是转了一个圈么。</p><p>最后又查了解决方案。参考地址：<a href="https://www.zhihu.com/question/449762599">(43 封私信 / 46 条消息) 小新15装vmware虚拟机 运行蓝屏关机怎么? - 知乎 (zhihu.com)</a></p><p>这次主要是把15.5版本卸载了，重新下载了vmware16版本，安装后，启动。ok了。</p><p><img src="https://img-blog.csdnimg.cn/20210627180239649.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xzcWluZ2Zlbmc=,size_16,color_FFFFFF,t_0"></p><p>如果大家也遇到了类似问题，可以参考下。我觉得如果也是家庭版，建议先安装vmware16，由于后面就正常了，所有我也不知道前两步骤的操作是否也有必要。这里也没法验证了。大家处理的时候还是先装16，如果16直接没问题最好了，如果有问题，在进行一二两个步骤。</p><blockquote><p>本文转自 <a href="https://blog.csdn.net/lsqingfeng/article/details/118277447">https://blog.csdn.net/lsqingfeng/article/details/118277447</a><br>如有侵权，请联系删除。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>理科生的浪漫之Python绘图</title>
    <link href="/post/eac5d358/"/>
    <url>/post/eac5d358/</url>
    
    <content type="html"><![CDATA[<p>整理了一下自己看到过的并且觉的好玩的Python代码，来源于网络，我知道位置的都注明有出处。</p><span id="more"></span><h2 id="动态draw-heart"><a href="#动态draw-heart" class="headerlink" title="动态draw heart"></a>动态draw heart</h2><p><img src="https://image.glwsq.cn/img/%E7%90%86%E7%A7%91%E7%94%9F%E7%9A%84%E6%B5%AA%E6%BC%AB%E4%B9%8BPython%E7%BB%98%E5%9B%BE-2022-04-21-17-59-38.gif"></p><details><summary>代码</summary><figure class="highlight py"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><pre><code class="hljs py"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-keyword">from</span> turtle <span class="hljs-keyword">import</span> *<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">curvemove</span>():</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">200</span>):<br>        right(<span class="hljs-number">1</span>)<br>        forward(<span class="hljs-number">1</span>)<br>color(<span class="hljs-string">&#x27;red&#x27;</span>,<span class="hljs-string">&#x27;pink&#x27;</span>)        <br>begin_fill()<br>left(<span class="hljs-number">140</span>)<br>forward(<span class="hljs-number">111.65</span>)<br>curvemove()<br>left(<span class="hljs-number">120</span>)<br>curvemove()<br>forward(<span class="hljs-number">111.65</span>)<br>end_fill()<br>done()<br><br></code></pre></td></tr></table></figure></details><h2 id="波动心形线"><a href="#波动心形线" class="headerlink" title="波动心形线"></a>波动心形线</h2><p><img src="https://image.glwsq.cn/img/%E7%90%86%E7%A7%91%E7%94%9F%E7%9A%84%E6%B5%AA%E6%BC%AB%E4%B9%8BPython%E7%BB%98%E5%9B%BE-heart2.gif"></p><details><summary>代码</summary><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-comment"># 原文链接：https://blog.csdn.net/qq_27017791/article/details/85040244</span><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> matplotlib.animation <span class="hljs-keyword">import</span> FuncAnimation<br>fig, ax = plt.subplots()<br>ln, = ax.plot([], [], <span class="hljs-string">&#x27;-&#x27;</span>,color=<span class="hljs-string">&#x27;r&#x27;</span>, lw=<span class="hljs-number">1</span>)<br>time_template = <span class="hljs-string">&#x27;LOVE = %.1fs&#x27;</span><br>time_text = ax.text(<span class="hljs-number">0.05</span>, <span class="hljs-number">0.9</span>, <span class="hljs-string">&#x27;&#x27;</span>, transform=ax.transAxes)<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">init</span>():</span><br>    ax.set_xlim(-<span class="hljs-number">3</span>,<span class="hljs-number">3</span>)<br>    ax.set_ylim(-<span class="hljs-number">2</span>, <span class="hljs-number">3</span>)<br>    <span class="hljs-keyword">return</span> ln,<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">update</span>(<span class="hljs-params">ii</span>):</span><br>    xdata, ydata = [], []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">183</span>):<br>        xi=(<span class="hljs-number">182</span>-i)/<span class="hljs-number">100</span><br>        xdata.append(<span class="hljs-number">0.01</span>*i-<span class="hljs-number">1.82</span>)<br>        yi=(xi**(<span class="hljs-number">2</span>/<span class="hljs-number">3</span>))+(<span class="hljs-number">0.9</span>*(<span class="hljs-number">3.3</span>-xi**<span class="hljs-number">2</span>)**<span class="hljs-number">0.5</span>)*np.cos(ii*(np.pi)*xi)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">type</span>(yi)==<span class="hljs-string">&#x27;complex&#x27;</span>:<br>            yi=np.around(<span class="hljs-built_in">abs</span>(yi),decimals=<span class="hljs-number">4</span>)<br>        yi=np.around(yi, decimals=<span class="hljs-number">3</span>)<br>        ydata.append(yi)<br>        <br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">182</span>):<br>        xi=i/<span class="hljs-number">100</span><br>        xdata.append(xi) <br>        yi=(xi**(<span class="hljs-number">2</span>/<span class="hljs-number">3</span>))+(<span class="hljs-number">0.9</span>*(<span class="hljs-number">3.3</span>-xi**<span class="hljs-number">2</span>)**<span class="hljs-number">0.5</span>)*np.cos(ii*(np.pi)*xi)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">type</span>(yi)==<span class="hljs-string">&#x27;complex&#x27;</span>:<br>            yi=np.around(<span class="hljs-built_in">abs</span>(yi),decimals=<span class="hljs-number">4</span>)<br>        yi=np.around(yi, decimals=<span class="hljs-number">3</span>)<br>        ydata.append(yi)<br>    ln.set_data(xdata, ydata)<br>    time_text.set_text(time_template %(ii))<br>    <span class="hljs-keyword">return</span> ln,<br>ani = FuncAnimation(fig, update, np.linspace(<span class="hljs-number">0</span>, <span class="hljs-number">13.14</span>, <span class="hljs-number">100</span>),init_func=init, interval=<span class="hljs-number">100</span>)<br>ani.save(<span class="hljs-string">&#x27;love.gif&#x27;</span>, writer=<span class="hljs-string">&#x27;imagemagick&#x27;</span>, fps=<span class="hljs-number">10</span>)<br>plt.show()<br></code></pre></td></tr></table></figure></details><h2 id="动态画-小猪佩奇"><a href="#动态画-小猪佩奇" class="headerlink" title="动态画-小猪佩奇"></a>动态画-小猪佩奇</h2><p><img src="https://image.glwsq.cn/img/%E7%90%86%E7%A7%91%E7%94%9F%E7%9A%84%E6%B5%AA%E6%BC%AB%E4%B9%8BPython%E7%BB%98%E5%9B%BE-2022-04-21-17-59-50.gif"></p><details><summary>代码</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding:utf-8</span><br><span class="hljs-keyword">import</span> turtle <span class="hljs-keyword">as</span> t<br><br>t.pensize(<span class="hljs-number">4</span>)<br>t.hideturtle()<br>t.colormode(<span class="hljs-number">255</span>)<br>t.color((<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>),<span class="hljs-string">&quot;pink&quot;</span>)<br>t.setup(<span class="hljs-number">840</span>,<span class="hljs-number">500</span>)<br>t.speed(<span class="hljs-number">1500</span>)<br><br><span class="hljs-comment">#鼻子</span><br>t.pu()<br>t.goto(-<span class="hljs-number">100</span>,<span class="hljs-number">100</span>)<br>t.pd()<br>t.seth(-<span class="hljs-number">30</span>)<br>t.begin_fill()<br>a=<span class="hljs-number">0.4</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">120</span>):<br>   <span class="hljs-keyword">if</span> <span class="hljs-number">0</span>&lt;=i&lt;<span class="hljs-number">30</span> <span class="hljs-keyword">or</span> <span class="hljs-number">60</span>&lt;=i&lt;<span class="hljs-number">90</span>:<br>       a=a+<span class="hljs-number">0.08</span><br>       t.lt(<span class="hljs-number">3</span>) <span class="hljs-comment">#向左转3度</span><br>       t.fd(a) <span class="hljs-comment">#向前走a的步长</span><br>   <span class="hljs-keyword">else</span>:<br>       a=a-<span class="hljs-number">0.08</span><br>       t.lt(<span class="hljs-number">3</span>)<br>       t.fd(a)<br>t.end_fill()<br><br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">25</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">10</span>)<br>t.pd()<br>t.pencolor(<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>)<br>t.seth(<span class="hljs-number">10</span>)<br>t.begin_fill()<br>t.circle(<span class="hljs-number">5</span>)<br>t.color(<span class="hljs-number">160</span>,<span class="hljs-number">82</span>,<span class="hljs-number">45</span>)<br>t.end_fill()<br><br>t.pu()<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">20</span>)<br>t.pd()<br>t.pencolor(<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>)<br>t.seth(<span class="hljs-number">10</span>)<br>t.begin_fill()<br>t.circle(<span class="hljs-number">5</span>)<br>t.color(<span class="hljs-number">160</span>,<span class="hljs-number">82</span>,<span class="hljs-number">45</span>)<br>t.end_fill()<br><br><span class="hljs-comment">#头</span><br>t.color((<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>),<span class="hljs-string">&quot;pink&quot;</span>)<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">41</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">0</span>)<br>t.pd()<br>t.begin_fill()<br>t.seth(<span class="hljs-number">180</span>)<br>t.circle(<span class="hljs-number">300</span>,-<span class="hljs-number">30</span>)<br>t.circle(<span class="hljs-number">100</span>,-<span class="hljs-number">60</span>)<br>t.circle(<span class="hljs-number">80</span>,-<span class="hljs-number">100</span>)<br>t.circle(<span class="hljs-number">150</span>,-<span class="hljs-number">20</span>)<br>t.circle(<span class="hljs-number">60</span>,-<span class="hljs-number">95</span>)<br>t.seth(<span class="hljs-number">161</span>)<br>t.circle(-<span class="hljs-number">300</span>,<span class="hljs-number">15</span>)<br>t.pu()<br>t.goto(-<span class="hljs-number">100</span>,<span class="hljs-number">100</span>)<br>t.pd()<br>t.seth(-<span class="hljs-number">30</span>)<br>a=<span class="hljs-number">0.4</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">60</span>):<br>   <span class="hljs-keyword">if</span> <span class="hljs-number">0</span>&lt;=i&lt;<span class="hljs-number">30</span> <span class="hljs-keyword">or</span> <span class="hljs-number">60</span>&lt;=i&lt;<span class="hljs-number">90</span>:<br>       a=a+<span class="hljs-number">0.08</span><br>       t.lt(<span class="hljs-number">3</span>) <span class="hljs-comment">#向左转3度</span><br>       t.fd(a) <span class="hljs-comment">#向前走a的步长</span><br>   <span class="hljs-keyword">else</span>:<br>       a=a-<span class="hljs-number">0.08</span><br>       t.lt(<span class="hljs-number">3</span>)<br>       t.fd(a)<br>t.end_fill()<br><br><span class="hljs-comment">#耳朵</span><br>t.color((<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>),<span class="hljs-string">&quot;pink&quot;</span>)<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(-<span class="hljs-number">7</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">70</span>)<br>t.pd()<br>t.begin_fill()<br>t.seth(<span class="hljs-number">100</span>)<br>t.circle(-<span class="hljs-number">50</span>,<span class="hljs-number">50</span>)<br>t.circle(-<span class="hljs-number">10</span>,<span class="hljs-number">120</span>)<br>t.circle(-<span class="hljs-number">50</span>,<span class="hljs-number">54</span>)<br>t.end_fill()<br><br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(-<span class="hljs-number">12</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">30</span>)<br>t.pd()<br>t.begin_fill()<br>t.seth(<span class="hljs-number">100</span>)<br>t.circle(-<span class="hljs-number">50</span>,<span class="hljs-number">50</span>)<br>t.circle(-<span class="hljs-number">10</span>,<span class="hljs-number">120</span>)<br>t.circle(-<span class="hljs-number">50</span>,<span class="hljs-number">56</span>)<br>t.end_fill()<br><br><span class="hljs-comment">#眼睛</span><br>t.color((<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>),<span class="hljs-string">&quot;white&quot;</span>)<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(-<span class="hljs-number">20</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(-<span class="hljs-number">95</span>)<br>t.pd()<br>t.begin_fill()<br>t.circle(<span class="hljs-number">15</span>)<br>t.end_fill()<br><br>t.color(<span class="hljs-string">&quot;black&quot;</span>)<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">12</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(-<span class="hljs-number">3</span>)<br>t.pd()<br>t.begin_fill()<br>t.circle(<span class="hljs-number">3</span>)<br>t.end_fill()<br><br>t.color((<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>),<span class="hljs-string">&quot;white&quot;</span>)<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(-<span class="hljs-number">25</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">40</span>)<br>t.pd()<br>t.begin_fill()<br>t.circle(<span class="hljs-number">15</span>)<br>t.end_fill()<br><br>t.color(<span class="hljs-string">&quot;black&quot;</span>)<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">12</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(-<span class="hljs-number">3</span>)<br>t.pd()<br>t.begin_fill()<br>t.circle(<span class="hljs-number">3</span>)<br>t.end_fill()<br><br><span class="hljs-comment">#腮</span><br>t.color((<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>))<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(-<span class="hljs-number">95</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">65</span>)<br>t.pd()<br>t.begin_fill()<br>t.circle(<span class="hljs-number">30</span>)<br>t.end_fill()<br><br><span class="hljs-comment">#嘴</span><br>t.color(<span class="hljs-number">239</span>,<span class="hljs-number">69</span>,<span class="hljs-number">19</span>)<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">15</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(-<span class="hljs-number">100</span>)<br>t.pd()<br>t.seth(-<span class="hljs-number">80</span>)<br>t.circle(<span class="hljs-number">30</span>,<span class="hljs-number">40</span>)<br>t.circle(<span class="hljs-number">40</span>,<span class="hljs-number">80</span>)<br><br><span class="hljs-comment">#身体</span><br>t.color(<span class="hljs-string">&quot;red&quot;</span>,(<span class="hljs-number">255</span>,<span class="hljs-number">99</span>,<span class="hljs-number">71</span>))<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(-<span class="hljs-number">20</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(-<span class="hljs-number">78</span>)<br>t.pd()<br>t.begin_fill()<br>t.seth(-<span class="hljs-number">130</span>)<br>t.circle(<span class="hljs-number">100</span>,<span class="hljs-number">10</span>)<br>t.circle(<span class="hljs-number">300</span>,<span class="hljs-number">30</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">230</span>)<br>t.seth(<span class="hljs-number">90</span>)<br>t.circle(<span class="hljs-number">300</span>,<span class="hljs-number">30</span>)<br>t.circle(<span class="hljs-number">100</span>,<span class="hljs-number">3</span>)<br>t.color((<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>),(<span class="hljs-number">255</span>,<span class="hljs-number">100</span>,<span class="hljs-number">100</span>))<br>t.seth(-<span class="hljs-number">135</span>)<br>t.circle(-<span class="hljs-number">80</span>,<span class="hljs-number">63</span>)<br>t.circle(-<span class="hljs-number">150</span>,<span class="hljs-number">24</span>)<br>t.end_fill()<br><br><span class="hljs-comment">#手</span><br>t.color((<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>))<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(-<span class="hljs-number">40</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(-<span class="hljs-number">27</span>)<br>t.pd()<br>t.seth(-<span class="hljs-number">160</span>)<br>t.circle(<span class="hljs-number">300</span>,<span class="hljs-number">15</span>)<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">15</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">0</span>)<br>t.pd()<br>t.seth(-<span class="hljs-number">10</span>)<br>t.circle(-<span class="hljs-number">20</span>,<span class="hljs-number">90</span>)<br><br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">30</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">237</span>)<br>t.pd()<br>t.seth(-<span class="hljs-number">20</span>)<br>t.circle(-<span class="hljs-number">300</span>,<span class="hljs-number">15</span>)<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">20</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">0</span>)<br>t.pd()<br>t.seth(-<span class="hljs-number">170</span>)<br>t.circle(<span class="hljs-number">20</span>,<span class="hljs-number">90</span>)<br><br><span class="hljs-comment">#脚</span><br>t.pensize(<span class="hljs-number">10</span>)<br>t.color((<span class="hljs-number">240</span>,<span class="hljs-number">128</span>,<span class="hljs-number">128</span>))<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(-<span class="hljs-number">75</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(-<span class="hljs-number">180</span>)<br>t.pd()<br>t.seth(-<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">40</span>)<br>t.seth(-<span class="hljs-number">180</span>)<br>t.color(<span class="hljs-string">&quot;black&quot;</span>)<br>t.pensize(<span class="hljs-number">15</span>)<br>t.fd(<span class="hljs-number">20</span>)<br><br>t.pensize(<span class="hljs-number">10</span>)<br>t.color((<span class="hljs-number">240</span>,<span class="hljs-number">128</span>,<span class="hljs-number">128</span>))<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">40</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">90</span>)<br>t.pd()<br>t.seth(-<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">40</span>)<br>t.seth(-<span class="hljs-number">180</span>)<br>t.color(<span class="hljs-string">&quot;black&quot;</span>)<br>t.pensize(<span class="hljs-number">15</span>)<br>t.fd(<span class="hljs-number">20</span>)<br><br><span class="hljs-comment">#尾巴</span><br>t.pensize(<span class="hljs-number">4</span>)<br>t.color((<span class="hljs-number">255</span>,<span class="hljs-number">155</span>,<span class="hljs-number">192</span>))<br>t.pu()<br>t.seth(<span class="hljs-number">90</span>)<br>t.fd(<span class="hljs-number">70</span>)<br>t.seth(<span class="hljs-number">0</span>)<br>t.fd(<span class="hljs-number">95</span>)<br>t.pd()<br>t.seth(<span class="hljs-number">0</span>)<br>t.circle(<span class="hljs-number">70</span>,<span class="hljs-number">20</span>)<br>t.circle(<span class="hljs-number">10</span>,<span class="hljs-number">330</span>)<br>t.circle(<span class="hljs-number">70</span>,<span class="hljs-number">30</span>)<br><span class="hljs-built_in">input</span>()<br></code></pre></td></tr></table></figure></details><h2 id="动态画-一箭穿心"><a href="#动态画-一箭穿心" class="headerlink" title="动态画-一箭穿心"></a>动态画-一箭穿心</h2><p><img src="https://image.glwsq.cn/img/%E7%90%86%E7%A7%91%E7%94%9F%E7%9A%84%E6%B5%AA%E6%BC%AB%E4%B9%8BPython%E7%BB%98%E5%9B%BE-2022-04-21-18-00-32.gif"></p><details><summary>代码</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> turtle <span class="hljs-keyword">import</span> *<br>color(<span class="hljs-string">&#x27;black&#x27;</span>,<span class="hljs-string">&#x27;red&#x27;</span>)<br>pensize(<span class="hljs-number">5</span>)<br>begin_fill()<br>penup()<br>goto(<span class="hljs-number">50</span>,<span class="hljs-number">50</span>)<br>pendown()<br>right(<span class="hljs-number">45</span>)<br>goto(<span class="hljs-number">100</span>,<span class="hljs-number">0</span>)<br>left(<span class="hljs-number">90</span>)<br>fd(<span class="hljs-number">120</span>)<br>circle(<span class="hljs-number">50</span>,<span class="hljs-number">225</span>)<br>penup()<br>goto(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)<br>pendown()<br>left(<span class="hljs-number">135</span>)<br>fd(<span class="hljs-number">120</span>)<br>circle(<span class="hljs-number">50</span>,<span class="hljs-number">225</span>)<br>seth(<span class="hljs-number">90</span>)<br>circle(<span class="hljs-number">50</span>,<span class="hljs-number">225</span>)<br>fd(<span class="hljs-number">121</span>)<br>end_fill()<br>left(<span class="hljs-number">56</span>)<br>penup()<br>goto(-<span class="hljs-number">210</span>,<span class="hljs-number">40</span>)<br>pendown()<br>goto(<span class="hljs-number">0</span>,<span class="hljs-number">80</span>)<br>penup()<br>goto(<span class="hljs-number">160</span>,<span class="hljs-number">110</span>)<br>pendown()<br>goto(<span class="hljs-number">320</span>,<span class="hljs-number">140</span>)<br>done<br></code></pre></td></tr></table></figure></details><h2 id="动态画-樱花树"><a href="#动态画-樱花树" class="headerlink" title="动态画-樱花树"></a>动态画-樱花树</h2><p><img src="https://image.glwsq.cn/img/%E7%90%86%E7%A7%91%E7%94%9F%E7%9A%84%E6%B5%AA%E6%BC%AB%E4%B9%8BPython%E7%BB%98%E5%9B%BE-2022-04-21-18-01-44.gif"></p><details><summary>代码</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> turtle <span class="hljs-keyword">as</span> T<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> time<br><br><span class="hljs-comment"># 画樱花的躯干(60,t)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Tree</span>(<span class="hljs-params">branch, t</span>):</span><br>    time.sleep(<span class="hljs-number">0.0005</span>)<br>    <span class="hljs-keyword">if</span> branch &gt; <span class="hljs-number">3</span>:<br>        <span class="hljs-keyword">if</span> <span class="hljs-number">8</span> &lt;= branch &lt;= <span class="hljs-number">12</span>:<br>            <span class="hljs-keyword">if</span> random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>) == <span class="hljs-number">0</span>:<br>                t.color(<span class="hljs-string">&#x27;snow&#x27;</span>)  <span class="hljs-comment"># 白</span><br>            <span class="hljs-keyword">else</span>:<br>                t.color(<span class="hljs-string">&#x27;lightcoral&#x27;</span>)  <span class="hljs-comment"># 淡珊瑚色</span><br>            t.pensize(branch / <span class="hljs-number">3</span>)<br>        <span class="hljs-keyword">elif</span> branch &lt; <span class="hljs-number">8</span>:<br>            <span class="hljs-keyword">if</span> random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>) == <span class="hljs-number">0</span>:<br>                t.color(<span class="hljs-string">&#x27;snow&#x27;</span>)<br>            <span class="hljs-keyword">else</span>:<br>                t.color(<span class="hljs-string">&#x27;lightcoral&#x27;</span>)  <span class="hljs-comment"># 淡珊瑚色</span><br>            t.pensize(branch / <span class="hljs-number">2</span>)<br>        <span class="hljs-keyword">else</span>:<br>            t.color(<span class="hljs-string">&#x27;sienna&#x27;</span>)  <span class="hljs-comment"># 赭(zhě)色</span><br>            t.pensize(branch / <span class="hljs-number">10</span>)  <span class="hljs-comment"># 6</span><br>        t.forward(branch)<br>        a = <span class="hljs-number">1.5</span> * random.random()<br>        t.right(<span class="hljs-number">20</span> * a)<br>        b = <span class="hljs-number">1.5</span> * random.random()<br>        Tree(branch - <span class="hljs-number">10</span> * b, t)<br>        t.left(<span class="hljs-number">40</span> * a)<br>        Tree(branch - <span class="hljs-number">10</span> * b, t)<br>        t.right(<span class="hljs-number">20</span> * a)<br>        t.up()<br>        t.backward(branch)<br>        t.down()<br><br><span class="hljs-comment"># 掉落的花瓣</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Petal</span>(<span class="hljs-params">m, t</span>):</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(m):<br>        a = <span class="hljs-number">200</span> - <span class="hljs-number">400</span> * random.random()<br>        b = <span class="hljs-number">10</span> - <span class="hljs-number">20</span> * random.random()<br>        t.up()<br>        t.forward(b)<br>        t.left(<span class="hljs-number">90</span>)<br>        t.forward(a)<br>        t.down()<br>        t.color(<span class="hljs-string">&#x27;lightcoral&#x27;</span>)  <span class="hljs-comment"># 淡珊瑚色</span><br>        t.circle(<span class="hljs-number">1</span>)<br>        t.up()<br>        t.backward(a)<br>        t.right(<span class="hljs-number">90</span>)<br>        t.backward(b)<br><br><span class="hljs-comment"># 绘图区域</span><br>t = T.Turtle()<br><span class="hljs-comment"># 画布大小</span><br>w = T.Screen()<br>t.hideturtle()  <span class="hljs-comment"># 隐藏画笔</span><br>t.getscreen().tracer(<span class="hljs-number">5</span>, <span class="hljs-number">0</span>)<br>w.screensize(bg=<span class="hljs-string">&#x27;wheat&#x27;</span>)  <span class="hljs-comment"># wheat小麦</span><br>t.left(<span class="hljs-number">90</span>)<br>t.up()<br>t.backward(<span class="hljs-number">150</span>)<br>t.down()<br>t.color(<span class="hljs-string">&#x27;sienna&#x27;</span>)<br><br><span class="hljs-comment"># 画樱花的躯干</span><br>Tree(<span class="hljs-number">60</span>, t)<br><span class="hljs-comment"># 掉落的花瓣</span><br>Petal(<span class="hljs-number">200</span>, t)<br>w.exitonclick()<br></code></pre></td></tr></table></figure></details><h2 id="动态画-哆啦A梦"><a href="#动态画-哆啦A梦" class="headerlink" title="动态画-哆啦A梦"></a>动态画-哆啦A梦</h2><p><img src="https://image.glwsq.cn/img/%E7%90%86%E7%A7%91%E7%94%9F%E7%9A%84%E6%B5%AA%E6%BC%AB%E4%B9%8BPython%E7%BB%98%E5%9B%BE-2022-04-21-18-00-44.gif"></p><details><summary>代码</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># !/usr/bin/env python3 </span><br><span class="hljs-comment"># -*- coding: utf-8 -*- </span><br><span class="hljs-comment"># @Author: dong </span><br><span class="hljs-comment"># @Date: 2018-07-05 19:37:42 </span><br><span class="hljs-comment"># @Env: python 3.6 </span><br><span class="hljs-comment"># @Github: https://github.com/PerpetualSmile </span><br><br><span class="hljs-keyword">from</span> turtle <span class="hljs-keyword">import</span> *<br><br><br><span class="hljs-comment"># 无轨迹跳跃</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">my_goto</span>(<span class="hljs-params">x, y</span>):</span><br>    penup()<br>    goto(x, y)<br>    pendown()<br><br><span class="hljs-comment"># 眼睛</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">eyes</span>():</span><br>    fillcolor(<span class="hljs-string">&quot;#ffffff&quot;</span>)<br>    begin_fill()<br><br>    tracer(<span class="hljs-literal">False</span>)<br>    a = <span class="hljs-number">2.5</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">120</span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-number">0</span> &lt;= i &lt; <span class="hljs-number">30</span> <span class="hljs-keyword">or</span> <span class="hljs-number">60</span> &lt;= i &lt; <span class="hljs-number">90</span>:<br>            a -= <span class="hljs-number">0.05</span><br>            lt(<span class="hljs-number">3</span>)<br>            fd(a)<br>        <span class="hljs-keyword">else</span>:<br>            a += <span class="hljs-number">0.05</span><br>            lt(<span class="hljs-number">3</span>)<br>            fd(a)<br>    tracer(<span class="hljs-literal">True</span>)<br>    end_fill()<br><br><br><span class="hljs-comment"># 胡须</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">beard</span>():</span><br>    my_goto(-<span class="hljs-number">32</span>, <span class="hljs-number">135</span>)<br>    seth(<span class="hljs-number">165</span>)<br>    fd(<span class="hljs-number">60</span>)<br><br>    my_goto(-<span class="hljs-number">32</span>, <span class="hljs-number">125</span>)<br>    seth(<span class="hljs-number">180</span>)<br>    fd(<span class="hljs-number">60</span>)<br><br>    my_goto(-<span class="hljs-number">32</span>, <span class="hljs-number">115</span>)<br>    seth(<span class="hljs-number">193</span>)<br>    fd(<span class="hljs-number">60</span>)<br><br>    my_goto(<span class="hljs-number">37</span>, <span class="hljs-number">135</span>)<br>    seth(<span class="hljs-number">15</span>)<br>    fd(<span class="hljs-number">60</span>)<br><br>    my_goto(<span class="hljs-number">37</span>, <span class="hljs-number">125</span>)<br>    seth(<span class="hljs-number">0</span>)<br>    fd(<span class="hljs-number">60</span>)<br><br>    my_goto(<span class="hljs-number">37</span>, <span class="hljs-number">115</span>)<br>    seth(-<span class="hljs-number">13</span>)<br>    fd(<span class="hljs-number">60</span>)<br><br><span class="hljs-comment"># 嘴巴</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">mouth</span>():</span><br>    my_goto(<span class="hljs-number">5</span>, <span class="hljs-number">148</span>)<br>    seth(<span class="hljs-number">270</span>)<br>    fd(<span class="hljs-number">100</span>)<br>    seth(<span class="hljs-number">0</span>)<br>    circle(<span class="hljs-number">120</span>, <span class="hljs-number">50</span>)<br>    seth(<span class="hljs-number">230</span>)<br>    circle(-<span class="hljs-number">120</span>, <span class="hljs-number">100</span>)<br><br><span class="hljs-comment"># 围巾</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">scarf</span>():</span><br>    fillcolor(<span class="hljs-string">&#x27;#e70010&#x27;</span>)<br>    begin_fill()<br>    seth(<span class="hljs-number">0</span>)<br>    fd(<span class="hljs-number">200</span>)<br>    circle(-<span class="hljs-number">5</span>, <span class="hljs-number">90</span>)<br>    fd(<span class="hljs-number">10</span>)<br>    circle(-<span class="hljs-number">5</span>, <span class="hljs-number">90</span>)<br>    fd(<span class="hljs-number">207</span>)<br>    circle(-<span class="hljs-number">5</span>, <span class="hljs-number">90</span>)<br>    fd(<span class="hljs-number">10</span>)<br>    circle(-<span class="hljs-number">5</span>, <span class="hljs-number">90</span>)<br>    end_fill()<br><br><span class="hljs-comment"># 鼻子</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">nose</span>():</span><br>    my_goto(-<span class="hljs-number">10</span>, <span class="hljs-number">158</span>)<br>    seth(<span class="hljs-number">315</span>)<br>    fillcolor(<span class="hljs-string">&#x27;#e70010&#x27;</span>)<br>    begin_fill()<br>    circle(<span class="hljs-number">20</span>)<br>    end_fill()<br><br><span class="hljs-comment"># 黑眼睛</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">black_eyes</span>():</span><br>    seth(<span class="hljs-number">0</span>)<br>    my_goto(-<span class="hljs-number">20</span>, <span class="hljs-number">195</span>)<br>    fillcolor(<span class="hljs-string">&#x27;#000000&#x27;</span>)<br>    begin_fill()<br>    circle(<span class="hljs-number">13</span>)<br>    end_fill()<br><br>    pensize(<span class="hljs-number">6</span>)<br>    my_goto(<span class="hljs-number">20</span>, <span class="hljs-number">205</span>)<br>    seth(<span class="hljs-number">75</span>)<br>    circle(-<span class="hljs-number">10</span>, <span class="hljs-number">150</span>)<br>    pensize(<span class="hljs-number">3</span>)<br><br>    my_goto(-<span class="hljs-number">17</span>, <span class="hljs-number">200</span>)<br>    seth(<span class="hljs-number">0</span>)<br>    fillcolor(<span class="hljs-string">&#x27;#ffffff&#x27;</span>)<br>    begin_fill()<br>    circle(<span class="hljs-number">5</span>)<br>    end_fill()<br>    my_goto(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>)<br><br><br><br><span class="hljs-comment"># 脸</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">face</span>():</span><br><br>    fd(<span class="hljs-number">183</span>)<br>    lt(<span class="hljs-number">45</span>)<br>    fillcolor(<span class="hljs-string">&#x27;#ffffff&#x27;</span>)<br>    begin_fill()<br>    circle(<span class="hljs-number">120</span>, <span class="hljs-number">100</span>)<br>    seth(<span class="hljs-number">180</span>)<br>    <span class="hljs-comment"># print(pos())</span><br>    fd(<span class="hljs-number">121</span>)<br>    pendown()<br>    seth(<span class="hljs-number">215</span>)<br>    circle(<span class="hljs-number">120</span>, <span class="hljs-number">100</span>)<br>    end_fill()<br>    my_goto(<span class="hljs-number">63.56</span>,<span class="hljs-number">218.24</span>)<br>    seth(<span class="hljs-number">90</span>)<br>    eyes()<br>    seth(<span class="hljs-number">180</span>)<br>    penup()<br>    fd(<span class="hljs-number">60</span>)<br>    pendown()<br>    seth(<span class="hljs-number">90</span>)<br>    eyes()<br>    penup()<br>    seth(<span class="hljs-number">180</span>)<br>    fd(<span class="hljs-number">64</span>)<br><br><span class="hljs-comment"># 头型</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">head</span>():</span><br>    penup()<br>    circle(<span class="hljs-number">150</span>, <span class="hljs-number">40</span>)<br>    pendown()<br>    fillcolor(<span class="hljs-string">&#x27;#00a0de&#x27;</span>)<br>    begin_fill()<br>    circle(<span class="hljs-number">150</span>, <span class="hljs-number">280</span>)<br>    end_fill()<br><br><span class="hljs-comment"># 画哆啦A梦</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Doraemon</span>():</span><br>    <span class="hljs-comment"># 头部</span><br>    head()<br><br>    <span class="hljs-comment"># 围脖</span><br>    scarf()<br><br>    <span class="hljs-comment"># 脸</span><br>    face()<br><br>    <span class="hljs-comment"># 红鼻子</span><br>    nose()<br><br>    <span class="hljs-comment"># 嘴巴</span><br>    mouth()<br><br>    <span class="hljs-comment"># 胡须</span><br>    beard()<br><br>    <span class="hljs-comment"># 身体</span><br>    my_goto(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>)<br>    seth(<span class="hljs-number">0</span>)<br>    penup()<br>    circle(<span class="hljs-number">150</span>, <span class="hljs-number">50</span>)<br>    pendown()<br>    seth(<span class="hljs-number">30</span>)<br>    fd(<span class="hljs-number">40</span>)<br>    seth(<span class="hljs-number">70</span>)<br>    circle(-<span class="hljs-number">30</span>, <span class="hljs-number">270</span>)<br><br><br>    fillcolor(<span class="hljs-string">&#x27;#00a0de&#x27;</span>)<br>    begin_fill()<br><br>    seth(<span class="hljs-number">230</span>)<br>    fd(<span class="hljs-number">80</span>)<br>    seth(<span class="hljs-number">90</span>)<br>    circle(<span class="hljs-number">1000</span>, <span class="hljs-number">1</span>)<br>    seth(-<span class="hljs-number">89</span>)<br>    circle(-<span class="hljs-number">1000</span>, <span class="hljs-number">10</span>)<br><br>    <span class="hljs-comment"># print(pos())</span><br><br>    seth(<span class="hljs-number">180</span>)<br>    fd(<span class="hljs-number">70</span>)<br>    seth(<span class="hljs-number">90</span>)<br>    circle(<span class="hljs-number">30</span>, <span class="hljs-number">180</span>)<br>    seth(<span class="hljs-number">180</span>)<br>    fd(<span class="hljs-number">70</span>)<br><br>    <span class="hljs-comment"># print(pos())</span><br>    seth(<span class="hljs-number">100</span>)<br>    circle(-<span class="hljs-number">1000</span>, <span class="hljs-number">9</span>)<br><br>    seth(-<span class="hljs-number">86</span>)<br>    circle(<span class="hljs-number">1000</span>, <span class="hljs-number">2</span>)<br>    seth(<span class="hljs-number">230</span>)<br>    fd(<span class="hljs-number">40</span>)<br><br>    <span class="hljs-comment"># print(pos())</span><br><br><br>    circle(-<span class="hljs-number">30</span>, <span class="hljs-number">230</span>)<br>    seth(<span class="hljs-number">45</span>)<br>    fd(<span class="hljs-number">81</span>)<br>    seth(<span class="hljs-number">0</span>)<br>    fd(<span class="hljs-number">203</span>)<br>    circle(<span class="hljs-number">5</span>, <span class="hljs-number">90</span>)<br>    fd(<span class="hljs-number">10</span>)<br>    circle(<span class="hljs-number">5</span>, <span class="hljs-number">90</span>)<br>    fd(<span class="hljs-number">7</span>)<br>    seth(<span class="hljs-number">40</span>)<br>    circle(<span class="hljs-number">150</span>, <span class="hljs-number">10</span>)<br>    seth(<span class="hljs-number">30</span>)<br>    fd(<span class="hljs-number">40</span>)<br>    end_fill()<br><br>    <span class="hljs-comment"># 左手</span><br>    seth(<span class="hljs-number">70</span>)<br>    fillcolor(<span class="hljs-string">&#x27;#ffffff&#x27;</span>)<br>    begin_fill()<br>    circle(-<span class="hljs-number">30</span>)<br>    end_fill()<br><br>    <span class="hljs-comment"># 脚</span><br>    my_goto(<span class="hljs-number">103.74</span>, -<span class="hljs-number">182.59</span>)<br>    seth(<span class="hljs-number">0</span>)<br>    fillcolor(<span class="hljs-string">&#x27;#ffffff&#x27;</span>)<br>    begin_fill()<br>    fd(<span class="hljs-number">15</span>)<br>    circle(-<span class="hljs-number">15</span>, <span class="hljs-number">180</span>)<br>    fd(<span class="hljs-number">90</span>)<br>    circle(-<span class="hljs-number">15</span>, <span class="hljs-number">180</span>)<br>    fd(<span class="hljs-number">10</span>)<br>    end_fill()<br><br>    my_goto(-<span class="hljs-number">96.26</span>, -<span class="hljs-number">182.59</span>)<br>    seth(<span class="hljs-number">180</span>)<br>    fillcolor(<span class="hljs-string">&#x27;#ffffff&#x27;</span>)<br>    begin_fill()<br>    fd(<span class="hljs-number">15</span>)<br>    circle(<span class="hljs-number">15</span>, <span class="hljs-number">180</span>)<br>    fd(<span class="hljs-number">90</span>)<br>    circle(<span class="hljs-number">15</span>, <span class="hljs-number">180</span>)<br>    fd(<span class="hljs-number">10</span>)<br>    end_fill()<br><br>    <span class="hljs-comment"># 右手</span><br>    my_goto(-<span class="hljs-number">133.97</span>, -<span class="hljs-number">91.81</span>)<br>    seth(<span class="hljs-number">50</span>)<br>    fillcolor(<span class="hljs-string">&#x27;#ffffff&#x27;</span>)<br>    begin_fill()<br>    circle(<span class="hljs-number">30</span>)<br>    end_fill()<br><br>    <span class="hljs-comment"># 口袋</span><br>    my_goto(-<span class="hljs-number">103.42</span>, <span class="hljs-number">15.09</span>)<br>    seth(<span class="hljs-number">0</span>)<br>    fd(<span class="hljs-number">38</span>)<br>    seth(<span class="hljs-number">230</span>)<br>    begin_fill()<br>    circle(<span class="hljs-number">90</span>, <span class="hljs-number">260</span>)<br>    end_fill()<br><br>    my_goto(<span class="hljs-number">5</span>, -<span class="hljs-number">40</span>)<br>    seth(<span class="hljs-number">0</span>)<br>    fd(<span class="hljs-number">70</span>)<br>    seth(-<span class="hljs-number">90</span>)<br>    circle(-<span class="hljs-number">70</span>, <span class="hljs-number">180</span>)<br>    seth(<span class="hljs-number">0</span>)<br>    fd(<span class="hljs-number">70</span>)<br><br>    <span class="hljs-comment">#铃铛</span><br>    my_goto(-<span class="hljs-number">103.42</span>, <span class="hljs-number">15.09</span>)<br>    fd(<span class="hljs-number">90</span>)<br>    seth(<span class="hljs-number">70</span>)<br>    fillcolor(<span class="hljs-string">&#x27;#ffd200&#x27;</span>)<br>    <span class="hljs-comment"># print(pos())</span><br>    begin_fill()<br>    circle(-<span class="hljs-number">20</span>)<br>    end_fill()<br>    seth(<span class="hljs-number">170</span>)<br>    fillcolor(<span class="hljs-string">&#x27;#ffd200&#x27;</span>)<br>    begin_fill()<br>    circle(-<span class="hljs-number">2</span>, <span class="hljs-number">180</span>)<br>    seth(<span class="hljs-number">10</span>)<br>    circle(-<span class="hljs-number">100</span>, <span class="hljs-number">22</span>)<br>    circle(-<span class="hljs-number">2</span>, <span class="hljs-number">180</span>)<br>    seth(<span class="hljs-number">180</span>-<span class="hljs-number">10</span>)<br>    circle(<span class="hljs-number">100</span>, <span class="hljs-number">22</span>)<br>    end_fill()<br>    goto(-<span class="hljs-number">13.42</span>, <span class="hljs-number">15.09</span>)<br>    seth(<span class="hljs-number">250</span>)<br>    circle(<span class="hljs-number">20</span>, <span class="hljs-number">110</span>)<br>    seth(<span class="hljs-number">90</span>)<br>    fd(<span class="hljs-number">15</span>)<br>    dot(<span class="hljs-number">10</span>)<br>    my_goto(<span class="hljs-number">0</span>, -<span class="hljs-number">150</span>)<br><br>    <span class="hljs-comment"># 画眼睛</span><br>    black_eyes()<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    screensize(<span class="hljs-number">800</span>,<span class="hljs-number">600</span>, <span class="hljs-string">&quot;#f0f0f0&quot;</span>)<br>    pensize(<span class="hljs-number">3</span>)  <span class="hljs-comment"># 画笔宽度</span><br>    speed(<span class="hljs-number">9</span>)    <span class="hljs-comment"># 画笔速度</span><br>    Doraemon()<br>    my_goto(<span class="hljs-number">100</span>, -<span class="hljs-number">300</span>)<br>    write(<span class="hljs-string">&#x27;by Jason&#x27;</span>, font=(<span class="hljs-string">&quot;Bradley Hand ITC&quot;</span>, <span class="hljs-number">30</span>, <span class="hljs-string">&quot;bold&quot;</span>))<br>    mainloop()<br></code></pre></td></tr></table></figure></details><h2 id="3d-heart"><a href="#3d-heart" class="headerlink" title="3d-heart"></a>3d-heart</h2><p><img src="https://image.glwsq.cn/img/%E7%90%86%E7%A7%91%E7%94%9F%E7%9A%84%E6%B5%AA%E6%BC%AB%E4%B9%8BPython%E7%BB%98%E5%9B%BE-2022-04-21-18-00-59.png"></p><details><summary>代码</summary><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">from</span> mpl_toolkits.mplot3d <span class="hljs-keyword">import</span> Axes3D<br> <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">heart_3d</span>(<span class="hljs-params">x,y,z</span>):</span><br>    <span class="hljs-keyword">return</span> (x**<span class="hljs-number">2</span>+(<span class="hljs-number">9</span>/<span class="hljs-number">4</span>)*y**<span class="hljs-number">2</span>+z**<span class="hljs-number">2</span>-<span class="hljs-number">1</span>)**<span class="hljs-number">3</span>-x**<span class="hljs-number">2</span>*z**<span class="hljs-number">3</span>-(<span class="hljs-number">9</span>/<span class="hljs-number">80</span>)*y**<span class="hljs-number">2</span>*z**<span class="hljs-number">3</span><br> <br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">plot_implicit</span>(<span class="hljs-params">fn,bbox=(<span class="hljs-params">-<span class="hljs-number">1.5</span>,<span class="hljs-number">1.5</span></span>)</span>):</span><br>    xmin,xmax,ymin,ymax,zmin,zmax = bbox*<span class="hljs-number">3</span><br>    fig = plt.figure(<span class="hljs-string">&#x27;HEART&#x27;</span>)<br>    ax = fig.add_subplot(<span class="hljs-number">111</span>,projection = <span class="hljs-string">&#x27;3d&#x27;</span>)<br>    A = np.linspace(xmin,xmax,<span class="hljs-number">80</span>)<br>    B = np.linspace(xmin,xmax,<span class="hljs-number">30</span>)<br>    A1,A2 = np.meshgrid(A,A)<br> <br>    <span class="hljs-keyword">for</span> z <span class="hljs-keyword">in</span> B:<br>        X,Y = A1,A2<br>        Z = fn(X,Y,z)<br>        cest = ax.contour(X,Y,z+Z,[z],zdir=<span class="hljs-string">&#x27;z&#x27;</span>,colors=(<span class="hljs-string">&#x27;r&#x27;</span>,))<br> <br>    <span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> B:<br>        X,Z = A1,A2<br>        Y = fn(X,y,Z)<br>        cest = ax.contour(X,Y+y,Z,[y],zdir = <span class="hljs-string">&#x27;y&#x27;</span>,colors = (<span class="hljs-string">&#x27;red&#x27;</span>,))<br> <br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> B :<br>        Y,Z=A1,A2<br>        X = fn(x,Y,Z)<br>        cest = ax.contour(X+x,Y,Z,[x],zdir = <span class="hljs-string">&#x27;x&#x27;</span>,colors = (<span class="hljs-string">&#x27;red&#x27;</span>,))<br> <br>    ax.set_zlim3d(zmin,zmax)<br>    ax.set_xlim3d(xmin,xmax)<br>    ax.set_ylim3d(ymin,ymax)<br>        <br>    plt.show()<br> <br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    plot_implicit(heart_3d)<br><br></code></pre></td></tr></table></figure></details>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>美食</title>
    <link href="/post/delicious-food-01/"/>
    <url>/post/delicious-food-01/</url>
    
    <content type="html"><![CDATA[<div class="note note-success">            <p>单纯的记录一下自己做过的，并且自我感觉良好的美食</p>          </div><span id="more"></span><h2 id="鱼香茄龙"><a href="#鱼香茄龙" class="headerlink" title="鱼香茄龙"></a>鱼香茄龙</h2><p>一、蓑衣刀切茄子<br>第一面斜刀切，刀与案板45度<br>翻过来竖着切，刀与案板45度</p><p>二、调面糊<br>盆中放入四勺普通面粉、放入两勺玉米淀粉、放入少许泡打粉、打入一颗鸡蛋、放入少许食用油、加入适量清水，搅成稍微稠一点的面糊。</p><p>三、炸茄子<br>将面糊粘到茄子上，然后炸至定型、一面炸2分钟左右就可以</p><p>四、准备调汁<br>蒜蓉<br>鱼香汁：一勺料酒、两勺生抽、三勺陈醋、四勺白糖、五勺清水<br>少许盐<br>少许鸡精<br>少许玉米淀粉<br>五、调汁<br>锅中放底油，加入豆瓣酱和蒜炒出红油，导入鱼香汁，把汁熬成浓稠状</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://image.glwsq.cn/img/202201310928961.png"></div><div class="group-image-wrap"><img src="https://image.glwsq.cn/img/202201310928964.png"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="https://image.glwsq.cn/img/202201310929903.png"></div></div></div><blockquote><p>教程<br>视频教程：<a href="https://www.bilibili.com/video/BV1kt411c7Ua">https://www.bilibili.com/video/BV1kt411c7Ua</a><br><a href="https://b23.tv/aPhgCv">蓑衣刀法演示</a></p></blockquote><h2 id="懒人披萨"><a href="#懒人披萨" class="headerlink" title="懒人披萨"></a>懒人披萨</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-02-19.png"></p><blockquote><p>教程<br><a href="https://b23.tv/BV18t411g7e5">https://b23.tv/BV18t411g7e5</a></p></blockquote><h2 id="千叶豆腐"><a href="#千叶豆腐" class="headerlink" title="千叶豆腐"></a>千叶豆腐</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-02-39.png"></p><blockquote><p>教程<br><a href="http://m.jiaonizuocai.com/caipudaquan/78329178">http://m.jiaonizuocai.com/caipudaquan/78329178</a></p></blockquote><h2 id="炒土豆丝"><a href="#炒土豆丝" class="headerlink" title="炒土豆丝"></a>炒土豆丝</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-02-49.png"></p><blockquote><p>教程<br><a href="http://m.jiaonizuocai.com/caipudaquan/89551752">http://m.jiaonizuocai.com/caipudaquan/89551752</a></p></blockquote><h2 id="炒饭"><a href="#炒饭" class="headerlink" title="炒饭"></a>炒饭</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-02-58.png"></p><h2 id="爆炒杏鲍菇"><a href="#爆炒杏鲍菇" class="headerlink" title="爆炒杏鲍菇"></a>爆炒杏鲍菇</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-03-05.png"></p><blockquote><p>教程<br><a href="http://m.jiaonizuocai.com/caipudaquan/88212668">http://m.jiaonizuocai.com/caipudaquan/88212668</a></p></blockquote><h2 id="可乐焖鸡腿"><a href="#可乐焖鸡腿" class="headerlink" title="可乐焖鸡腿"></a>可乐焖鸡腿</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-03-15.png"></p><blockquote><p>教程<br><a href="http://m.jiaonizuocai.com/caipudaquan/87575052">http://m.jiaonizuocai.com/caipudaquan/87575052</a></p></blockquote><h2 id="麻辣串"><a href="#麻辣串" class="headerlink" title="麻辣串"></a>麻辣串</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-03-29.png"></p><blockquote><p>教程<br><a href="https://b23.tv/ok0pq4">https://b23.tv/ok0pq4</a></p></blockquote><h2 id="广式腊肠焖饭"><a href="#广式腊肠焖饭" class="headerlink" title="广式腊肠焖饭"></a>广式腊肠焖饭</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-03-39.png"></p><blockquote><p>教程<br><a href="https://b23.tv/uz5PHI">https://b23.tv/uz5PHI</a></p></blockquote><h2 id="鸡蛋酱香饼"><a href="#鸡蛋酱香饼" class="headerlink" title="鸡蛋酱香饼"></a>鸡蛋酱香饼</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-03-53.png"></p><blockquote><p>教程<br><a href="https://b23.tv/RHaWhI">https://b23.tv/RHaWhI</a></p></blockquote><h2 id="手工蛋糕"><a href="#手工蛋糕" class="headerlink" title="手工蛋糕"></a>手工蛋糕</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-04-04.png"></p><blockquote><p>教程<br><a href="https://b23.tv/5I2Frg">https://b23.tv/5I2Frg</a></p></blockquote><h2 id="香辣万州烤鱼"><a href="#香辣万州烤鱼" class="headerlink" title="香辣万州烤鱼"></a>香辣万州烤鱼</h2><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-04-16.png"></div><div class="group-image-wrap"><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-04-24.png"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-04-32.png"></div><div class="group-image-wrap"><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-04-40.png"></div></div></div><blockquote><p>教程<br><a href="http://m.jiaonizuocai.com/caipudaquan/83107931">http://m.jiaonizuocai.com/caipudaquan/83107931</a><br><a href="https://b23.tv/xuCfo5">https://b23.tv/xuCfo5</a></p></blockquote><h2 id="凉皮"><a href="#凉皮" class="headerlink" title="凉皮"></a>凉皮</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-04-53.png"></p><blockquote><p>教程<br><a href="https://b23.tv/QO8nf3">https://b23.tv/QO8nf3</a></p></blockquote><h2 id="正新鸡排"><a href="#正新鸡排" class="headerlink" title="正新鸡排"></a>正新鸡排</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-05-04.png"></p><blockquote><p>教程<br><a href="https://b23.tv/DSNqwd">https://b23.tv/DSNqwd</a><br><a href="https://b23.tv/0JId6p">https://b23.tv/0JId6p</a></p></blockquote><h2 id="奥尔良烤鸡腿"><a href="#奥尔良烤鸡腿" class="headerlink" title="奥尔良烤鸡腿"></a>奥尔良烤鸡腿</h2><blockquote><p>这个比较傻瓜，但是需要专门买腌料，然后就没然后了</p></blockquote><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-05-14.png"></p><blockquote><p>教程<br><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-05-22.png"></p></blockquote><h2 id="口水鸡"><a href="#口水鸡" class="headerlink" title="口水鸡"></a>口水鸡</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-06-02.png"></p><blockquote><p>做法非常简单，只需要把煮料放进去煮15分钟，然后放入冷水放凉后切片，最后把酱料和鸡汤混合浇到肉片上即可。下面有视频教程</p></blockquote><h3 id="材料"><a href="#材料" class="headerlink" title="材料"></a>材料</h3><p><strong>煮料</strong></p><ol><li>姜片</li><li>洋葱</li><li>葱</li><li>料酒</li><li>花椒</li></ol><p><strong>酱料</strong></p><ol><li>红油</li><li>酱油</li><li>白芝麻</li><li>香油</li><li>盐</li><li>白砂糖</li></ol><h2 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h2><video style="width:100%;" src="https://image.glwsq.cn/img/美食-口水鸡.mp4" controls="controls">your browser does not support the video tag</video><h2 id="鱼香肉丝"><a href="#鱼香肉丝" class="headerlink" title="鱼香肉丝"></a>鱼香肉丝</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-15-37.png"></p><p>蔬菜切丝: 黑木耳、青椒、红萝卜、莴笋<br>一碗酱汁: 白糖、料酒、香醋、酱油、生抽、淀粉、清水<br>肉切丝腌制: 鸡蛋清、盐、料酒、淀粉、玉米油</p><p>锅加油，放蒜和豆瓣酱炒出红油，然后放入肉丝炒变色，再加入蔬菜丝翻炒，可加入适量的盐，最后加入酱汁即可。</p><blockquote><p>教程<br><a href="https://www.bilibili.com/video/BV1Pt41127q5">https://www.bilibili.com/video/BV1Pt41127q5</a><br><a href="https://www.bilibili.com/video/BV11J411X7HH">https://www.bilibili.com/video/BV11J411X7HH</a></p></blockquote><h2 id="小炒西葫芦"><a href="#小炒西葫芦" class="headerlink" title="小炒西葫芦"></a>小炒西葫芦</h2><p><img src="https://image.glwsq.cn/img/%E7%BE%8E%E9%A3%9F-2022-04-06-10-15-48.png"></p><blockquote><p>教程<br><a href="https://www.xiachufang.com/recipe/104594835/">https://www.xiachufang.com/recipe/104594835/</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>个人文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Anaconda conda常用命令汇总</title>
    <link href="/post/a372d80e/"/>
    <url>/post/a372d80e/</url>
    
    <content type="html"><![CDATA[<p>记录一下在使用Anaconda的时候常用到的命令，和一些使用技巧。</p><span id="more"></span><blockquote><p>官网：<a href="https://www.anaconda.com/">https://www.anaconda.com/</a></p></blockquote><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="查看虚拟环境"><a href="#查看虚拟环境" class="headerlink" title="查看虚拟环境"></a>查看虚拟环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">conda info --env<br>conda env list<br></code></pre></td></tr></table></figure><h3 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda create -n <span class="hljs-built_in">test</span> python=3.7 <span class="hljs-comment"># 创建对应python版本的虚拟环境 (推荐)</span><br>conda create -n <span class="hljs-built_in">test</span> <span class="hljs-comment"># 创建一个test虚拟环境，默认python版本</span><br></code></pre></td></tr></table></figure><h3 id="激活退出虚拟环境"><a href="#激活退出虚拟环境" class="headerlink" title="激活退出虚拟环境"></a>激活退出虚拟环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda activate <span class="hljs-built_in">test</span> <span class="hljs-comment"># 激活test虚拟环境</span><br>conda deactivate <span class="hljs-comment"># 退出虚拟环境</span><br></code></pre></td></tr></table></figure><h3 id="删除虚拟环境"><a href="#删除虚拟环境" class="headerlink" title="删除虚拟环境"></a>删除虚拟环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda remove -n <span class="hljs-built_in">test</span> --all<br></code></pre></td></tr></table></figure><h3 id="克隆虚拟环境"><a href="#克隆虚拟环境" class="headerlink" title="克隆虚拟环境"></a>克隆虚拟环境</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda create -n test2 -<span class="hljs-built_in">clone</span> <span class="hljs-built_in">test</span> <span class="hljs-comment"># 完整复制某个环境，test2是由test克隆过来的</span><br></code></pre></td></tr></table></figure><h3 id="查看安装模块列表"><a href="#查看安装模块列表" class="headerlink" title="查看安装模块列表"></a>查看安装模块列表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda list<br></code></pre></td></tr></table></figure><h3 id="安装卸载模块"><a href="#安装卸载模块" class="headerlink" title="安装卸载模块"></a>安装卸载模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install numpy=x.x.x <span class="hljs-comment"># 安装模块，不指定版本号默认最新</span><br>conda uninstall numpy <span class="hljs-comment"># 卸载</span><br></code></pre></td></tr></table></figure><h3 id="更新模块"><a href="#更新模块" class="headerlink" title="更新模块"></a>更新模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda upgrade --all <span class="hljs-comment"># 更新所有模块</span><br>conda upgrade numpy <br></code></pre></td></tr></table></figure><h2 id="更换清华镜像源"><a href="#更换清华镜像源" class="headerlink" title="更换清华镜像源"></a>更换清华镜像源</h2><blockquote><p>官方教程:<a href="https://mirror.tuna.tsinghua.edu.cn/help/anaconda/">https://mirror.tuna.tsinghua.edu.cn/help/anaconda/</a></p></blockquote><p>最简单的方法，用户目录下创建一个 .condarc 的文件，然后写入以下内容:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk">channels:<br>  - defaults<br>show_channel_urls: true<br>default_channels:<br>  - https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>pkgs/main<br>  - https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>pkgs/r<br>  - https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>pkgs/msys2<br>custom_channels:<br>  conda-forge: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  msys2: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  bioconda: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  menpo: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  pytorch: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  pytorch-lts: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  simpleitk: https:<span class="hljs-regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br></code></pre></td></tr></table></figure><p>添加过后，最好运行 conda clean -i 清除索引缓存，保证用的是镜像站提供的索引。</p><h2 id="清理Anaconda"><a href="#清理Anaconda" class="headerlink" title="清理Anaconda"></a>清理Anaconda</h2><p>用久了会发现Anaconda非常的占用电脑磁盘空间，可以使用conda clean进行清理。<br><code>conda clean -h</code> 可以查看帮助文档</p><h3 id="删除从不使用的包"><a href="#删除从不使用的包" class="headerlink" title="删除从不使用的包"></a>删除从不使用的包</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">conda clean <span class="hljs-comment">--packages</span><br></code></pre></td></tr></table></figure><h3 id="删除tar包"><a href="#删除tar包" class="headerlink" title="删除tar包"></a>删除tar包</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">conda clean <span class="hljs-comment">--tarballs</span><br></code></pre></td></tr></table></figure><h3 id="删除索引缓存、锁定文件、未使用过的包和tar包。"><a href="#删除索引缓存、锁定文件、未使用过的包和tar包。" class="headerlink" title="删除索引缓存、锁定文件、未使用过的包和tar包。"></a>删除索引缓存、锁定文件、未使用过的包和tar包。</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">conda clean -<span class="hljs-selector-tag">a</span> <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>python</tag>
      
      <tag>conda</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网站推荐-老版</title>
    <link href="/post/best-loved-websits/"/>
    <url>/post/best-loved-websits/</url>
    
    <content type="html"><![CDATA[<p>我个人经常用的网站和软件</p><span id="more"></span><table><thead><tr><th align="center">网站名称</th><th align="center">简介</th></tr></thead><tbody><tr><td align="center"><a href="https://tongji.baidu.com/web/10000161110/overview/index?siteId=14529755">百度统计</a></td><td align="center">百度网站访问次数统计</td></tr><tr><td align="center"><a href="https://www.iconfont.cn/">IconFont</a></td><td align="center">好看的icon图标</td></tr><tr><td align="center"><a href="https://mermaidjs.github.io/mermaid-live-editor">Mermaid Live Editor</a></td><td align="center">在线Mermaid编辑</td></tr><tr><td align="center"><a href="https://engine.glwsq.cn/">博客留言</a></td><td align="center">自己本站博客留言数据</td></tr><tr><td align="center"><a href="https://labuladong.gitbook.io/">labuladong的算法小抄</a></td><td align="center">手把手撕LeetCode题目，扒各种算法套路的裤子</td></tr><tr><td align="center"><a href="http://www.slimego.cn/">史莱姆网盘搜索</a></td><td align="center">百度网盘资源搜索</td></tr><tr><td align="center"><a href="https://www.pansoso.com/">盘搜索</a></td><td align="center">百度网盘资源</td></tr><tr><td align="center"><a href="https://cloudconvert.com/">在线文档视频图片格式转换</a></td><td align="center">能把包括.tex格式的文档转换成任意格式</td></tr><tr><td align="center"><a href="https://bigjpg.com/">AI人工智能图片放大</a></td><td align="center">使用最新人工智能深度学习技术——深度卷积神经网络。它会将噪点和锯齿的部分进行补充，实现图片的无损放大</td></tr><tr><td align="center"><a href="https://prod.zkqiang.cn/wxeditor/index.html#">公众号 Markdown 编辑器</a></td><td align="center"></td></tr><tr><td align="center"><a href="http://xiezuocat.com/">写作猫</a></td><td align="center">Ai自动帮你修改文档中的文字和句子错误</td></tr><tr><td align="center"><a href="https://draw.io/">draw.io</a></td><td align="center">一款在线画流程图软件</td></tr><tr><td align="center"><a href="https://www.tablesgenerator.com/">Tables Generator</a></td><td align="center">Tables Generator是一款线上表格语法产生器，可产生 LaTeX、HTML、纯文字、Markdown 和 MediaWiki 表格语法，是个非常方便好用的工具</td></tr><tr><td align="center"><a href="https://www.codecogs.com/eqnedit.php">Latex在线公式</a></td><td align="center"></td></tr><tr><td align="center"><a href="http://play.typeracer.com/">http://play.typeracer.com/</a></td><td align="center">在线打字对战平台,可以好友对战</td></tr><tr><td align="center"><a href="http://jdk.java.net/archive/">各个版本jdk下载</a></td><td align="center"></td></tr></tbody></table><table><thead><tr><th align="center">软件名称</th><th align="center">简介</th></tr></thead><tbody><tr><td align="center"><a href="https://dl.softmgr.qq.com/original/Development/Git-2.26.0-64-bit.exe">git</a></td><td align="center">代码版本管理工具</td></tr><tr><td align="center"><a href="https://sm.myapp.com/original/net_app/putty_V0.63.0.0.43510830.rar">putty</a></td><td align="center">迷你的ssh连接工具</td></tr><tr><td align="center"><a href="https://mobaxterm.mobatek.net/">MobaXterm</a></td><td align="center">很好用的ssh工具</td></tr><tr><td align="center"><a href="https://www.fotosizer.com/CompareFeatures">Fotosizer</a></td><td align="center">一款批量图片处理软件，包括批量黑白，负片，调整大小，旋转，重命名，调整品质等很多图片的批量操作</td></tr></tbody></table><h1 id="好用网站推荐"><a href="#好用网站推荐" class="headerlink" title="好用网站推荐"></a>好用网站推荐</h1><h2 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h2><h3 id="算法百科OI-Wiki"><a href="#算法百科OI-Wiki" class="headerlink" title="算法百科OI Wiki"></a><a href="https://hk2.oi-wiki.org/">算法百科OI Wiki</a></h3><p><a href="https://hk2.oi-wiki.org/">OI Wiki</a> 致力于成为一个免费开放且持续更新的知识整合站点，大家可以在这里获取关于 编程竞赛 (competitive programming) 有趣又实用的知识，我们为大家准备了竞赛中的基础知识、常见题型、解题思路以及常用工具等内容，帮助大家更快速深入地学习编程竞赛。</p><h3 id="菜鸟教程"><a href="#菜鸟教程" class="headerlink" title="菜鸟教程"></a><a href="https://www.runoob.com/">菜鸟教程</a></h3><p>菜鸟教程提供了编程的基础技术教程, 介绍了HTML、CSS、Javascript、Python，Java，Ruby，C，PHP , MySQL等各种编程语言的基础知识。 同时本站中也提供了大量的在线实例，通过实例，您可以更好的学习编程。</p><h3 id="51自学网"><a href="#51自学网" class="headerlink" title="51自学网"></a><a href="https://www.51zxw.net/">51自学网</a></h3><p>视频教学，很便宜很精致的视频，大部分视频免费，收费模式是按照每个视频单独收费的，看一个几毛钱，我很喜欢这种收费模式。</p><h3 id="变量命名神器"><a href="#变量命名神器" class="headerlink" title="变量命名神器"></a><a href="https://unbug.github.io/codelf/">变量命名神器</a></h3><p>自动帮你想变量名，不用为想变量名而苦恼</p><h3 id="打ACM竞赛常用的刷题网站"><a href="#打ACM竞赛常用的刷题网站" class="headerlink" title="打ACM竞赛常用的刷题网站"></a>打ACM竞赛常用的刷题网站</h3><h3 id="Vjudge"><a href="#Vjudge" class="headerlink" title="Vjudge"></a><a href="https://vjudge.net/">Vjudge</a></h3><h3 id="洛谷"><a href="#洛谷" class="headerlink" title="洛谷"></a><a href="https://www.luogu.org/">洛谷</a></h3><h3 id="牛客网"><a href="#牛客网" class="headerlink" title="牛客网"></a><a href="https://www.nowcoder.com/">牛客网</a></h3><h3 id="计蒜客"><a href="#计蒜客" class="headerlink" title="计蒜客"></a><a href="https://www.jisuanke.com/">计蒜客</a></h3><h3 id="codeforces"><a href="#codeforces" class="headerlink" title="codeforces"></a><a href="http://codeforces.com/">codeforces</a></h3><h3 id="51nod"><a href="#51nod" class="headerlink" title="51nod"></a><a href="http://www.51nod.com/">51nod</a></h3><h3 id="vijos"><a href="#vijos" class="headerlink" title="vijos"></a><a href="https://vijos.org/">vijos</a></h3><h2 id="网页学习"><a href="#网页学习" class="headerlink" title="网页学习"></a>网页学习</h2><h3 id="学习CSS布局"><a href="#学习CSS布局" class="headerlink" title="学习CSS布局"></a><a href="http://zh.learnlayout.com/">学习CSS布局</a></h3><p>本站教授的是现在广泛使用于网站布局领域的CSS基础。</p><h3 id="在线配色"><a href="#在线配色" class="headerlink" title="在线配色"></a><a href="http://colormind.io/">在线配色</a></h3><p>自动生成很搭配的配色</p><h3 id="很好看的网页CSS代码块"><a href="#很好看的网页CSS代码块" class="headerlink" title="很好看的网页CSS代码块"></a><a href="http://www.dowebok.com/">很好看的网页CSS代码块</a></h3><p>很潮流，很前端的代码</p><h3 id="好看的HTML5代码"><a href="#好看的HTML5代码" class="headerlink" title="好看的HTML5代码"></a><a href="https://html5up.net/">好看的HTML5代码</a></h3><h3 id="TinyPng"><a href="#TinyPng" class="headerlink" title="TinyPng"></a><a href="https://tinypng.com/">TinyPng</a></h3><p>图片在线压缩，压缩率很高</p><h2 id="未分类"><a href="#未分类" class="headerlink" title="未分类"></a>未分类</h2><h3 id="高清摄影素材下载"><a href="#高清摄影素材下载" class="headerlink" title="高清摄影素材下载"></a><a href="https://www.pexels.com/">高清摄影素材下载</a></h3><p>高清免费的图片素材下载站</p><h3 id="文件格式转换"><a href="#文件格式转换" class="headerlink" title="文件格式转换"></a><a href="https://smallpdf.com/">文件格式转换</a></h3><p>一个很万能的格式转换网站，现在好像需要收费，但是一天可以免费用几次，对于临时使用完全是可以的</p><h3 id="在线打字"><a href="#在线打字" class="headerlink" title="在线打字"></a><a href="https://dazi.kukuw.com/?4Q2HC">在线打字</a></h3><p>个人很推荐的一个在线打字平台，可以练指法，也可以测速度。反正很棒就对了</p><p>如果打字速度提上来了，推荐玩下面的打字游戏<a href="https://zty.pe/">https://zty.pe/</a></p><h3 id="国家统计局"><a href="#国家统计局" class="headerlink" title="国家统计局"></a><a href="http://www.stats.gov.cn/">国家统计局</a></h3><p>如果需要大量的数据，并且不想写爬虫自己去爬去的话，这个地方可以免费下载想要的数据</p><h3 id="免费的ppt模板下载"><a href="#免费的ppt模板下载" class="headerlink" title="免费的ppt模板下载"></a><a href="https://www.52ppt.com/">免费的ppt模板下载</a></h3><p>很潮流的设计，下载是需要输入密码，所有的密码都是:<code>52ppt</code></p><h1 id="好用软件推荐"><a href="#好用软件推荐" class="headerlink" title="好用软件推荐"></a>好用软件推荐</h1><h2 id="普通软件"><a href="#普通软件" class="headerlink" title="普通软件"></a>普通软件</h2><h3 id="VMware-Workstation"><a href="#VMware-Workstation" class="headerlink" title="VMware Workstation"></a>VMware Workstation</h3><p>虚拟机，在电脑里面模拟N台真实的物理电脑，只要你电脑配置够高<br>收费</p><h3 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h3><p>Markdown格式化书写，比较简洁，很方便的可以生成各种格式的文档<br>免费</p><h3 id="TeamViewer"><a href="#TeamViewer" class="headerlink" title="TeamViewer"></a>TeamViewer</h3><p>远程桌面连接工具</p><h3 id="OpenVPN"><a href="#OpenVPN" class="headerlink" title="OpenVPN"></a>OpenVPN</h3><p>一个开源的VPN服务和客户端，可以用自己的服务器搭建VPN用来模拟一个局域网，这样只能通过局域网联机的游戏就可以多人异地游玩了<br>免费开源</p><h3 id="Primo-Ramdisk"><a href="#Primo-Ramdisk" class="headerlink" title="Primo Ramdisk"></a>Primo Ramdisk</h3><p>内存虚拟硬盘，如果你的内存足够大并且过剩的话，可以用来虚拟一个超级快的硬盘，用来做一个缓存盘使用，有点是缓存的速度超级快<br>收费</p><h3 id="VNC"><a href="#VNC" class="headerlink" title="VNC"></a>VNC</h3><p>远程桌面连接工具</p><h3 id="UltraISO"><a href="#UltraISO" class="headerlink" title="UltraISO"></a>UltraISO</h3><p>将ISO镜像写入U盘的工具</p><h3 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h3><p>Anaconda是一个方便的python包管理和环境管理软件,一般用来配置不同的项目环境。</p><p>自带的Jupyter Notebook可以在网页页面中直接编写代码和运行代码，代码的运行结果也会直接在代码块下显示，让你用写笔记的方式敲代码。</p><h3 id="NotePad"><a href="#NotePad" class="headerlink" title="NotePad++"></a>NotePad++</h3><p>一个很好用的记事本工具</p><p>官网:<a href="https://notepad-plus-plus.org/">https://notepad-plus-plus.org/</a></p><h3 id="Splashtop-Wired-XDisplay-Agent"><a href="#Splashtop-Wired-XDisplay-Agent" class="headerlink" title="Splashtop Wired XDisplay Agent"></a>Splashtop Wired XDisplay Agent</h3><p>Splashtop Wired XDisplay Agent是一款非常好用的屏幕扩展工具，有了这款工具，我们就可以非常轻松的将移动设备作为第二块屏幕来进行使用，如果你平时对屏幕扩展需求很高的话，那么这款工具就可以派上用场</p><h3 id="Hasleo-Easy-UEFI"><a href="#Hasleo-Easy-UEFI" class="headerlink" title="Hasleo Easy UEFI"></a>Hasleo Easy UEFI</h3><p>你有装双系统吗？如果装了的话一定会面临一个很重要的问题，就是开机的系统启动顺序，用它可以轻易的来调整，如果你是比较老的电脑，可以使用EasyBCD</p><h3 id="HelloFont"><a href="#HelloFont" class="headerlink" title="HelloFont"></a>HelloFont</h3><p>每当你写Word文档或者制作ppt的时候有没有经常烦恼没有好看的字体，一个软件解君愁，可以很方便的寻找收藏和使用很多字体。</p><h3 id="JetBrains-PyCharm"><a href="#JetBrains-PyCharm" class="headerlink" title="JetBrains PyCharm"></a>JetBrains PyCharm</h3><p>一款Python开发软件<br>收费，学生免费用3年，也有对应的开源版本</p><h3 id="HBuilder"><a href="#HBuilder" class="headerlink" title="HBuilder"></a>HBuilder</h3><p>一款中国很不错的网页编辑软件，可以同时生成手机版的app，还支持在线打包，真机调试等多个功能。最关键的是官方自带绿色免安装版本，可以放到U盘里面随时随地愉快的写代码了。</p><h3 id="Cheat-Engine"><a href="#Cheat-Engine" class="headerlink" title="Cheat Engine"></a>Cheat Engine</h3><p>内存修改工具，可以根据内存地址的变化来寻找一个固定的值并且进行修改。<br>是一个<strong>单机</strong>游戏外挂，可以修改游戏里的各种参数</p><h3 id="Bz"><a href="#Bz" class="headerlink" title="Bz"></a>Bz</h3><p>一款很老的二进制编译器，麻雀虽小五脏俱全</p><h3 id="putty"><a href="#putty" class="headerlink" title="putty"></a>putty</h3><p>免安装的ssh远程连接工具，麻雀虽小五脏俱全</p><h3 id="ms-arbiter"><a href="#ms-arbiter" class="headerlink" title="ms_arbiter"></a>ms_arbiter</h3><p>扫雷游戏，可以进行全世界排名的扫雷游戏</p><h3 id="楼月免费iTunes备份管理器"><a href="#楼月免费iTunes备份管理器" class="headerlink" title="楼月免费iTunes备份管理器"></a>楼月免费iTunes备份管理器</h3><p>一款直接查看iphone备份文件的工具，都知道iphone的备份是散乱的不可查看的文件，如果里面有很想看的文件，例如手机QQ的聊天记录，都可以在里面轻松的找到并且备份。</p><h3 id="upupoo"><a href="#upupoo" class="headerlink" title="upupoo"></a>upupoo</h3><p>一个免费的动态桌面</p><h3 id="navicat"><a href="#navicat" class="headerlink" title="navicat"></a>navicat</h3><p>各种数据库的可视化管理软件<br>收费</p><h3 id="格式工厂"><a href="#格式工厂" class="headerlink" title="格式工厂"></a>格式工厂</h3><p>很齐全的格式相互转换工具，如果你还在为上传固定大小固定格式的图片烦恼，就可以用他来很轻松的转换格式。</p><h3 id="亿图图示"><a href="#亿图图示" class="headerlink" title="亿图图示"></a>亿图图示</h3><p>一个在线画各种图的软件，我当时下载他是为了画ER图</p><h3 id="PicPick图像编辑器"><a href="#PicPick图像编辑器" class="headerlink" title="PicPick图像编辑器"></a>PicPick图像编辑器</h3><p>PicPick 是一个免费且优秀的截图工具，汇集屏幕截取、图像编辑、颜色拾取、标尺、量角器、放大镜、坐标轴、白板功能于一身。<br>屏幕截取模式包括：全屏、活动窗口、滚动窗口、矩形区域、固定区域、手绘区域、重复上次截取等。<br>下载地址:<a href="https://www.portablesoft.org/picpick-portable/">https://www.portablesoft.org/picpick-portable/</a></p><h3 id="ActivePresenter"><a href="#ActivePresenter" class="headerlink" title="ActivePresenter"></a>ActivePresenter</h3><p>ActivePresenter是一款屏幕录制和交互式电子学习创作的视频录制工具，能创建视频截屏、讲义、手册、演示文档、交互式多媒体课件。虽然不是最好用的，但绝对是功能最全的，丰富的功能可以满足真正要制作专业教学 视频、编辑各种教材的好工具。</p><h3 id="avant"><a href="#avant" class="headerlink" title="avant"></a>avant</h3><p>一个便携式小巧的三核浏览器<br>下载地址:<a href="http://www.avantbrowser.com/">http://www.avantbrowser.com/</a></p><h3 id="Bandicam"><a href="#Bandicam" class="headerlink" title="Bandicam"></a>Bandicam</h3><p>一个很专业的录屏软件，支持各种方式的高清录屏<br>便携版:<a href="http://image.glwsq.cn/201910/18766235/Bandicam_4.1.4.1413_Portable.zip">http://image.glwsq.cn/201910/18766235/Bandicam_4.1.4.1413_Portable.zip</a></p><h3 id="伽卡他卡"><a href="#伽卡他卡" class="headerlink" title="伽卡他卡"></a>伽卡他卡</h3><p>伽卡他卡网络教室软件由伽卡他卡公司隆重推出，免费下载，免费使用。即安即用，无人数时间限制，不需注册码、无加密狗的电子教室软件。<br>下载地址:<a href="http://www.gakataka.com/netclass.php">http://www.gakataka.com/netclass.php</a></p><h3 id="Portable-VirtualBox"><a href="#Portable-VirtualBox" class="headerlink" title="Portable-VirtualBox"></a>Portable-VirtualBox</h3><p>便携版的虚拟机，对于爱折腾的人这个软件还是很不错的，可以随身带着一堆虚拟机乱跑。<br>Portable-VirtualBox is a free and open source software tool that lets you run any operating system from a usb stick without separate installation.<br>官网:<a href="https://www.vbox.me/">https://www.vbox.me/</a><br>中文教程:<a href="https://www.iplaysoft.com/portable-virtualbox.html">https://www.iplaysoft.com/portable-virtualbox.html</a><br><code>data\.VirtualBox\Machines</code>这个位置可以用来保存自己的系统</p><h3 id="DuplicateFileFinderPlus"><a href="#DuplicateFileFinderPlus" class="headerlink" title="DuplicateFileFinderPlus"></a>DuplicateFileFinderPlus</h3><p>如果你的电脑上有大量的重复文件，又不想手动去删除的话，这个软件可以帮助到你。</p><h2 id="专业软件"><a href="#专业软件" class="headerlink" title="专业软件"></a>专业软件</h2><h3 id="Intellij-IDEA"><a href="#Intellij-IDEA" class="headerlink" title="Intellij IDEA"></a>Intellij IDEA</h3><p>一款很不错的Java开发工具<br>收费，学生邮箱可以免费用3年，也有开源版本</p><h3 id="Wireshark"><a href="#Wireshark" class="headerlink" title="Wireshark"></a>Wireshark</h3><p>网络抓包软件<br>免费开源</p><h3 id="TeXstudio"><a href="#TeXstudio" class="headerlink" title="TeXstudio"></a>TeXstudio</h3><p>编写Latex的编辑器，但是并不能编译，如果需要编译的话还要结合<strong>texlive</strong></p><h3 id="魔方内存盘"><a href="#魔方内存盘" class="headerlink" title="魔方内存盘"></a>魔方内存盘</h3><p>如果你的电脑内存很大，可以用这个来把内存模拟成一块高速硬盘，用来缓存数据是很不错的，而且不会降低硬盘的寿命。<br><a href="http://image.glwsq.cn/software508824/ramdisk.exe">点击下载</a></p><h3 id="ScreenToGif"><a href="#ScreenToGif" class="headerlink" title="ScreenToGif"></a>ScreenToGif</h3><p>一款录制GIF的软件，免费开源</p>]]></content>
    
    
    <categories>
      
      <category>推荐分享</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>微软拼音快速插入当前时间</title>
    <link href="/post/aa4fd572/"/>
    <url>/post/aa4fd572/</url>
    
    <content type="html"><![CDATA[<p>有时候做笔记需要记录一下当前的时间，普通的方法就是看一下当前时间然后对着写一下。今天突然发现了一个好方法，不仅可以快速的插入当前的时间，而且还能设置时间格式，效果如下:<br><img src="/images/uploads/%E5%BE%AE%E8%BD%AF%E6%8B%BC%E9%9F%B3%E5%BF%AB%E9%80%9F%E6%8F%92%E5%85%A5%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4/time.gif"></p><span id="more"></span><h2 id="1-右键输入法打开设置"><a href="#1-右键输入法打开设置" class="headerlink" title="1. 右键输入法打开设置"></a>1. 右键输入法打开设置</h2><p><img src="/images/uploads/%E5%BE%AE%E8%BD%AF%E6%8B%BC%E9%9F%B3%E5%BF%AB%E9%80%9F%E6%8F%92%E5%85%A5%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4/20200313223907.png" alt="右键输入法打开设置"></p><h2 id="2-进入词库"><a href="#2-进入词库" class="headerlink" title="2. 进入词库"></a>2. 进入词库</h2><p><img src="/images/uploads/%E5%BE%AE%E8%BD%AF%E6%8B%BC%E9%9F%B3%E5%BF%AB%E9%80%9F%E6%8F%92%E5%85%A5%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4/20200313223938.png" alt="进入词库"></p><h2 id="3-添加用户自定义短语"><a href="#3-添加用户自定义短语" class="headerlink" title="3. 添加用户自定义短语"></a>3. 添加用户自定义短语</h2><p><img src="/images/uploads/%E5%BE%AE%E8%BD%AF%E6%8B%BC%E9%9F%B3%E5%BF%AB%E9%80%9F%E6%8F%92%E5%85%A5%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4/20200313224002.png" alt="添加用户自定义短语"></p><h2 id="4-编辑短语"><a href="#4-编辑短语" class="headerlink" title="4. 编辑短语"></a>4. 编辑短语</h2><p>这里提供2种格式，当然可以自己修改，然后保存就可以了</p><ol><li><p><code>%yyyy%年%MM%月%dd%日 %HH%:%mm%:%ss%</code></p></li><li><p><code>%yyyy%-%MM%-%dd% %HH%:%mm%:%ss%</code></p></li></ol><p><img src="/images/uploads/%E5%BE%AE%E8%BD%AF%E6%8B%BC%E9%9F%B3%E5%BF%AB%E9%80%9F%E6%8F%92%E5%85%A5%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4/20200313224059.png" alt="编辑短语"></p><p><strong>这个每次保存完以后就不要再打开查看了，查看完以后就必须重新修改成上面的格式保存</strong></p>]]></content>
    
    
    <categories>
      
      <category>电脑使用技巧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>电脑使用技巧</tag>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何在VMware中安装Linux</title>
    <link href="/post/vmware-linux/"/>
    <url>/post/vmware-linux/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>哔哩哔哩是个学习的地方，我自己也通过哔哩哔哩学习过很多技术，其中也发现了一些很好的视频，我都把它记录下来了，都是正在学习的或者已经学习完的，如果需要，可以点击查看：<a href="/bilibili-record/">哔哩哔哩学习记录</a></p></blockquote><h2 id="哔哩哔哩"><a href="#哔哩哔哩" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h2><p>哔哩哔哩的视频地址 <a href="https://www.bilibili.com/video/av43150343/">点击进入</a></p><h2 id="问题整理"><a href="#问题整理" class="headerlink" title="问题整理"></a>问题整理</h2><h3 id="1-启动以后电脑蓝屏重启"><a href="#1-启动以后电脑蓝屏重启" class="headerlink" title="1. 启动以后电脑蓝屏重启"></a>1. 启动以后电脑蓝屏重启</h3><p>因为Windows本身也有一个虚拟机，会和VMware冲突，一般需要关闭，如果关闭也还有问题，那么就用最新的VMware16，理论上换成这个版本就没有问题了，如果还有问题可以在下面的评论区提问</p><a class="btn" href="/post/vmware-linux-error"  target="_blank">详细解决过程</a><h3 id="2-打开以后关不掉"><a href="#2-打开以后关不掉" class="headerlink" title="2. 打开以后关不掉"></a>2. 打开以后关不掉</h3><p>q : 把虚拟机配置好后点启动一直黑屏，点关闭客户端就卡住一直关不掉</p><p>q : 下载好后关机就打不开了，虚拟机也删不掉，只能从服务里面禁掉再删除重装，试了三次都这样，我下的是vm14，Ubuntu18.04.4</p><p>a : 这是Win10最新版自带有一个虚拟机，和VM冲突了，最新版的VM解决了这个问题，您需要下载最新版的15.1以上的VMware</p><h3 id="3-Linux在哪里下载，高速下载"><a href="#3-Linux在哪里下载，高速下载" class="headerlink" title="3. Linux在哪里下载，高速下载"></a>3. Linux在哪里下载，高速下载</h3><p>很多小伙伴说下载的速度很慢，这里提供一下阿里的镜像站<a href="http://mirrors.aliyun.com/ubuntu-releases/">http://mirrors.aliyun.com/ubuntu-releases/</a>，这速度肯定杠杠的。</p><p>打开以后随便找个版本，然后下载desktop版本的iso<br><img src="/images/uploads/linux-VMware-20200312083615.png"><br>我来下载一下试试速度，好吧，这是我家网速的极限了，你们还能更快<br><img src="/images/uploads/linux-VMware-20200312083753.png"></p><h3 id="4-vmware安装ubuntu-“-Intel-VT-x-处于禁用状态"><a href="#4-vmware安装ubuntu-“-Intel-VT-x-处于禁用状态" class="headerlink" title="4. vmware安装ubuntu “ Intel VT-x 处于禁用状态"></a>4. vmware安装ubuntu “ Intel VT-x 处于禁用状态</h3><p><img src="/images/uploads/linux-VMware-interlerror.jpg"></p><p>重启系统，进入BIOS（具体可以百度一下，自己的电脑型号，然后加上怎么进去BIOS）</p><p>选择advanced选项卡，选择CPU setup,按enter键进入</p><p>选择Intel Virtualization Technology，选择，按enter</p><p>选择Enable，按enter键，状态改变如下图所示。</p><p>上面的步骤电脑不同也不一样，但是目的就是这样，需要修改主板的设置来开启这个功能。</p><p>如果需要详细的过程，可以百度一下，有很多针对于你的电脑的教程</p><h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><p>我的博客正在添加很多内容，如果需要可以点击首页查看，也欢迎关注我的微信公众号:<br><img max-width="50px" width="200px" src="https://image.glwsq.cn/img/202202052349959.jpg"></p><div class="note note-success">            <p>相关推荐：</p><ul><li><a href="/post/note-vue-element/">Vue后台管理系统项目实战/vue+element-ui/vue经典全套系统案例讲解</a></li><li><a href="/post/df99894b/">尚硅谷Vue2.0+Vue3.0全套教程丨vuejs从入门到精通</a></li><li><a href="/post/2ff98e51/">Docker最新超详细版教程通俗易懂</a></li><li><a href="/post/switch-node-version/">优雅的切换nodejs版本</a></li><li><a href="/post/vmware-linux/">如何在VMware中安装Linux</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>Linux</tag>
      
      <tag>虚拟机</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vscode-paste-image VScode中插入剪切板中的图片</title>
    <link href="/post/vscode-paste-image/"/>
    <url>/post/vscode-paste-image/</url>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>我自己喜欢用markdown记录一些笔记，但是在笔记中要插入很多图片，普通的方法很麻烦，不但要复制图片，还要手动的插入图片的地址。用一个插件，就可以直接<code>ctrl + alt + v</code>来粘贴图片了，并且还会自动写入图片的链接。</p><span id="more"></span><h2 id="插件用法"><a href="#插件用法" class="headerlink" title="插件用法"></a>插件用法</h2><p>我喜欢在一个markdown文件的同级下建立一个和这个文件名称一样的文件夹用来保存图片，在VSCode中安装好Paste Image插件经过自己的设置后，只需要复制想要的照片，<code>ctrl + alt + v</code>粘贴，就可以了。</p><h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p>这是用过插件以后达到的效果，<code>ctrl + alt + v</code>粘贴后，自动生成了一张照片，并且根据当前的日期重命名。</p><p><img src="https://image.glwsq.cn/img/202201210004119.png"></p><h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><h3 id="1-首先在VSCode中安装Paste-Image插件"><a href="#1-首先在VSCode中安装Paste-Image插件" class="headerlink" title="1. 首先在VSCode中安装Paste Image插件"></a>1. 首先在VSCode中安装Paste Image插件</h3><p><img src="https://image.glwsq.cn/img/202201210004941.png"></p><h3 id="2-进行配置"><a href="#2-进行配置" class="headerlink" title="2. 进行配置"></a>2. 进行配置</h3><p>点击小齿轮，选择Extensions Settings(扩展设置)<br><img src="https://image.glwsq.cn/img/202201210005935.png"></p><p>找到设置里面的Path，并且把值改为:<code>$&#123;currentFileDir&#125;/$&#123;currentFileNameWithoutExt&#125;</code></p><p><img src="https://image.glwsq.cn/img/202201210004679.png"></p><p><strong>参数说明:</strong></p><p>这个插件在设置的时候是可以使用变量的，这次设置用到了两个变量，分别是<br>${currentFileDir}: 包含当前文件的目录</p><p>${currentFileNameWithoutExt}: 这个文件的名称，不包含扩展名。因为我要用文件名来作为目录名，目录中是不能有点的，所以要用这一个，这一点非常重要。</p><p><strong>到这里就完成了，如果有问题，欢迎留言。</strong></p>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>vscode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>VSCode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自动截屏工具</title>
    <link href="/post/d9b8d897/"/>
    <url>/post/d9b8d897/</url>
    
    <content type="html"><![CDATA[<h1 id="心路历程"><a href="#心路历程" class="headerlink" title="心路历程"></a>心路历程</h1><p>不知道你有没有遇到过这样的情景，老师布置了一个任务，安装一下某个软件，然后让把每一步截图，最后行程报告。<br>不管你烦不烦，我是很烦这个操作的，安装软件本来就是一项很简单的过程，因为需要时时刻刻的截图，变成了一项很艰巨的任务。</p><p>所以我就一直想找一个软件，这个软件的功能是实现自动截图的操作，当然还有几点要求：</p><ol><li>当我按下鼠标左键的时候自动截图，因为每次按下左键都会到下一个界面</li><li>我不想单纯的截一张全屏的图，我想让他截下来当前运行程序的截图。</li></ol><p>虽然就只有很少的两个要求，但是并没有发现满足这两个功能的截图软件。</p><p>所以我就想写一个这样的软件。</p><h1 id="开始操作"><a href="#开始操作" class="headerlink" title="开始操作"></a>开始操作</h1><p>要想写一个程序，首先选择的是要用哪一个编程语言。刚开始我选择了java，并且看开发文档写了下面的程序。<br>他只能实现截屏，然后并不能获取鼠标的状态，同样也就不能直接操作windows的句柄从而获取窗口的截图。</p><figure class="highlight java"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></div></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> javax.imageio.ImageIO;<br><span class="hljs-keyword">import</span> java.awt.*;<br><span class="hljs-keyword">import</span> java.awt.image.BufferedImage;<br><span class="hljs-keyword">import</span> java.io.File;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CaptureScreen</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">captureScreen</span><span class="hljs-params">(String folder, String fileName)</span> <span class="hljs-keyword">throws</span> AWTException, IOException </span>&#123;<br>        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();<br>        Rectangle screenRectangle = <span class="hljs-keyword">new</span> Rectangle(screenSize);<br>        Robot robot = <span class="hljs-keyword">new</span> Robot();<br>        BufferedImage image = robot.createScreenCapture(screenRectangle);<br><br>        File screenFile = <span class="hljs-keyword">new</span> File(folder);<br>        <span class="hljs-keyword">if</span>(!screenFile.exists()) &#123;<br>            screenFile.mkdir();<br>        &#125;<br>        File f = <span class="hljs-keyword">new</span> File(screenFile, fileName);<br>        ImageIO.write(image, <span class="hljs-string">&quot;png&quot;</span>, f);<br>        <span class="hljs-keyword">if</span>(Desktop.isDesktopSupported() &amp;&amp; Desktop.getDesktop().isSupported(Desktop.Action.OPEN)) &#123;<br>            Desktop.getDesktop().open(f);<br>        &#125;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span></span>&#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            captureScreen(<span class="hljs-string">&quot;hello&quot;</span>, <span class="hljs-string">&quot;11.png&quot;</span>);<br>        &#125; <span class="hljs-keyword">catch</span> (AWTException e) &#123;<br>            e.printStackTrace();<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>然后又找了一个python的代码，然后跟java是同样的问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> win32gui, win32ui, win32con, win32api<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">window_capture</span>(<span class="hljs-params">filename</span>):</span><br>    hwnd = <span class="hljs-number">0</span>  <span class="hljs-comment"># 窗口的编号，0号表示当前活跃窗口</span><br>    <span class="hljs-comment"># 根据窗口句柄获取窗口的设备上下文DC（Divice Context）</span><br>    hwndDC = win32gui.GetWindowDC(hwnd)<br>    <span class="hljs-comment"># 根据窗口的DC获取mfcDC</span><br>    mfcDC = win32ui.CreateDCFromHandle(hwndDC)<br>    <span class="hljs-comment"># mfcDC创建可兼容的DC</span><br>    saveDC = mfcDC.CreateCompatibleDC()<br>    <span class="hljs-comment"># 创建bigmap准备保存图片</span><br>    saveBitMap = win32ui.CreateBitmap()<br>    <span class="hljs-comment"># 获取监控器信息</span><br>    MoniterDev = win32api.EnumDisplayMonitors(<span class="hljs-literal">None</span>, <span class="hljs-literal">None</span>)<br>    w = MoniterDev[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>][<span class="hljs-number">2</span>]<br>    h = MoniterDev[<span class="hljs-number">0</span>][<span class="hljs-number">2</span>][<span class="hljs-number">3</span>]<br>    <span class="hljs-comment"># print w,h　　　#图片大小</span><br>    <span class="hljs-comment"># 为bitmap开辟空间</span><br>    saveBitMap.CreateCompatibleBitmap(mfcDC, w, h)<br>    <span class="hljs-comment"># 高度saveDC，将截图保存到saveBitmap中</span><br>    saveDC.SelectObject(saveBitMap)<br>    <span class="hljs-comment"># 截取从左上角（0，0）长宽为（w，h）的图片</span><br>    saveDC.BitBlt((<span class="hljs-number">0</span>, <span class="hljs-number">0</span>), (w, h), mfcDC, (<span class="hljs-number">0</span>, <span class="hljs-number">0</span>), win32con.SRCCOPY)<br>    saveBitMap.SaveBitmapFile(saveDC, filename)<br><br><br>beg = time.time()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):<br>    window_capture(<span class="hljs-string">&quot;haha.jpg&quot;</span>)<br>end = time.time()<br><span class="hljs-built_in">print</span>(end - beg)<br></code></pre></td></tr></table></figure><p>没有办法，最终只能选择C语言了，他能直接操作Windows的句柄，并且可以通过hook来获取全局鼠标的状态。</p><p>一步一步来，第一个代码先获取一下鼠标的状态，如果我点击鼠标了，让他显示一下我点击了左键还是右键。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;windows.h&gt;</span></span><br><br>HHOOK   _glh_hook_ = <span class="hljs-literal">NULL</span>;  <span class="hljs-comment">//定义为全局变量</span><br><br><span class="hljs-function">LRESULT CALLBACK <span class="hljs-title">MouseProc</span><span class="hljs-params">(<span class="hljs-keyword">int</span> nCode, WPARAM wparam, LPARAM lparam)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (nCode &gt;= <span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-keyword">if</span>(wparam == WM_RBUTTONDOWN)<br>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;右键&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (wparam == WM_LBUTTONDOWN)<br>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;左键&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (wparam == WM_MBUTTONDOWN)<br>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;中键&quot;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> CallNextHookEx(_glh_hook_, nCode, wparam, lparam);<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    HINSTANCE   glhInstance = <span class="hljs-literal">NULL</span>;<br>glhInstance = GetModuleHandle(<span class="hljs-literal">NULL</span>);<br>_glh_hook_ = SetWindowsHookEx(WH_MOUSE_LL, MouseProc, glhInstance, <span class="hljs-number">0</span>);<br><span class="hljs-comment">//WH_MOUSE_LL指监控鼠标行为,MouseProc是回调函数</span><br><span class="hljs-keyword">if</span>(_glh_hook_ == <span class="hljs-literal">NULL</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;鼠标钩子获取失败&quot;</span>);<br>    &#125;<br>    MSG msg;<br>    <span class="hljs-keyword">while</span> (GetMessage(&amp;msg, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>))<br>    &#123;<br>        TranslateMessage(&amp;msg);<br>        DispatchMessage(&amp;msg);<br>    &#125;<br>    UnhookWindowsHookEx(_glh_hook_);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>关于全局鼠标钩子卡的原因分析</p><p>问题：注册全局钩子后，最大化或关闭时，某些电脑会卡顿，卡的时候不固定，同样的系统有的会卡，有的不会卡。</p><p>分析：基于这样的问题进行了大量的资料收集与分析，发现卡的问题其实是在windows 动画上，由于关闭窗口时线程退出消息循环而没结束钩子消息导致都不能接收，于是鼠标消息就在那耗着，直到超时所形成的卡顿现象，解决方案有如下二种：<br>1，在窗体发送WM_Close消息前先卸载钩子。<br>2，关闭窗口动画过渡效果，从而减少卡顿时间，比如使用性能模式或使用windows 经典主题。</p><p>完整的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;pch.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdint.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;time.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ShootScreen</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* filename, HWND hWnd)</span></span><br><span class="hljs-function"></span>&#123;<br>HDC hdc = CreateDC(<span class="hljs-string">&quot;DISPLAY&quot;</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>);<br><span class="hljs-keyword">int32_t</span> ScrWidth = <span class="hljs-number">0</span>, ScrHeight = <span class="hljs-number">0</span>;<br>RECT rect = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-keyword">if</span> (hWnd == <span class="hljs-literal">NULL</span>)<br>&#123;<br>ScrWidth = GetDeviceCaps(hdc, HORZRES);<br>ScrHeight = GetDeviceCaps(hdc, VERTRES);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>GetWindowRect(hWnd, &amp;rect);<br>ScrWidth = rect.right - rect.left;<br>ScrHeight = rect.bottom - rect.top;<br>&#125;<br>HDC hmdc = CreateCompatibleDC(hdc);<br><br>HBITMAP hBmpScreen = CreateCompatibleBitmap(hdc, ScrWidth, ScrHeight);<br>HBITMAP holdbmp = (HBITMAP)SelectObject(hmdc, hBmpScreen);<br><br>BITMAP bm;<br>GetObject(hBmpScreen, <span class="hljs-keyword">sizeof</span>(bm), &amp;bm);<br><br>BITMAPINFOHEADER bi = &#123; <span class="hljs-number">0</span> &#125;;<br>bi.biSize = <span class="hljs-keyword">sizeof</span>(BITMAPINFOHEADER);<br>bi.biWidth = bm.bmWidth;<br>bi.biHeight = bm.bmHeight;<br>bi.biPlanes = bm.bmPlanes;<br>bi.biBitCount = bm.bmBitsPixel;<br>bi.biCompression = BI_RGB;<br>bi.biSizeImage = bm.bmHeight * bm.bmWidthBytes;<br><br><span class="hljs-keyword">char</span> *buf = <span class="hljs-keyword">new</span> <span class="hljs-keyword">char</span>[bi.biSizeImage];<br>BitBlt(hmdc, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, ScrWidth, ScrHeight, hdc, rect.left, rect.top, SRCCOPY);<br>GetDIBits(hmdc, hBmpScreen, <span class="hljs-number">0L</span>, (DWORD)ScrHeight, buf, (LPBITMAPINFO)&amp;bi, (DWORD)DIB_RGB_COLORS);<br><br>BITMAPFILEHEADER bfh = &#123; <span class="hljs-number">0</span> &#125;;<br>bfh.bfType = ((WORD)(<span class="hljs-string">&#x27;M&#x27;</span> &lt;&lt; <span class="hljs-number">8</span>) | <span class="hljs-string">&#x27;B&#x27;</span>);<br>bfh.bfSize = <span class="hljs-keyword">sizeof</span>(BITMAPFILEHEADER) + <span class="hljs-keyword">sizeof</span>(BITMAPINFOHEADER) + bi.biSizeImage;<br>bfh.bfOffBits = <span class="hljs-keyword">sizeof</span>(BITMAPFILEHEADER) + <span class="hljs-keyword">sizeof</span>(BITMAPINFOHEADER);<br>HANDLE hFile = CreateFile(filename, GENERIC_WRITE, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, OPEN_ALWAYS, FILE_ATTRIBUTE_NORMAL, <span class="hljs-number">0</span>);<br>DWORD dwWrite;<br>WriteFile(hFile, &amp;bfh, <span class="hljs-keyword">sizeof</span>(BITMAPFILEHEADER), &amp;dwWrite, <span class="hljs-literal">NULL</span>);<br>WriteFile(hFile, &amp;bi, <span class="hljs-keyword">sizeof</span>(BITMAPINFOHEADER), &amp;dwWrite, <span class="hljs-literal">NULL</span>);<br>WriteFile(hFile, buf, bi.biSizeImage, &amp;dwWrite, <span class="hljs-literal">NULL</span>);<br>CloseHandle(hFile);<br>hBmpScreen = (HBITMAP)SelectObject(hmdc, holdbmp);<br>&#125;<br><br>HHOOK   _glh_hook_ = <span class="hljs-literal">NULL</span>;  <span class="hljs-comment">//定义为全局变量</span><br><br><span class="hljs-function">LRESULT CALLBACK <span class="hljs-title">MouseProc</span><span class="hljs-params">(<span class="hljs-keyword">int</span> nCode, WPARAM wparam, LPARAM lparam)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (nCode &gt;= <span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-keyword">if</span> (wparam == WM_RBUTTONDOWN)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;右键&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (wparam == WM_LBUTTONDOWN)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;左键&quot;</span>);<br>POINT pNow = &#123; <span class="hljs-number">0</span>,<span class="hljs-number">0</span> &#125;;<br><span class="hljs-keyword">if</span> (GetCursorPos(&amp;pNow))  <span class="hljs-comment">// 获取鼠标当前位置</span><br>&#123;<br><br>HWND hwndPointNow = <span class="hljs-literal">NULL</span>;<br>hwndPointNow = WindowFromPoint(pNow);  <span class="hljs-comment">// 获取鼠标所在窗口的句柄</span><br><span class="hljs-keyword">if</span> (hwndPointNow)<br>&#123;<br><span class="hljs-built_in">cout</span> &lt;&lt; hwndPointNow &lt;&lt; <span class="hljs-built_in">endl</span>;<br><span class="hljs-keyword">time_t</span> timep;<br><span class="hljs-keyword">int</span> t = time(&amp;timep);<br><br><span class="hljs-keyword">char</span> name[<span class="hljs-number">256</span>] = &#123; <span class="hljs-number">0</span> &#125;;<br><br>sprintf_s(name, <span class="hljs-number">256</span>, <span class="hljs-string">&quot;%d.bmp&quot;</span>, t);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;截图%s\n&quot;</span>, name);<br>ShootScreen(name, hwndPointNow);<br>&#125;<br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;Error!!&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>&#125;<br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">cout</span> &lt;&lt; <span class="hljs-string">&quot;Error!!&quot;</span> &lt;&lt; <span class="hljs-built_in">endl</span>;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (wparam == WM_MBUTTONDOWN)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;中键&quot;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> CallNextHookEx(_glh_hook_, nCode, wparam, lparam);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;程序运行中&quot;</span>);<br>HINSTANCE   glhInstance = <span class="hljs-literal">NULL</span>;<br>glhInstance = GetModuleHandle(<span class="hljs-literal">NULL</span>);<br>_glh_hook_ = SetWindowsHookEx(WH_MOUSE_LL, MouseProc, glhInstance, <span class="hljs-number">0</span>);<br><span class="hljs-comment">//WH_MOUSE_LL指监控鼠标行为,MouseProc是回调函数</span><br><span class="hljs-keyword">if</span> (_glh_hook_ == <span class="hljs-literal">NULL</span>)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;鼠标钩子获取失败&quot;</span>);<br>&#125;<br>MSG msg;<br><span class="hljs-keyword">while</span> (GetMessage(&amp;msg, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>))<br>&#123;<br>TranslateMessage(&amp;msg);<br>DispatchMessage(&amp;msg);<br>&#125;<br>UnhookWindowsHookEx(_glh_hook_);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>但是这个代码是有问题的，Window10的动画冲突，会导致突然电脑变卡</p><p>没有办法，最后只能写一个通过按键来截图的工具了，而且进行了完善，可以通过修改配置文件来更改设置信息。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;pch.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdint.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;time.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;errno.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ctype.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdbool.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;io.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;direct.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span>  MAX_VALUE  64 <span class="hljs-comment">/* 定义section,key,value字符串最大长度 */</span></span><br><span class="hljs-comment">// printf(&quot;File = %s\nLine = %d\nFunc=%s\nDate=%s\nTime=%s\n&quot;, __FILE__, __LINE__, __FUNCTION__, __DATE__, __TIME__);</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span>  PRINT_ERRMSG(STR) fprintf(stderr,<span class="hljs-meta-string">&quot;line:%d,msg:%s,eMsg:%s\n&quot;</span>, __LINE__, STR, strerror(errno))</span><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">option</span></span><br><span class="hljs-class">&#123;</span><br><span class="hljs-keyword">char</span>    key[MAX_VALUE];   <span class="hljs-comment">/* 对应键 */</span><br><span class="hljs-keyword">char</span>    value[MAX_VALUE]; <span class="hljs-comment">/* 对应值 */</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span>  _<span class="hljs-title">option</span> *<span class="hljs-title">next</span>;</span>    <span class="hljs-comment">/* 链表连接标识 */</span><br>&#125; Option;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> _<span class="hljs-title">data</span></span><br><span class="hljs-class">&#123;</span><br><span class="hljs-keyword">char</span>    section[MAX_VALUE]; <span class="hljs-comment">/* 保存section值          */</span><br>Option  *option;            <span class="hljs-comment">/* option链表头           */</span><br><span class="hljs-class"><span class="hljs-keyword">struct</span>  _<span class="hljs-title">data</span> *<span class="hljs-title">next</span>;</span>        <span class="hljs-comment">/* 链表连接标识           */</span><br>&#125; Data;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span></span><br><span class="hljs-class">&#123;</span><br><span class="hljs-keyword">char</span>    comment;              <span class="hljs-comment">/* 表示注释的符号    */</span><br><span class="hljs-keyword">char</span>    separator;            <span class="hljs-comment">/* 表示分隔符        */</span><br><span class="hljs-keyword">char</span>    re_string[MAX_VALUE]; <span class="hljs-comment">/* 返回值字符串的值  */</span><br><span class="hljs-keyword">int</span>     re_int;               <span class="hljs-comment">/* 返回int的值       */</span><br><span class="hljs-keyword">bool</span>    re_bool;              <span class="hljs-comment">/* 返回bool的值      */</span><br><span class="hljs-keyword">double</span>  re_double;           <span class="hljs-comment">/* 返回double类型    */</span><br>Data    *data;                <span class="hljs-comment">/* 保存数据的头      */</span><br>&#125; Config;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 判断字符串是否为空</span><br><span class="hljs-comment">* 为空返回true,不为空返回false</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">str_empty</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *string)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span> == string || <span class="hljs-number">0</span> == <span class="hljs-built_in">strlen</span>(string);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 向链表添加section,key,value</span><br><span class="hljs-comment">* 如果添加时不存在section则新增一个</span><br><span class="hljs-comment">* 如果对应section的key不存在则新增一个</span><br><span class="hljs-comment">* 如果section已存在则不会重复创建</span><br><span class="hljs-comment">* 如果对应section的key已存在则只会覆盖key的值</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cnf_add_option</span><span class="hljs-params">(Config *cnf, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *section, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *key, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *value)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == cnf || <span class="hljs-built_in">str_empty</span>(section) || <span class="hljs-built_in">str_empty</span>(key) || <span class="hljs-built_in">str_empty</span>(value))<br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>; <span class="hljs-comment">/* 参数不正确,返回false */</span><br>&#125;<br><br>Data *p = cnf-&gt;data; <span class="hljs-comment">/* 让变量p循环遍历data,找到对应section */</span><br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != p &amp;&amp; <span class="hljs-number">0</span> != <span class="hljs-built_in">strcmp</span>(p-&gt;section, section))<br>&#123;<br>p = p-&gt;next;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == p)   <span class="hljs-comment">/* 说明没有找到section,需要加一个 */</span><br>&#123;<br>Data *ps = (Data*)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(Data));<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == ps)<br>&#123;<br><span class="hljs-built_in">exit</span>(<span class="hljs-number">-1</span>); <span class="hljs-comment">/* 申请内存错误 */</span><br>&#125;<br><span class="hljs-built_in">strcpy</span>(ps-&gt;section, section);<br>ps-&gt;option = <span class="hljs-literal">NULL</span>;    <span class="hljs-comment">/* 初始的option要为空 */</span><br>ps-&gt;next = cnf-&gt;data; <span class="hljs-comment">/* cnf-&gt;data可能为NULL */</span><br>cnf-&gt;data = p = ps;   <span class="hljs-comment">/* 头插法插入链表 */</span><br>&#125;<br><br>Option *q = p-&gt;option;<br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != q &amp;&amp; <span class="hljs-number">0</span> != <span class="hljs-built_in">strcmp</span>(q-&gt;key, key))<br>&#123;<br>q = q-&gt;next; <span class="hljs-comment">/* 遍历option,检查key是否已经存在 */</span><br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == q)   <span class="hljs-comment">/* 不存在option,则新建一个 */</span><br>&#123;<br>q = (Option*)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(Option));<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == q)<br>&#123;<br><span class="hljs-built_in">exit</span>(<span class="hljs-number">-1</span>); <span class="hljs-comment">/* 申请内存错误 */</span><br>&#125;<br><span class="hljs-built_in">strcpy</span>(q-&gt;key, key);<br>q-&gt;next = p-&gt;option; <span class="hljs-comment">/*这里p-&gt;option可能为NULL,不过也没关系 */</span><br>p-&gt;option = q; <span class="hljs-comment">/* 头插法插入链表 */</span><br>&#125;<br><span class="hljs-built_in">strcpy</span>(q-&gt;value, value); <span class="hljs-comment">/* 无论如何要把值改了 */</span><br><br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 去掉字符串内所有空白</span><br><span class="hljs-comment">* 且忽略注释部分</span><br><span class="hljs-comment">* 最终得到没有空白的字符串</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">strip_comments</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *string, <span class="hljs-keyword">char</span> comment)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == string || <span class="hljs-string">&#x27;\n&#x27;</span> == *string || <span class="hljs-string">&#x27;\r&#x27;</span> == *string)<br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>; <span class="hljs-comment">/* 第一个字符为回车或换行,表示空行 */</span><br>&#125;<br><br><span class="hljs-keyword">char</span> *p, *q; <span class="hljs-comment">/* 下面去掉字符串中所有空白字符 */</span><br><span class="hljs-keyword">for</span> (p = q = string; *p != <span class="hljs-string">&#x27;\0&#x27;</span> &amp;&amp; *p != comment; p++)<br>&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-number">0</span> == <span class="hljs-built_in">isspace</span>(*p))<br>&#123;<br>*q++ = *p; <span class="hljs-comment">/* 不是空白字符则重写字符串 */</span><br>&#125;<br>&#125;<br>*q = <span class="hljs-string">&#x27;\0&#x27;</span>;<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span> != <span class="hljs-built_in">strlen</span>(string); <span class="hljs-comment">/* 字符串长度不为0,表示数据可用 */</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 传递配置文件路径</span><br><span class="hljs-comment">* 参数有文件路径,注释字符,分隔符</span><br><span class="hljs-comment">* 返回Config结构体</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function">Config *<span class="hljs-title">cnf_read_config</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *filename, <span class="hljs-keyword">char</span> comment, <span class="hljs-keyword">char</span> separator)</span></span><br><span class="hljs-function"></span>&#123;<br>Config *cnf = (Config*)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(Config));<br>cnf-&gt;comment = comment; <span class="hljs-comment">/* 每一行该字符及以后的字符将丢弃 */</span><br>cnf-&gt;separator = separator; <span class="hljs-comment">/* 用来分隔Section 和 数据 */</span><br>cnf-&gt;data = <span class="hljs-literal">NULL</span>; <span class="hljs-comment">/* 初始数据为空 */</span><br><br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">str_empty</span>(filename))<br>&#123;<br><span class="hljs-keyword">return</span> cnf; <span class="hljs-comment">/* 空字符串则直接返回对象 */</span><br>&#125;<br><br><span class="hljs-keyword">char</span> *p, sLine[MAX_VALUE];    <span class="hljs-comment">/* 保存一行数据到字符串 */</span><br><span class="hljs-keyword">char</span> section[MAX_VALUE], key[MAX_VALUE], value[MAX_VALUE]; <span class="hljs-comment">/* 缓存section,key,value */</span><br>FILE *fp = <span class="hljs-built_in">fopen</span>(filename, <span class="hljs-string">&quot;r&quot;</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == fp)<br>&#123;<br><span class="hljs-built_in">PRINT_ERRMSG</span>(<span class="hljs-string">&quot;fopen&quot;</span>);<br><span class="hljs-built_in">exit</span>(errno); <span class="hljs-comment">/* 读文件错误直接按照错误码退出 */</span><br>&#125;<br><br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != <span class="hljs-built_in">fgets</span>(sLine, MAX_VALUE, fp))<br>&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">strip_comments</span>(sLine, cnf-&gt;comment))   <span class="hljs-comment">/* 去掉字符串所有空白,注释也忽略 */</span><br>&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-string">&#x27;[&#x27;</span> == sLine[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-string">&#x27;]&#x27;</span> == sLine[<span class="hljs-built_in">strlen</span>(sLine) - <span class="hljs-number">1</span>])<br>&#123;<br><span class="hljs-built_in">memset</span>(section, <span class="hljs-string">&#x27;\0&#x27;</span>, MAX_VALUE); <span class="hljs-comment">/* 清空section,因为strncpy不追加&#x27;\0&#x27; */</span><br><span class="hljs-built_in">strncpy</span>(section, sLine + <span class="hljs-number">1</span>, <span class="hljs-built_in">strlen</span>(sLine) - <span class="hljs-number">2</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> != (p = <span class="hljs-built_in">strchr</span>(sLine, cnf-&gt;separator)))      <span class="hljs-comment">/* 存在分隔符 */</span><br>&#123;<br><span class="hljs-built_in">memset</span>(key, <span class="hljs-string">&#x27;\0&#x27;</span>, MAX_VALUE); <span class="hljs-comment">/* 清空key,因为strncpy不追加&#x27;\0&#x27; */</span><br><span class="hljs-built_in">strncpy</span>(key, sLine, p - sLine);<br><span class="hljs-built_in">strcpy</span>(value, p + <span class="hljs-number">1</span>); <span class="hljs-comment">/* strcpy会追加&#x27;\0&#x27;,所以妥妥哒 */</span><br><span class="hljs-built_in">cnf_add_option</span>(cnf, section, key, value); <span class="hljs-comment">/* 添加section,key,value */</span><br>&#125; <span class="hljs-comment">/* 如果该行不存在分隔符则忽略这一行 */</span><br>&#125; <span class="hljs-comment">/* end strip_comments */</span><br>&#125; <span class="hljs-comment">/* end while */</span><br><br><span class="hljs-built_in">fclose</span>(fp);<br><span class="hljs-keyword">return</span> cnf;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 获取指定类型的值</span><br><span class="hljs-comment">* 根据不同类型会赋值给对应值</span><br><span class="hljs-comment">* 本方法需要注意,int和double的转换,不满足就是0</span><br><span class="hljs-comment">*     需要自己写代码时判断好</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cnf_get_value</span><span class="hljs-params">(Config *cnf, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *section, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *key)</span></span><br><span class="hljs-function"></span>&#123;<br>Data *p = cnf-&gt;data; <span class="hljs-comment">/* 让变量p循环遍历data,找到对应section */</span><br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != p &amp;&amp; <span class="hljs-number">0</span> != <span class="hljs-built_in">strcmp</span>(p-&gt;section, section))<br>&#123;<br>p = p-&gt;next;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == p)<br>&#123;<br><span class="hljs-built_in">PRINT_ERRMSG</span>(<span class="hljs-string">&quot;section not find!&quot;</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br>Option *q = p-&gt;option;<br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != q &amp;&amp; <span class="hljs-number">0</span> != <span class="hljs-built_in">strcmp</span>(q-&gt;key, key))<br>&#123;<br>q = q-&gt;next; <span class="hljs-comment">/* 遍历option,检查key是否已经存在 */</span><br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == q)<br>&#123;<br><span class="hljs-built_in">PRINT_ERRMSG</span>(<span class="hljs-string">&quot;key not find!&quot;</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-built_in">strcpy</span>(cnf-&gt;re_string, q-&gt;value);       <span class="hljs-comment">/* 将结果字符串赋值 */</span><br>cnf-&gt;re_int = <span class="hljs-built_in">atoi</span>(cnf-&gt;re_string);  <span class="hljs-comment">/* 转换为整形 */</span><br>cnf-&gt;re_bool = <span class="hljs-number">0</span> == <span class="hljs-built_in">strcmp</span>(<span class="hljs-string">&quot;true&quot;</span>, cnf-&gt;re_string); <span class="hljs-comment">/* 转换为bool型 */</span><br>cnf-&gt;re_double = <span class="hljs-built_in">atof</span>(cnf-&gt;re_string);  <span class="hljs-comment">/* 转换为double型 */</span><br><br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 判断section是否存在</span><br><span class="hljs-comment">* 不存在返回空指针</span><br><span class="hljs-comment">* 存在则返回包含那个section的Data指针</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function">Data *<span class="hljs-title">cnf_has_section</span><span class="hljs-params">(Config *cnf, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *section)</span></span><br><span class="hljs-function"></span>&#123;<br>Data *p = cnf-&gt;data; <span class="hljs-comment">/* 让变量p循环遍历data,找到对应section */</span><br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != p &amp;&amp; <span class="hljs-number">0</span> != <span class="hljs-built_in">strcmp</span>(p-&gt;section, section))<br>&#123;<br>p = p-&gt;next;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == p)   <span class="hljs-comment">/* 没找到则不存在 */</span><br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>&#125;<br><br><span class="hljs-keyword">return</span> p;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 判断指定option是否存在</span><br><span class="hljs-comment">* 不存在返回空指针</span><br><span class="hljs-comment">* 存在则返回包含那个section下key的Option指针</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function">Option *<span class="hljs-title">cnf_has_option</span><span class="hljs-params">(Config *cnf, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *section, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *key)</span></span><br><span class="hljs-function"></span>&#123;<br>Data *p = <span class="hljs-built_in">cnf_has_section</span>(cnf, section);<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == p)   <span class="hljs-comment">/* 没找到则不存在 */</span><br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>&#125;<br><br>Option *q = p-&gt;option;<br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != q &amp;&amp; <span class="hljs-number">0</span> != <span class="hljs-built_in">strcmp</span>(q-&gt;key, key))<br>&#123;<br>q = q-&gt;next; <span class="hljs-comment">/* 遍历option,检查key是否已经存在 */</span><br>&#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == q)   <span class="hljs-comment">/* 没找到则不存在 */</span><br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>&#125;<br><br><span class="hljs-keyword">return</span> q;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 将Config对象写入指定文件中</span><br><span class="hljs-comment">* header表示在文件开头加一句注释</span><br><span class="hljs-comment">* 写入成功则返回true</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cnf_write_file</span><span class="hljs-params">(Config *cnf, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *filename, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *header)</span></span><br><span class="hljs-function"></span>&#123;<br>FILE *fp = <span class="hljs-built_in">fopen</span>(filename, <span class="hljs-string">&quot;w&quot;</span>);<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == fp)<br>&#123;<br><span class="hljs-built_in">PRINT_ERRMSG</span>(<span class="hljs-string">&quot;fopen&quot;</span>);<br><span class="hljs-built_in">exit</span>(errno); <span class="hljs-comment">/* 读文件错误直接按照错误码退出 */</span><br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-number">0</span> &lt; <span class="hljs-built_in">strlen</span>(header))   <span class="hljs-comment">/* 文件注释不为空,则写注释到文件 */</span><br>&#123;<br><span class="hljs-built_in">fprintf</span>(fp, <span class="hljs-string">&quot;%c %s\n\n&quot;</span>, cnf-&gt;comment, header);<br>&#125;<br><br>Option *q;<br>Data   *p = cnf-&gt;data;<br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != p)<br>&#123;<br><span class="hljs-built_in">fprintf</span>(fp, <span class="hljs-string">&quot;[%s]\n&quot;</span>, p-&gt;section);<br>q = p-&gt;option;<br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != q)<br>&#123;<br><span class="hljs-built_in">fprintf</span>(fp, <span class="hljs-string">&quot;%s %c %s\n&quot;</span>, q-&gt;key, cnf-&gt;separator, q-&gt;value);<br>q = q-&gt;next;<br>&#125;<br>p = p-&gt;next;<br>&#125;<br><br><span class="hljs-built_in">fclose</span>(fp);<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 删除option</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cnf_remove_option</span><span class="hljs-params">(Config *cnf, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *section, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *key)</span></span><br><span class="hljs-function"></span>&#123;<br>Data *ps = <span class="hljs-built_in">cnf_has_section</span>(cnf, section);<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == ps)   <span class="hljs-comment">/* 没找到则不存在 */</span><br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>&#125;<br><br>Option *p, *q;<br>q = p = ps-&gt;option;<br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != p &amp;&amp; <span class="hljs-number">0</span> != <span class="hljs-built_in">strcmp</span>(p-&gt;key, key))<br>&#123;<br><span class="hljs-keyword">if</span> (p != q)<br>&#123;<br>q = q-&gt;next;    <span class="hljs-comment">/* 始终让q处于p的上一个节点 */</span><br>&#125;<br>p = p-&gt;next;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == p)   <span class="hljs-comment">/* 没找到则不存在 */</span><br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span> (p == q)   <span class="hljs-comment">/* 第一个option就匹配了 */</span><br>&#123;<br>ps-&gt;option = p-&gt;next;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>q-&gt;next = p-&gt;next;<br>&#125;<br><br><span class="hljs-built_in">free</span>(p);<br>q = p = <span class="hljs-literal">NULL</span>; <span class="hljs-comment">// 避免野指针</span><br><br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 删除section</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">cnf_remove_section</span><span class="hljs-params">(Config *cnf, <span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span> *section)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">str_empty</span>(section))<br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br>Data *p, *q;<br>q = p = cnf-&gt;data; <span class="hljs-comment">/* 让变量p循环遍历data,找到对应section */</span><br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != p &amp;&amp; <span class="hljs-number">0</span> != <span class="hljs-built_in">strcmp</span>(p-&gt;section, section))<br>&#123;<br><span class="hljs-keyword">if</span> (p != q)<br>&#123;<br>q = q-&gt;next;    <span class="hljs-comment">/* 始终让q处于p的上一个节点 */</span><br>&#125;<br>p = p-&gt;next;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == p)   <span class="hljs-comment">/* 没有找到section */</span><br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span> (p == q)   <span class="hljs-comment">/* 这里表示第一个section,因此链表头位置改变 */</span><br>&#123;<br>cnf-&gt;data = p-&gt;next;<br>&#125;<br><span class="hljs-keyword">else</span>     <span class="hljs-comment">/* 此时是中间或尾部节点 */</span><br>&#123;<br>q-&gt;next = p-&gt;next;<br>&#125;<br><br>Option *o = p-&gt;option;<br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != o)<br>&#123;<br><span class="hljs-built_in">free</span>(o); <span class="hljs-comment">/* 循环释放所有option */</span><br>o = o-&gt;next;<br>&#125;<br>p-&gt;option = <span class="hljs-literal">NULL</span>; <span class="hljs-comment">// 避免野指针</span><br><span class="hljs-built_in">free</span>(p); <span class="hljs-comment">/* 释放删除的section */</span><br>q = p = <span class="hljs-literal">NULL</span>;  <span class="hljs-comment">// 避免野指针</span><br><br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">* 打印当前Config对象</span><br><span class="hljs-comment">**/</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">print_config</span><span class="hljs-params">(Config *cnf)</span></span><br><span class="hljs-function"></span>&#123;<br>Data *p = cnf-&gt;data; <span class="hljs-comment">// 循环打印结果</span><br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != p)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;[%s]\n&quot;</span>, p-&gt;section);<br><br>Option *q = p-&gt;option;<br><span class="hljs-keyword">while</span> (<span class="hljs-literal">NULL</span> != q)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;  %s %c %s\n&quot;</span>, q-&gt;key, cnf-&gt;separator, q-&gt;value);<br>q = q-&gt;next;<br>&#125;<br>p = p-&gt;next;<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">char</span> preName[<span class="hljs-number">255</span>];<br><span class="hljs-keyword">double</span> scale = <span class="hljs-number">1.0</span>;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">ShootScreen</span><span class="hljs-params">(<span class="hljs-keyword">const</span> <span class="hljs-keyword">char</span>* filename, HWND hWnd)</span></span><br><span class="hljs-function"></span>&#123;<br>HDC hdc = <span class="hljs-built_in">CreateDC</span>(<span class="hljs-string">&quot;DISPLAY&quot;</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-literal">NULL</span>);<br><span class="hljs-keyword">int32_t</span> ScrWidth = <span class="hljs-number">0</span>, ScrHeight = <span class="hljs-number">0</span>;<br>RECT rect = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-keyword">if</span> (hWnd == <span class="hljs-literal">NULL</span>)<br>&#123;<br>ScrWidth = <span class="hljs-built_in">GetDeviceCaps</span>(hdc, HORZRES);<br>ScrHeight = <span class="hljs-built_in">GetDeviceCaps</span>(hdc, VERTRES);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-built_in">GetWindowRect</span>(hWnd, &amp;rect);<br>ScrWidth = (rect.right * scale - rect.left * scale) ;<br>ScrHeight = (rect.bottom * scale - rect.top * scale);<br>&#125;<br>HDC hmdc = <span class="hljs-built_in">CreateCompatibleDC</span>(hdc);<br><br>HBITMAP hBmpScreen = <span class="hljs-built_in">CreateCompatibleBitmap</span>(hdc, ScrWidth, ScrHeight);<br>HBITMAP holdbmp = (HBITMAP)<span class="hljs-built_in">SelectObject</span>(hmdc, hBmpScreen);<br><br>BITMAP bm;<br><span class="hljs-built_in">GetObject</span>(hBmpScreen, <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(bm), &amp;bm);<br><br>BITMAPINFOHEADER bi = &#123; <span class="hljs-number">0</span> &#125;;<br>bi.biSize = <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(BITMAPINFOHEADER);<br>bi.biWidth = bm.bmWidth;<br>bi.biHeight = bm.bmHeight;<br>bi.biPlanes = bm.bmPlanes;<br>bi.biBitCount = bm.bmBitsPixel;<br>bi.biCompression = BI_RGB;<br>bi.biSizeImage = bm.bmHeight * bm.bmWidthBytes;<br><br><span class="hljs-keyword">char</span> *buf = <span class="hljs-keyword">new</span> <span class="hljs-keyword">char</span>[bi.biSizeImage];<br><span class="hljs-built_in">BitBlt</span>(hmdc, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, ScrWidth, ScrHeight, hdc, rect.left * scale, rect.top * scale, SRCCOPY);<br><span class="hljs-built_in">GetDIBits</span>(hmdc, hBmpScreen, <span class="hljs-number">0L</span>, (DWORD)ScrHeight, buf, (LPBITMAPINFO)&amp;bi, (DWORD)DIB_RGB_COLORS);<br><br>BITMAPFILEHEADER bfh = &#123; <span class="hljs-number">0</span> &#125;;<br>bfh.bfType = ((WORD)(<span class="hljs-string">&#x27;M&#x27;</span> &lt;&lt; <span class="hljs-number">8</span>) | <span class="hljs-string">&#x27;B&#x27;</span>);<br>bfh.bfSize = <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(BITMAPFILEHEADER) + <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(BITMAPINFOHEADER) + bi.biSizeImage;<br>bfh.bfOffBits = <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(BITMAPFILEHEADER) + <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(BITMAPINFOHEADER);<br>HANDLE hFile = <span class="hljs-built_in">CreateFile</span>(filename, GENERIC_WRITE, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, OPEN_ALWAYS, FILE_ATTRIBUTE_NORMAL, <span class="hljs-number">0</span>);<br>DWORD dwWrite;<br><span class="hljs-built_in">WriteFile</span>(hFile, &amp;bfh, <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(BITMAPFILEHEADER), &amp;dwWrite, <span class="hljs-literal">NULL</span>);<br><span class="hljs-built_in">WriteFile</span>(hFile, &amp;bi, <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(BITMAPINFOHEADER), &amp;dwWrite, <span class="hljs-literal">NULL</span>);<br><span class="hljs-built_in">WriteFile</span>(hFile, buf, bi.biSizeImage, &amp;dwWrite, <span class="hljs-literal">NULL</span>);<br><span class="hljs-built_in">CloseHandle</span>(hFile);<br>hBmpScreen = (HBITMAP)<span class="hljs-built_in">SelectObject</span>(hmdc, holdbmp);<br>&#125;<br><br>HHOOK g_kb_hook = <span class="hljs-literal">NULL</span>;<br><span class="hljs-keyword">int</span> keyCode = <span class="hljs-number">0</span>;<br><span class="hljs-function">LRESULT CALLBACK <span class="hljs-title">kb_proc</span><span class="hljs-params">(<span class="hljs-keyword">int</span> code, WPARAM w, LPARAM lparam)</span></span><br><span class="hljs-function"></span>&#123;<br>PKBDLLHOOKSTRUCT p = (PKBDLLHOOKSTRUCT)lparam;<br><span class="hljs-keyword">if</span> (w == WM_KEYDOWN)<br>&#123;<br>cout &lt;&lt; <span class="hljs-string">&quot;你按下了键盘码为:&quot;</span> &lt;&lt; p-&gt;vkCode &lt;&lt; <span class="hljs-string">&quot;的键&quot;</span> &lt;&lt; endl;<br><span class="hljs-keyword">if</span> (p-&gt;vkCode == keyCode)<br>&#123;<br><span class="hljs-comment">//POINT pNow = &#123; 0,0 &#125;;</span><br><span class="hljs-comment">//if (GetCursorPos(&amp;pNow))  // 获取鼠标当前位置</span><br><span class="hljs-comment">//&#123;</span><br>HWND hwndPointNow = <span class="hljs-literal">NULL</span>;<br><span class="hljs-comment">//hwndPointNow = WindowFromPoint(pNow);  // 获取鼠标所在窗口的句柄</span><br><span class="hljs-comment">//hwndPointNow = GetActiveWindow();</span><br>hwndPointNow = <span class="hljs-built_in">GetForegroundWindow</span>();<br><br><span class="hljs-comment">//cout &lt;&lt; hwndPointNow &lt;&lt; endl;</span><br><span class="hljs-keyword">if</span> (hwndPointNow)<br>&#123;<br><span class="hljs-comment">//cout &lt;&lt; hwndPointNow &lt;&lt; endl;</span><br><span class="hljs-keyword">time_t</span> timep;<br><span class="hljs-keyword">int</span> t = <span class="hljs-built_in">time</span>(&amp;timep);<br><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> preT = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> cnt = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span> (preT == t) &#123;<br>cnt++;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>cnt = <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">char</span> name[<span class="hljs-number">256</span>] = &#123; <span class="hljs-number">0</span> &#125;;<br><br><span class="hljs-built_in">sprintf_s</span>(name, <span class="hljs-number">256</span>, <span class="hljs-string">&quot;%s/%d%d.bmp&quot;</span>, preName, t, cnt);<br>preT = t;<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;[截图捕获成功,名称为:%s]\n&quot;</span>, name);<br><span class="hljs-built_in">ShootScreen</span>(name, hwndPointNow);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>cout &lt;&lt; <span class="hljs-string">&quot;Error!!&quot;</span> &lt;&lt; endl;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">CallNextHookEx</span>(g_kb_hook, code, w, lparam);<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">char</span> fileName[] = <span class="hljs-string">&quot;config.ini&quot;</span>;<br><br>FILE *fp = <span class="hljs-built_in">fopen</span>(fileName, <span class="hljs-string">&quot;r&quot;</span>);<br>Config *cnf = <span class="hljs-literal">NULL</span>;<br><span class="hljs-keyword">if</span> (fp == <span class="hljs-literal">NULL</span>)<br>&#123;<br>cnf = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Config</span>();<br>cnf-&gt;comment = <span class="hljs-string">&#x27;#&#x27;</span>;<br>cnf-&gt;separator = <span class="hljs-string">&#x27;=&#x27;</span>;<br><br><span class="hljs-built_in">cnf_add_option</span>(cnf, <span class="hljs-string">&quot;config&quot;</span>, <span class="hljs-string">&quot;keyboard&quot;</span>, <span class="hljs-string">&quot;162&quot;</span>); <span class="hljs-comment">// 新增NEW下的new_1的值</span><br><span class="hljs-built_in">cnf_add_option</span>(cnf, <span class="hljs-string">&quot;config&quot;</span>, <span class="hljs-string">&quot;scale&quot;</span>, <span class="hljs-string">&quot;1.25&quot;</span>); <span class="hljs-comment">// 新增NEW下的new_1的值</span><br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>cnf = <span class="hljs-built_in">cnf_read_config</span>(fileName, <span class="hljs-string">&#x27;#&#x27;</span>, <span class="hljs-string">&#x27;=&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">if</span>(fp != <span class="hljs-literal">NULL</span>)<br><span class="hljs-built_in">fclose</span>(fp);<br><span class="hljs-keyword">if</span> (<span class="hljs-literal">NULL</span> == cnf)<br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>; <span class="hljs-comment">/* 创建对象失败 */</span><br>&#125;<br><br><span class="hljs-built_in">cnf_get_value</span>(cnf, <span class="hljs-string">&quot;config&quot;</span>, <span class="hljs-string">&quot;keyboard&quot;</span>); <span class="hljs-comment">// 获取NEW1下的new_2值</span><br>keyCode = cnf-&gt;re_int;<br><span class="hljs-built_in">cnf_get_value</span>(cnf, <span class="hljs-string">&quot;config&quot;</span>, <span class="hljs-string">&quot;scale&quot;</span>); <span class="hljs-comment">// 获取NEW1下的new_2值</span><br>scale = cnf-&gt;re_double;<br><span class="hljs-comment">//printf(&quot;%d %f\n&quot;, key, scale);</span><br><span class="hljs-comment">//printf(&quot;cnf_get_value:%s,%d,%d,%f\n&quot;,cnf-&gt;re_string,cnf-&gt;re_int,cnf-&gt;re_bool,cnf-&gt;re_double);</span><br><br><span class="hljs-comment">//cnf-&gt;separator = &#x27;:&#x27;; // 将分隔符改成 : ,冒号</span><br><span class="hljs-built_in">cnf_write_file</span>(cnf, fileName, <span class="hljs-string">&quot;这是一个配置文件,keyboard表示截屏的快捷键，scale表示WIN10屏幕缩放的比例（右键桌面-&gt;显示设置-&gt;缩放与布局）&quot;</span>); <span class="hljs-comment">// 将对象写入cnf_new.ini文件</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;============================================================================================\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;说明:\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;这是一个方便大量截图的工具，只需要按键盘上的一个键，就可以很轻松的捕获当前活动窗口的截图\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;默认截图按键是Ctrl，键盘代码是162，如果想要更改，请打开软件同目录下的config.ini\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Win10有一个缩放与布局，如果截图与想要的不符，请修改config.ini下面的scale属性，默认是1.25\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;============================================================================================\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;为本次的截图任务起一个名字吧(请不能要含特殊符号):&quot;</span>);<br>cin &gt;&gt; preName;<br><span class="hljs-comment">// 文件夹不存在则创建文件夹</span><br><span class="hljs-keyword">if</span> (_access(preName, <span class="hljs-number">0</span>) == <span class="hljs-number">-1</span>)<br>&#123;<br>_mkdir(preName);<br>&#125;<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;开始截图，每当你按下对应按键的时候，都会产生鼠标下窗口的一张图片\n&quot;</span>);<br><br>HINSTANCE glhInstance = <span class="hljs-literal">NULL</span>;<br>glhInstance = <span class="hljs-built_in">GetModuleHandle</span>(<span class="hljs-literal">NULL</span>);<br>g_kb_hook = <span class="hljs-built_in">SetWindowsHookEx</span>(WH_KEYBOARD_LL, &amp;kb_proc, glhInstance, <span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span> (g_kb_hook == <span class="hljs-literal">NULL</span>)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;SetWindowsHookEx error!&quot;</span>);<br><span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>&#125;<br>MSG msg;<br><span class="hljs-keyword">while</span> (<span class="hljs-built_in">GetMessage</span>(&amp;msg, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>))<br>&#123;<br><span class="hljs-built_in">TranslateMessage</span>(&amp;msg);<br><span class="hljs-built_in">DispatchMessage</span>(&amp;msg);<br>&#125;<br><span class="hljs-built_in">UnhookWindowsHookEx</span>(g_kb_hook);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>C语言</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>git用法总结</title>
    <link href="/post/git-notes/"/>
    <url>/post/git-notes/</url>
    
    <content type="html"><![CDATA[<p>为了防止代码越改越凉，一定要选择一款代码版本控制工具，目前用的人数最多的就是git了，我把使用过程中遇到的问题，和自己常用的命令在此总结一下。</p><span id="more"></span><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>本身git的官方网站就有很详细的教程<a href="https://git-scm.com/book/zh/v2">点击进入</a>，而且还是中文的，所以我建议直接把官方的教程看一遍就可以了，如果是初学者的话，只需要认真的把前两章看完就完全够用了，第三章大概看一下，如果不理解以后慢慢消化。<br><img src="/images/uploads/git%E7%94%A8%E6%B3%95%E6%80%BB%E7%BB%93-20200312223140.png"></p><h2 id="git命令"><a href="#git命令" class="headerlink" title="git命令"></a>git命令</h2><h3 id="配置文件解释"><a href="#配置文件解释" class="headerlink" title="配置文件解释"></a>配置文件解释</h3><p>如果命令是<code>git config</code>说明是修改配置文件用的，后面如果加上了<code>--global</code>说明修改的是全局的配置文件，对所有的本地仓库生效，如果不加，则修改的是当前项目的config文件。</p><ul><li>全局配置文件默认在用户目录下，文件名是<code>.gitconfig</code></li><li>项目配置文件则在项目对应.git目录中</li></ul><h3 id="经常使用的命令"><a href="#经常使用的命令" class="headerlink" title="经常使用的命令"></a>经常使用的命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">git init <span class="hljs-comment"># 把当前目录变为git仓库</span><br>git status <span class="hljs-comment"># 查看当前的状态</span><br>git add .  <span class="hljs-comment"># 添加目录下的所有文件到缓存</span><br>git add a.txt <span class="hljs-comment"># 添加a.txt到缓存</span><br>git commit -m <span class="hljs-string">&quot;first commit&quot;</span> <span class="hljs-comment"># 进行一次提交，提交到本地仓库</span><br>git push -u username master  <span class="hljs-comment"># 将本地仓库提交到远程</span><br>git push -f orgin master  <span class="hljs-comment"># 将本地仓库强制提交到远端</span><br>git <span class="hljs-built_in">clone</span> --recursive https://....git <span class="hljs-comment"># 克隆带子仓库的项目</span><br></code></pre></td></tr></table></figure><h3 id="不是很常用的命令"><a href="#不是很常用的命令" class="headerlink" title="不是很常用的命令"></a>不是很常用的命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config core.ignorecase <span class="hljs-literal">false</span> <span class="hljs-comment"># 设置git目录区分大小写</span><br>git config --global credential.helper store <span class="hljs-comment"># 设置git记住密码</span><br>git config credential.helper <span class="hljs-string">&#x27;cache --timeout=3600&#x27;</span> <span class="hljs-comment"># 设置自动保存密码过期时间</span><br>git diff <span class="hljs-comment"># 比较为加入缓存区的文件和缓存区的区别</span><br>git diff --cached <span class="hljs-comment"># 比较缓存区的文件和提交后的文件的区别</span><br>git <span class="hljs-built_in">log</span> <span class="hljs-comment"># 显示提交日志</span><br>git <span class="hljs-built_in">log</span> --pretty=oneline <span class="hljs-comment"># 用一行来显示提交日志</span><br>git <span class="hljs-built_in">log</span> -2 -p <span class="hljs-comment"># 显示最后两次提交 和详细信息</span><br>git pull --rebase origin master <span class="hljs-comment"># 推送之前，进行合并 解决远程有文件 而本地没有时的报错</span><br>git rm -r --cached . <span class="hljs-comment"># 清空本地缓存，然后再重新添加文件，就可以去除不必要的垃圾文件了</span><br>git branch new <span class="hljs-comment"># 新开一个分支，</span><br>git checkout master <span class="hljs-comment"># 跳到master这个分支；</span><br></code></pre></td></tr></table></figure><h2 id="提高git-clone的速度"><a href="#提高git-clone的速度" class="headerlink" title="提高git clone的速度"></a>提高git clone的速度</h2><h3 id="使用ssh地址"><a href="#使用ssh地址" class="headerlink" title="使用ssh地址"></a>使用ssh地址</h3><p>克隆项目的时候选择ssh的地址，https和ssh的速度差距超级大，优先推荐</p><h3 id="添加代理"><a href="#添加代理" class="headerlink" title="添加代理"></a>添加代理</h3><p>因为git clone项目的话，一般克隆的是GitHub上的项目，然而GitHub的服务器在国外，所以速度你懂的。</p><p>如果受不了这个速度的话，可以自己搭建或者找一个代理，然后用代理来克隆项目，这个时候速度就飞起了。</p><p>下面的代码只有代理能用的时候才可以使用，要不就无法上网了。如果不需要使用了，或者不小心输入错误了，可以打开全局配置文件，把里面的这几行代码删除即可。</p><p>注意看代理后的端口是啥，我这里是1080</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global http.https://github.com.proxy socks5://127.0.0.1:1080<br>git config --global https.https://github.com.proxy socks5://127.0.0.1:1080<br></code></pre></td></tr></table></figure><h2 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h2><h3 id="Git修改区分目录大小写"><a href="#Git修改区分目录大小写" class="headerlink" title="Git修改区分目录大小写"></a>Git修改区分目录大小写</h3><p>通过代码规范，修改了包名为全小写（修改了文件夹目录），但发现push后，git服务器的文件夹目录还是为大写<br><strong>解决方法：</strong><br>git默认是不区分大小写的，意思是你修改一个文件名/文件夹的时候，git status 是不会提示你有修改的<br>可以通过<code>git config --get core.ignorecase</code>查看默认配置<br>通过<code>git config core.ignorecase false</code>设置为区分大小写<br>然后<code>git status</code>就可以看到变动<br>然后push到远程服务器</p><h3 id="Git-工具-打包"><a href="#Git-工具-打包" class="headerlink" title="Git 工具 - 打包"></a>Git 工具 - 打包</h3><p>这些情况下 <code>git bundle</code> 就会很有用。 bundle 命令会将 <code>git push</code> 命令所传输的所有内容打包成一个二进制文件， 你可以将这个文件通过邮件或者U盘传给其他人，然后解压到其他的仓库中。</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">git <span class="hljs-keyword">bundle </span>create repo.<span class="hljs-keyword">bundle </span>HEAD main <span class="hljs-comment"># 创建一个名字为repo.bundle的包</span><br>git <span class="hljs-keyword">clone </span>repo.<span class="hljs-keyword">bundle </span>repo <span class="hljs-comment"># 通过repo.bundle创建repo项目</span><br></code></pre></td></tr></table></figure><h3 id="Git-笔记：将两个提交合并为一个"><a href="#Git-笔记：将两个提交合并为一个" class="headerlink" title="Git 笔记：将两个提交合并为一个"></a>Git 笔记：将两个提交合并为一个</h3><ol><li><p>命令行输入：<code>git rebase -i HEAD~2 </code>（i的意思是：interactive，HEAD~2为在历史的前两个提交）</p></li><li><p>将第二行的pick改成s, 也就是squash(挤压合并)，作用是：使用提交，将此提交与之前的提交合并。   然后保存文件退出vim。</p></li><li><p>提交你的代码，git commit -a, vim出现如下所以文件信息：注意看：第4行和第8行分别对应这你第一次和第二次的提交描述信息，这时你就要将这两条描述信息合并为一条。</p></li><li><p>将之前的两条提交描述信息，修改合并为一条，然后保存退出vim，如下所示：</p></li><li><p>保存退出后，push代码：<code>git push origin master -f</code> (注意：因为时rebase操作，所以要加-f, 强制push), 推送完成， 如下所以，完成将两个提交合并为一个。</p></li></ol><p><a href="https://blog.csdn.net/jerechen/article/details/89556281">https://blog.csdn.net/jerechen/article/details/89556281</a></p><h3 id="给git瘦身"><a href="#给git瘦身" class="headerlink" title="给git瘦身"></a>给git瘦身</h3><p><a href="https://linux.cn/article-8556-1.html">https://linux.cn/article-8556-1.html</a></p><h3 id="push时报错"><a href="#push时报错" class="headerlink" title="push时报错"></a>push时报错</h3><blockquote><p>git提交本地代码到远程仓库之前没有pull导致push失败解决办法</p></blockquote><p>git push错误failed to push some refs to的解决<br>当我们在github版本库中发现一个问题后，你在github上对它进行了在线的修改；或者你直接在github上的某个库中添加readme文件或者其他什么文件，但是没有对本地库进行同步。这个时候当你再次有commit想要从本地库提交到远程的github库中时就会出现push失败的问题。</p><p>如下图所示<br>我在github库中对某个文件进行了在线的编辑，并且没有同步到本地库，之后我在本地库添加了文件test.txt，并想提交到github，出现以下错误：error：failed to push some refs to。<br><img src="/images/uploads/git%E7%94%A8%E6%B3%95%E6%80%BB%E7%BB%93-20191119155631.png"><br>解决方案<br>这个问题是因为远程库与本地库不一致造成的，那么我们把远程库同步到本地库就可以了。<br>使用指令<br><code>git pull --rebase origin master</code><br>这条指令的意思是把远程库中的更新合并到本地库中，–rebase的作用是取消掉本地库中刚刚的commit，并把他们接到更新后的版本库之中。<br>具体细节可以<a href="https://blog.csdn.net/qq_25135655/article/details/81781185">点击查看</a></p><h3 id="清理垃圾"><a href="#清理垃圾" class="headerlink" title="清理垃圾"></a>清理垃圾</h3><blockquote><p>参考GitHub官网: <a href="https://help.github.com/articles/removing-sensitive-data-from-a-repository">https://help.github.com/articles/removing-sensitive-data-from-a-repository</a></p></blockquote><p>例如, 我的jekyll博客代码库提交了大量mp3文件, 使用下面命令清除后代码库由233M缩小为1.3M, 提交到GitHub部署博客轻快飞速</p><h4 id="清除垃圾文件-大量无用的mp3文件"><a href="#清除垃圾文件-大量无用的mp3文件" class="headerlink" title="清除垃圾文件(大量无用的mp3文件)"></a>清除垃圾文件(大量无用的mp3文件)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git filter-branch --force --index-filter <span class="hljs-string">&#x27;git rm --cached --ignore-unmatch *.mp3&#x27;</span> --prune-empty --tag-name-filter cat -- --all<br></code></pre></td></tr></table></figure><h4 id="提交到远程仓库-如GitHub-我再次从git-clone-GitHub代码库会变小为1-3M"><a href="#提交到远程仓库-如GitHub-我再次从git-clone-GitHub代码库会变小为1-3M" class="headerlink" title="提交到远程仓库(如GitHub, 我再次从git clone GitHub代码库会变小为1.3M)"></a>提交到远程仓库(如GitHub, 我再次从git clone GitHub代码库会变小为1.3M)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push origin --force --all<br></code></pre></td></tr></table></figure><h4 id="必须回收垃圾-本地仓库才变小"><a href="#必须回收垃圾-本地仓库才变小" class="headerlink" title="必须回收垃圾,本地仓库才变小"></a>必须回收垃圾,本地仓库才变小</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">git for-each-ref --format=<span class="hljs-string">&#x27;delete %(refname)&#x27;</span> refs/original | git update-ref --stdin<br>git reflog expire --expire=now --all<br>git gc --prune=now<br><br>rm -rf .git/refs/original<br>git reflog expire --expire=now --all<br>git gc --prune=now<br>git gc --aggressive --prune=now<br></code></pre></td></tr></table></figure><h2 id="Git仓库下子模块仓库简单操作"><a href="#Git仓库下子模块仓库简单操作" class="headerlink" title="Git仓库下子模块仓库简单操作"></a>Git仓库下子模块仓库简单操作</h2><h3 id="新建一个仓库"><a href="#新建一个仓库" class="headerlink" title="新建一个仓库"></a>新建一个仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">//新建文件夹demo1<br>mkdir demo1<br>//进入将要创建的仓库<br><span class="hljs-built_in">cd</span> demo1<br>//初始化仓库<br>git init<br></code></pre></td></tr></table></figure><h3 id="添加子仓库"><a href="#添加子仓库" class="headerlink" title="添加子仓库"></a>添加子仓库</h3><p><code>git submodule add url</code></p><p><em>把url替换成你想添加的子仓库；执行成功后，可以在demo1文件夹下看到.gitsubmodule文件</em></p><h3 id="推送到远程仓库"><a href="#推送到远程仓库" class="headerlink" title="推送到远程仓库"></a>推送到远程仓库</h3><p><em>在推送到远程仓库前，我们还要给本地仓库添加一个远程仓库地址,可以到git.oschina 或github上创建</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">//添加远程仓库地址<br>git remote add origin https://....git //origin 是该远程仓库在本地的别名，可自定义。<br>//添加所有文件到缓存<br>git add .<br>//提交到本地仓库<br>git commit -m <span class="hljs-string">&quot;first commit&quot;</span><br>//推送到远程仓库<br>git push origin master //master是分支名称`<br></code></pre></td></tr></table></figure><h2 id="子仓库的常用操作"><a href="#子仓库的常用操作" class="headerlink" title="子仓库的常用操作"></a>子仓库的常用操作</h2><h3 id="克隆带子仓库的仓库"><a href="#克隆带子仓库的仓库" class="headerlink" title="克隆带子仓库的仓库"></a>克隆带子仓库的仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">//回到demo1的上级目录<br><span class="hljs-built_in">cd</span> ..<br>//克隆仓库到demo2<br>git <span class="hljs-built_in">clone</span> https://....git demo2  //demo2为指定的文件夹，也可以不指定。<br></code></pre></td></tr></table></figure><p><em>克隆主仓库后，子仓库是没有代码的，所以继续</em></p><h3 id="初始化子仓库"><a href="#初始化子仓库" class="headerlink" title="初始化子仓库"></a>初始化子仓库</h3><p><code>git submodule init</code> </p><p><em>有子仓库的文件夹了，但是没有代码</em></p><h3 id="克隆子仓库代码。"><a href="#克隆子仓库代码。" class="headerlink" title="克隆子仓库代码。"></a>克隆子仓库代码。</h3><p><code>git submodule update</code> </p><p><em>此时可以看到在下载子仓库代码了</em></p><h2 id="参考笔记"><a href="#参考笔记" class="headerlink" title="参考笔记"></a>参考笔记</h2><p>很不错的一个笔记<br><a href="https://www.jianshu.com/p/86c44bef4ea1">https://www.jianshu.com/p/86c44bef4ea1</a></p><div class="note note-success">            <p>相关推荐：</p><ul><li><a href="/post/note-vue-element/">Vue后台管理系统项目实战/vue+element-ui/vue经典全套系统案例讲解</a></li><li><a href="/post/df99894b/">尚硅谷Vue2.0+Vue3.0全套教程丨vuejs从入门到精通</a></li><li><a href="/post/2ff98e51/">Docker最新超详细版教程通俗易懂</a></li><li><a href="/post/switch-node-version/">优雅的切换nodejs版本</a></li><li><a href="/post/vmware-linux/">如何在VMware中安装Linux</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
    </categories>
    
    
    <tags>
      
      <tag>首页</tag>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>简单C语言例题</title>
    <link href="/post/212887e4/"/>
    <url>/post/212887e4/</url>
    
    <content type="html"><![CDATA[<p>一些C语言入门的题目，有代码</p><span id="more"></span><ol><li>输入一个整数，输出其符号（若&gt;= 0, 输出 1；若&lt;0，输出-1）</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-comment">// 输入一个整数，输出其符号（若&gt;= 0, 输出 1；若&lt;0，输出-1）</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> a;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a);<br>    <span class="hljs-keyword">if</span>(a &gt;= <span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;-1&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><ol start="2"><li>输入3个数，输出其中最小值</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-comment">// 输入3个数，输出其中最小值</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> a, b, c;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);<br>    <span class="hljs-keyword">if</span>(a &lt; b)<br>    &#123;<br>        b = a;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(b &lt; c)<br>    &#123;<br>        c = b;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, c);<br>&#125;<br><br></code></pre></td></tr></table></figure><ol start="3"><li>输入一个整数，是否既是5又是7的整倍数，若是，则输出Yes，否则输出No。</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-comment">// 输入一个整数，是否既是5又是7的整倍数，若是，则输出Yes，否则输出No。</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> a;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;a);<br>    <span class="hljs-keyword">if</span>(a % <span class="hljs-number">5</span> == <span class="hljs-number">0</span> &amp;&amp; a % <span class="hljs-number">7</span> == <span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Yes\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;No\n&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><ol start="4"><li>有一分段函数$y=<br>\begin{cases}<br>x&amp; (-5&lt;x&lt;0) \\<br>x-1&amp; (x=0) \\<br>x+1&amp; (0&lt;x&lt;10)<br>\end{cases}$ 编写程序，要求输入x的值后，输出y的值。</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> x;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;x);<br>    <span class="hljs-keyword">if</span>(x &gt; <span class="hljs-number">-5</span> &amp;&amp; x &lt; <span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, x);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x == <span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, x - <span class="hljs-number">1</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(x &gt; <span class="hljs-number">0</span> &amp;&amp; x &lt; <span class="hljs-number">10</span>)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, x + <span class="hljs-number">1</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>C语言</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>C语言可变参数</title>
    <link href="/post/7620d597/"/>
    <url>/post/7620d597/</url>
    
    <content type="html"><![CDATA[<p>一般写的C语言函数，传入的参数都是固定的，但是有时候再开发的过程中不能确定参数的准确个数，这个时候就需要可变参数了</p><span id="more"></span><p>第一个简单的例子，演示了C语言传入可变参数</p><figure class="highlight cpp"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">test</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num, ...)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">//传入的参数的地址是连续的，所以可以通过地址获取值</span><br>    cout &lt;&lt; <span class="hljs-string">&quot;传入了&quot;</span> &lt;&lt; num &lt;&lt; <span class="hljs-string">&quot;个参数:&quot;</span> &lt;&lt; endl;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= num; i++)<br>    &#123;<br>        cout &lt;&lt; *(&amp;num + i) &lt;&lt; endl;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">test</span>(<span class="hljs-number">5</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>C语言提供了一个宏，能更好的处理传入的参数</p><p><strong>stdarg宏</strong>：可变参数列表是通过宏来实现的，这些宏定义与<strong>stdarg.h</strong>头文件，它是标准库的一部分。</p><p>这个头文件包含了一个申明类型 <strong>va_list</strong> 和三个宏：<strong>va_start</strong>，<strong>va_arg</strong>，<strong>va_end</strong>。</p><p>我们可以申明一个类型为<strong>va_list</strong>的变量，与这几个宏配合使用，访问参数的值。</p><p>第二个例子，用C语言的可变参数来写一个求n个数最大值的函数max</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdarg.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-comment">//求n个数的最大值，n是整数的个数</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">max</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n, ...)</span></span><br><span class="hljs-function"></span>&#123;<br>    va_list args; <span class="hljs-comment">//定义一个va_list指针来访问参数列表</span><br>    <span class="hljs-built_in">va_start</span>(args, n);<span class="hljs-comment">// 初始化args让它指向第一个变参</span><br>    <span class="hljs-keyword">int</span> maximum = <span class="hljs-number">-0x7FFFFFFF</span>;<br>    <span class="hljs-keyword">int</span> tmp;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>    &#123;<br>        tmp = <span class="hljs-built_in">va_arg</span>(args, <span class="hljs-keyword">int</span>); <span class="hljs-comment">// 获取一个int型参数,并且args指向下一个参数。这里取的是整数所以是这样,但是如果是比较字符串则使用的char*;</span><br>        <span class="hljs-keyword">if</span>(maximum &lt; tmp)<br>        &#123;<br>            maximum = tmp;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">va_end</span>(args); <span class="hljs-comment">//关闭args</span><br>    <span class="hljs-keyword">return</span> maximum;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    cout &lt;&lt; <span class="hljs-built_in">max</span>(<span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">123</span>) &lt;&lt; endl;<br>    cout &lt;&lt; <span class="hljs-built_in">max</span>(<span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">124</span>, <span class="hljs-number">32</span>) &lt;&lt; endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>第三个例子，自己实现一下printf这个函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;assert.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">my_printf</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *str,...)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">int</span> x = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">char</span> *pstr = <span class="hljs-literal">NULL</span>;<br>    va_list arg;     <span class="hljs-comment">//定义va_list类型变量arg</span><br>    <span class="hljs-built_in">va_start</span>(arg,str); <span class="hljs-comment">//arg初始化，将arg指向第一个可选参数</span><br>    <span class="hljs-built_in">assert</span>(str);     <span class="hljs-comment">//保证str不为空</span><br>    <span class="hljs-keyword">while</span> (*str)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(*str == <span class="hljs-string">&#x27;%&#x27;</span>)<br>        &#123;<br>            str++;<br>            <span class="hljs-built_in"><span class="hljs-keyword">switch</span></span>(*str)<br>            &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;s&#x27;</span>:<br>                pstr = <span class="hljs-built_in">va_arg</span>(arg,<span class="hljs-keyword">char</span>*);  <span class="hljs-comment">//va_arg的第二个参数是你要返回的参数的类型，此处是char*</span><br>                <span class="hljs-keyword">while</span>(*pstr)<br>                &#123;<br>                    <span class="hljs-built_in">putchar</span>(*pstr);<br>                    pstr++;<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;c&#x27;</span>:<br>                x = <span class="hljs-built_in">va_arg</span>(arg,<span class="hljs-keyword">int</span>); <span class="hljs-comment">//返回参数列表中的当前参数,并使arg指向参数列表中的下一个参数</span><br>                <span class="hljs-built_in">putchar</span>(x);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;d&#x27;</span>:<br>                x = <span class="hljs-built_in">va_arg</span>(arg, <span class="hljs-keyword">int</span>);<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>, x);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">default</span>:<br>                <span class="hljs-built_in">putchar</span>(*(str<span class="hljs-number">-1</span>));<br>                <span class="hljs-built_in">putchar</span>(*str);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            str++;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-built_in">putchar</span>(*str);<br>            str++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">va_end</span>(arg);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">my_printf</span>(<span class="hljs-string">&quot;%d %c %s\n&quot;</span>,<span class="hljs-number">123</span>,<span class="hljs-string">&#x27;t&#x27;</span>, <span class="hljs-string">&quot;hello&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>C语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C语言知识点</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windowsAPI函数</title>
    <link href="/post/94e00d98/"/>
    <url>/post/94e00d98/</url>
    
    <content type="html"><![CDATA[<p>学了很久C语言，每次运行程序看到的都是小黑框，是否感到无聊呢？</p><p>当你学会下面的函数后，你就可以让小黑框随意的改变颜色。</p><span id="more"></span><h3 id="必要的一些说明"><a href="#必要的一些说明" class="headerlink" title="必要的一些说明"></a>必要的一些说明</h3><p>肯定需要<strong>windows.h</strong>头文件</p><p>HANDLE 是windows句柄，一个windows部件对应的id</p><p>COORD是一个坐标的结构体，里面有x和y</p><h3 id="gotoxy"><a href="#gotoxy" class="headerlink" title="gotoxy"></a>gotoxy</h3><figure class="highlight cpp"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">gotoxy</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br>    COORD pos = &#123;x, y&#125;;<br>    HANDLE hOut = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<span class="hljs-comment">// 获取标准输出设备句柄</span><br>    <span class="hljs-built_in">SetConsoleCursorPosition</span>(hOut, pos);<span class="hljs-comment">//两个参数分别是指定哪个窗体，具体位置</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="隐藏控制台光标"><a href="#隐藏控制台光标" class="headerlink" title="隐藏控制台光标"></a>隐藏控制台光标</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">hideCursor</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>HANDLE handle = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<br>CONSOLE_CURSOR_INFO CursorInfo;<br><span class="hljs-built_in">GetConsoleCursorInfo</span>(handle, &amp;CursorInfo);<span class="hljs-comment">//获取控制台光标信息</span><br>CursorInfo.bVisible = <span class="hljs-literal">false</span>; <span class="hljs-comment">//隐藏控制台光标</span><br><span class="hljs-built_in">SetConsoleCursorInfo</span>(handle, &amp;CursorInfo);<span class="hljs-comment">//设置控制台光标状态</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="显示控制台光标"><a href="#显示控制台光标" class="headerlink" title="显示控制台光标"></a>显示控制台光标</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">showCursor</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>HANDLE handle = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<br>CONSOLE_CURSOR_INFO CursorInfo;<br><span class="hljs-built_in">GetConsoleCursorInfo</span>(handle, &amp;CursorInfo);<span class="hljs-comment">//获取控制台光标信息</span><br>CursorInfo.bVisible = <span class="hljs-literal">true</span>; <span class="hljs-comment">//隐藏控制台光标</span><br><span class="hljs-built_in">SetConsoleCursorInfo</span>(handle, &amp;CursorInfo);<span class="hljs-comment">//设置控制台光标状态</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="设置窗口标题"><a href="#设置窗口标题" class="headerlink" title="设置窗口标题"></a>设置窗口标题</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setTitle</span><span class="hljs-params">(<span class="hljs-keyword">char</span> *title)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">SetConsoleTitle</span>(title);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="获取窗口标题"><a href="#获取窗口标题" class="headerlink" title="获取窗口标题"></a>获取窗口标题</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">char</span>* <span class="hljs-title">getTitle</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">char</span> strTitle[<span class="hljs-number">255</span>];<br><span class="hljs-built_in">GetConsoleTitle</span>(strTitle, <span class="hljs-number">255</span>); <span class="hljs-comment">// 获取窗口标题</span><br><span class="hljs-keyword">return</span> strTitle;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="获取控制台窗口大小"><a href="#获取控制台窗口大小" class="headerlink" title="获取控制台窗口大小"></a>获取控制台窗口大小</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function">COORD <span class="hljs-title">getScreenSize</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>HANDLE hOut = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<br>CONSOLE_SCREEN_BUFFER_INFO bInfo;<br><span class="hljs-built_in">GetConsoleScreenBufferInfo</span>(hOut, &amp;bInfo);<br><span class="hljs-keyword">return</span> bInfo.dwSize;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="设置控制台窗口大小"><a href="#设置控制台窗口大小" class="headerlink" title="设置控制台窗口大小"></a>设置控制台窗口大小</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setScreenSize</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br>HANDLE hOut = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<br>COORD size = &#123;x, y&#125;;<br><span class="hljs-built_in">SetConsoleScreenBufferSize</span>(hOut, size); <span class="hljs-comment">// 重新设置缓冲区大小</span><br>SMALL_RECT rc = &#123;<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, x - <span class="hljs-number">1</span>, y - <span class="hljs-number">1</span>&#125;; <span class="hljs-comment">// 重置窗口位置和大小</span><br><span class="hljs-built_in">SetConsoleWindowInfo</span>(hOut, <span class="hljs-literal">true</span>, &amp;rc);<br><span class="hljs-built_in">SetConsoleScreenBufferSize</span>(hOut, size); <span class="hljs-comment">// 重新设置缓冲区大小</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="禁止改变窗口大小"><a href="#禁止改变窗口大小" class="headerlink" title="禁止改变窗口大小"></a>禁止改变窗口大小</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">forbidChengeScreenSize</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">char</span> strTitle[<span class="hljs-number">255</span>];<br><span class="hljs-built_in">GetConsoleTitle</span>(strTitle, <span class="hljs-number">255</span>);<br>HWND hWnd = <span class="hljs-built_in">FindWindow</span>(<span class="hljs-literal">NULL</span>, strTitle); <span class="hljs-comment">//获得cmd窗口句柄</span><br>RECT rc;<br><span class="hljs-built_in">GetWindowRect</span>(hWnd, &amp;rc); <span class="hljs-comment">//获得cmd窗口对应矩形</span><br><span class="hljs-comment">//改变cmd窗口风格</span><br><span class="hljs-built_in">SetWindowLongPtr</span>(hWnd, GWL_STYLE, <span class="hljs-built_in">GetWindowLong</span>(hWnd, GWL_STYLE) &amp; ~WS_THICKFRAME &amp; ~WS_MAXIMIZEBOX &amp; ~WS_MINIMIZEBOX);<br><span class="hljs-comment">//因为风格涉及到边框改变，必须调用SetWindowPos，否则无效果</span><br><span class="hljs-built_in">SetWindowPos</span>(hWnd, <span class="hljs-literal">NULL</span>, rc.left, rc.top, rc.right - rc.left, rc.bottom - rc.top, <span class="hljs-literal">NULL</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="一些例子"><a href="#一些例子" class="headerlink" title="一些例子"></a>一些例子</h1><h3 id="带颜色的格式化输出"><a href="#带颜色的格式化输出" class="headerlink" title="带颜色的格式化输出"></a>带颜色的格式化输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;assert.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">gotoxy</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br>    COORD pos = &#123;x, y&#125;;<br>    HANDLE hOut = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<span class="hljs-comment">// 获取标准输出设备句柄</span><br>    <span class="hljs-built_in">SetConsoleCursorPosition</span>(hOut, pos);<span class="hljs-comment">//两个参数分别是指定哪个窗体，具体位置</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">colorPrintf</span><span class="hljs-params">(<span class="hljs-keyword">int</span> color, <span class="hljs-keyword">char</span> *str,...)</span></span><br><span class="hljs-function"></span>&#123;<br>    HANDLE hOut = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<br>    <span class="hljs-built_in">SetConsoleTextAttribute</span>(hOut, color);<br>    <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">int</span> x = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">char</span> *pstr = <span class="hljs-literal">NULL</span>;<br>    va_list arg;     <span class="hljs-comment">//定义va_list类型变量arg</span><br>    <span class="hljs-built_in">va_start</span>(arg,str); <span class="hljs-comment">//arg初始化，将arg指向第一个可选参数</span><br>    <span class="hljs-built_in">assert</span>(str);     <span class="hljs-comment">//保证str不为空</span><br>    <span class="hljs-keyword">while</span> (*str)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(*str == <span class="hljs-string">&#x27;%&#x27;</span>)<br>        &#123;<br>            str++;<br>            <span class="hljs-built_in"><span class="hljs-keyword">switch</span></span>(*str)<br>            &#123;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;s&#x27;</span>:<br>                pstr = <span class="hljs-built_in">va_arg</span>(arg,<span class="hljs-keyword">char</span>*);  <span class="hljs-comment">//va_arg的第二个参数是你要返回的参数的类型，此处是char*</span><br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>, pstr);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;c&#x27;</span>:<br>                x = <span class="hljs-built_in">va_arg</span>(arg,<span class="hljs-keyword">int</span>); <span class="hljs-comment">//返回参数列表中的当前参数,并使arg指向参数列表中的下一个参数</span><br>                <span class="hljs-built_in">putchar</span>(x);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;d&#x27;</span>:<br>                x = <span class="hljs-built_in">va_arg</span>(arg, <span class="hljs-keyword">int</span>);<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>, x);<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">default</span>:<br>                <span class="hljs-built_in">putchar</span>(*(str<span class="hljs-number">-1</span>));<br>                <span class="hljs-built_in">putchar</span>(*str);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            str++;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-built_in">putchar</span>(*str);<br>            str++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">va_end</span>(arg);<br>    <span class="hljs-built_in">SetConsoleTextAttribute</span>(hOut, FOREGROUND_BLUE | FOREGROUND_RED | FOREGROUND_GREEN);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt; <span class="hljs-number">16</span>; i++)<br>    &#123;<br>        <span class="hljs-built_in">gotoxy</span>(i * <span class="hljs-number">2</span>, i);<br>        <span class="hljs-built_in">colorPrintf</span>(i, <span class="hljs-string">&quot;□这是第%d句带颜色的字符串■\n&quot;</span>, i);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>在输出字符的时候控制台会</p>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>C语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C语言知识点</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>纯C语言打字游戏</title>
    <link href="/post/c-typing-game/"/>
    <url>/post/c-typing-game/</url>
    
    <content type="html"><![CDATA[<p>纯C语言打字游戏</p><p>最基础的是一个单线程的版本，刚学会C语言是可以看懂的，也可以自己写出来，但是游戏体验不好。</p><p>后续增加的多线程版本，优化了游戏体验，也会添加更多的游戏模式，让这个小游戏变得不那么枯燥。</p><span id="more"></span><h2 id="单线程版本的代码"><a href="#单线程版本的代码" class="headerlink" title="单线程版本的代码"></a>单线程版本的代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></div></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">/*************************************</span><br><span class="hljs-comment">    游戏名称:   打字游戏</span><br><span class="hljs-comment">    单线程，玩的过程中会卡顿，可以继续学习多线程版本 https://www.glwsq.cn/post/c-typing-game</span><br><span class="hljs-comment">    但是已经是一个完整的游戏了，适合初学者入门</span><br><span class="hljs-comment">*************************************/</span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;time.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;conio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ctype.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> LETTER_COUNT 30 <span class="hljs-comment">//总共多少个单词下落</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> SPEED 500       <span class="hljs-comment">//单词下落的速度</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BULLET_SPEED 30 <span class="hljs-comment">//子弹射击的速度</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> BULLET_TYPE <span class="hljs-meta-string">&#x27;A&#x27;</span> <span class="hljs-comment">// 子弹其实就是一个字母,子弹的样式可以自行修改 如果设置为了 L，则会和字母一样。ascii 12会好很多，但是很多系统会显示错误，</span></span><br><br><span class="hljs-comment">/***************初始化***************/</span><br><span class="hljs-comment">//设计字母、子弹</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">tag_letter</span></span><br><span class="hljs-class">&#123;</span><br>    <span class="hljs-comment">//位置</span><br>    <span class="hljs-keyword">int</span> x, y;<br>    <span class="hljs-comment">//字母</span><br>    <span class="hljs-keyword">char</span> ch;<br>    <span class="hljs-comment">//是否显示 0-不显示，1-显示</span><br>    <span class="hljs-keyword">int</span> isDisplay;<br>    <span class="hljs-comment">//生命 0-死亡，1-生存</span><br>    <span class="hljs-keyword">int</span> life;<br>&#125;Letter;<br><br>Letter letters[LETTER_COUNT];<br>Letter bullet;<br><span class="hljs-comment">//游戏字母初始化</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">initLetters</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">srand</span>((<span class="hljs-keyword">unsigned</span>)<span class="hljs-built_in">time</span>(<span class="hljs-literal">NULL</span>));<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; LETTER_COUNT; i++)<br>    &#123;<br>        letters[i].ch = <span class="hljs-built_in">rand</span>() % <span class="hljs-number">26</span> + <span class="hljs-string">&#x27;A&#x27;</span>;<br>        letters[i].x = <span class="hljs-built_in">rand</span>() % <span class="hljs-number">80</span>;<br>        letters[i].y = - i * <span class="hljs-number">2</span>; <span class="hljs-comment">// 这里是负值，生成的字母会全部在屏幕外面，当控制字母下落的时候所有字母会一格一格的掉下来</span><br>        letters[i].life = <span class="hljs-number">1</span>;<br>    &#125;<br>&#125;<br><span class="hljs-comment">//子弹初始化</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">initBullet</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span></span><br><span class="hljs-function"></span>&#123;<br>    bullet.ch =BULLET_TYPE; <span class="hljs-comment">// 子弹其实就是一个字母，子弹的样式可以自行修改</span><br>    bullet.x = x;<br>    bullet.y = <span class="hljs-number">25</span>;<br>    bullet.life = <span class="hljs-number">1</span>;<br>&#125;<br><br><span class="hljs-comment">/***************功能函数***************/</span><br><span class="hljs-comment">//定位到屏幕的某个位置</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">gotoxy</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br>    HANDLE handle = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<br>    COORD coord;<br>    coord.X = x;<br>    coord.Y = y;<br>    <span class="hljs-built_in">SetConsoleCursorPosition</span>(handle, coord);<br>&#125;<br><br><span class="hljs-comment">//绘制字母</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">drawLetter</span><span class="hljs-params">(<span class="hljs-keyword">char</span> ch, <span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">gotoxy</span>(x, y);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, ch);<br>&#125;<br><br><span class="hljs-comment">//用来判断所有字母是否应该显示</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">judgeLetterDisplay</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; LETTER_COUNT; i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(letters[i].life == <span class="hljs-number">0</span>) <span class="hljs-comment">// 字母是否被击中</span><br>        &#123;<br>            letters[i].isDisplay = <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-keyword">if</span>(letters[i].y &lt; <span class="hljs-number">0</span> || letters[i].y &gt; <span class="hljs-number">24</span>) <span class="hljs-comment">// 在屏幕外面</span><br>            &#123;<br>                letters[i].isDisplay = <span class="hljs-number">0</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                letters[i].isDisplay = <span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//letterMoving:让所有字母下降</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">letterMoving</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">judgeLetterDisplay</span>();<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; LETTER_COUNT; i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(letters[i].y &lt; <span class="hljs-number">25</span>) <span class="hljs-comment">// 是否落到了屏幕下面</span><br>        &#123;<br>            <span class="hljs-keyword">if</span>(letters[i].isDisplay == <span class="hljs-number">1</span>) <span class="hljs-comment">// 进行显示</span><br>            &#123;<br>                <span class="hljs-built_in">drawLetter</span>(<span class="hljs-string">&#x27; &#x27;</span>, letters[i].x, letters[i].y); <span class="hljs-comment">// 把当前位置的变成空白</span><br>                <span class="hljs-built_in">drawLetter</span>(letters[i].ch, letters[i].x, letters[i].y + <span class="hljs-number">1</span>); <span class="hljs-comment">// 下一个位置变成对应的字母</span><br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-comment">// 不显示</span><br>            &#123;<br>                <span class="hljs-built_in">drawLetter</span>(<span class="hljs-string">&#x27; &#x27;</span>, letters[i].x, letters[i].y); <span class="hljs-comment">// 把当前位置的变成空白</span><br>            &#125;<br>            letters[i].y++;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-built_in">drawLetter</span>(<span class="hljs-string">&#x27; &#x27;</span>, letters[i].x, letters[i].y);<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-comment">//子弹飞行</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">bulletMoving</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(bullet.life == <span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-built_in">drawLetter</span>(<span class="hljs-string">&#x27; &#x27;</span>, bullet.x, bullet.y);<br>        <span class="hljs-built_in">drawLetter</span>(bullet.ch, bullet.x, bullet.y - <span class="hljs-number">1</span>);<br>    &#125;<br>    bullet.y--;<br>&#125;<br><span class="hljs-comment">//计算答案</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">calcResult</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> counter = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; LETTER_COUNT; i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(letters[i].life == <span class="hljs-number">0</span>)<br>        &#123;<br>            counter++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> counter;<br>&#125;<br><span class="hljs-comment">//隐藏控制台光标</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">hideCursor</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>        HANDLE handle = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<br>        CONSOLE_CURSOR_INFO CursorInfo;<br>        <span class="hljs-built_in">GetConsoleCursorInfo</span>(handle, &amp;CursorInfo);<span class="hljs-comment">//获取控制台光标信息</span><br>        CursorInfo.bVisible = <span class="hljs-number">0</span>; <span class="hljs-comment">//隐藏控制台光标</span><br>        <span class="hljs-built_in">SetConsoleCursorInfo</span>(handle, &amp;CursorInfo);<span class="hljs-comment">//设置控制台光标状态</span><br>&#125;<br><br><span class="hljs-comment">//提示信息</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">menu</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;一个迷你的打字游戏\n\n把输入法调成英文状态就可以开始玩了\n\n&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d个字母即将来袭！！！\n\n&quot;</span>, LETTER_COUNT);<br>    <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;pause&quot;</span>);<br>    <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cls&quot;</span>);<br>&#125;<br><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">hideCursor</span>(); <span class="hljs-comment">// 隐藏控制台的光标，绘制字母的时候不会出现干扰，更有沉浸感</span><br>    <span class="hljs-built_in">menu</span>();<br>    <span class="hljs-built_in">initLetters</span>(); <span class="hljs-comment">// 准备所有的字母，一下子全部准备好了，相当于放到了屏幕的外面，每次控制所有的字母向下移动，到屏幕里面的进行显示</span><br>    <span class="hljs-keyword">while</span>(letters[LETTER_COUNT - <span class="hljs-number">1</span>].y &lt; <span class="hljs-number">25</span>) <span class="hljs-comment">// 当你的最后一个字母还在屏幕里面的时候，会一直循环</span><br>    &#123;<br>        bullet.life = <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">if</span>(_kbhit())<span class="hljs-comment">//获取键盘按键</span><br>        &#123;<br>            <span class="hljs-keyword">char</span> ch = _getch(); <span class="hljs-comment">// 获取键盘按键内容</span><br>            ch = <span class="hljs-built_in">toupper</span>(ch); <span class="hljs-comment">// 转换为大写</span><br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> k = <span class="hljs-number">0</span>; k &lt; LETTER_COUNT; k++)<span class="hljs-comment">//遍历每个子弹，看看有没有对应按键的字母</span><br>            &#123;<br>                <span class="hljs-keyword">if</span>(letters[k].isDisplay == <span class="hljs-number">1</span> &amp;&amp; letters[k].ch == ch) <span class="hljs-comment">// 如果字母还没有消失，并且字母和你输入的字母一样的话，执行</span><br>                &#123;<br>                    <span class="hljs-built_in">initBullet</span>(letters[k].x); <span class="hljs-comment">// 初始化子弹，子弹的x坐标就是这个字母的x坐标，这样可以实现子弹和字母相撞的感觉</span><br><br>                    <span class="hljs-keyword">if</span>(BULLET_TYPE == <span class="hljs-string">&#x27;L&#x27;</span>) &#123; <span class="hljs-comment">// 如果子弹类型是L的话，那么让他显示的和字母一样</span><br>                        bullet.ch = letters[k].ch;<br>                    &#125;<br><br>                    <span class="hljs-keyword">while</span>(bullet.y &gt; <span class="hljs-number">0</span>) <span class="hljs-comment">// 子弹从下往上飞，飞到屏幕外面的话就小于0了</span><br>                    &#123;<br>                        <span class="hljs-built_in">bulletMoving</span>();<br>                        <span class="hljs-keyword">if</span>(bullet.y == letters[k].y) <span class="hljs-comment">// 子弹的y和字母的y重叠，说明相碰了，让他们同时消失，这里也可以加一个相撞的动画和声音</span><br>                        &#123;<br>                            letters[k].life = <span class="hljs-number">0</span>;<br>                            bullet.life = <span class="hljs-number">0</span>;<br>                            <span class="hljs-built_in">drawLetter</span>(<span class="hljs-string">&#x27; &#x27;</span>, bullet.x, bullet.y);<br>                        &#125;<br>                        <span class="hljs-built_in">Sleep</span>(BULLET_SPEED); <span class="hljs-comment">// 子弹的飞行速度</span><br>                    &#125;<br>                    <span class="hljs-keyword">break</span>;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-built_in">Sleep</span>(SPEED); <span class="hljs-comment">// 稍微停顿一下，可以控制游戏的难度，也就是字母的掉落速度</span><br>        <span class="hljs-built_in">letterMoving</span>(); <span class="hljs-comment">// 控制所有字母向下移动</span><br>    &#125;<br>    <span class="hljs-comment">/*******************游戏结束******************/</span><br>    <span class="hljs-built_in">gotoxy</span>(<span class="hljs-number">30</span>, <span class="hljs-number">12</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;总共有%d个字母，你打掉了%d个&quot;</span>,LETTER_COUNT, <span class="hljs-built_in">calcResult</span>());<br>    <span class="hljs-built_in">getchar</span>();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="多线程版本"><a href="#多线程版本" class="headerlink" title="多线程版本"></a>多线程版本</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;process.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;time.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;ctype.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;conio.h&gt;</span></span><br><br><span class="hljs-comment">//字母结构体</span><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">tag_letter</span></span><br><span class="hljs-class">&#123;</span><br>    <span class="hljs-keyword">int</span> x, y;   <span class="hljs-comment">//字母下落位置</span><br>    <span class="hljs-keyword">char</span> ch;    <span class="hljs-comment">//字母</span><br>    <span class="hljs-keyword">int</span> life;   <span class="hljs-comment">//字母是否存活</span><br>&#125;Letter;<br><br><span class="hljs-comment">/********************全局变量区************************/</span><br><span class="hljs-keyword">int</span> letterCount = <span class="hljs-number">100</span>;  <span class="hljs-comment">//下落字母的总数量</span><br><span class="hljs-keyword">int</span> beginFlag = <span class="hljs-number">1</span>;  <span class="hljs-comment">//游戏何时结束，0-表示结束</span><br><span class="hljs-keyword">int</span> downCount;  <span class="hljs-comment">//下落字母数量统计</span><br><span class="hljs-keyword">int</span> dropLetter; <span class="hljs-comment">//打掉字母数量统计</span><br><span class="hljs-keyword">int</span> errorCount; <span class="hljs-comment">//按键错误统计</span><br><span class="hljs-keyword">int</span> speed = <span class="hljs-number">500</span>;    <span class="hljs-comment">//下落速度</span><br><span class="hljs-keyword">int</span> bulletSpeed = <span class="hljs-number">30</span>;   <span class="hljs-comment">//子弹速度</span><br><span class="hljs-comment">//多线程-线程锁</span><br>CRITICAL_SECTION csCursor;<span class="hljs-comment">//光标锁</span><br><br><br>Letter *letters;    <span class="hljs-comment">//创建字母序列</span><br><span class="hljs-keyword">int</span> *vis;           <span class="hljs-comment">//标记字母是否出现过</span><br><span class="hljs-keyword">int</span> *visBullet;     <span class="hljs-comment">//标记对应字母是否有子弹正在发射</span><br><span class="hljs-keyword">int</span> *bulletflag;    <span class="hljs-comment">//子弹编号</span><br><br><span class="hljs-comment">//初始化全局变量，和开辟对应数组空间</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    downCount = <span class="hljs-number">0</span>;<br>    dropLetter = <span class="hljs-number">0</span>;<br>    errorCount = <span class="hljs-number">0</span>;<br>    vis = (<span class="hljs-keyword">int</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(<span class="hljs-keyword">int</span>) * letterCount);<br>    visBullet = (<span class="hljs-keyword">int</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(<span class="hljs-keyword">int</span>) * letterCount);<br>    bulletflag = (<span class="hljs-keyword">int</span> *)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(<span class="hljs-keyword">int</span>) * letterCount);<br>    <span class="hljs-built_in">memset</span>(vis, <span class="hljs-number">0</span>, <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(<span class="hljs-keyword">int</span>) * letterCount);<br>    <span class="hljs-built_in">memset</span>(visBullet, <span class="hljs-number">0</span>, <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(<span class="hljs-keyword">int</span>) * letterCount);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; letterCount; i++)<br>    &#123;<br>        bulletflag[i] = i;<br>    &#125;<br>&#125;<br><span class="hljs-comment">//初始化字母序列</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">initLetters</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    letters = (struct tag_letter *)<span class="hljs-built_in">malloc</span>(<span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(struct tag_letter) * letterCount);<br>    <span class="hljs-built_in">srand</span>((<span class="hljs-keyword">unsigned</span>)<span class="hljs-built_in">time</span>(<span class="hljs-literal">NULL</span>));<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; letterCount; i++)<br>    &#123;<br>        letters[i].ch = <span class="hljs-built_in">rand</span>() % <span class="hljs-number">26</span> + <span class="hljs-string">&#x27;A&#x27;</span>;<br>        letters[i].x = <span class="hljs-built_in">rand</span>() % <span class="hljs-number">80</span>;<br>        letters[i].y = - i * <span class="hljs-number">2</span>;<br>        letters[i].life = <span class="hljs-number">1</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">/***************功能函数***************/</span><br><span class="hljs-comment">//定位到屏幕的某个位置</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">gotoxy</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br>    HANDLE handle = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<br>    COORD coord;<br>    coord.X = x;<br>    coord.Y = y;<br>    <span class="hljs-built_in">SetConsoleCursorPosition</span>(handle, coord);<br>&#125;<br><br><span class="hljs-comment">//绘制字母</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">drawLetter</span><span class="hljs-params">(<span class="hljs-keyword">char</span> ch, <span class="hljs-keyword">int</span> x, <span class="hljs-keyword">int</span> y)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">EnterCriticalSection</span>(&amp;csCursor);<br>    <span class="hljs-built_in">gotoxy</span>(x, y);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, ch);<br>    <span class="hljs-built_in">LeaveCriticalSection</span>(&amp;csCursor);<br>&#125;<br><span class="hljs-comment">//设置窗口标题</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">setTitle</span><span class="hljs-params">(<span class="hljs-keyword">void</span> *p)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-keyword">char</span> str[<span class="hljs-number">30</span>] = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-built_in">sprintf</span>(str, <span class="hljs-string">&quot;title 总字母:%d 下落字母:%d 击落:%d&quot;</span>, letterCount, downCount, dropLetter);<br>        <span class="hljs-built_in">system</span>(str);<br>    &#125;<br>&#125;<br><span class="hljs-function">DWORD WINAPI <span class="hljs-title">runBullet</span><span class="hljs-params">(<span class="hljs-keyword">void</span> *p)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> letterId = *(<span class="hljs-keyword">int</span> *) p;<br>    <span class="hljs-keyword">if</span>(!visBullet[letterId])<br>    &#123;<br>        visBullet[letterId] = <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">int</span> y = <span class="hljs-number">25</span>;<br>    <span class="hljs-keyword">int</span> x = letters[letterId].x;<br>    <span class="hljs-keyword">while</span>(y &gt; letters[letterId].y)<br>    &#123;<br><br>        <span class="hljs-built_in">drawLetter</span>(<span class="hljs-string">&#x27; &#x27;</span>, x, y);<br>        <span class="hljs-built_in">drawLetter</span>(<span class="hljs-number">12</span>, x, y - <span class="hljs-number">1</span>);<br><br>        <span class="hljs-built_in">Sleep</span>(bulletSpeed);<br>        y--;<br>    &#125;<br>    <span class="hljs-built_in">drawLetter</span>(<span class="hljs-string">&#x27; &#x27;</span>, x, y);<br>    letters[letterId].life = <span class="hljs-number">0</span>;<br>    <span class="hljs-built_in">drawLetter</span>(<span class="hljs-string">&#x27; &#x27;</span>, letters[letterId].x, letters[letterId].y);<br>&#125;<br><span class="hljs-comment">//letterMoving:让所有字母下降一个位置</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">letterMoving</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> cnt = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; letterCount; i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(letters[i].life == <span class="hljs-number">1</span>)<br>        &#123;<br>            cnt++;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(letters[i].y &lt; <span class="hljs-number">25</span> &amp;&amp; letters[i].y &gt;= <span class="hljs-number">0</span> &amp;&amp; letters[i].life == <span class="hljs-number">1</span>)<br>        &#123;<br>            <span class="hljs-keyword">if</span>(!vis[i])<br>            &#123;<br>                downCount++;<br>                vis[i] = <span class="hljs-number">1</span>;<br>            &#125;<br>            <span class="hljs-built_in">drawLetter</span>(<span class="hljs-string">&#x27; &#x27;</span>, letters[i].x, letters[i].y);<br>            <span class="hljs-built_in">drawLetter</span>(letters[i].ch, letters[i].x, letters[i].y + <span class="hljs-number">1</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(letters[i].y &gt; <span class="hljs-number">25</span>)<br>        &#123;<br>             letters[i].life = <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(letters[i].y == <span class="hljs-number">25</span>)<br>        &#123;<br>            <span class="hljs-built_in">drawLetter</span>(<span class="hljs-string">&#x27; &#x27;</span>, letters[i].x, letters[i].y);<br>        &#125;<br>        letters[i].y++;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(cnt == <span class="hljs-number">0</span>)<br>    &#123;<br>        beginFlag = <span class="hljs-number">0</span>;<br>    &#125;<br>&#125;<br><span class="hljs-comment">//字母不断下降</span><br><span class="hljs-function">DWORD WINAPI <span class="hljs-title">runLetter</span><span class="hljs-params">(<span class="hljs-keyword">void</span> *p)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">while</span>(letters[letterCount - <span class="hljs-number">1</span>].y &lt; <span class="hljs-number">25</span>)<br>    &#123;<br>        <span class="hljs-built_in">letterMoving</span>();<br>        <span class="hljs-built_in">Sleep</span>(speed);<br>    &#125;<br>    beginFlag = <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-comment">//隐藏控制台光标</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">hideCursor</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>        HANDLE handle = <span class="hljs-built_in">GetStdHandle</span>(STD_OUTPUT_HANDLE);<br>        CONSOLE_CURSOR_INFO CursorInfo;<br>        <span class="hljs-built_in">GetConsoleCursorInfo</span>(handle, &amp;CursorInfo);<span class="hljs-comment">//获取控制台光标信息</span><br>        CursorInfo.bVisible = <span class="hljs-number">0</span>; <span class="hljs-comment">//隐藏控制台光标</span><br>        <span class="hljs-built_in">SetConsoleCursorInfo</span>(handle, &amp;CursorInfo);<span class="hljs-comment">//设置控制台光标状态</span><br>&#125;<br><span class="hljs-comment">//开始游戏提示</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">gameBegin</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;-------------------------------------\n&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;    一个简单的打字游戏，按ESC退出\n&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;       建议提前切换成英文输入法\n&quot;</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;-------------------------------------\n&quot;</span>);<br><br>    <span class="hljs-keyword">int</span> type;<br>    <span class="hljs-keyword">int</span> flag = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span>(flag)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1-简单\n2-中等\n3-困难\n4-魔鬼\n&quot;</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请选择你要打字的等级:&quot;</span>);<br>        <span class="hljs-keyword">while</span>(<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;type) != <span class="hljs-number">1</span>)<br>        &#123;<br>            <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cls&quot;</span>);<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%*s&quot;</span>);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;您输入的值有问题，请输入数字！\n&quot;</span>);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1-简单\n2-中等\n3-困难\n4-魔鬼\n&quot;</span>);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请选择你要打字的等级:&quot;</span>);<br>        &#125;<br>        <span class="hljs-built_in"><span class="hljs-keyword">switch</span></span>(type)<br>        &#123;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>            speed = <span class="hljs-number">500</span>;<br>            bulletSpeed = <span class="hljs-number">30</span>;<br>            flag = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>            speed = <span class="hljs-number">350</span>;<br>            bulletSpeed = <span class="hljs-number">25</span>;<br>            flag = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>            speed = <span class="hljs-number">250</span>;<br>            bulletSpeed = <span class="hljs-number">20</span>;<br>            flag = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:<br>            speed = <span class="hljs-number">150</span>;<br>            bulletSpeed = <span class="hljs-number">10</span>;<br>            flag = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;你选择的值有误，请重新选择\n&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入你要打字的数量:&quot;</span>);<br>    <span class="hljs-keyword">while</span>(<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;letterCount) != <span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cls&quot;</span>);<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%*s&quot;</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;您输入的值有问题，请输入数字！\n&quot;</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入你要打字的数量:&quot;</span>);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;字母已准备就绪,&quot;</span>);<br>    <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;pause&quot;</span>);<br>    <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cls&quot;</span>);<br>&#125;<br><span class="hljs-comment">//结束游戏提示</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">gameOver</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">gotoxy</span>(<span class="hljs-number">30</span>, <span class="hljs-number">12</span>);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;总字母:%d个 您击落:%d个 错误按键:%d次&quot;</span>, letterCount, dropLetter, errorCount);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;title 打字游戏&quot;</span>);<br>    <span class="hljs-built_in">gameBegin</span>();<br>    <span class="hljs-built_in">hideCursor</span>();<br>    <span class="hljs-built_in">InitializeCriticalSection</span>(&amp;csCursor);<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-built_in">initLetters</span>();<br>    <span class="hljs-built_in">CreateThread</span>(<span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, runLetter, <span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>);<br>    _beginthread(setTitle, <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>);<br>    <span class="hljs-keyword">while</span>(beginFlag)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(_kbhit())<br>        &#123;<br>            <span class="hljs-keyword">char</span> ch = _getch();<br>            ch = <span class="hljs-built_in">toupper</span>(ch);<br>            <span class="hljs-keyword">if</span>(ch == <span class="hljs-number">27</span>)<br>            &#123;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">int</span> flag = <span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; letterCount; i++)<br>            &#123;<br>                <span class="hljs-keyword">if</span>(letters[i].y &lt; <span class="hljs-number">25</span> &amp;&amp; letters[i].y &gt;= <span class="hljs-number">0</span> &amp;&amp; letters[i].life == <span class="hljs-number">1</span> &amp;&amp; letters[i].ch == ch &amp;&amp; visBullet[i] == <span class="hljs-number">0</span>)<br>                &#123;<br>                    flag = <span class="hljs-number">0</span>;<br>                    dropLetter++;<br>                    <span class="hljs-built_in">CreateThread</span>(<span class="hljs-literal">NULL</span>, <span class="hljs-number">0</span>, runBullet, &amp;bulletflag[i], <span class="hljs-number">0</span>, <span class="hljs-literal">NULL</span>);<br>                    <span class="hljs-keyword">break</span>;<br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">if</span>(flag) errorCount++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">gameOver</span>();<br>    <span class="hljs-built_in">InitializeCriticalSection</span>(&amp;csCursor);<br>    <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;\n\n\npause&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>2019年4月26日更新日志:</p><p>1.增加了很多注释</p><p>2019年4月25日更新日志:</p><p>1.后续完全开发多线程版本，单线程版本不再进行大更新。</p><div class="note note-success">            <p>相关推荐：</p><ul><li><a href="/post/note-vue-element/">Vue后台管理系统项目实战/vue+element-ui/vue经典全套系统案例讲解</a></li><li><a href="/post/df99894b/">尚硅谷Vue2.0+Vue3.0全套教程丨vuejs从入门到精通</a></li><li><a href="/post/2ff98e51/">Docker最新超详细版教程通俗易懂</a></li><li><a href="/post/switch-node-version/">优雅的切换nodejs版本</a></li><li><a href="/post/vmware-linux/">如何在VMware中安装Linux</a></li></ul>          </div>]]></content>
    
    
    <categories>
      
      <category>编程开发</category>
      
      <category>C语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C语言实例</tag>
      
      <tag>C语言游戏</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
